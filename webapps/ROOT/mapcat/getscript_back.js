window.TILE_VERSION = {
    "ditu": {
        "normal": {
            "version": "088",
            "updateDate": "20220913"
        },
        "satellite": {
            "version": "009",
            "updateDate": "20220913"
        },
        "normalTraffic": {
            "version": "081",
            "updateDate": "20220913"
        },
        "satelliteTraffic": {
            "version": "083",
            "updateDate": "20220913"
        },
        "mapJS": {
            "version": "104",
            "updateDate": "20220913"
        },
        "satelliteStreet": {
            "version": "083",
            "updateDate": "20220913"
        },
        "earthVector": {
            "version": "001",
            "updateDate": "20220913"
        }
    },
    "webapp": {
        "high_normal": {
            "version": "001",
            "updateDate": "20220913"
        },
        "lower_normal": {
            "version": "002",
            "updateDate": "20220913"
        }
    },
    "api_for_mobile": {
        "vector": {
            "version": "002",
            "updateDate": "20220913"
        },
        "vectorIcon": {
            "version": "002",
            "updateDate": "20220913"
        }
    }
};
window.MSV = {
    "mapstyle": {
        "version": "001",
        "updateDate": "20220810"
    }
};
window.BMAP_AUTHENTIC_KEY = "R4pWCxXH9qm9ZpbnppGyxUGKydAd6esD";
(function(t) {
    "use strict";
    function e(t) {
        return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t
    }
    function n(t, e) {
        return t(e = {
            exports: {}
        }, e.exports),
        e.exports
    }
    Object.values || (Object.values = function(t) {
        if (t !== Object(t))
            throw new TypeError("Object.values called on a non-object");
        var e, n = [];
        for (e in t)
            Object.prototype.hasOwnProperty.call(t, e) && n.push(t[e]);
        return n
    }
    ),
    "function" != typeof Object.assign && Object.defineProperty(Object, "assign", {
        value: function(t) {
            if (null == t)
                throw new TypeError("Cannot convert undefined or null to object");
            for (var e = Object(t), n = 0; n < (arguments.length <= 1 ? 0 : arguments.length - 1); n++) {
                var r = n + 1 < 1 || arguments.length <= n + 1 ? void 0 : arguments[n + 1];
                if (null != r)
                    for (var i in r)
                        Object.prototype.hasOwnProperty.call(r, i) && (e[i] = r[i])
            }
            return e
        },
        writable: !0,
        configurable: !0
    });
    var r = n((function(t) {
        function e(n) {
            return t.exports = e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            }
            : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }
            ,
            t.exports.__esModule = !0,
            t.exports.default = t.exports,
            e(n)
        }
        t.exports = e,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ))
      , i = e(r)
      , o = e(n((function(t) {
        function e(t, e) {
            for (var n = 0; n < e.length; n++) {
                var r = e[n];
                r.enumerable = r.enumerable || !1,
                r.configurable = !0,
                "value"in r && (r.writable = !0),
                Object.defineProperty(t, r.key, r)
            }
        }
        t.exports = function(t, n, r) {
            return n && e(t.prototype, n),
            r && e(t, r),
            Object.defineProperty(t, "prototype", {
                writable: !1
            }),
            t
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    )))
      , a = e(n((function(t) {
        t.exports = function(t) {
            if (void 0 === t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    )))
      , s = n((function(t) {
        function e(n, r) {
            return t.exports = e = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                return t.__proto__ = e,
                t
            }
            ,
            t.exports.__esModule = !0,
            t.exports.default = t.exports,
            e(n, r)
        }
        t.exports = e,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(s);
    var u, h, c = e(n((function(t) {
        t.exports = function(t, e) {
            t.prototype = Object.create(e.prototype),
            t.prototype.constructor = t,
            s(t, e)
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ))), l = function(t, e) {
        var n = this;
        this.width = void 0,
        this.height = void 0,
        this.equals = function(t) {
            return t && n.width === t.width && n.height === t.height
        }
        ,
        this.width = t || 0,
        this.height = e || 0
    }, f = function() {
        function t(t, e) {
            this.lng = void 0,
            this.lat = void 0,
            this.lng = +t,
            this.lat = +e
        }
        return t.prototype.equals = function(t) {
            return t && this.lat === t.lat && this.lng === t.lng
        }
        ,
        t
    }(), d = {
        REFRESH: "refresh",
        DATA_LOADED: "dataload",
        THUMB_LOADED: "thumb_loaded",
        SET_POV: "set_pov",
        POV_CHANGED: "pov_changed",
        POV_CHANGED_END: "pov_changed_end",
        ZOOM_CHANGED: "zoom_changed",
        SIZE_CHANGED: "size_changed",
        SET_ID: "set_id",
        SET_POSITION: "set_position",
        ID_CHANGED: "id_changed",
        POSITION_CHANGED: "position_changed",
        TOUCH_START: "touchstart",
        TOUCH_END: "touchend",
        CLICK: "click",
        DOUBLE_CLICK: "dblclick",
        LINK_CLICK: "link_click",
        OVERLAY_ADD: "overlay_add",
        OVERLAY_REMOVE: "overlay_remove",
        OVERLAYS_CLEAR: "overlays_clear",
        PANO_ERROR: "pano_error",
        LINK_VISIBLE_CHANGE: "links_visible_changed",
        DESTROY: "destroy",
        SCENE_CHANGE_END: "scene_change_end"
    }, p = {
        TYPE_INNER: "inter",
        TYPE_STREET: "street",
        RADIUS: 3e3,
        COLS: 16,
        ROWS: 8,
        TILE_MAX_ZOOM: 4,
        TILE_MIN_ZOOM: 1,
        MIN_PITCH: -90,
        MAX_PITCH: 90,
        MAX_ZOOM: 4,
        MIN_ZOOM: 1,
        TILE_BASE_URLS: ["//apisv0.bdimg.com/", "//apisv1.bdimg.com/"],
        TOPO_ARROW_TEXTURE: "//webmap0.bdimg.com/wolfman/static/pano/images/webgl/topo_arrow_06f0f2e.png",
        FISHEYE_DURATION: 1500,
        FISHEYE_DELAY: 2e3
    }, v = (u = {},
    h = (navigator.userAgent || "").toLowerCase(),
    u.isAndroid = h.includes("android"),
    u.isFirefox = h.includes("firefox"),
    u.isIos = /ip(hone|ad|od)/i.test(h),
    u.isWeixin = h.includes("micromessenger"),
    u.isWeibo = h.includes("weibo"),
    u.isWeChatOrWeiBo = u.isWeixin && u.isWeibo,
    u.isBaiduMap = h.includes("baidumap_"),
    u.isMobile = /android|webos|ip(hone|ad|od)|opera (mini|mobi|tablet)|iemobile|windows.+(phone|touch)|mobile|fennec|kindle (Fire)|Silk|maemo|blackberry|playbook; (touch|kbd)|Symbian(OS)|Ubuntu Touch/i.test(h),
    u.isPc = !u.isMobile,
    u), m = function(t) {
        for (var e = arguments.length <= 1 ? 0 : arguments.length - 1, n = 0; n < e; n++) {
            var r = n + 1 < 1 || arguments.length <= n + 1 ? void 0 : arguments[n + 1];
            for (var i in r)
                Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i])
        }
        return t
    }, g = function(t) {
        return t * Math.PI / 180
    }, y = function(t) {
        return 180 * t / Math.PI
    }, _ = function(t) {
        return t - 360 * Math.floor(t / 360)
    }, x = function() {
        return Date.now()
    };
    var b = function t() {
        var e = t;
        if ("boolean" == typeof e._supportWebGL)
            return e._supportWebGL;
        if (!window.WebGLRenderingContext)
            return e._supportWebGL = !1,
            !1;
        var n = null
          , r = document.createElement("canvas");
        try {
            (n = r.getContext("webgl") || r.getContext("experimental-webgl")) && n instanceof WebGLRenderingContext && (e._supportWebGL = !0)
        } catch (t) {
            e._supportWebGL = !1
        }
        return null === n && (e._supportWebGL = !1),
        e._supportWebGL
    }
      , M = function(t) {
        for (var e, n = Number.MAX_VALUE, r = -Number.MAX_VALUE, i = t.length - 1; i >= 0; i--)
            n > (e = t[i]) && (n = e),
            r < e && (r = e);
        return {
            min: n,
            max: r
        }
    }
      , w = {
        g: function(t) {
            return "string" == typeof t || t instanceof String ? document.getElementById(t) : t && t.nodeName && (1 === t.nodeType || 9 === t.nodeType) ? t : null
        },
        show: function(t) {
            var e = w.g(t);
            return e && (e.style.display = ""),
            e
        },
        hide: function(t) {
            var e = w.g(t);
            return e && (e.style.display = "none"),
            t
        },
        create: function(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
              , n = document.createElement(t);
            for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) && n.setAttribute(r, e[r]);
            return n
        },
        getCurrentStyle: function(t) {
            return window.getComputedStyle(t, null)
        }
    }
      , E = function(t, e, n) {
        var r, o, a = "", s = [], u = "jsonp" + Math.ceil(1e5 * Math.random()), h = t.indexOf("?") > 0 ? "&" : "?";
        for (var c in n = Object.assign({}, {
            jsonpCallback: "jsonp",
            timeout: 5e4,
            jsonp: "callback"
        }, n),
        e)
            ({}).hasOwnProperty.call(e, c) && (a = "object" === i(e[c]) ? c + "=" + JSON.stringify(e[c]) : c + "=" + e[c],
            s.push(a));
        function l() {
            r.parentNode && r.parentNode.removeChild(r),
            window[u] = null
        }
        return t += h + s.join("&"),
        o = document.getElementsByTagName("script")[0] || document.head,
        t = t + "&" + n.jsonp + "=" + u,
        (r = document.createElement("script")).src = t,
        r.type = "text/javascript",
        o.parentNode.appendChild(r, o),
        new Promise((function(t, e) {
            window[u] = function(e) {
                if (e && "string" == typeof e)
                    try {
                        e = JSON.parse(e)
                    } catch (t) {
                        e = {},
                        console.error("[ERROR] Parse Error.")
                    }
                t(e),
                l()
            }
            ,
            r.onerror = function(t) {
                l(),
                e({
                    errno: -2,
                    errmsg: "[ERROR] Load Error: ".concat(t),
                    data: {}
                })
            }
        }
        ))
    }
      , T = function() {
        function t() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
              , e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            this._size = 0,
            this._cache = void 0,
            this.keyList = [],
            this._options = void 0,
            this._size = t,
            this._cache = new window.Map;
            var n = {
                clearCallback: null
            };
            this._options = Object.assign({}, n, e)
        }
        var e = t.prototype;
        return e.setData = function(t, e) {
            0 !== this._size && (this._cache.size >= this._size && this._removeOld(),
            this._cache.has(t) || this.keyList.push(t),
            this._cache.set(t, e))
        }
        ,
        e.getData = function(t) {
            return this._cache.get(t)
        }
        ,
        e._removeOld = function() {
            for (var t = Math.round(.6 * this._size), e = 0; e < t; e++) {
                var n = this.keyList[e];
                this._options.clearCallback && this._options.clearCallback(this.getData(n)),
                this._cache.delete(n)
            }
            this.keyList.splice(0, t)
        }
        ,
        e.clear = function() {
            this._cache.clear(),
            this.keyList = []
        }
        ,
        o(t, [{
            key: "cacheCount",
            get: function() {
                return this._cache.size
            }
        }]),
        t
    }()
      , A = function() {
        function t() {
            var t = this;
            this.rid = "",
            this.roadName = "",
            this.roadWidth = 5,
            this.isCurrentRoad = 0,
            this.pointList = [],
            this.getTopoInRoad = function(e) {
                var n = []
                  , r = t.pointList
                  , i = r.length
                  , o = t.getPointByPanoId(e);
                if (!o || i <= 1)
                    return n;
                var a = o.order;
                return 0 === a ? n.push(t.generateTopoData(o.dir, r[1])) : a === i - 1 ? n.push(t.generateTopoData(r[a - 1].dir + 180, r[a - 1])) : (n.push(t.generateTopoData((r[a - 1].dir + 180) % 360, r[a - 1])),
                n.push(t.generateTopoData(r[a].dir, r[a + 1]))),
                n
            }
            ,
            this.getPointByPanoId = function(e) {
                for (var n, r = t.pointList, i = 0, o = r.length; i < o; i++)
                    if (r[i].panoId === e) {
                        n = r[i];
                        break
                    }
                return n
            }
        }
        return t.prototype.generateTopoData = function(t, e) {
            return void 0 !== e && (e.topoDir = t,
            e.roadName = this.roadName),
            e
        }
        ,
        t
    }()
      , C = function() {
        var t = this;
        this.image = void 0,
        this.panoId = "",
        this.iid = "",
        this.panoType = "",
        this.panoX = 0,
        this.panoY = 0,
        this.panoZ = 0,
        this.heading = 0,
        this.pitch = 0,
        this.defaultHeading = void 0,
        this.defaultPitch = void 0,
        this.northDir = 0,
        this.fixHeading = 0,
        this.fixPitch = 0,
        this.fixRoll = 0,
        this.deviceHeight = 0,
        this.date = "20130822",
        this.time = "",
        this.provider = 1,
        this.admission = "GS(2013)6021",
        this.photos = [],
        this.roadName = "",
        this.roads = [],
        this.vpoints = [],
        this.topoArray = void 0,
        this.currentRoad = void 0,
        this.roadWidth = void 0,
        this.getCurrentRoad = function() {
            if (t.currentRoad)
                return t.currentRoad;
            for (var e = t.roads, n = 0, r = e.length; n < r; n++)
                if (e[n].isCurrentRoad) {
                    t.currentRoad = e[n];
                    break
                }
            return t.currentRoad
        }
        ,
        this.getTopos = function() {
            if (t.topoArray)
                return t.topoArray;
            if (t.currentRoad || (t.currentRoad = t.getCurrentRoad()),
            !t.currentRoad)
                return [];
            if (t.topoArray = t.currentRoad.getTopoInRoad(t.panoId),
            t.vpoints.length < 1)
                return t.topoArray;
            for (var e, n = t.vpoints.length - 1; n >= 0; n--)
                (e = t.vpoints[n]).topoDir = e.dir,
                t.topoArray.push(e);
            return t.topoArray
        }
        ,
        this.getRoadWidth = function() {
            return void 0 === t.roadWidth && (t.currentRoad || (t.currentRoad = t.getCurrentRoad()),
            t.currentRoad ? t.roadWidth = t.currentRoad.roadWidth : t.roadWidth = 0),
            t.roadWidth
        }
    };
    function R(t) {
        var e = {};
        return e.panoId = t.PID,
        e.panoType = t.Type,
        e.rid = t.RID,
        e.dir = t.DIR,
        e.roadName = t.RoadName,
        e.order = t.Order,
        e.panoX = t.X / 100,
        e.panoY = t.Y / 100,
        void 0 !== t.CPointX && void 0 !== t.CPointY && (e.cPoint = {
            x: t.CPointX / 100,
            y: t.CPointY / 100
        }),
        e
    }
    function S(t) {
        if (!t)
            return console.error("Get none from server"),
            null;
        var e = t.result;
        if (e && 0 !== e.error)
            return console.error("Get error from server"),
            null;
        var n = t.content;
        if (void 0 === n || 0 === n.length || void 0 === n[0])
            return console.error("Get empty data from server"),
            null;
        var r = n[0]
          , i = new C
          , o = r.Roll
          , a = {};
        if (i.panoId = r.ID,
        r.Inters instanceof Array) {
            var s = r.Inters[0];
            void 0 !== s && (i.iid = s.IID)
        }
        if (i.panoType = r.Type,
        i.panoX = (r.X || 0) / 100,
        i.panoY = (r.Y || 0) / 100,
        i.panoZ = (r.Z || 0) / 100,
        i.heading = void 0 !== r.MoveDir ? r.MoveDir : 0,
        i.northDir = r.NorthDir,
        i.fixHeading = void 0 !== r.Heading ? r.Heading : 270 - r.NorthDir,
        i.fixPitch = r.Pitch,
        i.fixRoll = 90 < o || -90 > o ? 0 : o,
        i.deviceHeight = r.DeviceHeight,
        i.date = r.Date || i.date,
        i.time = r.Time,
        i.provider = void 0 !== r.Provider ? r.Provider : i.provider,
        i.admission = r.Admission || i.admission,
        i.timeLine = r.TimeLine || [],
        i.roadName = r.Rname,
        r.Roads) {
            var u = r.Roads;
            i.roads = u.map((function(t) {
                return a[t.ID] = t.Name,
                function(t) {
                    var e = new A;
                    if (e.rid = t.ID,
                    e.roadName = t.Name,
                    e.roadWidth = void 0 !== t.Width ? t.Width / 100 : 0,
                    e.isCurrentRoad = t.IsCurrent || 0,
                    t.Panos)
                        for (var n = t.Panos, r = 0, i = n.length; r < i; r++)
                            e.pointList.push(R(n[r]));
                    return e
                }(t)
            }
            ))
        }
        if (r.Links)
            for (var h = r.Links, c = h.length, l = 0; l < c; l++) {
                var f = h[l];
                f.RoadName = a[f.RID],
                i.vpoints.push(R(f))
            }
        return i.photos = r.Photos || [],
        i
    }
    function P(t, e) {
        var n = (65535 & t) + (65535 & e);
        return (t >> 16) + (e >> 16) + (n >> 16) << 16 | 65535 & n
    }
    function D(t, e, n, r, i, o) {
        return P((a = P(P(e, t), P(r, o))) << (s = i) | a >>> 32 - s, n);
        var a, s
    }
    function O(t, e, n, r, i, o, a) {
        return D(e & n | ~e & r, t, e, i, o, a)
    }
    function I(t, e, n, r, i, o, a) {
        return D(e & r | n & ~r, t, e, i, o, a)
    }
    function L(t, e, n, r, i, o, a) {
        return D(e ^ n ^ r, t, e, i, o, a)
    }
    function B(t, e, n, r, i, o, a) {
        return D(n ^ (e | ~r), t, e, i, o, a)
    }
    function k(t, e) {
        var n, r, i, o, a;
        t[e >> 5] |= 128 << e % 32,
        t[14 + (e + 64 >>> 9 << 4)] = e;
        var s = 1732584193
          , u = -271733879
          , h = -1732584194
          , c = 271733878;
        for (n = 0; n < t.length; n += 16)
            r = s,
            i = u,
            o = h,
            a = c,
            s = O(s, u, h, c, t[n], 7, -680876936),
            c = O(c, s, u, h, t[n + 1], 12, -389564586),
            h = O(h, c, s, u, t[n + 2], 17, 606105819),
            u = O(u, h, c, s, t[n + 3], 22, -1044525330),
            s = O(s, u, h, c, t[n + 4], 7, -176418897),
            c = O(c, s, u, h, t[n + 5], 12, 1200080426),
            h = O(h, c, s, u, t[n + 6], 17, -1473231341),
            u = O(u, h, c, s, t[n + 7], 22, -45705983),
            s = O(s, u, h, c, t[n + 8], 7, 1770035416),
            c = O(c, s, u, h, t[n + 9], 12, -1958414417),
            h = O(h, c, s, u, t[n + 10], 17, -42063),
            u = O(u, h, c, s, t[n + 11], 22, -1990404162),
            s = O(s, u, h, c, t[n + 12], 7, 1804603682),
            c = O(c, s, u, h, t[n + 13], 12, -40341101),
            h = O(h, c, s, u, t[n + 14], 17, -1502002290),
            s = I(s, u = O(u, h, c, s, t[n + 15], 22, 1236535329), h, c, t[n + 1], 5, -165796510),
            c = I(c, s, u, h, t[n + 6], 9, -1069501632),
            h = I(h, c, s, u, t[n + 11], 14, 643717713),
            u = I(u, h, c, s, t[n], 20, -373897302),
            s = I(s, u, h, c, t[n + 5], 5, -701558691),
            c = I(c, s, u, h, t[n + 10], 9, 38016083),
            h = I(h, c, s, u, t[n + 15], 14, -660478335),
            u = I(u, h, c, s, t[n + 4], 20, -405537848),
            s = I(s, u, h, c, t[n + 9], 5, 568446438),
            c = I(c, s, u, h, t[n + 14], 9, -1019803690),
            h = I(h, c, s, u, t[n + 3], 14, -187363961),
            u = I(u, h, c, s, t[n + 8], 20, 1163531501),
            s = I(s, u, h, c, t[n + 13], 5, -1444681467),
            c = I(c, s, u, h, t[n + 2], 9, -51403784),
            h = I(h, c, s, u, t[n + 7], 14, 1735328473),
            s = L(s, u = I(u, h, c, s, t[n + 12], 20, -1926607734), h, c, t[n + 5], 4, -378558),
            c = L(c, s, u, h, t[n + 8], 11, -2022574463),
            h = L(h, c, s, u, t[n + 11], 16, 1839030562),
            u = L(u, h, c, s, t[n + 14], 23, -35309556),
            s = L(s, u, h, c, t[n + 1], 4, -1530992060),
            c = L(c, s, u, h, t[n + 4], 11, 1272893353),
            h = L(h, c, s, u, t[n + 7], 16, -155497632),
            u = L(u, h, c, s, t[n + 10], 23, -1094730640),
            s = L(s, u, h, c, t[n + 13], 4, 681279174),
            c = L(c, s, u, h, t[n], 11, -358537222),
            h = L(h, c, s, u, t[n + 3], 16, -722521979),
            u = L(u, h, c, s, t[n + 6], 23, 76029189),
            s = L(s, u, h, c, t[n + 9], 4, -640364487),
            c = L(c, s, u, h, t[n + 12], 11, -421815835),
            h = L(h, c, s, u, t[n + 15], 16, 530742520),
            s = B(s, u = L(u, h, c, s, t[n + 2], 23, -995338651), h, c, t[n], 6, -198630844),
            c = B(c, s, u, h, t[n + 7], 10, 1126891415),
            h = B(h, c, s, u, t[n + 14], 15, -1416354905),
            u = B(u, h, c, s, t[n + 5], 21, -57434055),
            s = B(s, u, h, c, t[n + 12], 6, 1700485571),
            c = B(c, s, u, h, t[n + 3], 10, -1894986606),
            h = B(h, c, s, u, t[n + 10], 15, -1051523),
            u = B(u, h, c, s, t[n + 1], 21, -2054922799),
            s = B(s, u, h, c, t[n + 8], 6, 1873313359),
            c = B(c, s, u, h, t[n + 15], 10, -30611744),
            h = B(h, c, s, u, t[n + 6], 15, -1560198380),
            u = B(u, h, c, s, t[n + 13], 21, 1309151649),
            s = B(s, u, h, c, t[n + 4], 6, -145523070),
            c = B(c, s, u, h, t[n + 11], 10, -1120210379),
            h = B(h, c, s, u, t[n + 2], 15, 718787259),
            u = B(u, h, c, s, t[n + 9], 21, -343485551),
            s = P(s, r),
            u = P(u, i),
            h = P(h, o),
            c = P(c, a);
        return [s, u, h, c]
    }
    function U(t) {
        var e, n = "", r = 32 * t.length;
        for (e = 0; e < r; e += 8)
            n += String.fromCharCode(t[e >> 5] >>> e % 32 & 255);
        return n
    }
    function N(t) {
        var e, n = [];
        for (n[(t.length >> 2) - 1] = void 0,
        e = 0; e < n.length; e += 1)
            n[e] = 0;
        var r = 8 * t.length;
        for (e = 0; e < r; e += 8)
            n[e >> 5] |= (255 & t.charCodeAt(e / 8)) << e % 32;
        return n
    }
    function F(t) {
        var e, n, r = "0123456789abcdef", i = "";
        for (n = 0; n < t.length; n += 1)
            e = t.charCodeAt(n),
            i += r.charAt(e >>> 4 & 15) + r.charAt(15 & e);
        return i
    }
    function j(t) {
        return unescape(encodeURIComponent(t))
    }
    function z(t) {
        return function(t) {
            return U(k(N(t), 8 * t.length))
        }(j(t))
    }
    function V(t, e) {
        return function(t, e) {
            var n, r, i = N(t), o = [], a = [];
            for (o[15] = a[15] = void 0,
            i.length > 16 && (i = k(i, 8 * t.length)),
            n = 0; n < 16; n += 1)
                o[n] = 909522486 ^ i[n],
                a[n] = 1549556828 ^ i[n];
            return r = k(o.concat(N(e)), 512 + 8 * e.length),
            U(k(a.concat(r), 640))
        }(j(t), j(e))
    }
    var G = function(t, e, n) {
        return e ? n ? V(e, t) : F(V(e, t)) : n ? z(t) : F(z(t))
    };
    var W, H, Z, q, Y = function(t, e) {
        return t += function() {
            var t, e, n = function(t, e) {
                var n = "eii"
                  , r = "dac"
                  , i = "hem"
                  , o = "llm"
                  , a = function(t, e) {
                    return t + e
                }
                  , s = "constructor"
                  , u = function(t, e) {
                    return t(e)
                }
                  , h = function(t, e) {
                    return t + e
                };
                function c(t, e) {
                    for (var a = n; "mill" !== a; )
                        switch (a) {
                        case "llm":
                            return c;
                        case "eii":
                            var s = t.length;
                            a = r;
                            break;
                        case i:
                            for (var u = 0; u < s; u++) {
                                var h = e(t[u]);
                                c.push(h)
                            }
                            a = o;
                            break;
                        case "dac":
                            var c = [];
                            a = i
                        }
                }
                var l, f, d = decodeURIComponent;
                b = "de",
                f = h("fr", "o") + "m",
                l = h("Co", b);
                var p = function(t) {
                    return a(t, "")[s][a(f, "Char") + l](t)
                }
                  , v = function(t) {
                    return c(t, (function(t) {
                        return u(p, t)
                    }
                    ))
                }
                  , m = v.call(p, [39, 34, 37, 96, 60, 120, 97, 65, 98, 66, 99, 67, 100, 68, 101, 69, 102, 70, 103, 110, 109, 111, 112, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57])
                  , g = c([28782, 27702, 26416, 25167, 24183], (function(t) {
                    return u(d, t)
                }
                ))
                  , y = v.call(g, [22354, 22749, 24415, 23346, 22257, 22688, 24306, 25174, 23595, 25547, 22984, 25690, 22212, 27547, 21594, 27210, 23090, 29193, 22394, 29368, 29532, 29459, 29530, 24146, 24500, 26352, 27441, 28788, 29370, 27673, 26925, 25249, 24430])
                  , _ = {};
                g = u(v, g);
                for (var x = new RegExp(g.join("|")), b = 0; b < m.length; b++)
                    _[y[b]] = m[b];
                return e = c(e.split(""), (function(t) {
                    return _[t] || t
                }
                )).join(""),
                c(e.split(x), (function(t) {
                    return d(t)
                }
                ))
            }(0, "su尫stri犸坺幷囄獜呚囄獜扏su尫str氶h廲廲呚l灮i犸囄呚墠O娲氶呚呚廲廲廲朰墠h姈i囄朰彟曰氙si坺犸彟欱殛");
            t = n,
            e = 265,
            function(e) {
                for (; --e; )
                    t.push(t.shift())
            }(++e);
            var r = function(t, e) {
                return n[t -= 0]
            };
            return function(t) {
                var e = {
                    dmedm: "F5L2O6R6AD8990O",
                    haael: function(t, e) {
                        return t + e
                    },
                    eeaaa: function(t, e) {
                        return t(e)
                    },
                    xhcid: function(t, e) {
                        return t + e
                    },
                    deiic: function(t, e) {
                        return t - e
                    }
                }
                  , n = e[r("0x0")]
                  , i = t[r("0x1")](e[r("0x2")](t[r("0x3")]("?"), 1))
                  , o = e[r("0x4")](G, e[r("0x5")](G(i + n), "H0A9P8P7Y6ABQO0"));
                return r("0x6") + o[r("0x7")](e.deiic(o.length, 12))
            }
        }()(t),
        E(t, {}, {
            jsonp: "fn"
        })
    }, X = function(t, e) {
        if ("PANORAMA" === t) {
            var n = "https://api.map.baidu.com/?qt=pano_entry&v=gl&ak=" + window.BMAP_AUTHENTIC_KEY;
            "function" == typeof e ? Y(n).then((function(t) {
                e()
            }
            )).catch((function(t) {}
            )) : Y(n + "&callback=" + e)
        }
    }, K = function(t) {
        if ("PANORAMA" === t)
            alert("您需要申请全景地图服务使用权限")
    }, Q = (H = null,
    Z = 0,
    q = W || 5e3,
    function(t) {
        var e = (1e5 * Math.random()).toFixed(0);
        window["cbk" + e] = function(t) {
            t && void 0 !== t.error && 0 === t.error || X("PANORAMA", (function(t) {
                t && void 0 !== t.error && 0 === t.error || K("PANORAMA")
            }
            ))
        }
        ,
        Z += t,
        H || (H = setTimeout((function() {
            var t = "https://api.map.baidu.com/?qt=pano_count&v=gl&ak=" + window.BMAP_AUTHENTIC_KEY + "&consume=" + Z;
            Y(t + "&callback=window.cbk" + e),
            Z = 0,
            H = null
        }
        ), q))
    }
    ), J = function(t, e) {
        var n = (e = e || {}).counter ? e.counter : 1
          , r = !1 !== e.isCounter
          , i = Date.parse(new Date)
          , o = i / 1e3
          , a = t + "-" + (o + 1800) + "-" + i + "-" + window.BMAP_AUTHENTIC_KEY + "-SJvEY5h37ZDh5pHS"
          , s = G(a)
          , u = "auth_key=" + (o + 1800) + "-" + i + "-" + window.BMAP_AUTHENTIC_KEY + "-" + s;
        return r && Q(n),
        u
    }, $ = function() {
        function t(e) {
            var n = this;
            this.getPanoById = function(e) {
                var r;
                r = "".concat(t.SERVICE_URL, "?qt=sdata&sid=").concat(e, "&").concat(J("/")),
                n.getDataByUrl(r).then((function(t) {
                    var e = S(t);
                    if (null === e)
                        throw new Error("数据解析异常");
                    return n._cache.setData(r, t),
                    n._pano.dispatchEvent(d.DATA_LOADED, {
                        data: e
                    }),
                    n._pano.dispatchEvent(d.ID_CHANGED, e.panoId),
                    n._pano.dispatchEvent(d.POSITION_CHANGED, new f(e.panoX,e.panoY)),
                    e
                }
                )).catch((function(t) {
                    n._pano.dispatchEvent({
                        type: d.PANO_ERROR,
                        data: t
                    })
                }
                ))
            }
            ,
            this.getPanoByLocation = function(e, r) {
                var i;
                i = "".concat(t.SERVICE_URL, "?qt=qsdata&x=").concat(e.lng, "&y=").concat(e.lat).concat(r ? "&r=" + r : "", "&action=1&").concat(J("/")),
                n.getDataByUrl(i).then((function(t) {
                    var r = S(t);
                    n._cache.setData(i, t),
                    n._pano.dispatchEvent(d.DATA_LOADED, {
                        data: r
                    }),
                    n._pano.dispatchEvent(d.POSITION_CHANGED, e)
                }
                )).catch((function(t) {
                    n._pano.dispatchEvent({
                        type: d.PANO_ERROR,
                        data: t
                    })
                }
                ))
            }
            ,
            this._pano = e,
            this._cache = new T(10)
        }
        return t.prototype.getDataByUrl = function(t) {
            var e = this._cache.getData(t);
            return e ? Promise.resolve(e) : E(t, {}, {
                jsonp: "fn"
            })
        }
        ,
        t
    }();
    $.SERVICE_URL = "//apisv0.bdimg.com/";
    var tt = n((function(t) {
        function e(t, e, n, r, i, o, a) {
            try {
                var s = t[o](a)
                  , u = s.value
            } catch (t) {
                return void n(t)
            }
            s.done ? e(u) : Promise.resolve(u).then(r, i)
        }
        t.exports = function(t) {
            return function() {
                var n = this
                  , r = arguments;
                return new Promise((function(i, o) {
                    var a = t.apply(n, r);
                    function s(t) {
                        e(a, i, o, s, u, "next", t)
                    }
                    function u(t) {
                        e(a, i, o, s, u, "throw", t)
                    }
                    s(void 0)
                }
                ))
            }
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ))
      , et = e(tt)
      , nt = n((function(t) {
        var e = r.default;
        function n() {
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            t.exports = n = function() {
                return r
            }
            ,
            t.exports.__esModule = !0,
            t.exports.default = t.exports;
            var r = {}
              , i = Object.prototype
              , o = i.hasOwnProperty
              , a = "function" == typeof Symbol ? Symbol : {}
              , s = a.iterator || "@@iterator"
              , u = a.asyncIterator || "@@asyncIterator"
              , h = a.toStringTag || "@@toStringTag";
            function c(t, e, n) {
                return Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                t[e]
            }
            try {
                c({}, "")
            } catch (t) {
                c = function(t, e, n) {
                    return t[e] = n
                }
            }
            function l(t, e, n, r) {
                var i = e && e.prototype instanceof p ? e : p
                  , o = Object.create(i.prototype)
                  , a = new A(r || []);
                return o._invoke = function(t, e, n) {
                    var r = "suspendedStart";
                    return function(i, o) {
                        if ("executing" === r)
                            throw new Error("Generator is already running");
                        if ("completed" === r) {
                            if ("throw" === i)
                                throw o;
                            return R()
                        }
                        for (n.method = i,
                        n.arg = o; ; ) {
                            var a = n.delegate;
                            if (a) {
                                var s = w(a, n);
                                if (s) {
                                    if (s === d)
                                        continue;
                                    return s
                                }
                            }
                            if ("next" === n.method)
                                n.sent = n._sent = n.arg;
                            else if ("throw" === n.method) {
                                if ("suspendedStart" === r)
                                    throw r = "completed",
                                    n.arg;
                                n.dispatchException(n.arg)
                            } else
                                "return" === n.method && n.abrupt("return", n.arg);
                            r = "executing";
                            var u = f(t, e, n);
                            if ("normal" === u.type) {
                                if (r = n.done ? "completed" : "suspendedYield",
                                u.arg === d)
                                    continue;
                                return {
                                    value: u.arg,
                                    done: n.done
                                }
                            }
                            "throw" === u.type && (r = "completed",
                            n.method = "throw",
                            n.arg = u.arg)
                        }
                    }
                }(t, n, a),
                o
            }
            function f(t, e, n) {
                try {
                    return {
                        type: "normal",
                        arg: t.call(e, n)
                    }
                } catch (t) {
                    return {
                        type: "throw",
                        arg: t
                    }
                }
            }
            r.wrap = l;
            var d = {};
            function p() {}
            function v() {}
            function m() {}
            var g = {};
            c(g, s, (function() {
                return this
            }
            ));
            var y = Object.getPrototypeOf
              , _ = y && y(y(C([])));
            _ && _ !== i && o.call(_, s) && (g = _);
            var x = m.prototype = p.prototype = Object.create(g);
            function b(t) {
                ["next", "throw", "return"].forEach((function(e) {
                    c(t, e, (function(t) {
                        return this._invoke(e, t)
                    }
                    ))
                }
                ))
            }
            function M(t, n) {
                function r(i, a, s, u) {
                    var h = f(t[i], t, a);
                    if ("throw" !== h.type) {
                        var c = h.arg
                          , l = c.value;
                        return l && "object" == e(l) && o.call(l, "__await") ? n.resolve(l.__await).then((function(t) {
                            r("next", t, s, u)
                        }
                        ), (function(t) {
                            r("throw", t, s, u)
                        }
                        )) : n.resolve(l).then((function(t) {
                            c.value = t,
                            s(c)
                        }
                        ), (function(t) {
                            return r("throw", t, s, u)
                        }
                        ))
                    }
                    u(h.arg)
                }
                var i;
                this._invoke = function(t, e) {
                    function o() {
                        return new n((function(n, i) {
                            r(t, e, n, i)
                        }
                        ))
                    }
                    return i = i ? i.then(o, o) : o()
                }
            }
            function w(t, e) {
                var n = t.iterator[e.method];
                if (void 0 === n) {
                    if (e.delegate = null,
                    "throw" === e.method) {
                        if (t.iterator.return && (e.method = "return",
                        e.arg = void 0,
                        w(t, e),
                        "throw" === e.method))
                            return d;
                        e.method = "throw",
                        e.arg = new TypeError("The iterator does not provide a 'throw' method")
                    }
                    return d
                }
                var r = f(n, t.iterator, e.arg);
                if ("throw" === r.type)
                    return e.method = "throw",
                    e.arg = r.arg,
                    e.delegate = null,
                    d;
                var i = r.arg;
                return i ? i.done ? (e[t.resultName] = i.value,
                e.next = t.nextLoc,
                "return" !== e.method && (e.method = "next",
                e.arg = void 0),
                e.delegate = null,
                d) : i : (e.method = "throw",
                e.arg = new TypeError("iterator result is not an object"),
                e.delegate = null,
                d)
            }
            function E(t) {
                var e = {
                    tryLoc: t[0]
                };
                1 in t && (e.catchLoc = t[1]),
                2 in t && (e.finallyLoc = t[2],
                e.afterLoc = t[3]),
                this.tryEntries.push(e)
            }
            function T(t) {
                var e = t.completion || {};
                e.type = "normal",
                delete e.arg,
                t.completion = e
            }
            function A(t) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                t.forEach(E, this),
                this.reset(!0)
            }
            function C(t) {
                if (t) {
                    var e = t[s];
                    if (e)
                        return e.call(t);
                    if ("function" == typeof t.next)
                        return t;
                    if (!isNaN(t.length)) {
                        var n = -1
                          , r = function e() {
                            for (; ++n < t.length; )
                                if (o.call(t, n))
                                    return e.value = t[n],
                                    e.done = !1,
                                    e;
                            return e.value = void 0,
                            e.done = !0,
                            e
                        };
                        return r.next = r
                    }
                }
                return {
                    next: R
                }
            }
            function R() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return v.prototype = m,
            c(x, "constructor", m),
            c(m, "constructor", v),
            v.displayName = c(m, h, "GeneratorFunction"),
            r.isGeneratorFunction = function(t) {
                var e = "function" == typeof t && t.constructor;
                return !!e && (e === v || "GeneratorFunction" === (e.displayName || e.name))
            }
            ,
            r.mark = function(t) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(t, m) : (t.__proto__ = m,
                c(t, h, "GeneratorFunction")),
                t.prototype = Object.create(x),
                t
            }
            ,
            r.awrap = function(t) {
                return {
                    __await: t
                }
            }
            ,
            b(M.prototype),
            c(M.prototype, u, (function() {
                return this
            }
            )),
            r.AsyncIterator = M,
            r.async = function(t, e, n, i, o) {
                void 0 === o && (o = Promise);
                var a = new M(l(t, e, n, i),o);
                return r.isGeneratorFunction(e) ? a : a.next().then((function(t) {
                    return t.done ? t.value : a.next()
                }
                ))
            }
            ,
            b(x),
            c(x, h, "Generator"),
            c(x, s, (function() {
                return this
            }
            )),
            c(x, "toString", (function() {
                return "[object Generator]"
            }
            )),
            r.keys = function(t) {
                var e = [];
                for (var n in t)
                    e.push(n);
                return e.reverse(),
                function n() {
                    for (; e.length; ) {
                        var r = e.pop();
                        if (r in t)
                            return n.value = r,
                            n.done = !1,
                            n
                    }
                    return n.done = !0,
                    n
                }
            }
            ,
            r.values = C,
            A.prototype = {
                constructor: A,
                reset: function(t) {
                    if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = void 0,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = void 0,
                    this.tryEntries.forEach(T),
                    !t)
                        for (var e in this)
                            "t" === e.charAt(0) && o.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var t = this.tryEntries[0].completion;
                    if ("throw" === t.type)
                        throw t.arg;
                    return this.rval
                },
                dispatchException: function(t) {
                    if (this.done)
                        throw t;
                    var e = this;
                    function n(n, r) {
                        return a.type = "throw",
                        a.arg = t,
                        e.next = n,
                        r && (e.method = "next",
                        e.arg = void 0),
                        !!r
                    }
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var i = this.tryEntries[r]
                          , a = i.completion;
                        if ("root" === i.tryLoc)
                            return n("end");
                        if (i.tryLoc <= this.prev) {
                            var s = o.call(i, "catchLoc")
                              , u = o.call(i, "finallyLoc");
                            if (s && u) {
                                if (this.prev < i.catchLoc)
                                    return n(i.catchLoc, !0);
                                if (this.prev < i.finallyLoc)
                                    return n(i.finallyLoc)
                            } else if (s) {
                                if (this.prev < i.catchLoc)
                                    return n(i.catchLoc, !0)
                            } else {
                                if (!u)
                                    throw new Error("try statement without catch or finally");
                                if (this.prev < i.finallyLoc)
                                    return n(i.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(t, e) {
                    for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                        var r = this.tryEntries[n];
                        if (r.tryLoc <= this.prev && o.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                            var i = r;
                            break
                        }
                    }
                    i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                    var a = i ? i.completion : {};
                    return a.type = t,
                    a.arg = e,
                    i ? (this.method = "next",
                    this.next = i.finallyLoc,
                    d) : this.complete(a)
                },
                complete: function(t, e) {
                    if ("throw" === t.type)
                        throw t.arg;
                    return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === t.type && e && (this.next = e),
                    d
                },
                finish: function(t) {
                    for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                        var n = this.tryEntries[e];
                        if (n.finallyLoc === t)
                            return this.complete(n.completion, n.afterLoc),
                            T(n),
                            d
                    }
                },
                catch: function(t) {
                    for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                        var n = this.tryEntries[e];
                        if (n.tryLoc === t) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var i = r.arg;
                                T(n)
                            }
                            return i
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(t, e, n) {
                    return this.delegate = {
                        iterator: C(t),
                        resultName: e,
                        nextLoc: n
                    },
                    "next" === this.method && (this.arg = void 0),
                    d
                }
            },
            r
        }
        t.exports = n,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(nt);
    var rt = nt()
      , it = rt;
    try {
        regeneratorRuntime = rt
    } catch (t) {
        "object" == typeof globalThis ? globalThis.regeneratorRuntime = rt : Function("r", "regeneratorRuntime = r")(rt)
    }
    function ot(t, e) {
        if (!t)
            throw new Error("math.gl assertion ".concat(e))
    }
    const at = {
        EPSILON: 1e-12,
        debug: !1,
        precision: 4,
        printTypes: !1,
        printDegrees: !1,
        printRowMajor: !0
    };
    function st(t, {precision:e=at.precision}={}) {
        return t = function(t) {
            return Math.round(t / at.EPSILON) * at.EPSILON
        }(t),
        "".concat(parseFloat(t.toPrecision(e)))
    }
    function ut(t) {
        return Array.isArray(t) || ArrayBuffer.isView(t) && !(t instanceof DataView)
    }
    function ht(t, e, n) {
        const r = at.EPSILON;
        n && (at.EPSILON = n);
        try {
            if (t === e)
                return !0;
            if (ut(t) && ut(e)) {
                if (t.length !== e.length)
                    return !1;
                for (let n = 0; n < t.length; ++n)
                    if (!ht(t[n], e[n]))
                        return !1;
                return !0
            }
            return t && t.equals ? t.equals(e) : e && e.equals ? e.equals(t) : "number" == typeof t && "number" == typeof e && Math.abs(t - e) <= at.EPSILON * Math.max(1, Math.abs(t), Math.abs(e))
        } finally {
            at.EPSILON = r
        }
    }
    class ct extends (function(t) {
        function e() {
            var e = Reflect.construct(t, Array.from(arguments));
            return Object.setPrototypeOf(e, Object.getPrototypeOf(this)),
            e
        }
        return e.prototype = Object.create(t.prototype, {
            constructor: {
                value: t,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }),
        Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t,
        e
    }(Array)) {
        clone() {
            return (new this.constructor).copy(this)
        }
        fromArray(t, e=0) {
            for (let n = 0; n < this.ELEMENTS; ++n)
                this[n] = t[n + e];
            return this.check()
        }
        toArray(t=[], e=0) {
            for (let n = 0; n < this.ELEMENTS; ++n)
                t[e + n] = this[n];
            return t
        }
        from(t) {
            return Array.isArray(t) ? this.copy(t) : this.fromObject(t)
        }
        to(t) {
            return t === this ? this : ut(t) ? this.toArray(t) : this.toObject(t)
        }
        toTarget(t) {
            return t ? this.to(t) : this
        }
        toFloat32Array() {
            return new Float32Array(this)
        }
        toString() {
            return this.formatString(at)
        }
        formatString(t) {
            let e = "";
            for (let n = 0; n < this.ELEMENTS; ++n)
                e += (n > 0 ? ", " : "") + st(this[n], t);
            return "".concat(t.printTypes ? this.constructor.name : "", "[").concat(e, "]")
        }
        equals(t) {
            if (!t || this.length !== t.length)
                return !1;
            for (let e = 0; e < this.ELEMENTS; ++e)
                if (!ht(this[e], t[e]))
                    return !1;
            return !0
        }
        exactEquals(t) {
            if (!t || this.length !== t.length)
                return !1;
            for (let e = 0; e < this.ELEMENTS; ++e)
                if (this[e] !== t[e])
                    return !1;
            return !0
        }
        negate() {
            for (let t = 0; t < this.ELEMENTS; ++t)
                this[t] = -this[t];
            return this.check()
        }
        lerp(t, e, n) {
            if (void 0 === n)
                return this.lerp(this, t, e);
            for (let r = 0; r < this.ELEMENTS; ++r) {
                const i = t[r];
                this[r] = i + n * (e[r] - i)
            }
            return this.check()
        }
        min(t) {
            for (let e = 0; e < this.ELEMENTS; ++e)
                this[e] = Math.min(t[e], this[e]);
            return this.check()
        }
        max(t) {
            for (let e = 0; e < this.ELEMENTS; ++e)
                this[e] = Math.max(t[e], this[e]);
            return this.check()
        }
        clamp(t, e) {
            for (let n = 0; n < this.ELEMENTS; ++n)
                this[n] = Math.min(Math.max(this[n], t[n]), e[n]);
            return this.check()
        }
        add(...t) {
            for (const e of t)
                for (let t = 0; t < this.ELEMENTS; ++t)
                    this[t] += e[t];
            return this.check()
        }
        subtract(...t) {
            for (const e of t)
                for (let t = 0; t < this.ELEMENTS; ++t)
                    this[t] -= e[t];
            return this.check()
        }
        scale(t) {
            if ("number" == typeof t)
                for (let e = 0; e < this.ELEMENTS; ++e)
                    this[e] *= t;
            else
                for (let e = 0; e < this.ELEMENTS && e < t.length; ++e)
                    this[e] *= t[e];
            return this.check()
        }
        multiplyByScalar(t) {
            for (let e = 0; e < this.ELEMENTS; ++e)
                this[e] *= t;
            return this.check()
        }
        check() {
            if (at.debug && !this.validate())
                throw new Error("math.gl: ".concat(this.constructor.name, " some fields set to invalid numbers'"));
            return this
        }
        validate() {
            let t = this.length === this.ELEMENTS;
            for (let e = 0; e < this.ELEMENTS; ++e)
                t = t && Number.isFinite(this[e]);
            return t
        }
        sub(t) {
            return this.subtract(t)
        }
        setScalar(t) {
            for (let e = 0; e < this.ELEMENTS; ++e)
                this[e] = t;
            return this.check()
        }
        addScalar(t) {
            for (let e = 0; e < this.ELEMENTS; ++e)
                this[e] += t;
            return this.check()
        }
        subScalar(t) {
            return this.addScalar(-t)
        }
        multiplyScalar(t) {
            for (let e = 0; e < this.ELEMENTS; ++e)
                this[e] *= t;
            return this.check()
        }
        divideScalar(t) {
            return this.multiplyByScalar(1 / t)
        }
        clampScalar(t, e) {
            for (let n = 0; n < this.ELEMENTS; ++n)
                this[n] = Math.min(Math.max(this[n], t), e);
            return this.check()
        }
        get elements() {
            return this
        }
    }
    function lt(t) {
        if (!Number.isFinite(t))
            throw new Error("Invalid number ".concat(t));
        return t
    }
    function ft(t, e, n="") {
        if (at.debug && !function(t, e) {
            if (t.length !== e)
                return !1;
            for (let e = 0; e < t.length; ++e)
                if (!Number.isFinite(t[e]))
                    return !1;
            return !0
        }(t, e))
            throw new Error("math.gl: ".concat(n, " some fields set to invalid numbers'"));
        return t
    }
    class dt extends ct {
        get x() {
            return this[0]
        }
        set x(t) {
            this[0] = lt(t)
        }
        get y() {
            return this[1]
        }
        set y(t) {
            this[1] = lt(t)
        }
        len() {
            return Math.sqrt(this.lengthSquared())
        }
        magnitude() {
            return this.len()
        }
        lengthSquared() {
            let t = 0;
            for (let e = 0; e < this.ELEMENTS; ++e)
                t += this[e] * this[e];
            return t
        }
        magnitudeSquared() {
            return this.lengthSquared()
        }
        distance(t) {
            return Math.sqrt(this.distanceSquared(t))
        }
        distanceSquared(t) {
            let e = 0;
            for (let n = 0; n < this.ELEMENTS; ++n) {
                const r = this[n] - t[n];
                e += r * r
            }
            return lt(e)
        }
        dot(t) {
            let e = 0;
            for (let n = 0; n < this.ELEMENTS; ++n)
                e += this[n] * t[n];
            return lt(e)
        }
        normalize() {
            const t = this.magnitude();
            if (0 !== t)
                for (let e = 0; e < this.ELEMENTS; ++e)
                    this[e] /= t;
            return this.check()
        }
        multiply(...t) {
            for (const e of t)
                for (let t = 0; t < this.ELEMENTS; ++t)
                    this[t] *= e[t];
            return this.check()
        }
        divide(...t) {
            for (const e of t)
                for (let t = 0; t < this.ELEMENTS; ++t)
                    this[t] /= e[t];
            return this.check()
        }
        lengthSq() {
            return this.lengthSquared()
        }
        distanceTo(t) {
            return this.distance(t)
        }
        distanceToSquared(t) {
            return this.distanceSquared(t)
        }
        getComponent(t) {
            return ot(t >= 0 && t < this.ELEMENTS, "index is out of range"),
            lt(this[t])
        }
        setComponent(t, e) {
            return ot(t >= 0 && t < this.ELEMENTS, "index is out of range"),
            this[t] = e,
            this.check()
        }
        addVectors(t, e) {
            return this.copy(t).add(e)
        }
        subVectors(t, e) {
            return this.copy(t).subtract(e)
        }
        multiplyVectors(t, e) {
            return this.copy(t).multiply(e)
        }
        addScaledVector(t, e) {
            return this.add(new this.constructor(t).multiplyScalar(e))
        }
    }
    var pt = 1e-6
      , vt = "undefined" != typeof Float32Array ? Float32Array : Array
      , mt = Math.random;
    function gt() {
        var t = new vt(2);
        return vt != Float32Array && (t[0] = 0,
        t[1] = 0),
        t
    }
    function yt(t, e) {
        var n = new vt(2);
        return n[0] = t,
        n[1] = e,
        n
    }
    function _t(t, e, n) {
        return t[0] = e[0] - n[0],
        t[1] = e[1] - n[1],
        t
    }
    function xt(t, e, n) {
        return t[0] = e[0] * n[0],
        t[1] = e[1] * n[1],
        t
    }
    function bt(t, e, n) {
        return t[0] = e[0] / n[0],
        t[1] = e[1] / n[1],
        t
    }
    function Mt(t, e) {
        var n = e[0] - t[0]
          , r = e[1] - t[1];
        return Math.hypot(n, r)
    }
    function wt(t, e) {
        var n = e[0] - t[0]
          , r = e[1] - t[1];
        return n * n + r * r
    }
    function Et(t) {
        var e = t[0]
          , n = t[1];
        return Math.hypot(e, n)
    }
    function Tt(t) {
        var e = t[0]
          , n = t[1];
        return e * e + n * n
    }
    function At(t, e, n) {
        var r = e[0]
          , i = e[1];
        return t[0] = n[0] * r + n[4] * i + n[12],
        t[1] = n[1] * r + n[5] * i + n[13],
        t
    }
    Math.hypot || (Math.hypot = function() {
        for (var t = 0, e = arguments.length; e--; )
            t += arguments[e] * arguments[e];
        return Math.sqrt(t)
    }
    );
    var Ct, Rt = Et, St = _t, Pt = xt, Dt = bt, Ot = Mt, It = wt, Lt = Tt, Bt = (Ct = gt(),
    function(t, e, n, r, i, o) {
        var a, s;
        for (e || (e = 2),
        n || (n = 0),
        s = r ? Math.min(r * e + n, t.length) : t.length,
        a = n; a < s; a += e)
            Ct[0] = t[a],
            Ct[1] = t[a + 1],
            i(Ct, Ct, o),
            t[a] = Ct[0],
            t[a + 1] = Ct[1];
        return t
    }
    ), kt = Object.freeze({
        __proto__: null,
        create: gt,
        clone: function(t) {
            var e = new vt(2);
            return e[0] = t[0],
            e[1] = t[1],
            e
        },
        fromValues: yt,
        copy: function(t, e) {
            return t[0] = e[0],
            t[1] = e[1],
            t
        },
        set: function(t, e, n) {
            return t[0] = e,
            t[1] = n,
            t
        },
        add: function(t, e, n) {
            return t[0] = e[0] + n[0],
            t[1] = e[1] + n[1],
            t
        },
        subtract: _t,
        multiply: xt,
        divide: bt,
        ceil: function(t, e) {
            return t[0] = Math.ceil(e[0]),
            t[1] = Math.ceil(e[1]),
            t
        },
        floor: function(t, e) {
            return t[0] = Math.floor(e[0]),
            t[1] = Math.floor(e[1]),
            t
        },
        min: function(t, e, n) {
            return t[0] = Math.min(e[0], n[0]),
            t[1] = Math.min(e[1], n[1]),
            t
        },
        max: function(t, e, n) {
            return t[0] = Math.max(e[0], n[0]),
            t[1] = Math.max(e[1], n[1]),
            t
        },
        round: function(t, e) {
            return t[0] = Math.round(e[0]),
            t[1] = Math.round(e[1]),
            t
        },
        scale: function(t, e, n) {
            return t[0] = e[0] * n,
            t[1] = e[1] * n,
            t
        },
        scaleAndAdd: function(t, e, n, r) {
            return t[0] = e[0] + n[0] * r,
            t[1] = e[1] + n[1] * r,
            t
        },
        distance: Mt,
        squaredDistance: wt,
        length: Et,
        squaredLength: Tt,
        negate: function(t, e) {
            return t[0] = -e[0],
            t[1] = -e[1],
            t
        },
        inverse: function(t, e) {
            return t[0] = 1 / e[0],
            t[1] = 1 / e[1],
            t
        },
        normalize: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = n * n + r * r;
            return i > 0 && (i = 1 / Math.sqrt(i)),
            t[0] = e[0] * i,
            t[1] = e[1] * i,
            t
        },
        dot: function(t, e) {
            return t[0] * e[0] + t[1] * e[1]
        },
        cross: function(t, e, n) {
            var r = e[0] * n[1] - e[1] * n[0];
            return t[0] = t[1] = 0,
            t[2] = r,
            t
        },
        lerp: function(t, e, n, r) {
            var i = e[0]
              , o = e[1];
            return t[0] = i + r * (n[0] - i),
            t[1] = o + r * (n[1] - o),
            t
        },
        random: function(t, e) {
            e = e || 1;
            var n = 2 * mt() * Math.PI;
            return t[0] = Math.cos(n) * e,
            t[1] = Math.sin(n) * e,
            t
        },
        transformMat2: function(t, e, n) {
            var r = e[0]
              , i = e[1];
            return t[0] = n[0] * r + n[2] * i,
            t[1] = n[1] * r + n[3] * i,
            t
        },
        transformMat2d: function(t, e, n) {
            var r = e[0]
              , i = e[1];
            return t[0] = n[0] * r + n[2] * i + n[4],
            t[1] = n[1] * r + n[3] * i + n[5],
            t
        },
        transformMat3: function(t, e, n) {
            var r = e[0]
              , i = e[1];
            return t[0] = n[0] * r + n[3] * i + n[6],
            t[1] = n[1] * r + n[4] * i + n[7],
            t
        },
        transformMat4: At,
        rotate: function(t, e, n, r) {
            var i = e[0] - n[0]
              , o = e[1] - n[1]
              , a = Math.sin(r)
              , s = Math.cos(r);
            return t[0] = i * s - o * a + n[0],
            t[1] = i * a + o * s + n[1],
            t
        },
        angle: function(t, e) {
            var n = t[0]
              , r = t[1]
              , i = e[0]
              , o = e[1]
              , a = Math.sqrt(n * n + r * r) * Math.sqrt(i * i + o * o)
              , s = a && (n * i + r * o) / a;
            return Math.acos(Math.min(Math.max(s, -1), 1))
        },
        zero: function(t) {
            return t[0] = 0,
            t[1] = 0,
            t
        },
        str: function(t) {
            return "vec2(" + t[0] + ", " + t[1] + ")"
        },
        exactEquals: function(t, e) {
            return t[0] === e[0] && t[1] === e[1]
        },
        equals: function(t, e) {
            var n = t[0]
              , r = t[1]
              , i = e[0]
              , o = e[1];
            return Math.abs(n - i) <= pt * Math.max(1, Math.abs(n), Math.abs(i)) && Math.abs(r - o) <= pt * Math.max(1, Math.abs(r), Math.abs(o))
        },
        len: Rt,
        sub: St,
        mul: Pt,
        div: Dt,
        dist: Ot,
        sqrDist: It,
        sqrLen: Lt,
        forEach: Bt
    });
    function Ut(t, e, n) {
        const r = e[0]
          , i = e[1]
          , o = e[2]
          , a = n[3] * r + n[7] * i + n[11] * o || 1;
        return t[0] = (n[0] * r + n[4] * i + n[8] * o) / a,
        t[1] = (n[1] * r + n[5] * i + n[9] * o) / a,
        t[2] = (n[2] * r + n[6] * i + n[10] * o) / a,
        t
    }
    function Nt() {
        var t = new vt(3);
        return vt != Float32Array && (t[0] = 0,
        t[1] = 0,
        t[2] = 0),
        t
    }
    function Ft(t) {
        var e = new vt(3);
        return e[0] = t[0],
        e[1] = t[1],
        e[2] = t[2],
        e
    }
    function jt(t) {
        var e = t[0]
          , n = t[1]
          , r = t[2];
        return Math.hypot(e, n, r)
    }
    function zt(t, e, n) {
        var r = new vt(3);
        return r[0] = t,
        r[1] = e,
        r[2] = n,
        r
    }
    function Vt(t, e) {
        return t[0] = e[0],
        t[1] = e[1],
        t[2] = e[2],
        t
    }
    function Gt(t, e, n) {
        return t[0] = e[0] + n[0],
        t[1] = e[1] + n[1],
        t[2] = e[2] + n[2],
        t
    }
    function Wt(t, e, n) {
        return t[0] = e[0] - n[0],
        t[1] = e[1] - n[1],
        t[2] = e[2] - n[2],
        t
    }
    function Ht(t, e, n) {
        return t[0] = e[0] * n[0],
        t[1] = e[1] * n[1],
        t[2] = e[2] * n[2],
        t
    }
    function Zt(t, e, n) {
        return t[0] = e[0] / n[0],
        t[1] = e[1] / n[1],
        t[2] = e[2] / n[2],
        t
    }
    function qt(t, e, n) {
        return t[0] = e[0] * n,
        t[1] = e[1] * n,
        t[2] = e[2] * n,
        t
    }
    function Yt(t, e) {
        var n = e[0] - t[0]
          , r = e[1] - t[1]
          , i = e[2] - t[2];
        return Math.hypot(n, r, i)
    }
    function Xt(t, e) {
        var n = e[0] - t[0]
          , r = e[1] - t[1]
          , i = e[2] - t[2];
        return n * n + r * r + i * i
    }
    function Kt(t) {
        var e = t[0]
          , n = t[1]
          , r = t[2];
        return e * e + n * n + r * r
    }
    function Qt(t, e) {
        var n = e[0]
          , r = e[1]
          , i = e[2]
          , o = n * n + r * r + i * i;
        return o > 0 && (o = 1 / Math.sqrt(o)),
        t[0] = e[0] * o,
        t[1] = e[1] * o,
        t[2] = e[2] * o,
        t
    }
    function Jt(t, e) {
        return t[0] * e[0] + t[1] * e[1] + t[2] * e[2]
    }
    function $t(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2]
          , a = n[0]
          , s = n[1]
          , u = n[2];
        return t[0] = i * u - o * s,
        t[1] = o * a - r * u,
        t[2] = r * s - i * a,
        t
    }
    function te(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2]
          , a = n[3] * r + n[7] * i + n[11] * o + n[15];
        return a = a || 1,
        t[0] = (n[0] * r + n[4] * i + n[8] * o + n[12]) / a,
        t[1] = (n[1] * r + n[5] * i + n[9] * o + n[13]) / a,
        t[2] = (n[2] * r + n[6] * i + n[10] * o + n[14]) / a,
        t
    }
    function ee(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2];
        return t[0] = r * n[0] + i * n[3] + o * n[6],
        t[1] = r * n[1] + i * n[4] + o * n[7],
        t[2] = r * n[2] + i * n[5] + o * n[8],
        t
    }
    function ne(t, e, n) {
        var r = n[0]
          , i = n[1]
          , o = n[2]
          , a = n[3]
          , s = e[0]
          , u = e[1]
          , h = e[2]
          , c = i * h - o * u
          , l = o * s - r * h
          , f = r * u - i * s
          , d = i * f - o * l
          , p = o * c - r * f
          , v = r * l - i * c
          , m = 2 * a;
        return c *= m,
        l *= m,
        f *= m,
        d *= 2,
        p *= 2,
        v *= 2,
        t[0] = s + c + d,
        t[1] = u + l + p,
        t[2] = h + f + v,
        t
    }
    function re(t, e, n, r) {
        var i = []
          , o = [];
        return i[0] = e[0] - n[0],
        i[1] = e[1] - n[1],
        i[2] = e[2] - n[2],
        o[0] = i[0],
        o[1] = i[1] * Math.cos(r) - i[2] * Math.sin(r),
        o[2] = i[1] * Math.sin(r) + i[2] * Math.cos(r),
        t[0] = o[0] + n[0],
        t[1] = o[1] + n[1],
        t[2] = o[2] + n[2],
        t
    }
    function ie(t, e, n, r) {
        var i = []
          , o = [];
        return i[0] = e[0] - n[0],
        i[1] = e[1] - n[1],
        i[2] = e[2] - n[2],
        o[0] = i[2] * Math.sin(r) + i[0] * Math.cos(r),
        o[1] = i[1],
        o[2] = i[2] * Math.cos(r) - i[0] * Math.sin(r),
        t[0] = o[0] + n[0],
        t[1] = o[1] + n[1],
        t[2] = o[2] + n[2],
        t
    }
    function oe(t, e, n, r) {
        var i = []
          , o = [];
        return i[0] = e[0] - n[0],
        i[1] = e[1] - n[1],
        i[2] = e[2] - n[2],
        o[0] = i[0] * Math.cos(r) - i[1] * Math.sin(r),
        o[1] = i[0] * Math.sin(r) + i[1] * Math.cos(r),
        o[2] = i[2],
        t[0] = o[0] + n[0],
        t[1] = o[1] + n[1],
        t[2] = o[2] + n[2],
        t
    }
    function ae(t, e) {
        var n = t[0]
          , r = t[1]
          , i = t[2]
          , o = e[0]
          , a = e[1]
          , s = e[2]
          , u = Math.sqrt(n * n + r * r + i * i) * Math.sqrt(o * o + a * a + s * s)
          , h = u && Jt(t, e) / u;
        return Math.acos(Math.min(Math.max(h, -1), 1))
    }
    function se(t, e) {
        var n = t[0]
          , r = t[1]
          , i = t[2]
          , o = e[0]
          , a = e[1]
          , s = e[2];
        return Math.abs(n - o) <= pt * Math.max(1, Math.abs(n), Math.abs(o)) && Math.abs(r - a) <= pt * Math.max(1, Math.abs(r), Math.abs(a)) && Math.abs(i - s) <= pt * Math.max(1, Math.abs(i), Math.abs(s))
    }
    var ue = Wt
      , he = Ht
      , ce = Zt
      , le = Yt
      , fe = Xt
      , de = jt
      , pe = Kt
      , ve = function() {
        var t = Nt();
        return function(e, n, r, i, o, a) {
            var s, u;
            for (n || (n = 3),
            r || (r = 0),
            u = i ? Math.min(i * n + r, e.length) : e.length,
            s = r; s < u; s += n)
                t[0] = e[s],
                t[1] = e[s + 1],
                t[2] = e[s + 2],
                o(t, t, a),
                e[s] = t[0],
                e[s + 1] = t[1],
                e[s + 2] = t[2];
            return e
        }
    }()
      , me = Object.freeze({
        __proto__: null,
        create: Nt,
        clone: Ft,
        length: jt,
        fromValues: zt,
        copy: Vt,
        set: function(t, e, n, r) {
            return t[0] = e,
            t[1] = n,
            t[2] = r,
            t
        },
        add: Gt,
        subtract: Wt,
        multiply: Ht,
        divide: Zt,
        ceil: function(t, e) {
            return t[0] = Math.ceil(e[0]),
            t[1] = Math.ceil(e[1]),
            t[2] = Math.ceil(e[2]),
            t
        },
        floor: function(t, e) {
            return t[0] = Math.floor(e[0]),
            t[1] = Math.floor(e[1]),
            t[2] = Math.floor(e[2]),
            t
        },
        min: function(t, e, n) {
            return t[0] = Math.min(e[0], n[0]),
            t[1] = Math.min(e[1], n[1]),
            t[2] = Math.min(e[2], n[2]),
            t
        },
        max: function(t, e, n) {
            return t[0] = Math.max(e[0], n[0]),
            t[1] = Math.max(e[1], n[1]),
            t[2] = Math.max(e[2], n[2]),
            t
        },
        round: function(t, e) {
            return t[0] = Math.round(e[0]),
            t[1] = Math.round(e[1]),
            t[2] = Math.round(e[2]),
            t
        },
        scale: qt,
        scaleAndAdd: function(t, e, n, r) {
            return t[0] = e[0] + n[0] * r,
            t[1] = e[1] + n[1] * r,
            t[2] = e[2] + n[2] * r,
            t
        },
        distance: Yt,
        squaredDistance: Xt,
        squaredLength: Kt,
        negate: function(t, e) {
            return t[0] = -e[0],
            t[1] = -e[1],
            t[2] = -e[2],
            t
        },
        inverse: function(t, e) {
            return t[0] = 1 / e[0],
            t[1] = 1 / e[1],
            t[2] = 1 / e[2],
            t
        },
        normalize: Qt,
        dot: Jt,
        cross: $t,
        lerp: function(t, e, n, r) {
            var i = e[0]
              , o = e[1]
              , a = e[2];
            return t[0] = i + r * (n[0] - i),
            t[1] = o + r * (n[1] - o),
            t[2] = a + r * (n[2] - a),
            t
        },
        hermite: function(t, e, n, r, i, o) {
            var a = o * o
              , s = a * (2 * o - 3) + 1
              , u = a * (o - 2) + o
              , h = a * (o - 1)
              , c = a * (3 - 2 * o);
            return t[0] = e[0] * s + n[0] * u + r[0] * h + i[0] * c,
            t[1] = e[1] * s + n[1] * u + r[1] * h + i[1] * c,
            t[2] = e[2] * s + n[2] * u + r[2] * h + i[2] * c,
            t
        },
        bezier: function(t, e, n, r, i, o) {
            var a = 1 - o
              , s = a * a
              , u = o * o
              , h = s * a
              , c = 3 * o * s
              , l = 3 * u * a
              , f = u * o;
            return t[0] = e[0] * h + n[0] * c + r[0] * l + i[0] * f,
            t[1] = e[1] * h + n[1] * c + r[1] * l + i[1] * f,
            t[2] = e[2] * h + n[2] * c + r[2] * l + i[2] * f,
            t
        },
        random: function(t, e) {
            e = e || 1;
            var n = 2 * mt() * Math.PI
              , r = 2 * mt() - 1
              , i = Math.sqrt(1 - r * r) * e;
            return t[0] = Math.cos(n) * i,
            t[1] = Math.sin(n) * i,
            t[2] = r * e,
            t
        },
        transformMat4: te,
        transformMat3: ee,
        transformQuat: ne,
        rotateX: re,
        rotateY: ie,
        rotateZ: oe,
        angle: ae,
        zero: function(t) {
            return t[0] = 0,
            t[1] = 0,
            t[2] = 0,
            t
        },
        str: function(t) {
            return "vec3(" + t[0] + ", " + t[1] + ", " + t[2] + ")"
        },
        exactEquals: function(t, e) {
            return t[0] === e[0] && t[1] === e[1] && t[2] === e[2]
        },
        equals: se,
        sub: ue,
        mul: he,
        div: ce,
        dist: le,
        sqrDist: fe,
        len: de,
        sqrLen: pe,
        forEach: ve
    });
    const ge = [0, 0, 0];
    let ye, _e;
    class xe extends dt {
        static get ZERO() {
            return ye || (ye = new xe(0,0,0),
            Object.freeze(ye)),
            ye
        }
        constructor(t=0, e=0, n=0) {
            super(-0, -0, -0),
            1 === arguments.length && ut(t) ? this.copy(t) : (at.debug && (lt(t),
            lt(e),
            lt(n)),
            this[0] = t,
            this[1] = e,
            this[2] = n)
        }
        set(t, e, n) {
            return this[0] = t,
            this[1] = e,
            this[2] = n,
            this.check()
        }
        copy(t) {
            return this[0] = t[0],
            this[1] = t[1],
            this[2] = t[2],
            this.check()
        }
        fromObject(t) {
            return at.debug && (lt(t.x),
            lt(t.y),
            lt(t.z)),
            this[0] = t.x,
            this[1] = t.y,
            this[2] = t.z,
            this.check()
        }
        toObject(t) {
            return t.x = this[0],
            t.y = this[1],
            t.z = this[2],
            t
        }
        get ELEMENTS() {
            return 3
        }
        get z() {
            return this[2]
        }
        set z(t) {
            this[2] = lt(t)
        }
        angle(t) {
            return ae(this, t)
        }
        cross(t) {
            return $t(this, this, t),
            this.check()
        }
        rotateX({radians: t, origin: e=ge}) {
            return re(this, this, e, t),
            this.check()
        }
        rotateY({radians: t, origin: e=ge}) {
            return ie(this, this, e, t),
            this.check()
        }
        rotateZ({radians: t, origin: e=ge}) {
            return oe(this, this, e, t),
            this.check()
        }
        transform(t) {
            return this.transformAsPoint(t)
        }
        transformAsPoint(t) {
            return te(this, this, t),
            this.check()
        }
        transformAsVector(t) {
            return Ut(this, this, t),
            this.check()
        }
        transformByMatrix3(t) {
            return ee(this, this, t),
            this.check()
        }
        transformByMatrix2(t) {
            return function(t, e, n) {
                const r = e[0]
                  , i = e[1];
                t[0] = n[0] * r + n[2] * i,
                t[1] = n[1] * r + n[3] * i,
                t[2] = e[2]
            }(this, this, t),
            this.check()
        }
        transformByQuaternion(t) {
            return ne(this, this, t),
            this.check()
        }
    }
    class be extends dt {
        static get ZERO() {
            return _e || (_e = new be(0,0,0,0),
            Object.freeze(_e)),
            _e
        }
        constructor(t=0, e=0, n=0, r=0) {
            super(-0, -0, -0, -0),
            ut(t) && 1 === arguments.length ? this.copy(t) : (at.debug && (lt(t),
            lt(e),
            lt(n),
            lt(r)),
            this[0] = t,
            this[1] = e,
            this[2] = n,
            this[3] = r)
        }
        set(t, e, n, r) {
            return this[0] = t,
            this[1] = e,
            this[2] = n,
            this[3] = r,
            this.check()
        }
        copy(t) {
            return this[0] = t[0],
            this[1] = t[1],
            this[2] = t[2],
            this[3] = t[3],
            this.check()
        }
        fromObject(t) {
            return at.debug && (lt(t.x),
            lt(t.y),
            lt(t.z),
            lt(t.w)),
            this[0] = t.x,
            this[1] = t.y,
            this[2] = t.z,
            this[3] = t.w,
            this
        }
        toObject(t) {
            return t.x = this[0],
            t.y = this[1],
            t.z = this[2],
            t.w = this[3],
            t
        }
        get ELEMENTS() {
            return 4
        }
        get z() {
            return this[2]
        }
        set z(t) {
            this[2] = lt(t)
        }
        get w() {
            return this[3]
        }
        set w(t) {
            this[3] = lt(t)
        }
        transform(t) {
            return te(this, this, t),
            this.check()
        }
        transformByMatrix3(t) {
            return function(t, e, n) {
                const r = e[0]
                  , i = e[1]
                  , o = e[2];
                t[0] = n[0] * r + n[3] * i + n[6] * o,
                t[1] = n[1] * r + n[4] * i + n[7] * o,
                t[2] = n[2] * r + n[5] * i + n[8] * o,
                t[3] = e[3]
            }(this, this, t),
            this.check()
        }
        transformByMatrix2(t) {
            return function(t, e, n) {
                const r = e[0]
                  , i = e[1];
                t[0] = n[0] * r + n[2] * i,
                t[1] = n[1] * r + n[3] * i,
                t[2] = e[2],
                t[3] = e[3]
            }(this, this, t),
            this.check()
        }
        transformByQuaternion(t) {
            return ne(this, this, t),
            this.check()
        }
        applyMatrix4(t) {
            return t.transform(this, this),
            this
        }
    }
    class Me extends ct {
        toString() {
            let t = "[";
            if (at.printRowMajor) {
                t += "row-major:";
                for (let e = 0; e < this.RANK; ++e)
                    for (let n = 0; n < this.RANK; ++n)
                        t += " ".concat(this[n * this.RANK + e])
            } else {
                t += "column-major:";
                for (let e = 0; e < this.ELEMENTS; ++e)
                    t += " ".concat(this[e])
            }
            return t += "]",
            t
        }
        getElementIndex(t, e) {
            return e * this.RANK + t
        }
        getElement(t, e) {
            return this[e * this.RANK + t]
        }
        setElement(t, e, n) {
            return this[e * this.RANK + t] = lt(n),
            this
        }
        getColumn(t, e=new Array(this.RANK) .fill(-0) ) {
            const n = t * this.RANK;
            for (let t = 0; t < this.RANK; ++t)
                e[t] = this[n + t];
            return e
        }
        setColumn(t, e) {
            const n = t * this.RANK;
            for (let t = 0; t < this.RANK; ++t)
                this[n + t] = e[t];
            return this
        }
    }
    function we() {
        var t = new vt(9);
        return vt != Float32Array && (t[1] = 0,
        t[2] = 0,
        t[3] = 0,
        t[5] = 0,
        t[6] = 0,
        t[7] = 0),
        t[0] = 1,
        t[4] = 1,
        t[8] = 1,
        t
    }
    function Ee(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2]
          , a = e[3]
          , s = e[4]
          , u = e[5]
          , h = e[6]
          , c = e[7]
          , l = e[8]
          , f = n[0]
          , d = n[1]
          , p = n[2]
          , v = n[3]
          , m = n[4]
          , g = n[5]
          , y = n[6]
          , _ = n[7]
          , x = n[8];
        return t[0] = f * r + d * a + p * h,
        t[1] = f * i + d * s + p * c,
        t[2] = f * o + d * u + p * l,
        t[3] = v * r + m * a + g * h,
        t[4] = v * i + m * s + g * c,
        t[5] = v * o + m * u + g * l,
        t[6] = y * r + _ * a + x * h,
        t[7] = y * i + _ * s + x * c,
        t[8] = y * o + _ * u + x * l,
        t
    }
    function Te(t, e, n) {
        return t[0] = e[0] - n[0],
        t[1] = e[1] - n[1],
        t[2] = e[2] - n[2],
        t[3] = e[3] - n[3],
        t[4] = e[4] - n[4],
        t[5] = e[5] - n[5],
        t[6] = e[6] - n[6],
        t[7] = e[7] - n[7],
        t[8] = e[8] - n[8],
        t
    }
    var Ae = Ee
      , Ce = Te
      , Re = Object.freeze({
        __proto__: null,
        create: we,
        fromMat4: function(t, e) {
            return t[0] = e[0],
            t[1] = e[1],
            t[2] = e[2],
            t[3] = e[4],
            t[4] = e[5],
            t[5] = e[6],
            t[6] = e[8],
            t[7] = e[9],
            t[8] = e[10],
            t
        },
        clone: function(t) {
            var e = new vt(9);
            return e[0] = t[0],
            e[1] = t[1],
            e[2] = t[2],
            e[3] = t[3],
            e[4] = t[4],
            e[5] = t[5],
            e[6] = t[6],
            e[7] = t[7],
            e[8] = t[8],
            e
        },
        copy: function(t, e) {
            return t[0] = e[0],
            t[1] = e[1],
            t[2] = e[2],
            t[3] = e[3],
            t[4] = e[4],
            t[5] = e[5],
            t[6] = e[6],
            t[7] = e[7],
            t[8] = e[8],
            t
        },
        fromValues: function(t, e, n, r, i, o, a, s, u) {
            var h = new vt(9);
            return h[0] = t,
            h[1] = e,
            h[2] = n,
            h[3] = r,
            h[4] = i,
            h[5] = o,
            h[6] = a,
            h[7] = s,
            h[8] = u,
            h
        },
        set: function(t, e, n, r, i, o, a, s, u, h) {
            return t[0] = e,
            t[1] = n,
            t[2] = r,
            t[3] = i,
            t[4] = o,
            t[5] = a,
            t[6] = s,
            t[7] = u,
            t[8] = h,
            t
        },
        identity: function(t) {
            return t[0] = 1,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 1,
            t[5] = 0,
            t[6] = 0,
            t[7] = 0,
            t[8] = 1,
            t
        },
        transpose: function(t, e) {
            if (t === e) {
                var n = e[1]
                  , r = e[2]
                  , i = e[5];
                t[1] = e[3],
                t[2] = e[6],
                t[3] = n,
                t[5] = e[7],
                t[6] = r,
                t[7] = i
            } else
                t[0] = e[0],
                t[1] = e[3],
                t[2] = e[6],
                t[3] = e[1],
                t[4] = e[4],
                t[5] = e[7],
                t[6] = e[2],
                t[7] = e[5],
                t[8] = e[8];
            return t
        },
        invert: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = e[2]
              , o = e[3]
              , a = e[4]
              , s = e[5]
              , u = e[6]
              , h = e[7]
              , c = e[8]
              , l = c * a - s * h
              , f = -c * o + s * u
              , d = h * o - a * u
              , p = n * l + r * f + i * d;
            return p ? (p = 1 / p,
            t[0] = l * p,
            t[1] = (-c * r + i * h) * p,
            t[2] = (s * r - i * a) * p,
            t[3] = f * p,
            t[4] = (c * n - i * u) * p,
            t[5] = (-s * n + i * o) * p,
            t[6] = d * p,
            t[7] = (-h * n + r * u) * p,
            t[8] = (a * n - r * o) * p,
            t) : null
        },
        adjoint: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = e[2]
              , o = e[3]
              , a = e[4]
              , s = e[5]
              , u = e[6]
              , h = e[7]
              , c = e[8];
            return t[0] = a * c - s * h,
            t[1] = i * h - r * c,
            t[2] = r * s - i * a,
            t[3] = s * u - o * c,
            t[4] = n * c - i * u,
            t[5] = i * o - n * s,
            t[6] = o * h - a * u,
            t[7] = r * u - n * h,
            t[8] = n * a - r * o,
            t
        },
        determinant: function(t) {
            var e = t[0]
              , n = t[1]
              , r = t[2]
              , i = t[3]
              , o = t[4]
              , a = t[5]
              , s = t[6]
              , u = t[7]
              , h = t[8];
            return e * (h * o - a * u) + n * (-h * i + a * s) + r * (u * i - o * s)
        },
        multiply: Ee,
        translate: function(t, e, n) {
            var r = e[0]
              , i = e[1]
              , o = e[2]
              , a = e[3]
              , s = e[4]
              , u = e[5]
              , h = e[6]
              , c = e[7]
              , l = e[8]
              , f = n[0]
              , d = n[1];
            return t[0] = r,
            t[1] = i,
            t[2] = o,
            t[3] = a,
            t[4] = s,
            t[5] = u,
            t[6] = f * r + d * a + h,
            t[7] = f * i + d * s + c,
            t[8] = f * o + d * u + l,
            t
        },
        rotate: function(t, e, n) {
            var r = e[0]
              , i = e[1]
              , o = e[2]
              , a = e[3]
              , s = e[4]
              , u = e[5]
              , h = e[6]
              , c = e[7]
              , l = e[8]
              , f = Math.sin(n)
              , d = Math.cos(n);
            return t[0] = d * r + f * a,
            t[1] = d * i + f * s,
            t[2] = d * o + f * u,
            t[3] = d * a - f * r,
            t[4] = d * s - f * i,
            t[5] = d * u - f * o,
            t[6] = h,
            t[7] = c,
            t[8] = l,
            t
        },
        scale: function(t, e, n) {
            var r = n[0]
              , i = n[1];
            return t[0] = r * e[0],
            t[1] = r * e[1],
            t[2] = r * e[2],
            t[3] = i * e[3],
            t[4] = i * e[4],
            t[5] = i * e[5],
            t[6] = e[6],
            t[7] = e[7],
            t[8] = e[8],
            t
        },
        fromTranslation: function(t, e) {
            return t[0] = 1,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 1,
            t[5] = 0,
            t[6] = e[0],
            t[7] = e[1],
            t[8] = 1,
            t
        },
        fromRotation: function(t, e) {
            var n = Math.sin(e)
              , r = Math.cos(e);
            return t[0] = r,
            t[1] = n,
            t[2] = 0,
            t[3] = -n,
            t[4] = r,
            t[5] = 0,
            t[6] = 0,
            t[7] = 0,
            t[8] = 1,
            t
        },
        fromScaling: function(t, e) {
            return t[0] = e[0],
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = e[1],
            t[5] = 0,
            t[6] = 0,
            t[7] = 0,
            t[8] = 1,
            t
        },
        fromMat2d: function(t, e) {
            return t[0] = e[0],
            t[1] = e[1],
            t[2] = 0,
            t[3] = e[2],
            t[4] = e[3],
            t[5] = 0,
            t[6] = e[4],
            t[7] = e[5],
            t[8] = 1,
            t
        },
        fromQuat: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = e[2]
              , o = e[3]
              , a = n + n
              , s = r + r
              , u = i + i
              , h = n * a
              , c = r * a
              , l = r * s
              , f = i * a
              , d = i * s
              , p = i * u
              , v = o * a
              , m = o * s
              , g = o * u;
            return t[0] = 1 - l - p,
            t[3] = c - g,
            t[6] = f + m,
            t[1] = c + g,
            t[4] = 1 - h - p,
            t[7] = d - v,
            t[2] = f - m,
            t[5] = d + v,
            t[8] = 1 - h - l,
            t
        },
        normalFromMat4: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = e[2]
              , o = e[3]
              , a = e[4]
              , s = e[5]
              , u = e[6]
              , h = e[7]
              , c = e[8]
              , l = e[9]
              , f = e[10]
              , d = e[11]
              , p = e[12]
              , v = e[13]
              , m = e[14]
              , g = e[15]
              , y = n * s - r * a
              , _ = n * u - i * a
              , x = n * h - o * a
              , b = r * u - i * s
              , M = r * h - o * s
              , w = i * h - o * u
              , E = c * v - l * p
              , T = c * m - f * p
              , A = c * g - d * p
              , C = l * m - f * v
              , R = l * g - d * v
              , S = f * g - d * m
              , P = y * S - _ * R + x * C + b * A - M * T + w * E;
            return P ? (P = 1 / P,
            t[0] = (s * S - u * R + h * C) * P,
            t[1] = (u * A - a * S - h * T) * P,
            t[2] = (a * R - s * A + h * E) * P,
            t[3] = (i * R - r * S - o * C) * P,
            t[4] = (n * S - i * A + o * T) * P,
            t[5] = (r * A - n * R - o * E) * P,
            t[6] = (v * w - m * M + g * b) * P,
            t[7] = (m * x - p * w - g * _) * P,
            t[8] = (p * M - v * x + g * y) * P,
            t) : null
        },
        projection: function(t, e, n) {
            return t[0] = 2 / e,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = -2 / n,
            t[5] = 0,
            t[6] = -1,
            t[7] = 1,
            t[8] = 1,
            t
        },
        str: function(t) {
            return "mat3(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ")"
        },
        frob: function(t) {
            return Math.hypot(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8])
        },
        add: function(t, e, n) {
            return t[0] = e[0] + n[0],
            t[1] = e[1] + n[1],
            t[2] = e[2] + n[2],
            t[3] = e[3] + n[3],
            t[4] = e[4] + n[4],
            t[5] = e[5] + n[5],
            t[6] = e[6] + n[6],
            t[7] = e[7] + n[7],
            t[8] = e[8] + n[8],
            t
        },
        subtract: Te,
        multiplyScalar: function(t, e, n) {
            return t[0] = e[0] * n,
            t[1] = e[1] * n,
            t[2] = e[2] * n,
            t[3] = e[3] * n,
            t[4] = e[4] * n,
            t[5] = e[5] * n,
            t[6] = e[6] * n,
            t[7] = e[7] * n,
            t[8] = e[8] * n,
            t
        },
        multiplyScalarAndAdd: function(t, e, n, r) {
            return t[0] = e[0] + n[0] * r,
            t[1] = e[1] + n[1] * r,
            t[2] = e[2] + n[2] * r,
            t[3] = e[3] + n[3] * r,
            t[4] = e[4] + n[4] * r,
            t[5] = e[5] + n[5] * r,
            t[6] = e[6] + n[6] * r,
            t[7] = e[7] + n[7] * r,
            t[8] = e[8] + n[8] * r,
            t
        },
        exactEquals: function(t, e) {
            return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3] && t[4] === e[4] && t[5] === e[5] && t[6] === e[6] && t[7] === e[7] && t[8] === e[8]
        },
        equals: function(t, e) {
            var n = t[0]
              , r = t[1]
              , i = t[2]
              , o = t[3]
              , a = t[4]
              , s = t[5]
              , u = t[6]
              , h = t[7]
              , c = t[8]
              , l = e[0]
              , f = e[1]
              , d = e[2]
              , p = e[3]
              , v = e[4]
              , m = e[5]
              , g = e[6]
              , y = e[7]
              , _ = e[8];
            return Math.abs(n - l) <= pt * Math.max(1, Math.abs(n), Math.abs(l)) && Math.abs(r - f) <= pt * Math.max(1, Math.abs(r), Math.abs(f)) && Math.abs(i - d) <= pt * Math.max(1, Math.abs(i), Math.abs(d)) && Math.abs(o - p) <= pt * Math.max(1, Math.abs(o), Math.abs(p)) && Math.abs(a - v) <= pt * Math.max(1, Math.abs(a), Math.abs(v)) && Math.abs(s - m) <= pt * Math.max(1, Math.abs(s), Math.abs(m)) && Math.abs(u - g) <= pt * Math.max(1, Math.abs(u), Math.abs(g)) && Math.abs(h - y) <= pt * Math.max(1, Math.abs(h), Math.abs(y)) && Math.abs(c - _) <= pt * Math.max(1, Math.abs(c), Math.abs(_))
        },
        mul: Ae,
        sub: Ce
    });
    function Se() {
        var t = new vt(16);
        return vt != Float32Array && (t[1] = 0,
        t[2] = 0,
        t[3] = 0,
        t[4] = 0,
        t[6] = 0,
        t[7] = 0,
        t[8] = 0,
        t[9] = 0,
        t[11] = 0,
        t[12] = 0,
        t[13] = 0,
        t[14] = 0),
        t[0] = 1,
        t[5] = 1,
        t[10] = 1,
        t[15] = 1,
        t
    }
    function Pe(t) {
        var e = new vt(16);
        return e[0] = t[0],
        e[1] = t[1],
        e[2] = t[2],
        e[3] = t[3],
        e[4] = t[4],
        e[5] = t[5],
        e[6] = t[6],
        e[7] = t[7],
        e[8] = t[8],
        e[9] = t[9],
        e[10] = t[10],
        e[11] = t[11],
        e[12] = t[12],
        e[13] = t[13],
        e[14] = t[14],
        e[15] = t[15],
        e
    }
    function De(t, e) {
        return t[0] = e[0],
        t[1] = e[1],
        t[2] = e[2],
        t[3] = e[3],
        t[4] = e[4],
        t[5] = e[5],
        t[6] = e[6],
        t[7] = e[7],
        t[8] = e[8],
        t[9] = e[9],
        t[10] = e[10],
        t[11] = e[11],
        t[12] = e[12],
        t[13] = e[13],
        t[14] = e[14],
        t[15] = e[15],
        t
    }
    function Oe(t) {
        return t[0] = 1,
        t[1] = 0,
        t[2] = 0,
        t[3] = 0,
        t[4] = 0,
        t[5] = 1,
        t[6] = 0,
        t[7] = 0,
        t[8] = 0,
        t[9] = 0,
        t[10] = 1,
        t[11] = 0,
        t[12] = 0,
        t[13] = 0,
        t[14] = 0,
        t[15] = 1,
        t
    }
    function Ie(t, e) {
        if (t === e) {
            var n = e[1]
              , r = e[2]
              , i = e[3]
              , o = e[6]
              , a = e[7]
              , s = e[11];
            t[1] = e[4],
            t[2] = e[8],
            t[3] = e[12],
            t[4] = n,
            t[6] = e[9],
            t[7] = e[13],
            t[8] = r,
            t[9] = o,
            t[11] = e[14],
            t[12] = i,
            t[13] = a,
            t[14] = s
        } else
            t[0] = e[0],
            t[1] = e[4],
            t[2] = e[8],
            t[3] = e[12],
            t[4] = e[1],
            t[5] = e[5],
            t[6] = e[9],
            t[7] = e[13],
            t[8] = e[2],
            t[9] = e[6],
            t[10] = e[10],
            t[11] = e[14],
            t[12] = e[3],
            t[13] = e[7],
            t[14] = e[11],
            t[15] = e[15];
        return t
    }
    function Le(t, e) {
        var n = e[0]
          , r = e[1]
          , i = e[2]
          , o = e[3]
          , a = e[4]
          , s = e[5]
          , u = e[6]
          , h = e[7]
          , c = e[8]
          , l = e[9]
          , f = e[10]
          , d = e[11]
          , p = e[12]
          , v = e[13]
          , m = e[14]
          , g = e[15]
          , y = n * s - r * a
          , _ = n * u - i * a
          , x = n * h - o * a
          , b = r * u - i * s
          , M = r * h - o * s
          , w = i * h - o * u
          , E = c * v - l * p
          , T = c * m - f * p
          , A = c * g - d * p
          , C = l * m - f * v
          , R = l * g - d * v
          , S = f * g - d * m
          , P = y * S - _ * R + x * C + b * A - M * T + w * E;
        return P ? (P = 1 / P,
        t[0] = (s * S - u * R + h * C) * P,
        t[1] = (i * R - r * S - o * C) * P,
        t[2] = (v * w - m * M + g * b) * P,
        t[3] = (f * M - l * w - d * b) * P,
        t[4] = (u * A - a * S - h * T) * P,
        t[5] = (n * S - i * A + o * T) * P,
        t[6] = (m * x - p * w - g * _) * P,
        t[7] = (c * w - f * x + d * _) * P,
        t[8] = (a * R - s * A + h * E) * P,
        t[9] = (r * A - n * R - o * E) * P,
        t[10] = (p * M - v * x + g * y) * P,
        t[11] = (l * x - c * M - d * y) * P,
        t[12] = (s * T - a * C - u * E) * P,
        t[13] = (n * C - r * T + i * E) * P,
        t[14] = (v * _ - p * b - m * y) * P,
        t[15] = (c * b - l * _ + f * y) * P,
        t) : null
    }
    function Be(t) {
        var e = t[0]
          , n = t[1]
          , r = t[2]
          , i = t[3]
          , o = t[4]
          , a = t[5]
          , s = t[6]
          , u = t[7]
          , h = t[8]
          , c = t[9]
          , l = t[10]
          , f = t[11]
          , d = t[12]
          , p = t[13]
          , v = t[14]
          , m = t[15];
        return (e * a - n * o) * (l * m - f * v) - (e * s - r * o) * (c * m - f * p) + (e * u - i * o) * (c * v - l * p) + (n * s - r * a) * (h * m - f * d) - (n * u - i * a) * (h * v - l * d) + (r * u - i * s) * (h * p - c * d)
    }
    function ke(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2]
          , a = e[3]
          , s = e[4]
          , u = e[5]
          , h = e[6]
          , c = e[7]
          , l = e[8]
          , f = e[9]
          , d = e[10]
          , p = e[11]
          , v = e[12]
          , m = e[13]
          , g = e[14]
          , y = e[15]
          , _ = n[0]
          , x = n[1]
          , b = n[2]
          , M = n[3];
        return t[0] = _ * r + x * s + b * l + M * v,
        t[1] = _ * i + x * u + b * f + M * m,
        t[2] = _ * o + x * h + b * d + M * g,
        t[3] = _ * a + x * c + b * p + M * y,
        _ = n[4],
        x = n[5],
        b = n[6],
        M = n[7],
        t[4] = _ * r + x * s + b * l + M * v,
        t[5] = _ * i + x * u + b * f + M * m,
        t[6] = _ * o + x * h + b * d + M * g,
        t[7] = _ * a + x * c + b * p + M * y,
        _ = n[8],
        x = n[9],
        b = n[10],
        M = n[11],
        t[8] = _ * r + x * s + b * l + M * v,
        t[9] = _ * i + x * u + b * f + M * m,
        t[10] = _ * o + x * h + b * d + M * g,
        t[11] = _ * a + x * c + b * p + M * y,
        _ = n[12],
        x = n[13],
        b = n[14],
        M = n[15],
        t[12] = _ * r + x * s + b * l + M * v,
        t[13] = _ * i + x * u + b * f + M * m,
        t[14] = _ * o + x * h + b * d + M * g,
        t[15] = _ * a + x * c + b * p + M * y,
        t
    }
    function Ue(t, e, n) {
        var r, i, o, a, s, u, h, c, l, f, d, p, v = n[0], m = n[1], g = n[2];
        return e === t ? (t[12] = e[0] * v + e[4] * m + e[8] * g + e[12],
        t[13] = e[1] * v + e[5] * m + e[9] * g + e[13],
        t[14] = e[2] * v + e[6] * m + e[10] * g + e[14],
        t[15] = e[3] * v + e[7] * m + e[11] * g + e[15]) : (r = e[0],
        i = e[1],
        o = e[2],
        a = e[3],
        s = e[4],
        u = e[5],
        h = e[6],
        c = e[7],
        l = e[8],
        f = e[9],
        d = e[10],
        p = e[11],
        t[0] = r,
        t[1] = i,
        t[2] = o,
        t[3] = a,
        t[4] = s,
        t[5] = u,
        t[6] = h,
        t[7] = c,
        t[8] = l,
        t[9] = f,
        t[10] = d,
        t[11] = p,
        t[12] = r * v + s * m + l * g + e[12],
        t[13] = i * v + u * m + f * g + e[13],
        t[14] = o * v + h * m + d * g + e[14],
        t[15] = a * v + c * m + p * g + e[15]),
        t
    }
    function Ne(t, e, n) {
        var r = n[0]
          , i = n[1]
          , o = n[2];
        return t[0] = e[0] * r,
        t[1] = e[1] * r,
        t[2] = e[2] * r,
        t[3] = e[3] * r,
        t[4] = e[4] * i,
        t[5] = e[5] * i,
        t[6] = e[6] * i,
        t[7] = e[7] * i,
        t[8] = e[8] * o,
        t[9] = e[9] * o,
        t[10] = e[10] * o,
        t[11] = e[11] * o,
        t[12] = e[12],
        t[13] = e[13],
        t[14] = e[14],
        t[15] = e[15],
        t
    }
    function Fe(t, e, n, r) {
        var i, o, a, s, u, h, c, l, f, d, p, v, m, g, y, _, x, b, M, w, E, T, A, C, R = r[0], S = r[1], P = r[2], D = Math.hypot(R, S, P);
        return D < pt ? null : (R *= D = 1 / D,
        S *= D,
        P *= D,
        i = Math.sin(n),
        a = 1 - (o = Math.cos(n)),
        s = e[0],
        u = e[1],
        h = e[2],
        c = e[3],
        l = e[4],
        f = e[5],
        d = e[6],
        p = e[7],
        v = e[8],
        m = e[9],
        g = e[10],
        y = e[11],
        _ = R * R * a + o,
        x = S * R * a + P * i,
        b = P * R * a - S * i,
        M = R * S * a - P * i,
        w = S * S * a + o,
        E = P * S * a + R * i,
        T = R * P * a + S * i,
        A = S * P * a - R * i,
        C = P * P * a + o,
        t[0] = s * _ + l * x + v * b,
        t[1] = u * _ + f * x + m * b,
        t[2] = h * _ + d * x + g * b,
        t[3] = c * _ + p * x + y * b,
        t[4] = s * M + l * w + v * E,
        t[5] = u * M + f * w + m * E,
        t[6] = h * M + d * w + g * E,
        t[7] = c * M + p * w + y * E,
        t[8] = s * T + l * A + v * C,
        t[9] = u * T + f * A + m * C,
        t[10] = h * T + d * A + g * C,
        t[11] = c * T + p * A + y * C,
        e !== t && (t[12] = e[12],
        t[13] = e[13],
        t[14] = e[14],
        t[15] = e[15]),
        t)
    }
    function je(t, e, n) {
        var r = Math.sin(n)
          , i = Math.cos(n)
          , o = e[4]
          , a = e[5]
          , s = e[6]
          , u = e[7]
          , h = e[8]
          , c = e[9]
          , l = e[10]
          , f = e[11];
        return e !== t && (t[0] = e[0],
        t[1] = e[1],
        t[2] = e[2],
        t[3] = e[3],
        t[12] = e[12],
        t[13] = e[13],
        t[14] = e[14],
        t[15] = e[15]),
        t[4] = o * i + h * r,
        t[5] = a * i + c * r,
        t[6] = s * i + l * r,
        t[7] = u * i + f * r,
        t[8] = h * i - o * r,
        t[9] = c * i - a * r,
        t[10] = l * i - s * r,
        t[11] = f * i - u * r,
        t
    }
    function ze(t, e, n) {
        var r = Math.sin(n)
          , i = Math.cos(n)
          , o = e[0]
          , a = e[1]
          , s = e[2]
          , u = e[3]
          , h = e[8]
          , c = e[9]
          , l = e[10]
          , f = e[11];
        return e !== t && (t[4] = e[4],
        t[5] = e[5],
        t[6] = e[6],
        t[7] = e[7],
        t[12] = e[12],
        t[13] = e[13],
        t[14] = e[14],
        t[15] = e[15]),
        t[0] = o * i - h * r,
        t[1] = a * i - c * r,
        t[2] = s * i - l * r,
        t[3] = u * i - f * r,
        t[8] = o * r + h * i,
        t[9] = a * r + c * i,
        t[10] = s * r + l * i,
        t[11] = u * r + f * i,
        t
    }
    function Ve(t, e, n) {
        var r = Math.sin(n)
          , i = Math.cos(n)
          , o = e[0]
          , a = e[1]
          , s = e[2]
          , u = e[3]
          , h = e[4]
          , c = e[5]
          , l = e[6]
          , f = e[7];
        return e !== t && (t[8] = e[8],
        t[9] = e[9],
        t[10] = e[10],
        t[11] = e[11],
        t[12] = e[12],
        t[13] = e[13],
        t[14] = e[14],
        t[15] = e[15]),
        t[0] = o * i + h * r,
        t[1] = a * i + c * r,
        t[2] = s * i + l * r,
        t[3] = u * i + f * r,
        t[4] = h * i - o * r,
        t[5] = c * i - a * r,
        t[6] = l * i - s * r,
        t[7] = f * i - u * r,
        t
    }
    function Ge(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2]
          , a = e[3]
          , s = r + r
          , u = i + i
          , h = o + o
          , c = r * s
          , l = r * u
          , f = r * h
          , d = i * u
          , p = i * h
          , v = o * h
          , m = a * s
          , g = a * u
          , y = a * h;
        return t[0] = 1 - (d + v),
        t[1] = l + y,
        t[2] = f - g,
        t[3] = 0,
        t[4] = l - y,
        t[5] = 1 - (c + v),
        t[6] = p + m,
        t[7] = 0,
        t[8] = f + g,
        t[9] = p - m,
        t[10] = 1 - (c + d),
        t[11] = 0,
        t[12] = n[0],
        t[13] = n[1],
        t[14] = n[2],
        t[15] = 1,
        t
    }
    function We(t, e) {
        var n = e[0]
          , r = e[1]
          , i = e[2]
          , o = e[4]
          , a = e[5]
          , s = e[6]
          , u = e[8]
          , h = e[9]
          , c = e[10];
        return t[0] = Math.hypot(n, r, i),
        t[1] = Math.hypot(o, a, s),
        t[2] = Math.hypot(u, h, c),
        t
    }
    function He(t, e) {
        var n = new vt(3);
        We(n, e);
        var r = 1 / n[0]
          , i = 1 / n[1]
          , o = 1 / n[2]
          , a = e[0] * r
          , s = e[1] * i
          , u = e[2] * o
          , h = e[4] * r
          , c = e[5] * i
          , l = e[6] * o
          , f = e[8] * r
          , d = e[9] * i
          , p = e[10] * o
          , v = a + c + p
          , m = 0;
        return v > 0 ? (m = 2 * Math.sqrt(v + 1),
        t[3] = .25 * m,
        t[0] = (l - d) / m,
        t[1] = (f - u) / m,
        t[2] = (s - h) / m) : a > c && a > p ? (m = 2 * Math.sqrt(1 + a - c - p),
        t[3] = (l - d) / m,
        t[0] = .25 * m,
        t[1] = (s + h) / m,
        t[2] = (f + u) / m) : c > p ? (m = 2 * Math.sqrt(1 + c - a - p),
        t[3] = (f - u) / m,
        t[0] = (s + h) / m,
        t[1] = .25 * m,
        t[2] = (l + d) / m) : (m = 2 * Math.sqrt(1 + p - a - c),
        t[3] = (s - h) / m,
        t[0] = (f + u) / m,
        t[1] = (l + d) / m,
        t[2] = .25 * m),
        t
    }
    function Ze(t, e, n, r) {
        var i = e[0]
          , o = e[1]
          , a = e[2]
          , s = e[3]
          , u = i + i
          , h = o + o
          , c = a + a
          , l = i * u
          , f = i * h
          , d = i * c
          , p = o * h
          , v = o * c
          , m = a * c
          , g = s * u
          , y = s * h
          , _ = s * c
          , x = r[0]
          , b = r[1]
          , M = r[2];
        return t[0] = (1 - (p + m)) * x,
        t[1] = (f + _) * x,
        t[2] = (d - y) * x,
        t[3] = 0,
        t[4] = (f - _) * b,
        t[5] = (1 - (l + m)) * b,
        t[6] = (v + g) * b,
        t[7] = 0,
        t[8] = (d + y) * M,
        t[9] = (v - g) * M,
        t[10] = (1 - (l + p)) * M,
        t[11] = 0,
        t[12] = n[0],
        t[13] = n[1],
        t[14] = n[2],
        t[15] = 1,
        t
    }
    function qe(t, e) {
        var n = e[0]
          , r = e[1]
          , i = e[2]
          , o = e[3]
          , a = n + n
          , s = r + r
          , u = i + i
          , h = n * a
          , c = r * a
          , l = r * s
          , f = i * a
          , d = i * s
          , p = i * u
          , v = o * a
          , m = o * s
          , g = o * u;
        return t[0] = 1 - l - p,
        t[1] = c + g,
        t[2] = f - m,
        t[3] = 0,
        t[4] = c - g,
        t[5] = 1 - h - p,
        t[6] = d + v,
        t[7] = 0,
        t[8] = f + m,
        t[9] = d - v,
        t[10] = 1 - h - l,
        t[11] = 0,
        t[12] = 0,
        t[13] = 0,
        t[14] = 0,
        t[15] = 1,
        t
    }
    function Ye(t, e, n, r, i, o, a) {
        var s = 1 / (n - e)
          , u = 1 / (i - r)
          , h = 1 / (o - a);
        return t[0] = 2 * o * s,
        t[1] = 0,
        t[2] = 0,
        t[3] = 0,
        t[4] = 0,
        t[5] = 2 * o * u,
        t[6] = 0,
        t[7] = 0,
        t[8] = (n + e) * s,
        t[9] = (i + r) * u,
        t[10] = (a + o) * h,
        t[11] = -1,
        t[12] = 0,
        t[13] = 0,
        t[14] = a * o * 2 * h,
        t[15] = 0,
        t
    }
    function Xe(t, e, n, r, i) {
        var o, a = 1 / Math.tan(e / 2);
        return t[0] = a / n,
        t[1] = 0,
        t[2] = 0,
        t[3] = 0,
        t[4] = 0,
        t[5] = a,
        t[6] = 0,
        t[7] = 0,
        t[8] = 0,
        t[9] = 0,
        t[11] = -1,
        t[12] = 0,
        t[13] = 0,
        t[15] = 0,
        null != i && i !== 1 / 0 ? (o = 1 / (r - i),
        t[10] = (i + r) * o,
        t[14] = 2 * i * r * o) : (t[10] = -1,
        t[14] = -2 * r),
        t
    }
    var Ke = Xe;
    function Qe(t, e, n, r, i, o, a) {
        var s = 1 / (e - n)
          , u = 1 / (r - i)
          , h = 1 / (o - a);
        return t[0] = -2 * s,
        t[1] = 0,
        t[2] = 0,
        t[3] = 0,
        t[4] = 0,
        t[5] = -2 * u,
        t[6] = 0,
        t[7] = 0,
        t[8] = 0,
        t[9] = 0,
        t[10] = 2 * h,
        t[11] = 0,
        t[12] = (e + n) * s,
        t[13] = (i + r) * u,
        t[14] = (a + o) * h,
        t[15] = 1,
        t
    }
    var Je = Qe;
    function $e(t, e, n, r) {
        var i, o, a, s, u, h, c, l, f, d, p = e[0], v = e[1], m = e[2], g = r[0], y = r[1], _ = r[2], x = n[0], b = n[1], M = n[2];
        return Math.abs(p - x) < pt && Math.abs(v - b) < pt && Math.abs(m - M) < pt ? Oe(t) : (c = p - x,
        l = v - b,
        f = m - M,
        i = y * (f *= d = 1 / Math.hypot(c, l, f)) - _ * (l *= d),
        o = _ * (c *= d) - g * f,
        a = g * l - y * c,
        (d = Math.hypot(i, o, a)) ? (i *= d = 1 / d,
        o *= d,
        a *= d) : (i = 0,
        o = 0,
        a = 0),
        s = l * a - f * o,
        u = f * i - c * a,
        h = c * o - l * i,
        (d = Math.hypot(s, u, h)) ? (s *= d = 1 / d,
        u *= d,
        h *= d) : (s = 0,
        u = 0,
        h = 0),
        t[0] = i,
        t[1] = s,
        t[2] = c,
        t[3] = 0,
        t[4] = o,
        t[5] = u,
        t[6] = l,
        t[7] = 0,
        t[8] = a,
        t[9] = h,
        t[10] = f,
        t[11] = 0,
        t[12] = -(i * p + o * v + a * m),
        t[13] = -(s * p + u * v + h * m),
        t[14] = -(c * p + l * v + f * m),
        t[15] = 1,
        t)
    }
    function tn(t, e, n, r) {
        var i = e[0]
          , o = e[1]
          , a = e[2]
          , s = r[0]
          , u = r[1]
          , h = r[2]
          , c = i - n[0]
          , l = o - n[1]
          , f = a - n[2]
          , d = c * c + l * l + f * f;
        d > 0 && (c *= d = 1 / Math.sqrt(d),
        l *= d,
        f *= d);
        var p = u * f - h * l
          , v = h * c - s * f
          , m = s * l - u * c;
        return (d = p * p + v * v + m * m) > 0 && (p *= d = 1 / Math.sqrt(d),
        v *= d,
        m *= d),
        t[0] = p,
        t[1] = v,
        t[2] = m,
        t[3] = 0,
        t[4] = l * m - f * v,
        t[5] = f * p - c * m,
        t[6] = c * v - l * p,
        t[7] = 0,
        t[8] = c,
        t[9] = l,
        t[10] = f,
        t[11] = 0,
        t[12] = i,
        t[13] = o,
        t[14] = a,
        t[15] = 1,
        t
    }
    function en(t, e, n) {
        return t[0] = e[0] - n[0],
        t[1] = e[1] - n[1],
        t[2] = e[2] - n[2],
        t[3] = e[3] - n[3],
        t[4] = e[4] - n[4],
        t[5] = e[5] - n[5],
        t[6] = e[6] - n[6],
        t[7] = e[7] - n[7],
        t[8] = e[8] - n[8],
        t[9] = e[9] - n[9],
        t[10] = e[10] - n[10],
        t[11] = e[11] - n[11],
        t[12] = e[12] - n[12],
        t[13] = e[13] - n[13],
        t[14] = e[14] - n[14],
        t[15] = e[15] - n[15],
        t
    }
    var nn = ke
      , rn = en
      , on = Object.freeze({
        __proto__: null,
        create: Se,
        clone: Pe,
        copy: De,
        fromValues: function(t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v) {
            var m = new vt(16);
            return m[0] = t,
            m[1] = e,
            m[2] = n,
            m[3] = r,
            m[4] = i,
            m[5] = o,
            m[6] = a,
            m[7] = s,
            m[8] = u,
            m[9] = h,
            m[10] = c,
            m[11] = l,
            m[12] = f,
            m[13] = d,
            m[14] = p,
            m[15] = v,
            m
        },
        set: function(t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v, m) {
            return t[0] = e,
            t[1] = n,
            t[2] = r,
            t[3] = i,
            t[4] = o,
            t[5] = a,
            t[6] = s,
            t[7] = u,
            t[8] = h,
            t[9] = c,
            t[10] = l,
            t[11] = f,
            t[12] = d,
            t[13] = p,
            t[14] = v,
            t[15] = m,
            t
        },
        identity: Oe,
        transpose: Ie,
        invert: Le,
        adjoint: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = e[2]
              , o = e[3]
              , a = e[4]
              , s = e[5]
              , u = e[6]
              , h = e[7]
              , c = e[8]
              , l = e[9]
              , f = e[10]
              , d = e[11]
              , p = e[12]
              , v = e[13]
              , m = e[14]
              , g = e[15];
            return t[0] = s * (f * g - d * m) - l * (u * g - h * m) + v * (u * d - h * f),
            t[1] = -(r * (f * g - d * m) - l * (i * g - o * m) + v * (i * d - o * f)),
            t[2] = r * (u * g - h * m) - s * (i * g - o * m) + v * (i * h - o * u),
            t[3] = -(r * (u * d - h * f) - s * (i * d - o * f) + l * (i * h - o * u)),
            t[4] = -(a * (f * g - d * m) - c * (u * g - h * m) + p * (u * d - h * f)),
            t[5] = n * (f * g - d * m) - c * (i * g - o * m) + p * (i * d - o * f),
            t[6] = -(n * (u * g - h * m) - a * (i * g - o * m) + p * (i * h - o * u)),
            t[7] = n * (u * d - h * f) - a * (i * d - o * f) + c * (i * h - o * u),
            t[8] = a * (l * g - d * v) - c * (s * g - h * v) + p * (s * d - h * l),
            t[9] = -(n * (l * g - d * v) - c * (r * g - o * v) + p * (r * d - o * l)),
            t[10] = n * (s * g - h * v) - a * (r * g - o * v) + p * (r * h - o * s),
            t[11] = -(n * (s * d - h * l) - a * (r * d - o * l) + c * (r * h - o * s)),
            t[12] = -(a * (l * m - f * v) - c * (s * m - u * v) + p * (s * f - u * l)),
            t[13] = n * (l * m - f * v) - c * (r * m - i * v) + p * (r * f - i * l),
            t[14] = -(n * (s * m - u * v) - a * (r * m - i * v) + p * (r * u - i * s)),
            t[15] = n * (s * f - u * l) - a * (r * f - i * l) + c * (r * u - i * s),
            t
        },
        determinant: Be,
        multiply: ke,
        translate: Ue,
        scale: Ne,
        rotate: Fe,
        rotateX: je,
        rotateY: ze,
        rotateZ: Ve,
        fromTranslation: function(t, e) {
            return t[0] = 1,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 0,
            t[5] = 1,
            t[6] = 0,
            t[7] = 0,
            t[8] = 0,
            t[9] = 0,
            t[10] = 1,
            t[11] = 0,
            t[12] = e[0],
            t[13] = e[1],
            t[14] = e[2],
            t[15] = 1,
            t
        },
        fromScaling: function(t, e) {
            return t[0] = e[0],
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 0,
            t[5] = e[1],
            t[6] = 0,
            t[7] = 0,
            t[8] = 0,
            t[9] = 0,
            t[10] = e[2],
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            t
        },
        fromRotation: function(t, e, n) {
            var r, i, o, a = n[0], s = n[1], u = n[2], h = Math.hypot(a, s, u);
            return h < pt ? null : (a *= h = 1 / h,
            s *= h,
            u *= h,
            r = Math.sin(e),
            o = 1 - (i = Math.cos(e)),
            t[0] = a * a * o + i,
            t[1] = s * a * o + u * r,
            t[2] = u * a * o - s * r,
            t[3] = 0,
            t[4] = a * s * o - u * r,
            t[5] = s * s * o + i,
            t[6] = u * s * o + a * r,
            t[7] = 0,
            t[8] = a * u * o + s * r,
            t[9] = s * u * o - a * r,
            t[10] = u * u * o + i,
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            t)
        },
        fromXRotation: function(t, e) {
            var n = Math.sin(e)
              , r = Math.cos(e);
            return t[0] = 1,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 0,
            t[5] = r,
            t[6] = n,
            t[7] = 0,
            t[8] = 0,
            t[9] = -n,
            t[10] = r,
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            t
        },
        fromYRotation: function(t, e) {
            var n = Math.sin(e)
              , r = Math.cos(e);
            return t[0] = r,
            t[1] = 0,
            t[2] = -n,
            t[3] = 0,
            t[4] = 0,
            t[5] = 1,
            t[6] = 0,
            t[7] = 0,
            t[8] = n,
            t[9] = 0,
            t[10] = r,
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            t
        },
        fromZRotation: function(t, e) {
            var n = Math.sin(e)
              , r = Math.cos(e);
            return t[0] = r,
            t[1] = n,
            t[2] = 0,
            t[3] = 0,
            t[4] = -n,
            t[5] = r,
            t[6] = 0,
            t[7] = 0,
            t[8] = 0,
            t[9] = 0,
            t[10] = 1,
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            t
        },
        fromRotationTranslation: Ge,
        fromQuat2: function(t, e) {
            var n = new vt(3)
              , r = -e[0]
              , i = -e[1]
              , o = -e[2]
              , a = e[3]
              , s = e[4]
              , u = e[5]
              , h = e[6]
              , c = e[7]
              , l = r * r + i * i + o * o + a * a;
            return l > 0 ? (n[0] = 2 * (s * a + c * r + u * o - h * i) / l,
            n[1] = 2 * (u * a + c * i + h * r - s * o) / l,
            n[2] = 2 * (h * a + c * o + s * i - u * r) / l) : (n[0] = 2 * (s * a + c * r + u * o - h * i),
            n[1] = 2 * (u * a + c * i + h * r - s * o),
            n[2] = 2 * (h * a + c * o + s * i - u * r)),
            Ge(t, e, n),
            t
        },
        getTranslation: function(t, e) {
            return t[0] = e[12],
            t[1] = e[13],
            t[2] = e[14],
            t
        },
        getScaling: We,
        getRotation: He,
        fromRotationTranslationScale: Ze,
        fromRotationTranslationScaleOrigin: function(t, e, n, r, i) {
            var o = e[0]
              , a = e[1]
              , s = e[2]
              , u = e[3]
              , h = o + o
              , c = a + a
              , l = s + s
              , f = o * h
              , d = o * c
              , p = o * l
              , v = a * c
              , m = a * l
              , g = s * l
              , y = u * h
              , _ = u * c
              , x = u * l
              , b = r[0]
              , M = r[1]
              , w = r[2]
              , E = i[0]
              , T = i[1]
              , A = i[2]
              , C = (1 - (v + g)) * b
              , R = (d + x) * b
              , S = (p - _) * b
              , P = (d - x) * M
              , D = (1 - (f + g)) * M
              , O = (m + y) * M
              , I = (p + _) * w
              , L = (m - y) * w
              , B = (1 - (f + v)) * w;
            return t[0] = C,
            t[1] = R,
            t[2] = S,
            t[3] = 0,
            t[4] = P,
            t[5] = D,
            t[6] = O,
            t[7] = 0,
            t[8] = I,
            t[9] = L,
            t[10] = B,
            t[11] = 0,
            t[12] = n[0] + E - (C * E + P * T + I * A),
            t[13] = n[1] + T - (R * E + D * T + L * A),
            t[14] = n[2] + A - (S * E + O * T + B * A),
            t[15] = 1,
            t
        },
        fromQuat: qe,
        frustum: Ye,
        perspectiveNO: Xe,
        perspective: Ke,
        perspectiveZO: function(t, e, n, r, i) {
            var o, a = 1 / Math.tan(e / 2);
            return t[0] = a / n,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 0,
            t[5] = a,
            t[6] = 0,
            t[7] = 0,
            t[8] = 0,
            t[9] = 0,
            t[11] = -1,
            t[12] = 0,
            t[13] = 0,
            t[15] = 0,
            null != i && i !== 1 / 0 ? (o = 1 / (r - i),
            t[10] = i * o,
            t[14] = i * r * o) : (t[10] = -1,
            t[14] = -r),
            t
        },
        perspectiveFromFieldOfView: function(t, e, n, r) {
            var i = Math.tan(e.upDegrees * Math.PI / 180)
              , o = Math.tan(e.downDegrees * Math.PI / 180)
              , a = Math.tan(e.leftDegrees * Math.PI / 180)
              , s = Math.tan(e.rightDegrees * Math.PI / 180)
              , u = 2 / (a + s)
              , h = 2 / (i + o);
            return t[0] = u,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 0,
            t[5] = h,
            t[6] = 0,
            t[7] = 0,
            t[8] = -(a - s) * u * .5,
            t[9] = (i - o) * h * .5,
            t[10] = r / (n - r),
            t[11] = -1,
            t[12] = 0,
            t[13] = 0,
            t[14] = r * n / (n - r),
            t[15] = 0,
            t
        },
        orthoNO: Qe,
        ortho: Je,
        orthoZO: function(t, e, n, r, i, o, a) {
            var s = 1 / (e - n)
              , u = 1 / (r - i)
              , h = 1 / (o - a);
            return t[0] = -2 * s,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t[4] = 0,
            t[5] = -2 * u,
            t[6] = 0,
            t[7] = 0,
            t[8] = 0,
            t[9] = 0,
            t[10] = h,
            t[11] = 0,
            t[12] = (e + n) * s,
            t[13] = (i + r) * u,
            t[14] = o * h,
            t[15] = 1,
            t
        },
        lookAt: $e,
        targetTo: tn,
        str: function(t) {
            return "mat4(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ", " + t[9] + ", " + t[10] + ", " + t[11] + ", " + t[12] + ", " + t[13] + ", " + t[14] + ", " + t[15] + ")"
        },
        frob: function(t) {
            return Math.hypot(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15])
        },
        add: function(t, e, n) {
            return t[0] = e[0] + n[0],
            t[1] = e[1] + n[1],
            t[2] = e[2] + n[2],
            t[3] = e[3] + n[3],
            t[4] = e[4] + n[4],
            t[5] = e[5] + n[5],
            t[6] = e[6] + n[6],
            t[7] = e[7] + n[7],
            t[8] = e[8] + n[8],
            t[9] = e[9] + n[9],
            t[10] = e[10] + n[10],
            t[11] = e[11] + n[11],
            t[12] = e[12] + n[12],
            t[13] = e[13] + n[13],
            t[14] = e[14] + n[14],
            t[15] = e[15] + n[15],
            t
        },
        subtract: en,
        multiplyScalar: function(t, e, n) {
            return t[0] = e[0] * n,
            t[1] = e[1] * n,
            t[2] = e[2] * n,
            t[3] = e[3] * n,
            t[4] = e[4] * n,
            t[5] = e[5] * n,
            t[6] = e[6] * n,
            t[7] = e[7] * n,
            t[8] = e[8] * n,
            t[9] = e[9] * n,
            t[10] = e[10] * n,
            t[11] = e[11] * n,
            t[12] = e[12] * n,
            t[13] = e[13] * n,
            t[14] = e[14] * n,
            t[15] = e[15] * n,
            t
        },
        multiplyScalarAndAdd: function(t, e, n, r) {
            return t[0] = e[0] + n[0] * r,
            t[1] = e[1] + n[1] * r,
            t[2] = e[2] + n[2] * r,
            t[3] = e[3] + n[3] * r,
            t[4] = e[4] + n[4] * r,
            t[5] = e[5] + n[5] * r,
            t[6] = e[6] + n[6] * r,
            t[7] = e[7] + n[7] * r,
            t[8] = e[8] + n[8] * r,
            t[9] = e[9] + n[9] * r,
            t[10] = e[10] + n[10] * r,
            t[11] = e[11] + n[11] * r,
            t[12] = e[12] + n[12] * r,
            t[13] = e[13] + n[13] * r,
            t[14] = e[14] + n[14] * r,
            t[15] = e[15] + n[15] * r,
            t
        },
        exactEquals: function(t, e) {
            return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3] && t[4] === e[4] && t[5] === e[5] && t[6] === e[6] && t[7] === e[7] && t[8] === e[8] && t[9] === e[9] && t[10] === e[10] && t[11] === e[11] && t[12] === e[12] && t[13] === e[13] && t[14] === e[14] && t[15] === e[15]
        },
        equals: function(t, e) {
            var n = t[0]
              , r = t[1]
              , i = t[2]
              , o = t[3]
              , a = t[4]
              , s = t[5]
              , u = t[6]
              , h = t[7]
              , c = t[8]
              , l = t[9]
              , f = t[10]
              , d = t[11]
              , p = t[12]
              , v = t[13]
              , m = t[14]
              , g = t[15]
              , y = e[0]
              , _ = e[1]
              , x = e[2]
              , b = e[3]
              , M = e[4]
              , w = e[5]
              , E = e[6]
              , T = e[7]
              , A = e[8]
              , C = e[9]
              , R = e[10]
              , S = e[11]
              , P = e[12]
              , D = e[13]
              , O = e[14]
              , I = e[15];
            return Math.abs(n - y) <= pt * Math.max(1, Math.abs(n), Math.abs(y)) && Math.abs(r - _) <= pt * Math.max(1, Math.abs(r), Math.abs(_)) && Math.abs(i - x) <= pt * Math.max(1, Math.abs(i), Math.abs(x)) && Math.abs(o - b) <= pt * Math.max(1, Math.abs(o), Math.abs(b)) && Math.abs(a - M) <= pt * Math.max(1, Math.abs(a), Math.abs(M)) && Math.abs(s - w) <= pt * Math.max(1, Math.abs(s), Math.abs(w)) && Math.abs(u - E) <= pt * Math.max(1, Math.abs(u), Math.abs(E)) && Math.abs(h - T) <= pt * Math.max(1, Math.abs(h), Math.abs(T)) && Math.abs(c - A) <= pt * Math.max(1, Math.abs(c), Math.abs(A)) && Math.abs(l - C) <= pt * Math.max(1, Math.abs(l), Math.abs(C)) && Math.abs(f - R) <= pt * Math.max(1, Math.abs(f), Math.abs(R)) && Math.abs(d - S) <= pt * Math.max(1, Math.abs(d), Math.abs(S)) && Math.abs(p - P) <= pt * Math.max(1, Math.abs(p), Math.abs(P)) && Math.abs(v - D) <= pt * Math.max(1, Math.abs(v), Math.abs(D)) && Math.abs(m - O) <= pt * Math.max(1, Math.abs(m), Math.abs(O)) && Math.abs(g - I) <= pt * Math.max(1, Math.abs(g), Math.abs(I))
        },
        mul: nn,
        sub: rn
    });
    function an() {
        var t = new vt(4);
        return vt != Float32Array && (t[0] = 0,
        t[1] = 0,
        t[2] = 0,
        t[3] = 0),
        t
    }
    function sn(t) {
        var e = new vt(4);
        return e[0] = t[0],
        e[1] = t[1],
        e[2] = t[2],
        e[3] = t[3],
        e
    }
    function un(t, e, n, r) {
        var i = new vt(4);
        return i[0] = t,
        i[1] = e,
        i[2] = n,
        i[3] = r,
        i
    }
    function hn(t, e) {
        return t[0] = e[0],
        t[1] = e[1],
        t[2] = e[2],
        t[3] = e[3],
        t
    }
    function cn(t, e, n, r, i) {
        return t[0] = e,
        t[1] = n,
        t[2] = r,
        t[3] = i,
        t
    }
    function ln(t, e, n) {
        return t[0] = e[0] + n[0],
        t[1] = e[1] + n[1],
        t[2] = e[2] + n[2],
        t[3] = e[3] + n[3],
        t
    }
    function fn(t, e, n) {
        return t[0] = e[0] - n[0],
        t[1] = e[1] - n[1],
        t[2] = e[2] - n[2],
        t[3] = e[3] - n[3],
        t
    }
    function dn(t, e, n) {
        return t[0] = e[0] * n[0],
        t[1] = e[1] * n[1],
        t[2] = e[2] * n[2],
        t[3] = e[3] * n[3],
        t
    }
    function pn(t, e, n) {
        return t[0] = e[0] / n[0],
        t[1] = e[1] / n[1],
        t[2] = e[2] / n[2],
        t[3] = e[3] / n[3],
        t
    }
    function vn(t, e, n) {
        return t[0] = e[0] * n,
        t[1] = e[1] * n,
        t[2] = e[2] * n,
        t[3] = e[3] * n,
        t
    }
    function mn(t, e) {
        var n = e[0] - t[0]
          , r = e[1] - t[1]
          , i = e[2] - t[2]
          , o = e[3] - t[3];
        return Math.hypot(n, r, i, o)
    }
    function gn(t, e) {
        var n = e[0] - t[0]
          , r = e[1] - t[1]
          , i = e[2] - t[2]
          , o = e[3] - t[3];
        return n * n + r * r + i * i + o * o
    }
    function yn(t) {
        var e = t[0]
          , n = t[1]
          , r = t[2]
          , i = t[3];
        return Math.hypot(e, n, r, i)
    }
    function _n(t) {
        var e = t[0]
          , n = t[1]
          , r = t[2]
          , i = t[3];
        return e * e + n * n + r * r + i * i
    }
    function xn(t, e) {
        var n = e[0]
          , r = e[1]
          , i = e[2]
          , o = e[3]
          , a = n * n + r * r + i * i + o * o;
        return a > 0 && (a = 1 / Math.sqrt(a)),
        t[0] = n * a,
        t[1] = r * a,
        t[2] = i * a,
        t[3] = o * a,
        t
    }
    function bn(t, e) {
        return t[0] * e[0] + t[1] * e[1] + t[2] * e[2] + t[3] * e[3]
    }
    function Mn(t, e, n, r) {
        var i = e[0]
          , o = e[1]
          , a = e[2]
          , s = e[3];
        return t[0] = i + r * (n[0] - i),
        t[1] = o + r * (n[1] - o),
        t[2] = a + r * (n[2] - a),
        t[3] = s + r * (n[3] - s),
        t
    }
    function wn(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2]
          , a = e[3];
        return t[0] = n[0] * r + n[4] * i + n[8] * o + n[12] * a,
        t[1] = n[1] * r + n[5] * i + n[9] * o + n[13] * a,
        t[2] = n[2] * r + n[6] * i + n[10] * o + n[14] * a,
        t[3] = n[3] * r + n[7] * i + n[11] * o + n[15] * a,
        t
    }
    function En(t, e) {
        return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3]
    }
    function Tn(t, e) {
        var n = t[0]
          , r = t[1]
          , i = t[2]
          , o = t[3]
          , a = e[0]
          , s = e[1]
          , u = e[2]
          , h = e[3];
        return Math.abs(n - a) <= pt * Math.max(1, Math.abs(n), Math.abs(a)) && Math.abs(r - s) <= pt * Math.max(1, Math.abs(r), Math.abs(s)) && Math.abs(i - u) <= pt * Math.max(1, Math.abs(i), Math.abs(u)) && Math.abs(o - h) <= pt * Math.max(1, Math.abs(o), Math.abs(h))
    }
    var An, Cn = fn, Rn = dn, Sn = pn, Pn = mn, Dn = gn, On = yn, In = _n, Ln = function() {
        var t = an();
        return function(e, n, r, i, o, a) {
            var s, u;
            for (n || (n = 4),
            r || (r = 0),
            u = i ? Math.min(i * n + r, e.length) : e.length,
            s = r; s < u; s += n)
                t[0] = e[s],
                t[1] = e[s + 1],
                t[2] = e[s + 2],
                t[3] = e[s + 3],
                o(t, t, a),
                e[s] = t[0],
                e[s + 1] = t[1],
                e[s + 2] = t[2],
                e[s + 3] = t[3];
            return e
        }
    }(), Bn = Object.freeze({
        __proto__: null,
        create: an,
        clone: sn,
        fromValues: un,
        copy: hn,
        set: cn,
        add: ln,
        subtract: fn,
        multiply: dn,
        divide: pn,
        ceil: function(t, e) {
            return t[0] = Math.ceil(e[0]),
            t[1] = Math.ceil(e[1]),
            t[2] = Math.ceil(e[2]),
            t[3] = Math.ceil(e[3]),
            t
        },
        floor: function(t, e) {
            return t[0] = Math.floor(e[0]),
            t[1] = Math.floor(e[1]),
            t[2] = Math.floor(e[2]),
            t[3] = Math.floor(e[3]),
            t
        },
        min: function(t, e, n) {
            return t[0] = Math.min(e[0], n[0]),
            t[1] = Math.min(e[1], n[1]),
            t[2] = Math.min(e[2], n[2]),
            t[3] = Math.min(e[3], n[3]),
            t
        },
        max: function(t, e, n) {
            return t[0] = Math.max(e[0], n[0]),
            t[1] = Math.max(e[1], n[1]),
            t[2] = Math.max(e[2], n[2]),
            t[3] = Math.max(e[3], n[3]),
            t
        },
        round: function(t, e) {
            return t[0] = Math.round(e[0]),
            t[1] = Math.round(e[1]),
            t[2] = Math.round(e[2]),
            t[3] = Math.round(e[3]),
            t
        },
        scale: vn,
        scaleAndAdd: function(t, e, n, r) {
            return t[0] = e[0] + n[0] * r,
            t[1] = e[1] + n[1] * r,
            t[2] = e[2] + n[2] * r,
            t[3] = e[3] + n[3] * r,
            t
        },
        distance: mn,
        squaredDistance: gn,
        length: yn,
        squaredLength: _n,
        negate: function(t, e) {
            return t[0] = -e[0],
            t[1] = -e[1],
            t[2] = -e[2],
            t[3] = -e[3],
            t
        },
        inverse: function(t, e) {
            return t[0] = 1 / e[0],
            t[1] = 1 / e[1],
            t[2] = 1 / e[2],
            t[3] = 1 / e[3],
            t
        },
        normalize: xn,
        dot: bn,
        cross: function(t, e, n, r) {
            var i = n[0] * r[1] - n[1] * r[0]
              , o = n[0] * r[2] - n[2] * r[0]
              , a = n[0] * r[3] - n[3] * r[0]
              , s = n[1] * r[2] - n[2] * r[1]
              , u = n[1] * r[3] - n[3] * r[1]
              , h = n[2] * r[3] - n[3] * r[2]
              , c = e[0]
              , l = e[1]
              , f = e[2]
              , d = e[3];
            return t[0] = l * h - f * u + d * s,
            t[1] = -c * h + f * a - d * o,
            t[2] = c * u - l * a + d * i,
            t[3] = -c * s + l * o - f * i,
            t
        },
        lerp: Mn,
        random: function(t, e) {
            var n, r, i, o, a, s;
            e = e || 1;
            do {
                a = (n = 2 * mt() - 1) * n + (r = 2 * mt() - 1) * r
            } while (a >= 1);do {
                s = (i = 2 * mt() - 1) * i + (o = 2 * mt() - 1) * o
            } while (s >= 1);var u = Math.sqrt((1 - a) / s);
            return t[0] = e * n,
            t[1] = e * r,
            t[2] = e * i * u,
            t[3] = e * o * u,
            t
        },
        transformMat4: wn,
        transformQuat: function(t, e, n) {
            var r = e[0]
              , i = e[1]
              , o = e[2]
              , a = n[0]
              , s = n[1]
              , u = n[2]
              , h = n[3]
              , c = h * r + s * o - u * i
              , l = h * i + u * r - a * o
              , f = h * o + a * i - s * r
              , d = -a * r - s * i - u * o;
            return t[0] = c * h + d * -a + l * -u - f * -s,
            t[1] = l * h + d * -s + f * -a - c * -u,
            t[2] = f * h + d * -u + c * -s - l * -a,
            t[3] = e[3],
            t
        },
        zero: function(t) {
            return t[0] = 0,
            t[1] = 0,
            t[2] = 0,
            t[3] = 0,
            t
        },
        str: function(t) {
            return "vec4(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ")"
        },
        exactEquals: En,
        equals: Tn,
        sub: Cn,
        mul: Rn,
        div: Sn,
        dist: Pn,
        sqrDist: Dn,
        len: On,
        sqrLen: In,
        forEach: Ln
    });
    !function(t) {
        t[t.COL0ROW0 = 0] = "COL0ROW0",
        t[t.COL0ROW1 = 1] = "COL0ROW1",
        t[t.COL0ROW2 = 2] = "COL0ROW2",
        t[t.COL0ROW3 = 3] = "COL0ROW3",
        t[t.COL1ROW0 = 4] = "COL1ROW0",
        t[t.COL1ROW1 = 5] = "COL1ROW1",
        t[t.COL1ROW2 = 6] = "COL1ROW2",
        t[t.COL1ROW3 = 7] = "COL1ROW3",
        t[t.COL2ROW0 = 8] = "COL2ROW0",
        t[t.COL2ROW1 = 9] = "COL2ROW1",
        t[t.COL2ROW2 = 10] = "COL2ROW2",
        t[t.COL2ROW3 = 11] = "COL2ROW3",
        t[t.COL3ROW0 = 12] = "COL3ROW0",
        t[t.COL3ROW1 = 13] = "COL3ROW1",
        t[t.COL3ROW2 = 14] = "COL3ROW2",
        t[t.COL3ROW3 = 15] = "COL3ROW3"
    }(An || (An = {}));
    const kn = 45 * Math.PI / 180
      , Un = 1
      , Nn = .1
      , Fn = 500
      , jn = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
    class zn extends Me {
        static get IDENTITY() {
            return function() {
                Gn || (Gn = new zn,
                Object.freeze(Gn));
                return Gn
            }()
        }
        static get ZERO() {
            return function() {
                Vn || (Vn = new zn([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
                Object.freeze(Vn));
                return Vn
            }()
        }
        get ELEMENTS() {
            return 16
        }
        get RANK() {
            return 4
        }
        get INDICES() {
            return An
        }
        constructor(t) {
            super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0),
            1 === arguments.length && Array.isArray(t) ? this.copy(t) : this.identity()
        }
        copy(t) {
            return this[0] = t[0],
            this[1] = t[1],
            this[2] = t[2],
            this[3] = t[3],
            this[4] = t[4],
            this[5] = t[5],
            this[6] = t[6],
            this[7] = t[7],
            this[8] = t[8],
            this[9] = t[9],
            this[10] = t[10],
            this[11] = t[11],
            this[12] = t[12],
            this[13] = t[13],
            this[14] = t[14],
            this[15] = t[15],
            this.check()
        }
        set(t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v) {
            return this[0] = t,
            this[1] = e,
            this[2] = n,
            this[3] = r,
            this[4] = i,
            this[5] = o,
            this[6] = a,
            this[7] = s,
            this[8] = u,
            this[9] = h,
            this[10] = c,
            this[11] = l,
            this[12] = f,
            this[13] = d,
            this[14] = p,
            this[15] = v,
            this.check()
        }
        setRowMajor(t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v) {
            return this[0] = t,
            this[1] = i,
            this[2] = u,
            this[3] = f,
            this[4] = e,
            this[5] = o,
            this[6] = h,
            this[7] = d,
            this[8] = n,
            this[9] = a,
            this[10] = c,
            this[11] = p,
            this[12] = r,
            this[13] = s,
            this[14] = l,
            this[15] = v,
            this.check()
        }
        toRowMajor(t) {
            return t[0] = this[0],
            t[1] = this[4],
            t[2] = this[8],
            t[3] = this[12],
            t[4] = this[1],
            t[5] = this[5],
            t[6] = this[9],
            t[7] = this[13],
            t[8] = this[2],
            t[9] = this[6],
            t[10] = this[10],
            t[11] = this[14],
            t[12] = this[3],
            t[13] = this[7],
            t[14] = this[11],
            t[15] = this[15],
            t
        }
        identity() {
            return this.copy(jn)
        }
        fromObject(t) {
            return this.check()
        }
        fromQuaternion(t) {
            return qe(this, t),
            this.check()
        }
        frustum(t) {
            const {left: e, right: n, bottom: r, top: i, near: o=Nn, far: a=Fn} = t;
            return a === 1 / 0 ? function(t, e, n, r, i, o) {
                const a = 2 * o / (n - e)
                  , s = 2 * o / (i - r)
                  , u = (n + e) / (n - e)
                  , h = (i + r) / (i - r)
                  , c = -1
                  , l = -1
                  , f = -2 * o;
                t[0] = a,
                t[1] = 0,
                t[2] = 0,
                t[3] = 0,
                t[4] = 0,
                t[5] = s,
                t[6] = 0,
                t[7] = 0,
                t[8] = u,
                t[9] = h,
                t[10] = c,
                t[11] = l,
                t[12] = 0,
                t[13] = 0,
                t[14] = f,
                t[15] = 0
            }(this, e, n, r, i, o) : Ye(this, e, n, r, i, o, a),
            this.check()
        }
        lookAt(t) {
            const {eye: e, center: n=[0,0,0], up: r=[0,1,0]} = t;
            return $e(this, e, n, r),
            this.check()
        }
        ortho(t) {
            const {left: e, right: n, bottom: r, top: i, near: o=Nn, far: a=Fn} = t;
            return Je(this, e, n, r, i, o, a),
            this.check()
        }
        orthographic(t) {
            const {fovy: e=kn, aspect: n=Un, focalDistance: r=1, near: i=Nn, far: o=Fn} = t;
            Wn(e);
            const a = e / 2
              , s = r * Math.tan(a)
              , u = s * n;
            return this.ortho({
                left: -u,
                right: u,
                bottom: -s,
                top: s,
                near: i,
                far: o
            })
        }
        perspective(t) {
            const {fovy: e=45*Math.PI/180, aspect: n=1, near: r=.1, far: i=500} = t;
            return Wn(e),
            Ke(this, e, n, r, i),
            this.check()
        }
        determinant() {
            return Be(this)
        }
        getScale(t=[-0, -0, -0]) {
            return t[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]),
            t[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]),
            t[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]),
            t
        }
        getTranslation(t=[-0, -0, -0]) {
            return t[0] = this[12],
            t[1] = this[13],
            t[2] = this[14],
            t
        }
        getRotation(t, e) {
            t = t || [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0],
            e = e || [-0, -0, -0];
            const n = this.getScale(e)
              , r = 1 / n[0]
              , i = 1 / n[1]
              , o = 1 / n[2];
            return t[0] = this[0] * r,
            t[1] = this[1] * i,
            t[2] = this[2] * o,
            t[3] = 0,
            t[4] = this[4] * r,
            t[5] = this[5] * i,
            t[6] = this[6] * o,
            t[7] = 0,
            t[8] = this[8] * r,
            t[9] = this[9] * i,
            t[10] = this[10] * o,
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            t
        }
        getRotationMatrix3(t, e) {
            t = t || [-0, -0, -0, -0, -0, -0, -0, -0, -0],
            e = e || [-0, -0, -0];
            const n = this.getScale(e)
              , r = 1 / n[0]
              , i = 1 / n[1]
              , o = 1 / n[2];
            return t[0] = this[0] * r,
            t[1] = this[1] * i,
            t[2] = this[2] * o,
            t[3] = this[4] * r,
            t[4] = this[5] * i,
            t[5] = this[6] * o,
            t[6] = this[8] * r,
            t[7] = this[9] * i,
            t[8] = this[10] * o,
            t
        }
        transpose() {
            return Ie(this, this),
            this.check()
        }
        invert() {
            return Le(this, this),
            this.check()
        }
        multiplyLeft(t) {
            return ke(this, t, this),
            this.check()
        }
        multiplyRight(t) {
            return ke(this, this, t),
            this.check()
        }
        rotateX(t) {
            return je(this, this, t),
            this.check()
        }
        rotateY(t) {
            return ze(this, this, t),
            this.check()
        }
        rotateZ(t) {
            return Ve(this, this, t),
            this.check()
        }
        rotateXYZ(t) {
            return this.rotateX(t[0]).rotateY(t[1]).rotateZ(t[2])
        }
        rotateAxis(t, e) {
            return Fe(this, this, t, e),
            this.check()
        }
        scale(t) {
            return Ne(this, this, Array.isArray(t) ? t : [t, t, t]),
            this.check()
        }
        translate(t) {
            return Ue(this, this, t),
            this.check()
        }
        transform(t, e) {
            return 4 === t.length ? (ft(e = wn(e || [-0, -0, -0, -0], t, this), 4),
            e) : this.transformAsPoint(t, e)
        }
        transformAsPoint(t, e) {
            const {length: n} = t;
            let r;
            switch (n) {
            case 2:
                r = At(e || [-0, -0], t, this);
                break;
            case 3:
                r = te(e || [-0, -0, -0], t, this);
                break;
            default:
                throw new Error("Illegal vector")
            }
            return ft(r, t.length),
            r
        }
        transformAsVector(t, e) {
            let n;
            switch (t.length) {
            case 2:
                n = function(t, e, n) {
                    const r = e[0]
                      , i = e[1]
                      , o = n[3] * r + n[7] * i || 1;
                    return t[0] = (n[0] * r + n[4] * i) / o,
                    t[1] = (n[1] * r + n[5] * i) / o,
                    t
                }(e || [-0, -0], t, this);
                break;
            case 3:
                n = Ut(e || [-0, -0, -0], t, this);
                break;
            default:
                throw new Error("Illegal vector")
            }
            return ft(n, t.length),
            n
        }
        transformPoint(t, e) {
            return this.transformAsPoint(t, e)
        }
        transformVector(t, e) {
            return this.transformAsPoint(t, e)
        }
        transformDirection(t, e) {
            return this.transformAsVector(t, e)
        }
        makeRotationX(t) {
            return this.identity().rotateX(t)
        }
        makeTranslation(t, e, n) {
            return this.identity().translate([t, e, n])
        }
    }
    let Vn, Gn;
    function Wn(t) {
        if (t > 2 * Math.PI)
            throw Error("expected radians")
    }
    function Hn() {
        var t = new vt(4);
        return vt != Float32Array && (t[0] = 0,
        t[1] = 0,
        t[2] = 0),
        t[3] = 1,
        t
    }
    function Zn(t) {
        return t[0] = 0,
        t[1] = 0,
        t[2] = 0,
        t[3] = 1,
        t
    }
    function qn(t, e, n) {
        n *= .5;
        var r = Math.sin(n);
        return t[0] = r * e[0],
        t[1] = r * e[1],
        t[2] = r * e[2],
        t[3] = Math.cos(n),
        t
    }
    function Yn(t, e, n) {
        var r = e[0]
          , i = e[1]
          , o = e[2]
          , a = e[3]
          , s = n[0]
          , u = n[1]
          , h = n[2]
          , c = n[3];
        return t[0] = r * c + a * s + i * h - o * u,
        t[1] = i * c + a * u + o * s - r * h,
        t[2] = o * c + a * h + r * u - i * s,
        t[3] = a * c - r * s - i * u - o * h,
        t
    }
    function Xn(t, e) {
        var n = e[0]
          , r = e[1]
          , i = e[2]
          , o = e[3]
          , a = Math.sqrt(n * n + r * r + i * i)
          , s = Math.exp(o)
          , u = a > 0 ? s * Math.sin(a) / a : 0;
        return t[0] = n * u,
        t[1] = r * u,
        t[2] = i * u,
        t[3] = s * Math.cos(a),
        t
    }
    function Kn(t, e) {
        var n = e[0]
          , r = e[1]
          , i = e[2]
          , o = e[3]
          , a = Math.sqrt(n * n + r * r + i * i)
          , s = a > 0 ? Math.atan2(a, o) / a : 0;
        return t[0] = n * s,
        t[1] = r * s,
        t[2] = i * s,
        t[3] = .5 * Math.log(n * n + r * r + i * i + o * o),
        t
    }
    function Qn(t, e, n, r) {
        var i, o, a, s, u, h = e[0], c = e[1], l = e[2], f = e[3], d = n[0], p = n[1], v = n[2], m = n[3];
        return (o = h * d + c * p + l * v + f * m) < 0 && (o = -o,
        d = -d,
        p = -p,
        v = -v,
        m = -m),
        1 - o > pt ? (i = Math.acos(o),
        a = Math.sin(i),
        s = Math.sin((1 - r) * i) / a,
        u = Math.sin(r * i) / a) : (s = 1 - r,
        u = r),
        t[0] = s * h + u * d,
        t[1] = s * c + u * p,
        t[2] = s * l + u * v,
        t[3] = s * f + u * m,
        t
    }
    function Jn(t, e) {
        var n, r = e[0] + e[4] + e[8];
        if (r > 0)
            n = Math.sqrt(r + 1),
            t[3] = .5 * n,
            n = .5 / n,
            t[0] = (e[5] - e[7]) * n,
            t[1] = (e[6] - e[2]) * n,
            t[2] = (e[1] - e[3]) * n;
        else {
            var i = 0;
            e[4] > e[0] && (i = 1),
            e[8] > e[3 * i + i] && (i = 2);
            var o = (i + 1) % 3
              , a = (i + 2) % 3;
            n = Math.sqrt(e[3 * i + i] - e[3 * o + o] - e[3 * a + a] + 1),
            t[i] = .5 * n,
            n = .5 / n,
            t[3] = (e[3 * o + a] - e[3 * a + o]) * n,
            t[o] = (e[3 * o + i] + e[3 * i + o]) * n,
            t[a] = (e[3 * a + i] + e[3 * i + a]) * n
        }
        return t
    }
    function $n(t, e, n, r) {
        var i = .5 * Math.PI / 180;
        e *= i,
        n *= i,
        r *= i;
        var o = Math.sin(e)
          , a = Math.cos(e)
          , s = Math.sin(n)
          , u = Math.cos(n)
          , h = Math.sin(r)
          , c = Math.cos(r);
        return t[0] = o * u * c - a * s * h,
        t[1] = a * s * c + o * u * h,
        t[2] = a * u * h - o * s * c,
        t[3] = a * u * c + o * s * h,
        t
    }
    var tr, er, nr, rr, ir, or, ar = sn, sr = un, ur = hn, hr = cn, cr = ln, lr = Yn, fr = vn, dr = bn, pr = Mn, vr = yn, mr = vr, gr = _n, yr = gr, _r = xn, xr = En, br = Tn, Mr = (tr = Nt(),
    er = zt(1, 0, 0),
    nr = zt(0, 1, 0),
    function(t, e, n) {
        var r = Jt(e, n);
        return r < -.999999 ? ($t(tr, er, e),
        de(tr) < 1e-6 && $t(tr, nr, e),
        Qt(tr, tr),
        qn(t, tr, Math.PI),
        t) : r > .999999 ? (t[0] = 0,
        t[1] = 0,
        t[2] = 0,
        t[3] = 1,
        t) : ($t(tr, e, n),
        t[0] = tr[0],
        t[1] = tr[1],
        t[2] = tr[2],
        t[3] = 1 + r,
        _r(t, t))
    }
    ), wr = (rr = Hn(),
    ir = Hn(),
    function(t, e, n, r, i, o) {
        return Qn(rr, e, i, o),
        Qn(ir, n, r, o),
        Qn(t, rr, ir, 2 * o * (1 - o)),
        t
    }
    ), Er = (or = we(),
    function(t, e, n, r) {
        return or[0] = n[0],
        or[3] = n[1],
        or[6] = n[2],
        or[1] = r[0],
        or[4] = r[1],
        or[7] = r[2],
        or[2] = -e[0],
        or[5] = -e[1],
        or[8] = -e[2],
        _r(t, Jn(t, or))
    }
    ), Tr = Object.freeze({
        __proto__: null,
        create: Hn,
        identity: Zn,
        setAxisAngle: qn,
        getAxisAngle: function(t, e) {
            var n = 2 * Math.acos(e[3])
              , r = Math.sin(n / 2);
            return r > pt ? (t[0] = e[0] / r,
            t[1] = e[1] / r,
            t[2] = e[2] / r) : (t[0] = 1,
            t[1] = 0,
            t[2] = 0),
            n
        },
        getAngle: function(t, e) {
            var n = dr(t, e);
            return Math.acos(2 * n * n - 1)
        },
        multiply: Yn,
        rotateX: function(t, e, n) {
            n *= .5;
            var r = e[0]
              , i = e[1]
              , o = e[2]
              , a = e[3]
              , s = Math.sin(n)
              , u = Math.cos(n);
            return t[0] = r * u + a * s,
            t[1] = i * u + o * s,
            t[2] = o * u - i * s,
            t[3] = a * u - r * s,
            t
        },
        rotateY: function(t, e, n) {
            n *= .5;
            var r = e[0]
              , i = e[1]
              , o = e[2]
              , a = e[3]
              , s = Math.sin(n)
              , u = Math.cos(n);
            return t[0] = r * u - o * s,
            t[1] = i * u + a * s,
            t[2] = o * u + r * s,
            t[3] = a * u - i * s,
            t
        },
        rotateZ: function(t, e, n) {
            n *= .5;
            var r = e[0]
              , i = e[1]
              , o = e[2]
              , a = e[3]
              , s = Math.sin(n)
              , u = Math.cos(n);
            return t[0] = r * u + i * s,
            t[1] = i * u - r * s,
            t[2] = o * u + a * s,
            t[3] = a * u - o * s,
            t
        },
        calculateW: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = e[2];
            return t[0] = n,
            t[1] = r,
            t[2] = i,
            t[3] = Math.sqrt(Math.abs(1 - n * n - r * r - i * i)),
            t
        },
        exp: Xn,
        ln: Kn,
        pow: function(t, e, n) {
            return Kn(t, e),
            fr(t, t, n),
            Xn(t, t),
            t
        },
        slerp: Qn,
        random: function(t) {
            var e = mt()
              , n = mt()
              , r = mt()
              , i = Math.sqrt(1 - e)
              , o = Math.sqrt(e);
            return t[0] = i * Math.sin(2 * Math.PI * n),
            t[1] = i * Math.cos(2 * Math.PI * n),
            t[2] = o * Math.sin(2 * Math.PI * r),
            t[3] = o * Math.cos(2 * Math.PI * r),
            t
        },
        invert: function(t, e) {
            var n = e[0]
              , r = e[1]
              , i = e[2]
              , o = e[3]
              , a = n * n + r * r + i * i + o * o
              , s = a ? 1 / a : 0;
            return t[0] = -n * s,
            t[1] = -r * s,
            t[2] = -i * s,
            t[3] = o * s,
            t
        },
        conjugate: function(t, e) {
            return t[0] = -e[0],
            t[1] = -e[1],
            t[2] = -e[2],
            t[3] = e[3],
            t
        },
        fromMat3: Jn,
        fromEuler: $n,
        str: function(t) {
            return "quat(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ")"
        },
        clone: ar,
        fromValues: sr,
        copy: ur,
        set: hr,
        add: cr,
        mul: lr,
        scale: fr,
        dot: dr,
        lerp: pr,
        length: vr,
        len: mr,
        squaredLength: gr,
        sqrLen: yr,
        normalize: _r,
        exactEquals: xr,
        equals: br,
        rotationTo: Mr,
        sqlerp: wr,
        setAxes: Er
    });
    function Ar(t) {
        return Ar = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        }
        : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        }
        ,
        Ar(t)
    }
    var Cr = function(t) {
        return "[object String]" === Object.prototype.toString.call(t)
    }
      , Rr = function(t) {
        var e = "[object Function]" === Object.prototype.toString.call(t)
          , n = "[object AsyncFunction]" === Object.prototype.toString.call(t);
        return e || n
    }
      , Sr = 365611;
    function Pr(t, e) {
        this.type = t,
        this.returnValue = !0,
        this.target = e || null,
        this.currentTarget = null
    }
    var Dr = function() {
        function t() {
            this.__listeners = void 0
        }
        var e = t.prototype;
        return e.on = function() {
            for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
                e[n] = arguments[n];
            this.alias("addEventListener")(e)
        }
        ,
        e.off = function() {
            for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
                e[n] = arguments[n];
            this.alias("removeEventListener")(e)
        }
        ,
        e.emit = function() {
            for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
                e[n] = arguments[n];
            this.alias("dispatchEvent")(e)
        }
        ,
        e.addEventListener = function(t, e, n) {
            if (Rr(e)) {
                var r;
                !this.__listeners && (this.__listeners = {});
                var i = this.__listeners;
                if ("string" == typeof n && n) {
                    if (/[^\w-]/.test(n))
                        throw "nonstandard key:" + n;
                    e.hashCode = n,
                    r = n
                }
                !t.startsWith("on") && (t = "on" + t),
                "object" !== Ar(i[t]) && (i[t] = {}),
                r = r || (++Sr).toString(),
                e.hashCode = r,
                i[t][r] = e
            }
        }
        ,
        e.removeEventListener = function(t, e) {
            if (Rr(e))
                e = e.hashCode;
            else if (!Cr(e))
                return;
            !this.__listeners && (this.__listeners = {}),
            !t.startsWith("on") && (t = "on" + t);
            var n = this.__listeners;
            n[t] && n[t][e] && delete n[t][e]
        }
        ,
        e.dispatchEvent = function(t, e) {
            Cr(t) && (t = new Pr(t)),
            !this.__listeners && (this.__listeners = {});
            var n = this.__listeners
              , r = t.type
              , i = e || t;
            if (t.target = t.target || this,
            t.currentTarget = this,
            0 !== r.indexOf("on") && (r = "on".concat(r)),
            Rr(n[r]) && n[r].call(this, i),
            "object" === Ar(n[r]))
                for (var o in n[r])
                    Object.prototype.hasOwnProperty.call(n[r], o) && n[r][o].call(this, i);
            return t.returnValue
        }
        ,
        e.alias = function(t) {
            var e = this;
            return function(n) {
                return e[t].apply(e, n)
            }
        }
        ,
        t
    }();
    function Or(t, e) {
        var n = e[2]
          , r = e[0]
          , i = e[1]
          , o = e[3]
          , a = o * o
          , s = n * n
          , u = r * r
          , h = i * i
          , c = i * n - r * o
          , l = .4999999;
        return c < -l ? (t[0] = Math.PI / 2,
        t[1] = 2 * Math.atan2(i, o),
        t[2] = 0) : c > l ? (t[0] = -Math.PI / 2,
        t[1] = 2 * Math.atan2(i, o),
        t[2] = 0) : (t[0] = Math.asin(-2 * (n * i - r * o)),
        t[1] = Math.atan2(2 * (n * r + i * o), s - u - h + a),
        t[2] = Math.atan2(2 * (r * i + n * o), -s - u + h + a)),
        t
    }
    var Ir = function() {
        function t() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
              , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
              , i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : t.DefaultOrder;
            this.isEuler = !0,
            this._x = void 0,
            this._y = void 0,
            this._z = void 0,
            this._order = void 0,
            this._onChangeCallback = void 0,
            this._x = e,
            this._y = n,
            this._z = r,
            this._order = i,
            this._onChangeCallback = function() {}
        }
        var e = t.prototype;
        return e.set = function(t, e, n) {
            var r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];
            return this._x = t,
            this._y = e,
            this._z = n,
            r && this._onChangeCallback(),
            this
        }
        ,
        e.clone = function() {
            return new t(this._x,this._y,this._z,this._order)
        }
        ,
        e.copy = function(t) {
            return t.isEuler ? (this._x = t._x,
            this._y = t._y,
            this._z = t._z,
            this._order = t._order,
            this._onChangeCallback(),
            this) : this
        }
        ,
        e.equals = function(t) {
            return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
        }
        ,
        e.toVector3 = function() {
            return zt(this._x, this._y, this._z)
        }
        ,
        e.onChange = function(t) {
            "function" == typeof t && (this._onChangeCallback = t)
        }
        ,
        o(t, [{
            key: "x",
            get: function() {
                return this._x
            },
            set: function(t) {
                this._x = t,
                this._onChangeCallback()
            }
        }, {
            key: "y",
            get: function() {
                return this._y
            },
            set: function(t) {
                this._y = t,
                this._onChangeCallback()
            }
        }, {
            key: "z",
            get: function() {
                return this._z
            },
            set: function(t) {
                this._z = t,
                this._onChangeCallback()
            }
        }, {
            key: "order",
            get: function() {
                return this._order
            },
            set: function(t) {
                this._order = t,
                this._onChangeCallback()
            }
        }]),
        t
    }();
    function Lr() {
        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(t) {
            var e = 16 * Math.random() | 0;
            return ("x" === t ? e : 3 & e | 8).toString(16)
        }
        ))
    }
    Ir.DefaultOrder = "XYZ";
    var Br = function(t) {
        return 180 * t / Math.PI
    }
      , kr = function(t) {
        function e() {
            var n;
            return (n = t.call(this) || this).isObject3D = !0,
            n.uuid = Lr(),
            n.name = "",
            n.parent = null,
            n.children = [],
            n.visible = !0,
            n.position = Nt(),
            n.rotation = new Ir,
            n.scale = zt(1, 1, 1),
            n.quaternion = Hn(),
            n.up = Ft(e.DefaultUp),
            n.modelMatrix = Se(),
            n.worldMatrix = Se(),
            n.modelMatrixNeedUpdate = !1,
            n.worldMatrixNeedsUpdate = !1,
            n.rotation.onChange((function() {
                n.modelMatrixNeedUpdate = !0
            }
            )),
            n
        }
        c(e, t);
        var n = e.prototype;
        return n.rotateX = function(t) {
            this.rotation.x = t
        }
        ,
        n.rotateY = function(t) {
            this.rotation.y = t
        }
        ,
        n.rotateZ = function(t) {
            this.rotation.z = t
        }
        ,
        n.translate = function(t, e, n) {
            var r = zt(t, e, n);
            return this.position = Gt(this.position, this.position, r),
            this.modelMatrixNeedUpdate = !0,
            this
        }
        ,
        n.setPosition = function(t, e, n) {
            var r = zt(t, e, n);
            return se(this.position, r) || (this.position = r,
            this.modelMatrixNeedUpdate = !0),
            this
        }
        ,
        n.lookAt = function(t, e, n) {
            var r = this.up
              , i = this.position
              , o = zt(t, e, n)
              , a = tn(Se(), i, o, r)
              , s = He(Hn(), a)
              , u = Or(Nt(), s);
            this.rotation.set(Br(u[0]), Br(u[1]), Br(u[2]))
        }
        ,
        n.setVisible = function(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            if (this.visible !== t && (this.visible = t,
            e))
                for (var n = 0, r = this.children.length; n < r; n++)
                    this.children[n].setVisible(t, e)
        }
        ,
        n.setScale = function(t, e, n) {
            var r = zt(t, e, n);
            return se(this.scale, r) || (this.scale = r,
            this.modelMatrixNeedUpdate = !0),
            this
        }
        ,
        n.updateMatrix = function() {
            Oe(this.modelMatrix),
            Zn(this.quaternion),
            $n(this.quaternion, this.rotation.x, this.rotation.y, this.rotation.z),
            Ze(this.modelMatrix, this.quaternion, this.position, this.scale),
            this.modelMatrixNeedUpdate = !1,
            this.worldMatrixNeedsUpdate = !0
        }
        ,
        n.updateWorldMatrix = function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            !0 !== this.modelMatrixNeedUpdate && !0 !== t || this.updateMatrix(),
            !0 === this.worldMatrixNeedsUpdate && (this.parent ? ke(this.worldMatrix, this.parent.worldMatrix, this.modelMatrix) : De(this.worldMatrix, this.modelMatrix),
            this.worldMatrixNeedsUpdate = !1,
            t = !0);
            for (var e = 0, n = this.children.length; e < n; e++)
                this.children[e].updateWorldMatrix(t)
        }
        ,
        n.add = function(t) {
            if (t === this)
                return console.error("object3D.add: object can't be added as a child of itself. ==> ".concat(t)),
                this;
            if (t instanceof Array) {
                for (var e = 0, n = t.length; e < n; e++)
                    this.add(t[e]);
                return this
            }
            return t && t.isObject3D ? (null !== t.parent && t.parent.remove(t),
            t.parent = this,
            this.children.push(t)) : console.error("Object3D.add: object not an instance of Object3D.", t),
            this
        }
        ,
        n.remove = function(t) {
            if (t instanceof Array) {
                for (var e = 0, n = t.length; e < n; e++)
                    this.remove(t[e]);
                return this
            }
            var r = this.children.indexOf(t);
            return -1 !== r && (t.parent = null,
            this.children.splice(r, 1)),
            this
        }
        ,
        n.traverse = function(t) {
            t(this),
            this.children && this.children.length > 0 && this.children.forEach((function(e) {
                e.traverse(t)
            }
            ))
        }
        ,
        n.clone = function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]
              , n = new e;
            if (n.up = Ft(this.up),
            n.scale = Ft(this.scale),
            n.position = Ft(this.position),
            n.rotation = this.rotation.clone(),
            n.quaternion = ar(this.quaternion),
            n.modelMatrix = Pe(this.modelMatrix),
            n.worldMatrix = Pe(this.worldMatrix),
            n.visible = this.visible,
            this.children.length && t)
                for (var r = 0, i = this.children.length; r < i; r++)
                    n.add(this.children[r].clone());
            return n
        }
        ,
        n.raycast = function(t) {
            return null
        }
        ,
        e
    }(Dr);
    kr.DefaultUp = zt(0, 1, 0);
    var Ur = function() {
        function t(t, e) {
            this.isBox = !0,
            this.min = void 0,
            this.max = void 0,
            this.min = void 0 !== t ? t : zt(1 / 0, 1 / 0, 1 / 0),
            this.max = void 0 !== e ? e : zt(-1 / 0, -1 / 0, -1 / 0)
        }
        var e = t.prototype;
        return e.set = function(t, e) {
            return Vt(this.min, t),
            Vt(this.max, e),
            this
        }
        ,
        e.setFromBufferAttribute = function(t) {
            for (var e = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, o = -1 / 0, a = -1 / 0, s = t.array, u = t.count, h = t.itemSize, c = 0; c < u; c++) {
                var l = s[c * h]
                  , f = s[c * h + 1]
                  , d = s[c * h + 2];
                l < e && (e = l),
                f < n && (n = f),
                d < r && (r = d),
                l > i && (i = l),
                f > o && (o = f),
                d > a && (a = d)
            }
            var p = zt(e, n, r)
              , v = zt(i, o, a);
            return this.set(p, v),
            this
        }
        ,
        e.getCenter = function() {
            return this.isInvalid() ? Nt() : zt((this.max[0] + this.min[0]) / 2, (this.max[1] + this.min[1]) / 2, (this.max[2] + this.min[2]) / 2)
        }
        ,
        e.isInvalid = function() {
            return this.max[0] < this.min[0] || this.max[1] < this.min[1] || this.max[2] < this.min[2]
        }
        ,
        t
    }()
      , Nr = function() {
        function t(e, n, r) {
            var i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
            if (this.isBufferAttribute = !0,
            this.name = "",
            this.type = void 0,
            this.array = void 0,
            this.itemSize = void 0,
            this.count = void 0,
            this.normalized = void 0,
            this.usage = void 0,
            this.needUpdate = void 0,
            Array.isArray(e))
                throw new TypeError("BufferAttribute: array should be a Typed Array.");
            if (this.name = "BufferAttribute",
            this.array = e,
            this.itemSize = n,
            this.count = void 0 !== e ? e.length / n : 0,
            this.normalized = !0 === i,
            this.usage = 35044,
            this.needUpdate = !0,
            void 0 === r) {
                var o = this.array;
                this.type = t.FLOAT,
                o instanceof Int8Array ? this.type = t.BYTE : o instanceof Uint8Array ? this.type = t.UNSIGNED_BYTE : o instanceof Int16Array ? this.type = t.SHORT : o instanceof Uint16Array ? this.type = t.UNSIGNED_SHORT : o instanceof Int32Array ? this.type = t.INT : o instanceof Uint32Array && (this.type = t.UNSIGNED_INT)
            } else
                this.type = r
        }
        t.isBufferAttribute = function(e) {
            var n = !1;
            return e && e instanceof t && (n = !0),
            n
        }
        ;
        var e = t.prototype;
        return e.setUsage = function(t) {
            return this.usage = t,
            this
        }
        ,
        e.setArray = function(t) {
            return this.array.set(t),
            this
        }
        ,
        t
    }();
    Nr.BYTE = 5120,
    Nr.UNSIGNED_BYTE = 5121,
    Nr.SHORT = 5122,
    Nr.UNSIGNED_SHORT = 5123,
    Nr.INT = 5124,
    Nr.UNSIGNED_INT = 5125,
    Nr.FLOAT = 5126;
    var Fr = function(t) {
        function e(e, n, r, i) {
            var o;
            return (o = t.call(this, new Uint8Array(e), n, r, i) || this).name = "Uint8BufferAttribute",
            o
        }
        return c(e, t),
        e
    }(Nr)
      , jr = function(t) {
        function e(e, n, r, i) {
            var o;
            return (o = t.call(this, new Uint16Array(e), n, r, i) || this).name = "Uint16BufferAttribute",
            o
        }
        return c(e, t),
        e
    }(Nr)
      , zr = function(t) {
        function e(e, n, r, i) {
            var o;
            return (o = t.call(this, new Uint32Array(e), n, r, i) || this).name = "Uint32BufferAttribute",
            o
        }
        return c(e, t),
        e
    }(Nr)
      , Vr = function(t) {
        function e(e, n, r, i) {
            var o;
            return (o = t.call(this, new Float32Array(e), n, r, i) || this).name = "Float32ArrayAttribute",
            o
        }
        return c(e, t),
        e
    }(Nr)
      , Gr = function(t) {
        function e(e, n, r, i) {
            var o;
            if (Array.isArray(e)) {
                var a = function(t) {
                    for (var e, n = Number.MAX_VALUE, r = -Number.MAX_VALUE, i = t.length - 1; i >= 0; i--)
                        n > (e = t[i]) && (n = e),
                        r < e && (r = e);
                    return {
                        min: n,
                        max: r
                    }
                }(e);
                o = new (a.max > 65535 ? Uint32Array : Uint16Array)(e)
            } else
                o = e;
            return t.call(this, o, n, r, i) || this
        }
        return c(e, t),
        e
    }(Nr)
      , Wr = 0
      , Hr = function(t) {
        function e() {
            for (var e, n = arguments.length, r = new Array(n), i = 0; i < n; i++)
                r[i] = arguments[i];
            return (e = t.call.apply(t, [this].concat(r)) || this).id = Wr++,
            e.uuid = Lr(),
            e.name = "",
            e.type = "BufferGeometry",
            e.indexes = null,
            e.attributes = {},
            e.__webglInit = !1,
            e.groupsNeedUpdate = !1,
            e.boundingBox = null,
            e
        }
        c(e, t);
        var n = e.prototype;
        return n.getIndexes = function() {
            return this.indexes
        }
        ,
        n.getCenter = function() {
            return this.computeBoundingBox(),
            this.boundingBox ? this.boundingBox.getCenter() : void 0
        }
        ,
        n.setIndexes = function(t) {
            return Array.isArray(t) || ArrayBuffer.isView(t) ? this.indexes = new Gr(t,1) : Gr.isBufferAttribute(t) && (this.indexes = t),
            this
        }
        ,
        n.getAttribute = function(t) {
            return t ? this.attributes[t] : this.attributes
        }
        ,
        n.setAttribute = function(t, e) {
            return t && Nr.isBufferAttribute(e) && (this.attributes[t] = e),
            this
        }
        ,
        n.deleteAttribute = function(t) {
            return this.attributes[t] && delete this.attributes[t],
            this
        }
        ,
        n.computeBoundingBox = function() {
            null === this.boundingBox && (this.boundingBox = new Ur);
            var t = this.attributes.position;
            t && t.isBufferAttribute && this.boundingBox.setFromBufferAttribute(t)
        }
        ,
        e
    }(Dr)
      , Zr = new xe
      , qr = new xe
      , Yr = new xe
      , Xr = function(t) {
        function e(e, n) {
            var r;
            return (r = t.call(this) || this).type = "Mesh",
            r.geometry = void 0,
            r.material = void 0,
            r.materialChanged = void 0,
            r.__webglInit = !1,
            r.geometry = void 0 !== e ? e : new Hr,
            r.material = void 0 !== n ? n : null,
            r.materialChanged = !1,
            r
        }
        c(e, t);
        var n = e.prototype;
        return n.updateMaterial = function(t) {
            this.material && t.isMaterial && t.uuid !== this.material.uuid && (this.material = t,
            this.materialChanged = !0)
        }
        ,
        n.raycast = function(t) {
            var e = this.geometry
              , n = e.indexes && e.indexes.array
              , r = e.attributes.position.array;
            if (!n)
                return null;
            for (var i = 0; i < n.length; i += 3) {
                var o = 3 * n[i]
                  , a = 3 * n[i + 1]
                  , s = 3 * n[i + 2]
                  , u = Zr.set(r[o], r[o + 1], r[o + 2]).transform(this.worldMatrix)
                  , h = qr.set(r[a], r[a + 1], r[a + 2]).transform(this.worldMatrix)
                  , c = Yr.set(r[s], r[s + 1], r[s + 2]).transform(this.worldMatrix)
                  , l = t.intersectTriangle(u, h, c);
                if (l)
                    return {
                        distance: l.distance,
                        point: l.point,
                        object: this
                    }
            }
            return null
        }
        ,
        e
    }(kr)
      , Kr = function(t) {
        function e() {
            for (var e, n = arguments.length, r = new Array(n), i = 0; i < n; i++)
                r[i] = arguments[i];
            return (e = t.call.apply(t, [this].concat(r)) || this).type = "Scene",
            e.isScene = !0,
            e.autoUpdate = !0,
            e
        }
        c(e, t);
        var n = e.prototype;
        return n.updateWorldMatrix = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            !0 === this.autoUpdate && t.prototype.updateWorldMatrix.call(this, e)
        }
        ,
        n.clone = function(n) {
            return void 0 === n && (n = new e),
            t.prototype.clone.call(this, n),
            n.autoUpdate = this.autoUpdate,
            n
        }
        ,
        e
    }(kr)
      , Qr = function(t) {
        function e() {
            var e;
            return (e = t.call(this) || this).type = "Geometry",
            e.vertices = [],
            e.verticesBufferData = new Float32Array,
            e.indicesBufferData = new Uint16Array,
            e.uvtsBufferData = new Float32Array,
            e.groupsNeedUpdate = !1,
            e
        }
        return c(e, t),
        e
    }(Dr)
      , Jr = new xe
      , $r = new xe
      , ti = new xe
      , ei = new xe
      , ni = new xe
      , ri = function() {
        function t(t, e) {
            this.origin = void 0,
            this.direction = void 0,
            this.origin = t || new xe,
            this.direction = e || new xe(0,0,-1)
        }
        var e = t.prototype;
        return e.set = function(t, e) {
            return this.origin.copy(t),
            this.direction.copy(e),
            this
        }
        ,
        e.setFromCamera = function(t, e) {
            var n = new xe(e.position[0],e.position[1],e.position[2])
              , r = (new zn).fromArray(e.projectionMatrix)
              , i = e.worldMatrix
              , o = new be(t[0],t[1],.5,1).transform(r).transform(i)
              , a = o.x
              , s = o.y
              , u = o.z
              , h = new xe(a,s,u).sub(n).normalize();
            this.set(n, h)
        }
        ,
        e.getPointByLen = function(t, e) {
            var n = void 0 !== e ? e : new xe;
            return n.copy(this.direction),
            n.scale(t),
            n.add(this.origin),
            n
        }
        ,
        e.intersectTriangle_Old = function(t, e, n) {
            var r, i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], o = arguments.length > 4 ? arguments[4] : void 0, a = Jr.copy(e).subtract(t), s = $r.copy(n).subtract(t), u = ti.copy(a).cross(s), h = ei.copy(this.origin).subtract(t), c = this.direction.dot(u);
            if (0 < c) {
                if (i)
                    return null;
                r = 1
            } else {
                if (!(0 > c))
                    return null;
                r = -1,
                c = -c
            }
            s.copy((new xe).copy(h).cross(s));
            var l = r * this.direction.dot(s);
            if (0 > l)
                return null;
            var f = r * this.direction.dot((new xe).copy(h).cross(a));
            if (0 > f)
                return null;
            if (l + f > c)
                return null;
            var d = -r * h.dot(u);
            return 0 > d ? null : this.getPointByLen(d / c, o)
        }
        ,
        e.intersectTriangle = function(t, e, n) {
            var r = arguments.length > 4 ? arguments[4] : void 0
              , i = 1e-6
              , o = Jr.subVectors(e, t)
              , a = $r.subVectors(n, t)
              , s = ti.copy(this.direction).cross(a)
              , u = o.dot(s);
            if (u > -i && u < i)
                return null;
            var h = 1 / u
              , c = ei.subVectors(this.origin, t)
              , l = h * c.dot(s);
            if (l < 0 || l > 1)
                return null;
            var f = ni.copy(c).cross(o)
              , d = h * this.direction.dot(f);
            if (d < 0 || l + d > 1)
                return null;
            var p = a.dot(f) * h;
            return p > i ? {
                distance: p,
                point: this.getPointByLen(p, r)
            } : null
        }
        ,
        e.intersectSphere = function(t, e, n) {
            var r = (new xe).subtract(t, this.origin)
              , i = r.dot(this.direction)
              , o = r.dot(r) - i * i
              , a = e * e;
            if (o > a)
                return null;
            var s = Math.sqrt(a - o)
              , u = i - s
              , h = i + s;
            return 0 > u && 0 > h ? null : 0 > u ? this.getPointByLen(h, n) : this.getPointByLen(u, n)
        }
        ,
        t
    }();
    function ii(t, e) {
        var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
        if (!n) {
            if (Array.isArray(t) || (n = function(t, e) {
                if (!t)
                    return;
                if ("string" == typeof t)
                    return oi(t, e);
                var n = Object.prototype.toString.call(t).slice(8, -1);
                "Object" === n && t.constructor && (n = t.constructor.name);
                if ("Map" === n || "Set" === n)
                    return Array.from(t);
                if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                    return oi(t, e)
            }(t)) || e && t && "number" == typeof t.length) {
                n && (t = n);
                var r = 0
                  , i = function() {};
                return {
                    s: i,
                    n: function() {
                        return r >= t.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: t[r++]
                        }
                    },
                    e: function(t) {
                        throw t
                    },
                    f: i
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        var o, a = !0, s = !1;
        return {
            s: function() {
                n = n.call(t)
            },
            n: function() {
                var t = n.next();
                return a = t.done,
                t
            },
            e: function(t) {
                s = !0,
                o = t
            },
            f: function() {
                try {
                    a || null == n.return || n.return()
                } finally {
                    if (s)
                        throw o
                }
            }
        }
    }
    function oi(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var n = 0, r = new Array(e); n < e; n++)
            r[n] = t[n];
        return r
    }
    var ai = function() {
        function t(t, e, n, r) {
            this.ray = void 0,
            this.near = void 0,
            this.far = void 0,
            this.ray = new ri(t,e),
            this.near = n || 0,
            this.far = r || 1 / 0
        }
        var e = t.prototype;
        return e.set = function(t, e) {
            this.ray.set(t, e)
        }
        ,
        e.setFromCamera = function(t, e) {
            var n = new xe(e.position[0],e.position[1],e.position[2])
              , r = (new zn).fromArray(e.projectionMatrix).invert()
              , i = e.worldMatrix
              , o = new be(t[0],t[1],.5,1).transform(r).transform(i)
              , a = o.x
              , s = o.y
              , u = o.z
              , h = new xe(a,s,u).sub(n).normalize();
            this.set(n, h)
        }
        ,
        e.pick = function(t) {
            var e, n = this.ray, r = [], i = ii([].concat(t));
            try {
                for (i.s(); !(e = i.n()).done; ) {
                    var o = e.value.raycast(n);
                    o && r.push(o)
                }
            } catch (t) {
                i.e(t)
            } finally {
                i.f()
            }
            return r.sort((function(t, e) {
                return t.distance - e.distance
            }
            )),
            r
        }
        ,
        t
    }()
      , si = function(t) {
        function e(n) {
            var r;
            return (r = t.call(this) || this).image = void 0,
            r.flipY = !0,
            r.premultiplyAlpha = !1,
            r.needsUpdate = !0,
            r.glTexture = null,
            r.isTexture = !0,
            r.gl = null,
            r.__textureInit = !1,
            r.clone = function(t) {
                return void 0 === t && (t = new e),
                t.image = r.image,
                t.flipY = r.flipY,
                t
            }
            ,
            r.destory = function() {
                r.emit("destory", r.glTexture)
            }
            ,
            r.destoryTexture = function() {
                r.glTexture && r.gl && (r.off("destory", r.destoryTexture),
                r.gl.deleteTexture(r.glTexture))
            }
            ,
            void 0 !== n && (r.image = n),
            r
        }
        return c(e, t),
        e.prototype.init = function(t) {
            !0 !== this.__textureInit && (this.gl = t,
            this.glTexture = t.createTexture(),
            this.on("destory", this.destoryTexture),
            this.__textureInit = !0)
        }
        ,
        e
    }(Dr)
      , ui = function(t) {
        function e(e) {
            var n;
            return (n = t.call(this) || this).isCube = !0,
            n.image = e || [],
            n.flipY = !1,
            n
        }
        return c(e, t),
        e
    }(si)
      , hi = function() {
        function t(t, e, n) {
            var r = this;
            this.gl = void 0,
            this.maxTextureSize = void 0,
            this.maxTextures = void 0,
            this.usedTextureUnits = 0,
            this.getTextureUnit = function() {
                var t = r.usedTextureUnits;
                return r.usedTextureUnits >= r.maxTextures ? r.usedTextureUnits = 0 : r.usedTextureUnits += 1,
                t
            }
            ,
            this.resetUsedTextureUnits = function() {
                r.usedTextureUnits = 0
            }
            ,
            this.setTexture = function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                if (t instanceof ui)
                    r.setCubeTexture(t, e);
                else {
                    var n = r.gl;
                    n.activeTexture(n.TEXTURE0 + e),
                    t.needsUpdate ? (t.init(n),
                    r.uploadTexture(n, t)) : n.bindTexture(n.TEXTURE_2D, t.glTexture)
                }
            }
            ,
            this.setTextureForRenderTarget = function(t) {
                var e = r.gl;
                t.glTexture = e.createTexture(),
                e.bindTexture(e.TEXTURE_2D, t.glTexture),
                e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, t.flipY),
                e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, t.premultiplyAlpha),
                r.setTextureParameter(e);
                var n = e.RGBA
                  , i = e.RGBA
                  , o = e.UNSIGNED_BYTE;
                e.texImage2D(e.TEXTURE_2D, 0, n, t.width, t.height, 0, i, o, null)
            }
            ,
            this.uploadTexture = function(t, e) {
                e.init(t),
                t.bindTexture(t.TEXTURE_2D, e.glTexture),
                t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY),
                t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, e.premultiplyAlpha),
                r.setTextureParameter(t),
                t.texImage2D(t.TEXTURE_2D, 0, t.RGBA, t.RGBA, t.UNSIGNED_BYTE, e.image),
                e.needsUpdate = !1
            }
            ,
            this.setTextureParameter = function(t) {
                t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
                t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
                t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, t.LINEAR),
                t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, t.LINEAR)
            }
            ,
            this.gl = t,
            this.maxTextureSize = n,
            this.maxTextures = e
        }
        return t.prototype.setCubeTexture = function(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , n = t.image;
            if (6 !== n.length)
                throw new Error("[setCubeTexture] CubeTexture need six images, but get\n                ".concat(n.length, "\n            "));
            var r = this.gl;
            if (t.needsUpdate) {
                t.init(r),
                r.activeTexture(r.TEXTURE0 + e),
                r.bindTexture(r.TEXTURE_CUBE_MAP, t.glTexture),
                r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL, t.flipY),
                r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_MAG_FILTER, r.LINEAR),
                r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_MIN_FILTER, r.LINEAR),
                r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_WRAP_S, r.CLAMP_TO_EDGE),
                r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_WRAP_T, r.CLAMP_TO_EDGE);
                for (var i = 0; i < 6; i++) {
                    var o = n[i];
                    r.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, r.RGBA, r.RGBA, r.UNSIGNED_BYTE, o)
                }
                t.needsUpdate = !1
            } else
                r.bindTexture(r.TEXTURE_CUBE_MAP, t.glTexture)
        }
        ,
        t
    }()
      , ci = n((function(t) {
        t.exports = function(t, e) {
            (null == e || e > t.length) && (e = t.length);
            for (var n = 0, r = new Array(e); n < e; n++)
                r[n] = t[n];
            return r
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(ci);
    var li = n((function(t) {
        t.exports = function(t) {
            if (Array.isArray(t))
                return ci(t)
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(li);
    var fi = n((function(t) {
        t.exports = function(t) {
            if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"])
                return Array.from(t)
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(fi);
    var di = n((function(t) {
        t.exports = function(t, e) {
            if (t) {
                if ("string" == typeof t)
                    return ci(t, e);
                var n = Object.prototype.toString.call(t).slice(8, -1);
                return "Object" === n && t.constructor && (n = t.constructor.name),
                "Map" === n || "Set" === n ? Array.from(t) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ci(t, e) : void 0
            }
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(di);
    var pi = n((function(t) {
        t.exports = function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(pi);
    var vi = e(n((function(t) {
        t.exports = function(t) {
            return li(t) || fi(t) || di(t) || pi()
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    )))
      , mi = n((function(t) {
        t.exports = function(t) {
            if (Array.isArray(t))
                return t
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(mi);
    var gi = n((function(t) {
        t.exports = function(t, e) {
            var n = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
            if (null != n) {
                var r, i, o = [], a = !0, s = !1;
                try {
                    for (n = n.call(t); !(a = (r = n.next()).done) && (o.push(r.value),
                    !e || o.length !== e); a = !0)
                        ;
                } catch (t) {
                    s = !0,
                    i = t
                } finally {
                    try {
                        a || null == n.return || n.return()
                    } finally {
                        if (s)
                            throw i
                    }
                }
                return o
            }
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(gi);
    var yi = n((function(t) {
        t.exports = function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    ));
    e(yi);
    var _i = e(n((function(t) {
        t.exports = function(t, e) {
            return mi(t) || gi(t, e) || di(t, e) || yi()
        }
        ,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }
    )))
      , xi = function(t, e, n) {
        if (t && e && e.length)
            for (var r = e.length, i = 0; i < r; i++) {
                var o = void 0
                  , a = void 0
                  , s = void 0
                  , u = e[i]
                  , h = _i(u, 2)
                  , c = h[0]
                  , l = h[1]
                  , f = c.type
                  , d = c.value;
                switch (c.type) {
                case "1i":
                case "1f":
                    t["uniform".concat(f)](l, c.value);
                    break;
                case "2f":
                case "3f":
                case "4f":
                    t["uniform".concat(f)].apply(t, [l].concat(vi(d)));
                    break;
                case "t":
                    if (!(o = c.value) || !o.image && !o.glTexture)
                        break;
                    a = n.getTextureUnit(),
                    t.uniform1i(l, a),
                    n.setTexture(o, a);
                    break;
                case "tv":
                    s = [];
                    for (var p = c.value, v = 0, m = p.length; v < m; v++)
                        s[v] = n.getTextureUnit();
                    t.uniform1iv(l, s);
                    for (var g = 0, y = p.length; g < y; g++)
                        (o = p[g]) && (o.image || o.glTexture) && (a = s[g],
                        n.setTexture(o, a));
                    break;
                case "mat4fv":
                    t.uniformMatrix4fv(l, !1, c.value);
                    break;
                default:
                    console.warn("[UniformOperation] Unknown uniform type: ".concat(f))
                }
            }
    };
    var bi = "\nvoid main() {\n    gl_Position = mvpMatrix * vec4(position, 1.0);\n}\n"
      , Mi = "\nvoid main() {\n    gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n"
      , wi = 0
      , Ei = function(t) {
        function e() {
            for (var e, n = arguments.length, r = new Array(n), i = 0; i < n; i++)
                r[i] = arguments[i];
            return (e = t.call.apply(t, [this].concat(r)) || this).isMaterial = !0,
            e.id = wi++,
            e.type = "Material",
            e.name = "",
            e.uuid = Lr(),
            e.uniforms = {},
            e.vertexShader = bi,
            e.fragmentShader = Mi,
            e.program = null,
            e.depthTest = !0,
            e.visible = !0,
            e.opacity = 1,
            e.needsUpdate = !0,
            e.uniformsList = [],
            e
        }
        c(e, t);
        var n = e.prototype;
        return n.setValues = function(t) {
            if (void 0 !== t)
                for (var e in t)
                    if (Object.prototype.hasOwnProperty.call(t, e)) {
                        var n = t[e];
                        if (void 0 === n) {
                            console.warn("Material: '" + e + "' parameter is undefined.");
                            continue
                        }
                        if (void 0 === this[e]) {
                            console.warn("".concat(this.type, ": ").concat(e, " is not a property of this material."));
                            continue
                        }
                        var r = "set" + e.charAt(0).toUpperCase() + e.slice(1);
                        "function" == typeof this[r] ? this[r](n) : this[e] = n
                    }
        }
        ,
        n.clone = function() {
            return (new e).copy(this)
        }
        ,
        n.copy = function(t) {
            return this.uniforms = function(t) {
                var e, n = {};
                for (var r in t)
                    if (Object.prototype.hasOwnProperty.call(t, r))
                        for (var i in n[r] = {},
                        t[r])
                            Object.prototype.hasOwnProperty.call(t[r], i) && ((e = t[r][i]) && e.isTexture ? n[r][i] = e.clone() : n[r][i] = e instanceof Array ? e.slice(0) : e);
                return n
            }(t.uniforms),
            this.depthTest = t.depthTest,
            this.visible = t.visible,
            this.fragmentShader = t.fragmentShader,
            this.vertexShader = t.vertexShader,
            this
        }
        ,
        o(e, [{
            key: "defines",
            get: function() {
                return ""
            }
        }]),
        e
    }(Dr)
      , Ti = {
        useColor: "USE_COLOR",
        useUV: "NEED_UV"
    }
      , Ai = function() {
        function t() {
            this.useColor = !1,
            this.useUV = !1
        }
        return t.prototype.getDefines = function() {
            for (var t = [], e = 0, n = Object.keys(this); e < n.length; e++) {
                var r = n[e];
                Ti[r] && !0 === this[r] && t.push("#define ".concat(Ti[r]))
            }
            return t.push(""),
            t.join("\n")
        }
        ,
        t
    }()
      , Ci = "\n#ifdef NEED_UV\n    varying vec2 vUV;\n#endif\nvoid main(void) {\n    gl_Position = mvpMatrix * vec4(position, 1.0);\n    #ifdef NEED_UV\n        vUV = uv;\n    #endif\n}\n"
      , Ri = "\nprecision mediump float;\n#ifdef NEED_UV\n    varying vec2 vUV;\n    uniform sampler2D uSampler;\n#endif\n#ifdef USE_COLOR\n    uniform vec4 uColor;\n#endif\nuniform float uOpacity;\nvoid main(void) {\n    vec4 finalColor;\n    vec4 defaultColor = vec4(1.0, 0.0, 0.0, 1.0);\n    finalColor = defaultColor;\n    #ifdef USE_COLOR\n        finalColor = uColor;\n    #endif\n    #ifdef NEED_UV\n        finalColor = texture2D(uSampler, vUV);\n    #endif\n    gl_FragColor = vec4(finalColor.rgb, finalColor.a * uOpacity);\n}\n"
      , Si = function(t) {
        function e() {
            var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return (e = t.call(this) || this).map = null,
            e.color = [1, 0, 0, 1],
            e.type = "BasicMaterial",
            e.opacity = 1,
            e.depthTest = !0,
            e.vertexShader = Ci,
            e.fragmentShader = Ri,
            e.uniforms = {
                uSampler: {
                    type: "t",
                    value: null
                },
                uColor: {
                    type: "4f",
                    value: [1, 0, 0, 1]
                },
                uOpacity: {
                    type: "1f",
                    value: e.opacity
                }
            },
            e.setValues(n),
            e
        }
        c(e, t);
        var n = e.prototype;
        return n.setOpacity = function(t) {
            this.uniforms.uOpacity.value = t,
            this.opacity = t
        }
        ,
        n.setColor = function(t) {
            !Array.isArray(t) || t.length < 4 || (this.uniforms.uColor.value = t,
            this.color = t)
        }
        ,
        n.setMap = function(t) {
            var e = this;
            t && (t instanceof Promise ? t.then((function(t) {
                e.uniforms.uSampler.value = t instanceof si == !0 ? t : new si(t)
            }
            )).catch((function(t) {
                return console.error(t)
            }
            )) : !0 === t.isTexture && (this.uniforms.uSampler.value = t),
            this.map = t)
        }
        ,
        o(e, [{
            key: "defines",
            get: function() {
                var t = new Ai;
                return t.useColor = !!this.color,
                t.useUV = !!this.map,
                t.getDefines()
            }
        }]),
        e
    }(Ei)
      , Pi = function(t) {
        var e = this;
        this.gl = void 0,
        this.newAttributes = new Uint8Array(16),
        this.enabledAttributes = new Uint8Array(16),
        this.currentDepthTest = !1,
        this.currentDepthWrite = !0,
        this.currentColorWrite = !0,
        this.currentDoubleSided = !1,
        this.currentFlipSided = !1,
        this.initAttributes = function() {
            for (var t = 0, n = e.newAttributes.length; t < n; t++)
                e.newAttributes[t] = 0
        }
        ,
        this.enableAttribute = function(t) {
            var n = e.gl
              , r = e.newAttributes
              , i = e.enabledAttributes;
            r[t] = 1,
            0 === i[t] && (n.enableVertexAttribArray(t),
            i[t] = 1)
        }
        ,
        this.disableAttribute = function(t) {
            var n = e.gl
              , r = e.newAttributes
              , i = e.enabledAttributes;
            r[t] = 0,
            1 === i[t] && (n.disableVertexAttribArray(t),
            i[t] = 0)
        }
        ,
        this.disableUnusedAttributes = function() {
            for (var t = e.gl, n = e.newAttributes, r = e.enabledAttributes, i = 0, o = r.length; i < o; i++)
                r[i] !== n[i] && (t.disableVertexAttribArray(i),
                r[i] = 0)
        }
        ,
        this.setDepthTest = function(t) {
            var n = e.gl;
            e.currentDepthTest !== t && (t ? n.enable(n.DEPTH_TEST) : n.disable(n.DEPTH_TEST),
            e.currentDepthTest = t)
        }
        ,
        this.setDepthWrite = function(t) {
            var n = e.gl;
            e.currentDepthWrite !== t && (n.depthMask(t),
            e.currentDepthWrite = t)
        }
        ,
        this.setColorWrite = function(t) {
            var n = e.gl;
            e.currentColorWrite !== t && (n.colorMask(t, t, t, t),
            e.currentColorWrite = t)
        }
        ,
        this.setDefaultGLState = function(t, n, r, i) {
            var o = e.gl;
            o.clearColor(229 / 255, 227 / 255, 223 / 255, 1),
            o.clear(o.COLOR_BUFFER_BIT | o.DEPTH_BUFFER_BIT),
            o.clearDepth(1),
            o.clearStencil(0),
            o.disable(o.DEPTH_TEST),
            o.depthFunc(o.LEQUAL),
            o.frontFace(o.CCW),
            o.disable(o.CULL_FACE),
            o.depthMask(!0),
            o.enable(o.BLEND),
            o.blendFunc(o.SRC_ALPHA, o.ONE_MINUS_SRC_ALPHA),
            o.viewport(t, n, r, i)
        }
        ,
        this.setDoubleSided = function(t) {
            var n = e.gl;
            e.currentDoubleSided !== t && (t ? n.disable(n.CULL_FACE) : n.enable(n.CULL_FACE),
            e.currentDoubleSided = t)
        }
        ,
        this.setFlipSided = function(t) {
            var n = e.gl;
            e.currentFlipSided !== t && (t ? n.frontFace(n.CW) : n.frontFace(n.CCW),
            e.currentFlipSided = t)
        }
        ,
        this.reset = function() {
            for (var t = e.enabledAttributes, n = 0; n < t.length; n++)
                t[n] = 0;
            e.currentDepthTest = !1,
            e.currentDepthWrite = !0,
            e.currentColorWrite = !0,
            e.currentDoubleSided = !1,
            e.currentFlipSided = !1
        }
        ,
        this.gl = t
    }
      , Di = function(t) {
        var e = this;
        this.maxTextures = void 0,
        this.maxTextureSize = void 0,
        this.maxVerticesOneDraw = void 0,
        this.maxVertexShaderTextureUnits = void 0,
        this.maxFragmentShaderTextureUnits = void 0,
        this.gl = void 0,
        this.getMaxTextures = function() {
            var t = e.gl;
            return t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS)
        }
        ,
        this.getLineWidthRange = function() {
            var t = e.gl;
            return t.getParameter(t.ALIASED_LINE_WIDTH_RANGE)
        }
        ,
        this.getMaxVertexShaderTextureUnits = function() {
            var t = e.gl;
            return t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)
        }
        ,
        this.getMaxFragmentShaderTextureUnits = function() {
            var t = e.gl;
            return t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)
        }
        ,
        this.getMaxTextureSize = function() {
            var t = e.gl;
            return t.getParameter(t.MAX_TEXTURE_SIZE)
        }
        ,
        this.getMaxVerticesOneDraw = function() {
            return e.gl.getExtension("OES_element_index_uint") ? 4294967296 : 65535
        }
        ,
        this.getLegalPrecision = function(t) {
            var n = e.gl
              , r = n.getShaderPrecisionFormat(n.VERTEX_SHADER, n.HIGH_FLOAT)
              , i = n.getShaderPrecisionFormat(n.VERTEX_SHADER, n.MEDIUM_FLOAT)
              , o = n.getShaderPrecisionFormat(n.FRAGMENT_SHADER, n.HIGH_FLOAT)
              , a = n.getShaderPrecisionFormat(n.FRAGMENT_SHADER, n.MEDIUM_FLOAT)
              , s = r && o && r.precision > 0 && o.precision > 0
              , u = i && a && i.precision > 0 && a.precision > 0;
            return "highp" !== t || s ? "mediump" !== t || u || (t = "lowp",
            console.warn("[WebGLCapability] mediump is not supported, using lowp by default.")) : u ? (t = "mediump",
            console.warn("[WebGLCapability] highp is not supported, using mediump by default.")) : (t = "lowp",
            console.warn("[WebGLCapability] highp and mediump is not supported, using lowp by default.")),
            t
        }
        ,
        this.gl = t,
        this.maxTextures = this.getMaxTextures(),
        this.maxVertexShaderTextureUnits = this.getMaxVertexShaderTextureUnits(),
        this.maxFragmentShaderTextureUnits = this.getMaxFragmentShaderTextureUnits(),
        this.maxTextureSize = this.getMaxTextureSize(),
        this.maxVerticesOneDraw = this.getMaxVerticesOneDraw()
    }
      , Oi = 0
      , Ii = function(t, e, n) {
        var r = t.createShader(n);
        if (!r)
            throw new Error("Something went wrong while compile the shader.");
        return t.shaderSource(r, e),
        t.compileShader(r),
        t.getShaderParameter(r, t.COMPILE_STATUS) || console.error("Error compiling shader: ".concat(t.getShaderInfoLog(r))),
        r
    }
      , Li = function() {
        function t(t, e, n) {
            this.usedTimes = void 0,
            this.id = void 0,
            this.code = void 0,
            this.program = void 0,
            this.attributes = void 0,
            this.uniforms = void 0,
            this.gl = void 0,
            this.parameters = void 0,
            this.precision = void 0,
            this.gl = t,
            this.parameters = e,
            this.precision = n.precision || "highp",
            this.usedTimes = 1,
            this.id = Oi++;
            var r = e.defines
              , i = void 0 === r ? "" : r
              , o = e.vertexShader
              , a = e.fragmentShader;
            this.code = i + o + a,
            this.program = this.createProgram(t, e, this.precision),
            this.attributes = this.fetchAttributes(t, this.program),
            this.uniforms = function(t, e) {
                var n, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [], i = {}, o = r.length;
                if (!o)
                    return i;
                for (var a = 0; a < o; a++)
                    i[n = r[a]] = t.getUniformLocation(e, n);
                return i
            }(t, this.program, this.getFullUniforms(e.uniforms))
        }
        var e = t.prototype;
        return e.getAttributes = function() {
            return this.attributes
        }
        ,
        e.getUniforms = function() {
            return this.uniforms
        }
        ,
        e.createProgram = function(t, e) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "highp"
              , r = e.vertexShader
              , i = e.fragmentShader
              , o = e.defines
              , a = void 0 === o ? "" : o
              , s = ["precision ".concat(n, " float;"), "uniform mat4 modelMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat4 mvpMatrix;", "attribute vec3 position;", "attribute vec2 uv;", ""].join("\n")
              , u = t.createProgram()
              , h = ["precision ".concat(n, " float;"), ""].join("\n")
              , c = Ii(t, s + a + r, t.VERTEX_SHADER)
              , l = Ii(t, h + a + i, t.FRAGMENT_SHADER);
            if (!u)
                throw new Error("Something went wrong while createProgram.");
            return t.attachShader(u, c),
            t.attachShader(u, l),
            t.linkProgram(u),
            u
        }
        ,
        e.fetchAttributes = function(t, e) {
            for (var n = {}, r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES), i = 0; i < r; i++) {
                var o = t.getActiveAttrib(e, i);
                if (!o)
                    throw new Error("Something went wrong while getActiveAttrib.");
                var a = o.name;
                n[a] = t.getAttribLocation(e, a)
            }
            return n
        }
        ,
        e.getFullUniforms = function(t) {
            var e = ["mvpMatrix", "modelMatrix", "projectionMatrix", "viewMatrix"];
            for (var n in t)
                Object.prototype.hasOwnProperty.call(t, n) && e.push(n);
            return e
        }
        ,
        t
    }()
      , Bi = {
        canvas: document.createElement("canvas"),
        context: void 0,
        width: 0,
        height: 0,
        pixelRatio: 1,
        precision: "highp",
        alpha: !1,
        premultipliedAlpha: !0,
        antialias: !0,
        stencil: !0,
        depth: !0,
        preserveDrawingBuffer: !1
    }
      , ki = function() {
        function t() {
            var t = this
              , e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            this.state = void 0,
            this.domElement = void 0,
            this.capability = void 0,
            this.textureOperation = void 0,
            this._gl = void 0,
            this.parameters = void 0,
            this.programs = void 0,
            this.viewportInfo = void 0,
            this.autoDisposeProgram = !0,
            this.currentCacheState = void 0,
            this.setSize = function(e, n) {
                var r = t.parameters
                  , i = r.canvas
                  , o = r.pixelRatio;
                i.style.width = "".concat(e, "px"),
                i.style.height = "".concat(n, "px"),
                i.width = e * o,
                i.height = n * o,
                t.setViewport(0, 0, e, n)
            }
            ,
            this.setViewport = function(e, n, r, i) {
                var o = t.parameters.pixelRatio
                  , a = t.viewportInfo;
                a.x = e * o,
                a.y = n * o,
                a.width = r * o,
                a.height = i * o,
                t._gl.viewport.apply(t._gl, Object.values(a))
            }
            ,
            this.setClearColor = function(e, n, r) {
                var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                !0 === t.parameters.premultipliedAlpha && (e *= i,
                n *= i,
                r *= i),
                t._gl.clearColor(e, n, r, i)
            }
            ,
            this.getContext = function() {
                return t._gl
            }
            ,
            this.forceContextLoss = function() {
                try {
                    var e = t._gl.getExtension("WEBGL_lose_context");
                    e && e.loseContext()
                } catch (t) {
                    console.error("[WebGLRenderer] WEBGL_lose_context error: ", t)
                }
            }
            ,
            this.initScene = function(e) {
                !0 === e.visible && e.traverse((function(e) {
                    !0 === e.visible && e instanceof Xr && t.initMesh(e)
                }
                ))
            }
            ,
            this.initMesh = function(e) {
                !0 === e.visible && (!0 !== e.__webglInit && (e.__webglInit = !0,
                e.addEventListener("removed", t.onObjectRemoved)),
                e.geometry && t.checkAndUpdateGeometry(e.geometry),
                e.children && e.children.length > 0 && e.children.forEach((function(e) {
                    t.initMesh(e)
                }
                )))
            }
            ,
            this.checkAndUpdateGeometry = function(e) {
                !0 !== e.__webglInit && (e.__webglInit = !0,
                e.addEventListener("removed", t.onGeometryRemove),
                e.groupsNeedUpdate = !0),
                !0 === e.groupsNeedUpdate && ("BufferGeometry" === e.type ? t.updateBufferGeometry(e) : t.updateGeometryBuffer(e, t._gl.STATIC_DRAW),
                e.groupsNeedUpdate = !1)
            }
            ,
            this.updateGeometryBuffer = function(e, n) {
                var r = e.verticesBufferData
                  , i = e.uvtsBufferData
                  , o = e.indicesBufferData
                  , a = e.borderVerticesBufferData
                  , s = t._gl;
                0 < r.length && (e.glVerticesBuffer = s.createBuffer(),
                s.bindBuffer(s.ARRAY_BUFFER, e.glVerticesBuffer),
                s.bufferData(s.ARRAY_BUFFER, r, n)),
                0 < i.length && (e.glUvtsBuffer = s.createBuffer(),
                s.bindBuffer(s.ARRAY_BUFFER, e.glUvtsBuffer),
                s.bufferData(s.ARRAY_BUFFER, i, n)),
                0 < o.length && (e.glIndicesBuffer = s.createBuffer(),
                s.bindBuffer(s.ELEMENT_ARRAY_BUFFER, e.glIndicesBuffer),
                s.bufferData(s.ELEMENT_ARRAY_BUFFER, o, n)),
                !0 === e.showBorder && void 0 !== a && 0 < a.length && (e.glBorderVerticesBuffer = s.createBuffer(),
                s.bindBuffer(s.ARRAY_BUFFER, e.glBorderVerticesBuffer),
                s.bufferData(s.ARRAY_BUFFER, e.borderVerticesBufferData, n))
            }
            ,
            this.renderScene = function(e, n) {
                !0 === e.visible && e.traverse((function(e) {
                    e instanceof Xr && (t.renderObject(e, n),
                    e.children.length && e.children.forEach((function(e) {
                        t.renderObject(e, n)
                    }
                    )))
                }
                ))
            }
            ,
            this.renderObject = function(e, n) {
                var r = e.material
                  , i = e.geometry;
                if (!0 === e.visible && r && i && !0 === r.visible) {
                    t.state.setDepthTest(r.depthTest);
                    var o = !1
                      , a = t.setProgram(n, r, e);
                    o = "BufferGeometry" === i.type ? t.updateVerticesAttribute2(a, i, !1) : t.updateVerticesAttribute(a, i, !1),
                    t.renderGeometryWithProgram(a, i, r, o)
                }
            }
            ,
            this.setProgram = function(e, n, r) {
                var i = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3]
                  , o = t._gl;
                t.textureOperation.resetUsedTextureUnits(),
                t.checkAndUpdateMaterial(r.material);
                var a = n.program
                  , s = a.getUniforms();
                return a.id !== t.currentCacheState.programId && (o.useProgram(a.program),
                t.currentCacheState.programId = a.id),
                !1 !== i && xi(o, n.uniformsList, t.textureOperation),
                t.updateMVPMatrix(s, e, r),
                a
            }
            ,
            this.checkAndUpdateMaterial = function(e) {
                void 0 !== e && (!0 !== e.__webglInit && (e.__webglInit = !0,
                e.addEventListener("removed", t.onMaterialRomove),
                e.needsUpdate = !0),
                !0 === e.needsUpdate && (t.updateMaterial(e),
                e.needsUpdate = !1))
            }
            ,
            this.updateMaterial = function(e) {
                e.program && t.removeMaterial(e);
                for (var n = null, r = t.programs.length, i = e.defines, o = (void 0 === i ? "" : i) + e.vertexShader + e.fragmentShader, a = r - 1; a >= 0; a--) {
                    var s = t.programs[a];
                    if (s.code === o) {
                        (n = s).usedTimes++;
                        break
                    }
                }
                if (null === n) {
                    var u = {
                        uniforms: e.uniforms,
                        defines: e.defines || "",
                        vertexShader: e.vertexShader,
                        fragmentShader: e.fragmentShader
                    };
                    n = new Li(t._gl,u,{
                        precision: t.parameters.precision
                    }),
                    t.programs.push(n)
                }
                e.program = n,
                e.uniformsList = [];
                var h = 0
                  , c = n.uniforms
                  , l = e.uniforms;
                for (var f in l)
                    if (Object.prototype.hasOwnProperty.call(l, f)) {
                        var d = c[f];
                        d && (e.uniformsList[h] = [l[f], d],
                        h++)
                    }
            }
            ,
            this.updateMVPMatrix = function(e, n, r) {
                if (void 0 !== e.mvpMatrix) {
                    var i = Pe(n.projectionMatrix);
                    ke(i, i, n.viewMatrix),
                    ke(i, i, r.worldMatrix),
                    t._gl.uniformMatrix4fv(e.mvpMatrix, !1, i),
                    t._gl.uniformMatrix4fv(e.modelMatrix, !1, r.worldMatrix),
                    t._gl.uniformMatrix4fv(e.viewMatrix, !1, n.viewMatrix),
                    t._gl.uniformMatrix4fv(e.projectionMatrix, !1, n.projectionMatrix)
                }
                t.currentCacheState.camera = n
            }
            ,
            this.renderGeometryWithProgram = function(e, n, r) {
                var i = t._gl
                  , o = t.currentCacheState.curRenderTarget;
                if (e.uniforms.showDebugLine && i.uniform1i(e.uniforms.showDebugLine, 0),
                "BufferGeometry" === n.type ? i.bindBuffer(i.ELEMENT_ARRAY_BUFFER, n.indexesBuffer) : i.bindBuffer(i.ELEMENT_ARRAY_BUFFER, n.glIndicesBuffer),
                null !== o && void 0 !== o.glFrameBuffer) {
                    var a = i.checkFramebufferStatus(i.FRAMEBUFFER);
                    if (i.FRAMEBUFFER_COMPLETE !== a)
                        return t.removeRenderTarget(o),
                        void (t.currentCacheState.curRenderTarget = null)
                }
                n.indexes && n.indexes.count > 0 ? i.drawElements(i.TRIANGLES, n.indexes.count, i.UNSIGNED_SHORT, 0) : i.drawArrays(i.TRIANGLES, 0, n.attributes.position.count)
            }
            ,
            this.onObjectRemoved = function(e) {
                e.target.traverse((function(e) {
                    e.removeEventListener("removed", t.onObjectRemoved),
                    t.removeObject(e)
                }
                ))
            }
            ,
            this.onGeometryRemove = function(e) {
                var n = e.target;
                n.removeEventListener("removed", t.onGeometryRemove),
                t.removeGeometry(n)
            }
            ,
            this.onMaterialRomove = function(e) {
                var n = e.target;
                n.removeEventListener("removed", t.onMaterialRomove),
                t.removeMaterial(n)
            }
            ,
            this.onRenderTargetRemove = function(e) {
                var n = e.target;
                n.removeEventListener("removed", t.onRenderTargetRemove),
                t.removeRenderTarget(n)
            }
            ,
            this.removeObject = function(t) {
                t.geometry && delete t.geometry.__webglInit,
                delete t.__webglInit
            }
            ,
            this.removeGeometry = function(e) {
                delete e.__webglInit,
                t.deleteBuffers(e),
                t.currentCacheState.geometryProgramId = null
            }
            ,
            this.deleteBuffers = function(e) {
                ["glVerticesBuffer", "glUvtsBuffer", "glIndicesBuffer", "glBorderVerticesBuffer"].forEach((function(n) {
                    t._gl.deleteBuffer(e[n]),
                    void 0 !== e[n] && 0 < e[n] && delete e[n]
                }
                ))
            }
            ,
            this.removeMaterial = function(e) {
                var n = e.program.program;
                if (n) {
                    e.program = null;
                    for (var r = t.programs, i = r.length - 1; i >= 0; i--) {
                        var o = r[i];
                        if (o.program === n) {
                            o.usedTimes--,
                            0 === o.usedTimes && !1 !== t.autoDisposeProgram && (r.splice(i, 1),
                            t._gl.deleteProgram(n));
                            break
                        }
                    }
                }
            }
            ,
            this.removeRenderTarget = function(e) {
                t._gl.deleteRenderbuffer(e.glDepthBuffer),
                e.glDepthBuffer = null,
                t._gl.deleteTexture(e.glTexture),
                e.glTexture = null,
                t._gl.deleteFramebuffer(e.glFrameBuffer),
                e.glFrameBuffer = null
            }
            ,
            this.parameters = Object.assign({}, Bi, e),
            e && !e.canvas && (this.parameters.canvas = document.createElement("canvas")),
            this.initGL(),
            this.programs = [],
            this.viewportInfo = {
                x: 0,
                y: 0,
                width: this.parameters.canvas.width,
                height: this.parameters.canvas.height
            },
            this.parameters.width && this.parameters.height && this.setSize(this.parameters.width, this.parameters.height),
            this.domElement = this.parameters.canvas,
            this.state = new Pi(this._gl),
            this.state.setDefaultGLState.apply(this.state, Object.values(this.viewportInfo)),
            this.currentCacheState = {
                programId: null,
                geometryProgramId: null,
                materialId: null,
                camera: null,
                curRenderTarget: null
            },
            this.capability = new Di(this._gl);
            var n = this.capability.maxTextures
              , r = this.capability.maxTextureSize;
            this.textureOperation = new hi(this._gl,n,r)
        }
        var e = t.prototype;
        return e.clearBuffer = function() {
            var t = this._gl;
            t.clear(t.COLOR_BUFFER_BIT | t.DEPTH_BUFFER_BIT)
        }
        ,
        e.initGL = function() {
            var t = this
              , e = this.parameters
              , n = e.canvas
              , r = e.context
              , i = e.alpha
              , o = e.depth
              , a = e.stencil
              , s = e.antialias
              , u = e.premultipliedAlpha
              , h = e.preserveDrawingBuffer;
            try {
                var c = {
                    alpha: i,
                    depth: o,
                    stencil: a,
                    antialias: s,
                    premultipliedAlpha: u,
                    preserveDrawingBuffer: h
                }
                  , l = r || n.getContext("webgl", c) || n.getContext("experimental-webgl", c) || n.getContext("moz-webgl", c) || n.getContext("webkit-3d", c);
                if (!l)
                    throw null !== n.getContext ? "Error creating WebGL context with your provided attributes." : "Error creating WebGL context.";
                this._gl = l,
                n.addEventListener("webglcontextlost", (function(e) {
                    e.preventDefault(),
                    void 0 !== t.state && (t.resetGLState(),
                    t.state.setDefaultGLState.apply(t.state, Object.values(t.viewportInfo)))
                }
                ), !1)
            } catch (t) {
                console.error("[WebGLRenderer] Create webgl error: ", t)
            }
        }
        ,
        e.resetGLState = function() {
            this.currentCacheState = {
                programId: null,
                geometryProgramId: null,
                materialId: null,
                camera: null,
                curRenderTarget: null
            },
            this.state.reset()
        }
        ,
        e.setRenderTarget = function(t) {
            var e = this._gl;
            void 0 !== t && null === t.glFrameBuffer && (t.addEventListener("removed", this.onRenderTargetRemove),
            t.glFrameBuffer = e.createFramebuffer(),
            e.bindFramebuffer(e.FRAMEBUFFER, t.glFrameBuffer),
            this.textureOperation.setTextureForRenderTarget(t),
            t.glDepthBuffer = e.createRenderbuffer(),
            e.bindRenderbuffer(e.RENDERBUFFER, t.glDepthBuffer),
            e.renderbufferStorage(e.RENDERBUFFER, e.DEPTH_COMPONENT16, t.width, t.height),
            e.framebufferTexture2D(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.TEXTURE_2D, t.glTexture, 0),
            e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.RENDERBUFFER, t.glDepthBuffer),
            e.bindTexture(e.TEXTURE_2D, null),
            e.bindRenderbuffer(e.RENDERBUFFER, null),
            e.bindFramebuffer(e.FRAMEBUFFER, null))
        }
        ,
        e.render = function(t, e, n) {
            if (e.isCamera) {
                var r = this._gl;
                if (t.updateWorldMatrix(),
                e.updateWorldMatrix(),
                e.updateProjectionMatrix(),
                this.currentCacheState.camera = null,
                void 0 !== n)
                    this.setRenderTarget(n),
                    this.currentCacheState.curRenderTarget = n,
                    r.bindFramebuffer(r.FRAMEBUFFER, n.glFrameBuffer),
                    r.viewport(0, 0, n.width, n.height);
                else {
                    var i = this.viewportInfo
                      , o = i.width
                      , a = i.height;
                    this.currentCacheState.curRenderTarget = null,
                    r.bindFramebuffer(r.FRAMEBUFFER, null),
                    r.viewport(0, 0, o, a)
                }
                this.initScene(t),
                this.renderScene(t, e)
            } else
                console.error("[WebGLRenderer]  Camera is not leagal.")
        }
        ,
        e.updateBufferGeometry = function(t) {
            var e = this._gl
              , n = t.getIndexes()
              , r = t.getAttribute();
            for (var i in r)
                if (Object.prototype.hasOwnProperty.call(r, i)) {
                    var o = i + "Buffer"
                      , a = r[i]
                      , s = a.array
                      , u = a.usage;
                    t[o] = e.createBuffer(),
                    e.bindBuffer(e.ARRAY_BUFFER, t[o]),
                    e.bufferData(e.ARRAY_BUFFER, s, u)
                }
            n && (t.indexesBuffer = e.createBuffer(),
            e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, t.indexesBuffer),
            e.bufferData(e.ELEMENT_ARRAY_BUFFER, n.array, n.usage))
        }
        ,
        e.updateVerticesAttribute2 = function(t, e) {
            var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]
              , r = this._gl
              , i = !1
              , o = "".concat(e.id, "_").concat(t.id);
            if (o !== this.currentCacheState.geometryProgramId) {
                this.currentCacheState.geometryProgramId = o,
                this.state.initAttributes(),
                i = !0;
                var a = e.getAttribute();
                for (var s in a)
                    if (Object.prototype.hasOwnProperty.call(a, s)) {
                        var u = s + "Buffer"
                          , h = a[s]
                          , c = h.itemSize
                          , l = h.type
                          , f = h.normalized;
                        0 <= t.attributes[s] && (!0 !== n && (r.bindBuffer(r.ARRAY_BUFFER, e[u]),
                        r.vertexAttribPointer(t.attributes[s], c, l, f, 0, 0)),
                        this.state.enableAttribute(t.attributes[s]))
                    }
            }
            return this.state.disableUnusedAttributes(),
            i
        }
        ,
        e.updateVerticesAttribute = function(t, e) {
            var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]
              , r = this._gl
              , i = !1
              , o = "".concat(e.id, "_").concat(t.id);
            if (o !== this.currentCacheState.geometryProgramId) {
                this.currentCacheState.geometryProgramId = o,
                this.state.initAttributes(),
                i = !0;
                var a = t.getAttributes();
                0 <= a.position && (!0 !== n && (r.bindBuffer(r.ARRAY_BUFFER, e.glVerticesBuffer),
                r.vertexAttribPointer(a.position, 3, r.FLOAT, !1, 0, 0)),
                this.state.enableAttribute(a.position)),
                0 <= a.uv && void 0 !== e.glUvtsBuffer && (r.bindBuffer(r.ARRAY_BUFFER, e.glUvtsBuffer),
                r.vertexAttribPointer(a.uv, 2, r.FLOAT, !1, 0, 0),
                this.state.enableAttribute(a.uv))
            }
            return this.state.disableUnusedAttributes(),
            i
        }
        ,
        t
    }()
      , Ui = function(t) {
        function e(e, n, r, i, o, a) {
            var s;
            switch ((s = t.call(this) || this).addIntoBuffer = function(t, e, n) {
                t[n] = e[0],
                t[n + 1] = e[1],
                t[n + 2] = e[2]
            }
            ,
            s.get3DVertex = function(t, e) {
                var n;
                switch (e) {
                case "x":
                    n = zt(0, t[0], t[1]);
                    break;
                case "y":
                    n = zt(t[0], 0, t[1]);
                    break;
                default:
                    n = zt(t[0], t[1], 0)
                }
                return n
            }
            ,
            s.zeroAxis = void 0 !== o ? o : "z",
            s.zeroAxis) {
            case "x":
                s.normal = zt(-1, 0, 0);
                break;
            case "y":
            default:
                s.normal = zt(0, -1, 0);
                break;
            case "z":
                s.normal = zt(0, 0, -1)
            }
            a = void 0 !== a ? a : {},
            s.showBorder = !(!1 === a.showBorder),
            s.borderWidth = void 0 !== a.borderWidth ? a.borderWidth : 1,
            s.borderColor = void 0 !== a.borderColor ? a.borderColor : [0, 0, 0, 1];
            var u, h, c, l = .5 * e, f = .5 * n, d = r || 1, p = i || 1, v = e / d, m = n / p, g = (d + 1) * (p + 1);
            s.verticesBufferData = new Float32Array(3 * g),
            s.uvtsBufferData = new Float32Array(2 * g),
            s.indicesBufferData = new (g > 65535 ? Uint32Array : Uint16Array)(d * p * 6);
            for (var y = 0, _ = 0, x = 0; x <= p; x++) {
                u = x * m - f;
                for (var b = 0; b <= d; b++)
                    c = yt(b * v - l, u),
                    h = s.get3DVertex(c, s.zeroAxis),
                    s.vertices.push(h),
                    s.addIntoBuffer(s.verticesBufferData, h, y),
                    s.uvtsBufferData[_] = b / d,
                    s.uvtsBufferData[_ + 1] = 1 - x / p,
                    y += 3,
                    _ += 2
            }
            for (var M, w, E, T, A = 0, C = 0; C < p; C++)
                for (var R = 0; R < d; R++)
                    M = R + (d + 1) * C,
                    w = R + (d + 1) * (C + 1),
                    E = R + 1 + (d + 1) * (C + 1),
                    T = R + 1 + (d + 1) * C,
                    s.addIntoBuffer(s.indicesBufferData, [M, w, E], A),
                    s.addIntoBuffer(s.indicesBufferData, [M, E, T], A + 3),
                    A += 6;
            s.borderIndicesBufferData = new Uint16Array(4),
            s.borderIndicesBufferData[0] = 0,
            s.borderIndicesBufferData[1] = d,
            s.borderIndicesBufferData[2] = (d + 1) * p,
            s.borderIndicesBufferData[3] = (d + 1) * (p + 1) - 1;
            var S = 0;
            s.borderVerticesBufferData = new Float32Array(6 * (d + p));
            for (var P = 0; P < g; P += d + 1)
                s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[P], S),
                S += 3;
            for (var D = (d + 1) * p + 1; D < g; D++)
                s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[D], S),
                S += 3;
            for (var O = (d + 1) * p - 1; O > 0; O -= d + 1)
                s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[O], S),
                S += 3;
            for (var I = d - 1; I > 0; I--)
                s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[I], S),
                S += 3;
            return s
        }
        return c(e, t),
        e
    }(Qr)
      , Ni = "z"
      , Fi = function(t) {
        function e(n, r, i, o) {
            var a, s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {};
            a = t.call(this) || this;
            var u = e.buildPlane(n, r, i, o, s)
              , h = u.uvs
              , c = u.indices
              , l = u.normals
              , f = u.vertices;
            return a.name = "PlaneBufferGeometry",
            a.setAttribute("position", new Vr(f,3)),
            a.setAttribute("normals", new Vr(l,3)),
            a.setAttribute("uv", new Vr(h,2)),
            a.setIndexes(c),
            a
        }
        return c(e, t),
        e.buildPlane = function(t, n, r, i) {
            for (var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {}, a = o.normalAxis, s = void 0 === a ? Ni : a, u = o.useBack, h = void 0 !== u && u, c = o.normalDest, l = void 0 === c ? 0 : c, f = .5 * t, d = .5 * n, p = r || 1, v = i || 1, m = t / p, g = n / v, y = e.getNormal(s, h), _ = [], x = [], b = [], M = [], w = 0; w <= v; w++)
                for (var E = w * g - d, T = 0; T <= p; T++) {
                    var A = T * m - f
                      , C = e.get3DVertex([A, E], s, l);
                    b.push.apply(b, vi(C)),
                    _.push(T / p, 1 - w / v),
                    M.push.apply(M, vi(y))
                }
            for (var R = 0; R < v; R++)
                for (var S = 0; S < p; S++) {
                    var P = S + (p + 1) * R
                      , D = S + (p + 1) * (R + 1)
                      , O = S + 1 + (p + 1) * (R + 1)
                      , I = S + 1 + (p + 1) * R;
                    x.push(P, D, O),
                    x.push(P, O, I)
                }
            return {
                uvs: _,
                indices: x,
                vertices: b,
                normals: M
            }
        }
        ,
        e.getNormal = function(t) {
            var e, n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], r = n ? -1 : 1;
            switch (t) {
            case "x":
                e = [r, 0, 0];
                break;
            case Ni:
                e = [0, 0, r];
                break;
            default:
                e = [0, r, 0]
            }
            return e
        }
        ,
        e
    }(Hr);
    Fi.get3DVertex = function(t, e) {
        var n, r = _i(t, 2), i = r[0], o = r[1], a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
        switch (e) {
        case "x":
            n = [a, i, o];
            break;
        case "y":
            n = [i, a, o];
            break;
        default:
            n = [i, o, a]
        }
        return n
    }
    ;
    var ji = function(t) {
        function e(e, n, r, i, o, a) {
            var s;
            (s = t.call(this) || this).name = "BoxGeometry";
            var u = s.initBox(e, n, r, i, o, a)
              , h = u.uvs
              , c = u.normals
              , l = u.vertices
              , f = u.indices;
            return s.setAttribute("position", new Vr(l,3)),
            s.setAttribute("normals", new Vr(c,3)),
            s.setAttribute("uv", new Vr(h,2)),
            s.setIndexes(f),
            s
        }
        return c(e, t),
        e.prototype.initBox = function(t, e, n, r, i, o) {
            var a = []
              , s = Fi.buildPlane
              , u = s(n, e, o, i, {
                normalAxis: "x",
                normalDest: t / 2
            })
              , h = s(n, e, o, i, {
                normalAxis: "x",
                useBack: !0,
                normalDest: -t / 2
            })
              , c = s(t, n, r, o, {
                normalAxis: "y",
                normalDest: e / 2
            })
              , l = s(t, n, r, o, {
                normalAxis: "y",
                useBack: !0,
                normalDest: -e / 2
            })
              , f = s(t, e, r, i, {
                normalAxis: "z",
                normalDest: n / 2
            })
              , d = s(t, e, r, i, {
                normalAxis: "z",
                useBack: !0,
                normalDest: -n / 2
            });
            a.push(u, h, c, l, f, d);
            for (var p = 0, v = [], m = [], g = [], y = [], _ = function(t) {
                var e = a[t]
                  , n = e.uvs
                  , r = e.vertices
                  , i = e.normals
                  , o = e.indices
                  , s = p;
                v = v.concat(n),
                m = m.concat(r),
                g = g.concat(i),
                y = y.concat(o.map((function(t) {
                    return s + t
                }
                ))),
                p += r.length / 3
            }, x = 0; x < 6; x++)
                _(x);
            return {
                uvs: v,
                vertices: m,
                normals: g,
                indices: y
            }
        }
        ,
        e
    }(Hr)
      , zi = function(t) {
        function e(e, n) {
            var r;
            return (r = t.call(this) || this).width = void 0,
            r.height = void 0,
            r.glFrameBuffer = null,
            r.glDepthBuffer = null,
            r.flipY = !1,
            r.premultiplyAlpha = !1,
            r.glTexture = null,
            r.width = e,
            r.height = n,
            r
        }
        return c(e, t),
        e
    }(Dr);
    function Vi(t, e) {
        var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
        if (!n) {
            if (Array.isArray(t) || (n = function(t, e) {
                if (!t)
                    return;
                if ("string" == typeof t)
                    return Gi(t, e);
                var n = Object.prototype.toString.call(t).slice(8, -1);
                "Object" === n && t.constructor && (n = t.constructor.name);
                if ("Map" === n || "Set" === n)
                    return Array.from(t);
                if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                    return Gi(t, e)
            }(t)) || e && t && "number" == typeof t.length) {
                n && (t = n);
                var r = 0
                  , i = function() {};
                return {
                    s: i,
                    n: function() {
                        return r >= t.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: t[r++]
                        }
                    },
                    e: function(t) {
                        throw t
                    },
                    f: i
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        var o, a = !0, s = !1;
        return {
            s: function() {
                n = n.call(t)
            },
            n: function() {
                var t = n.next();
                return a = t.done,
                t
            },
            e: function(t) {
                s = !0,
                o = t
            },
            f: function() {
                try {
                    a || null == n.return || n.return()
                } finally {
                    if (s)
                        throw o
                }
            }
        }
    }
    function Gi(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var n = 0, r = new Array(e); n < e; n++)
            r[n] = t[n];
        return r
    }
    var Wi = function() {
        function t() {
            this.faceCount = 0,
            this.verticesCoords = [],
            this.textureCoords = [],
            this.uvs = [],
            this.vertices = [],
            this.normals = [],
            this.indexes = []
        }
        var e = t.prototype;
        return e.load = function(t) {
            var e = this;
            return new Promise((function(n) {
                (function(t) {
                    var e = new XMLHttpRequest;
                    return e.open("GET", t, !0),
                    e.send(null),
                    new Promise((function(t) {
                        e.addEventListener("load", (function() {
                            t(e.responseText)
                        }
                        ), !1)
                    }
                    ),(function(t) {
                        e.addEventListener("error", (function(e) {
                            console.error("request error"),
                            t(e)
                        }
                        ), !1)
                    }
                    ))
                }
                )(t).then((function(t) {
                    e.parse(t);
                    var r = e.genObject3D();
                    n(r)
                }
                ))
            }
            ))
        }
        ,
        e.genObject3D = function() {
            var t = new Hr;
            t.setAttribute("position", new Vr(this.vertices,3)),
            this.uvs.length && t.setAttribute("uv", new Vr(this.uvs,2)),
            t.setIndexes(this.indexes);
            var e = new Si;
            return new Xr(t,e)
        }
        ,
        e.parse = function(t) {
            var e, n = Vi(t.split("\n"));
            try {
                for (n.s(); !(e = n.n()).done; ) {
                    var r = e.value
                      , i = r.indexOf("#");
                    -1 !== i && (r = r.substring(0, i));
                    var o = (r = r.trim()).split(/\s+/);
                    switch (o[0]) {
                    case "v":
                        this.verticesCoords.push(parseFloat(o[1]), parseFloat(o[2]), parseFloat(o[3]));
                        break;
                    case "vn":
                        this.normals.push(parseFloat(o[1]), parseFloat(o[2]), parseFloat(o[3]));
                        break;
                    case "vt":
                        this.textureCoords.push(parseFloat(o[1]), parseFloat(o[2]));
                        break;
                    case "p":
                    case "l":
                    case "usemtl":
                        break;
                    case "f":
                        o.shift(),
                        this.parseFaceLine(o)
                    }
                }
            } catch (t) {
                n.e(t)
            } finally {
                n.f()
            }
        }
        ,
        e.parseFaceLine = function(t) {
            for (var e = [], n = t.length, r = 0; r < n; r++) {
                var i = t[r];
                if (i.length > 0) {
                    var o = i.split("/");
                    e.push(o)
                }
            }
            for (var a = e[0], s = 1, u = e.length - 1; s < u; s++) {
                var h = e[s]
                  , c = e[s + 1];
                this.addFace(a, h, c)
            }
        }
        ,
        e.addFace = function(t, e, n) {
            var r = this.verticesCoords
              , i = r.length / 3
              , o = this.parseVertexIndex(t[0], i)
              , a = this.parseVertexIndex(e[0], i)
              , s = this.parseVertexIndex(n[0], i);
            this.vertices.push(r[o], r[o + 1], r[o + 2], r[a], r[a + 1], r[a + 2], r[s], r[s + 1], r[s + 2]);
            var u = 3 * this.faceCount;
            if (this.indexes.push(u, u + 1, u + 2),
            this.faceCount++,
            "" !== t[1]) {
                var h = this.textureCoords
                  , c = h.length
                  , l = this.parseUVIndex(t[1], c)
                  , f = this.parseUVIndex(e[1], c)
                  , d = this.parseUVIndex(n[1], c);
                this.uvs.push(h[l], h[l + 1], h[f], h[f + 1], h[d], h[d + 1])
            }
            t[2]
        }
        ,
        e.parseVertexIndex = function(t, e) {
            var n = parseInt(t, 10);
            return 3 * (n >= 0 ? n - 1 : n + e / 3)
        }
        ,
        e.parseUVIndex = function(t, e) {
            var n = parseInt(t, 10);
            return 2 * (n >= 0 ? n - 1 : n + e / 2)
        }
        ,
        t
    }();
    function Hi(t) {
        return new Promise((function(e, n) {
            var r = new Image;
            r.src = t,
            r.crossOrigin = "Anonymous",
            r.onload = function() {
                e(r)
            }
            ,
            r.onerror = function(t) {
                n(t)
            }
        }
        ))
    }
    function Zi(t) {
        if (6 !== t.length)
            throw new Error("[loadCubeTexture] param urls need len six. [px, nx, py, ny, pz, nz]");
        return new Promise((function(e, n) {
            for (var r = 0, i = new ui, o = i.image, a = function(a) {
                Hi(t[a]).then((function(t) {
                    r++,
                    o[a] = t,
                    6 === r && (i.needsUpdate = !0,
                    e(i))
                }
                )).catch((function(t) {
                    console.error(t),
                    n(t)
                }
                ))
            }, s = 0; s < 6; s++)
                a(s)
        }
        ))
    }
    var qi = function(t) {
        function e() {
            var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : .1, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3e3;
            return (e = t.call(this) || this).isCamera = !0,
            e.viewMatrix = Se(),
            e.projectionMatrix = Se(),
            e.projectionMatrixNeedUpdate = !1,
            e._far = void 0,
            e._near = void 0,
            e._far = r,
            e._near = n,
            e
        }
        return c(e, t),
        e.prototype.updateWorldMatrix = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            t.prototype.updateWorldMatrix.call(this, e),
            Le(this.viewMatrix, this.worldMatrix)
        }
        ,
        o(e, [{
            key: "near",
            get: function() {
                return this._near
            },
            set: function(t) {
                this._near = t,
                this.projectionMatrixNeedUpdate = !0
            }
        }, {
            key: "far",
            get: function() {
                return this._far
            },
            set: function(t) {
                this._far = t,
                this.projectionMatrixNeedUpdate = !0
            }
        }]),
        e
    }(kr)
      , Yi = function(t) {
        function e(e, n, r, i, o, a) {
            var s;
            return (s = t.call(this, o, a) || this)._left = void 0,
            s._right = void 0,
            s._top = void 0,
            s._bottom = void 0,
            s._top = r,
            s._left = e,
            s._right = n,
            s._bottom = i,
            s.updateProjectionMatrix(!0),
            s
        }
        c(e, t);
        var n = e.prototype;
        return n.updateProjectionMatrix = function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            if (!0 === t || !0 === this.projectionMatrixNeedUpdate) {
                var e = (this.right - this.left) / 2
                  , n = (this.top - this.bottom) / 2
                  , r = (this.right + this.left) / 2
                  , i = (this.top + this.bottom) / 2
                  , o = r - e
                  , a = r + e
                  , s = i + n
                  , u = i - n;
                Oe(this.projectionMatrix),
                Je(this.projectionMatrix, o, a, s, u, this.near, this.far),
                this.projectionMatrixNeedUpdate = !1
            }
        }
        ,
        n.clone = function(n) {
            return void 0 === n && (n = new e(0,0,0,0,0,0)),
            t.prototype.clone.call(this, n),
            n.left = this.left,
            n.right = this.right,
            n.top = this.top,
            n.bottom = this.bottom,
            n.near = this.near,
            n.far = this.far,
            n.updateProjectionMatrix(),
            n.updateWorldMatrix(),
            n
        }
        ,
        o(e, [{
            key: "top",
            get: function() {
                return this._top
            },
            set: function(t) {
                t !== this._top && (this._top = t,
                this.projectionMatrixNeedUpdate = !0)
            }
        }, {
            key: "left",
            get: function() {
                return this._left
            },
            set: function(t) {
                t !== this._left && (this._left = t,
                this.projectionMatrixNeedUpdate = !0)
            }
        }, {
            key: "right",
            get: function() {
                return this._right
            },
            set: function(t) {
                t !== this._right && (this._right = t,
                this.projectionMatrixNeedUpdate = !0)
            }
        }, {
            key: "bottom",
            get: function() {
                return this._bottom
            },
            set: function(t) {
                t !== this._bottom && (this._bottom = t,
                this.projectionMatrixNeedUpdate = !0)
            }
        }]),
        e
    }(qi)
      , Xi = function(t) {
        function e(e, n, r, i) {
            var o;
            return (o = t.call(this, r, i) || this).type = "PerspectiveCamera",
            o._fov = void 0,
            o._aspect = void 0,
            o._fov = e,
            o._aspect = n,
            o.updateProjectionMatrix(!0),
            o
        }
        c(e, t);
        var n = e.prototype;
        return n.updateProjectionMatrix = function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            !0 !== t && !0 !== this.projectionMatrixNeedUpdate || (Oe(this.projectionMatrix),
            Ke(this.projectionMatrix, this.fov * Math.PI / 180, this.aspect, this.near, this.far),
            this.projectionMatrixNeedUpdate = !1)
        }
        ,
        n.clone = function(n) {
            return void 0 === n && (n = new e(0,0,0,0)),
            t.prototype.clone.call(this, n),
            n.fov = this.fov,
            n.aspect = this.aspect,
            n.near = this.near,
            n.far = this.far,
            n.updateProjectionMatrix(),
            n.updateWorldMatrix(),
            n
        }
        ,
        o(e, [{
            key: "fov",
            get: function() {
                return this._fov
            },
            set: function(t) {
                t !== this._fov && (this._fov = t,
                this.projectionMatrixNeedUpdate = !0)
            }
        }, {
            key: "aspect",
            get: function() {
                return this._aspect
            },
            set: function(t) {
                t !== this._aspect && (this._aspect = t,
                this.projectionMatrixNeedUpdate = !0)
            }
        }]),
        e
    }(qi)
      , Ki = Object.freeze({
        __proto__: null,
        Mesh: Xr,
        Scene: Kr,
        Geometry: Qr,
        Object3D: kr,
        Raycaster: ai,
        Texture: si,
        CubeTexture: ui,
        TextureOperation: hi,
        Material: Ei,
        BasicMaterial: Si,
        BufferGeometry: Hr,
        WebGLRenderer: ki,
        PlaneGeometry: Ui,
        BoxGeometry: ji,
        WebGLRenderTarget: zi,
        PlaneBufferGeometry: Fi,
        Box3: Ur,
        OBJLoader: Wi,
        loadImage: Hi,
        loadTexture: function(t, e, n) {
            return Hi(t).then((function(t) {
                var n = new si(t);
                return e && e(n),
                n
            }
            )).catch((function(t) {
                n && n(t)
            }
            ))
        },
        loadCubeTexture: Zi,
        Vec2: kt,
        Vec3: me,
        Vec4: Bn,
        Mat3: Re,
        Mat4: on,
        Quat: Tr,
        quatToEuler: Or,
        BufferAttribute: Nr,
        Uint8BufferAttribute: Fr,
        Uint16BufferAttribute: jr,
        Uint32BufferAttribute: zr,
        Float32ArrayAttribute: Vr,
        UintBufferAttribute: Gr,
        OrthographicCamera: Yi,
        PerspectiveCamera: Xi
    })
      , Qi = function() {
        function t(t) {
            this.pano = void 0,
            this.panoData = void 0,
            this._meshs = new Xr,
            this.pano = t
        }
        return o(t, [{
            key: "camera",
            get: function() {
                return this.pano.camera
            }
        }, {
            key: "meshs",
            get: function() {
                return this._meshs
            },
            set: function(t) {
                this._meshs = t
            }
        }]),
        t
    }()
      , Ji = ["varying vec3 v_normal;", "void main(void){", "   gl_Position = mvpMatrix * vec4(position, 1.0);", "   v_normal = normalize(position.xyz);", "}"].join("\n")
      , $i = ["uniform samplerCube uSampler;", "uniform float uOpacity;", "varying vec3 v_normal;", "void main(void){", "    vec4 textureColor = textureCube(uSampler, normalize(v_normal));", "    gl_FragColor = vec4(textureColor.rgb, textureColor.a * uOpacity);", "}"].join("\n")
      , to = function(t) {
        function e(e) {
            var n;
            return (n = t.call(this, e) || this).initMesh(),
            n
        }
        c(e, t);
        var n = e.prototype;
        return n.initMesh = function() {
            var t = new ji(8,8,8,1,1,1)
              , e = new Ei;
            e.vertexShader = Ji,
            e.fragmentShader = $i,
            e.uniforms = {
                vColor: {
                    type: "4f",
                    value: [1, 0, 0, 1]
                },
                uSampler: {
                    type: "t",
                    value: null
                },
                uOpacity: {
                    type: "1f",
                    value: 1
                }
            };
            var n = new Xr(t,e);
            n.visible = !1,
            n.setScale(-1, 1, 1),
            this.meshs = n
        }
        ,
        n.setData = function(t) {
            var e = this;
            if (!t.image || 6 !== t.image.length)
                throw new Error("天空盒模型需要6张纹理，但只获取到 ".concat(t.image ? t.image.length : 0, "张"));
            this.panoData = t;
            var n = this.meshs;
            Zi(t.image).then((function(t) {
                n.material.uniforms.uSampler.value = t,
                n.visible = !0,
                e.pano.emit({
                    type: d.REFRESH,
                    log: "[Refresh Log] 立方贴图加载完成， 渲染一帧"
                })
            }
            )).catch((function(t) {
                return console.error(t)
            }
            ))
        }
        ,
        n.update = function() {}
        ,
        n.draw = function() {}
        ,
        e
    }(Qi)
      , eo = function(t) {
        return t
    }
      , no = function(t) {
        return t * t
    }
      , ro = function(t) {
        return -t * (t - 2)
    }
      , io = no
      , oo = ro
      , ao = Object.freeze({
        __proto__: null,
        linear: eo,
        reverse: function(t) {
            return 1 - t
        },
        easeInQuad: no,
        easeInCubic: function(t) {
            return Math.pow(t, 3)
        },
        easeOutQuad: ro,
        easeOutCubic: function(t) {
            return Math.pow(t - 1, 3) + 1
        },
        easeInOutQuad: function(t) {
            return t < .5 ? t * t * 2 : -2 * (t - 2) * t - 1
        },
        easeInOutCubic: function(t) {
            return t < .5 ? 4 * Math.pow(t, 3) : 4 * Math.pow(t - 1, 3) + 1
        },
        easeInOutSine: function(t) {
            return (1 - Math.cos(Math.PI * t)) / 2
        },
        easeIn: io,
        easeOut: oo
    })
      , so = function() {}
      , uo = function() {
        function t(t, e, n) {
            var r = this
              , i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : eo;
            this.from = void 0,
            this.to = void 0,
            this.duration = void 0,
            this.easingFn = void 0,
            this._isPlaying = !1,
            this._autoTimer = null,
            this._startTime = null,
            this._onUpdateCallback = so,
            this._onEndCallback = so,
            this.start = function() {
                return r._isPlaying || (r._isPlaying = !0,
                r._startTime = r.getNow()),
                r
            }
            ,
            this.stop = function() {
                return r._isPlaying = !1,
                r
            }
            ,
            this.startAndAutoUpdate = function() {
                if (r._isPlaying)
                    return r;
                r.start(),
                r._autoTimer = null;
                return function t() {
                    r.update(),
                    r._autoTimer = requestAnimationFrame(t)
                }(),
                r
            }
            ,
            this.onEnd = function(t) {
                return "function" == typeof t ? r._onEndCallback = t : console.warn("[Warning] onUpdate required a funtion"),
                r
            }
            ,
            this.onUpdate = function(t) {
                return "function" == typeof t ? r._onUpdateCallback = t : console.warn("[Warning] onUpdate required a funtion"),
                r
            }
            ,
            this.update = function() {
                if (!r._isPlaying)
                    return !1;
                var t = r.from
                  , e = r.to
                  , n = r.getNow()
                  , i = r.easingFn
                  , o = r._startTime;
                if (o > n)
                    return !1;
                var a = (n - o) / r.duration
                  , s = t + (e - t) * i(a = 0 === r.duration || a > 1 ? 1 : a);
                return r._onUpdateCallback(s),
                1 === a && r.handleEnd(),
                !0
            }
            ,
            this.from = t,
            this.to = e,
            this.duration = n,
            this.easingFn = i
        }
        var e = t.prototype;
        return e.getNow = function() {
            return Date.now()
        }
        ,
        e.handleEnd = function() {
            this._isPlaying = !1,
            this._autoTimer = null,
            this._onEndCallback()
        }
        ,
        t
    }()
      , ho = function(t, e, n) {
        var r = .5 * e
          , i = .5 * n;
        return yt((t[0] - r) / r, (i - t[1]) / i)
    }
      , co = function(t, e, n) {
        var r = .5 * e
          , i = .5 * n;
        return yt((t[0] + 1) * r, (1 - t[1]) * i)
    }
      , lo = function(t, e, n, r) {
        var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 100
          , o = an()
          , a = ho(t, n, r)
          , s = un(a[0], a[1], i, 1)
          , u = Se()
          , h = e.worldMatrix;
        return Le(u, e.projectionMatrix),
        wn(o, s, u),
        wn(o, o, h),
        o
    }
      , fo = function(t, e, n, r) {
        var i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4]
          , o = un(e[0], e[1], e[2], 1);
        if (wn(o, o, t.viewMatrix),
        0 < o[2] && !0 !== i)
            return null;
        wn(o, o, t.projectionMatrix),
        o[0] = o[0] / o[3],
        o[1] = o[1] / o[3],
        o[2] = o[2] / o[3],
        o[3] = 1;
        var a = yt(o[0], o[1]);
        return co(a, n, r)
    }
      , po = function(t, e, n, r) {
        var i = fo(e, t, n, r) || [-1, -1]
          , o = _i(i, 2)
          , a = o[0]
          , s = o[1]
          , u = !1;
        return a >= 0 && a <= n && s >= 0 && s <= r && (u = !0),
        u
    }
      , vo = Object.freeze({
        __proto__: null,
        viewportToNormalizeProjection: ho,
        normalizeProjectionToViewport: co,
        viewportToWorld: lo,
        worldToViewport: fo,
        isCoordsInView: po
    })
      , mo = function() {
        function t() {
            var e = this
              , n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 500;
            this.getVertexs = function() {
                return e.vertexs
            }
            ,
            this.getFacesVertex = function() {
                return e.facesVertex
            }
            ,
            this.generateTextureCoord = function(n, r, i) {
                var o = e.facesVertex[Math.round(e.facesVertex.length / 2)];
                if (o) {
                    for (var a = [], s = Math.pow(2, 5 - i), u = r % s, h = n % s, c = t.H_SEGS / e.cols, l = 1 / c, f = 1 / ((t.V_SEGS - 1) / e.rows), d = 0; d < o.length / 3; d++) {
                        var p = d % (c + 1) * l
                          , v = Math.floor(d / (c + 1)) * f;
                        p = p / s + 1 * u / s,
                        v = v / s + 1 * h / s,
                        1 === i && (v *= 2),
                        a.push(p, v)
                    }
                    return a
                }
            }
            ,
            this.getFaceIndex = function(n) {
                var r = 0
                  , i = _i(n, 3)
                  , o = i[0]
                  , a = i[1]
                  , s = i[2]
                  , u = Math.round(180 * Math.atan(Math.abs(s) / Math.abs(o)) / Math.PI);
                o > 0 ? s < 0 && (u = 360 - u) : u = s > 0 ? 180 - u : 180 + u,
                u %= 360,
                r = a > e._x3 ? 7 : a > e._x2 ? 6 : a > e._x1 ? 5 : a > 0 ? 4 : a > -e._x1 ? 3 : a > -e._x2 ? 2 : a > -e._x3 ? 1 : 0;
                var h = Math.floor(u / 22.5)
                  , c = t.H_SEGS;
                return [h, r, h + r * (c / (c / e.cols))]
            }
            ,
            this.viewportToSphereCoord = function(t, n, r, i) {
                var o = e.radius
                  , a = lo(t, i, n, r)
                  , s = _i(a, 3)
                  , u = s[0]
                  , h = s[1]
                  , c = s[2]
                  , l = o / Math.sqrt(u * u + h * h + c * c);
                return [u * l, h * l, c * l]
            }
            ,
            this.getFaceVertex = function(n, r) {
                var i = t.H_SEGS / e.cols
                  , o = r + n * (t.H_SEGS / i);
                return e.facesVertex[o]
            }
            ,
            this.radius = n,
            this.rows = t.DEFAULT_COLS / 2,
            this.cols = t.DEFAULT_COLS,
            this.vertexs = null,
            this.facesVertex = [],
            this.facesVertexIndice = [],
            this.init()
        }
        var e = t.prototype;
        return e.init = function() {
            var t = this.getSphereVertexInfo();
            this.facesVertexIndice = this.getSphereFacesIndices(),
            this.vertexs = t.vertexs,
            this.facesVertex = t.facesVertex,
            this.calcConst()
        }
        ,
        e.calcConst = function() {
            var t = 360 / this.cols;
            this._x1 = Math.cos(g(3 * t)) * this.radius,
            this._x2 = Math.cos(g(2 * t)) * this.radius,
            this._x3 = Math.cos(g(1 * t)) * this.radius
        }
        ,
        e.getSphereVertexInfo = function() {
            for (var e, n = [], r = [], i = this.radius, o = t.H_SEGS, a = t.V_SEGS, s = 360 / o, u = 180 / (a - 1), h = o / this.cols, c = o / h, l = 0, f = 0, d = [], p = 0; p < a; p++) {
                var v = Math.sin(g(p * u - 90)) * i
                  , m = Math.cos(g(p * u - 90)) * i;
                v = Math.round(100 * v) / 100,
                m = Math.round(100 * m) / 100,
                l = Math.floor(p / h);
                for (var y = 0; y < o; y++) {
                    var _ = Math.cos(g(y * s)) * m
                      , x = Math.sin(g(y * s)) * m;
                    if (_ = Math.round(100 * _) / 100,
                    x = Math.round(100 * x) / 100,
                    n.push(_, v, x),
                    e = (f = Math.floor(y / h)) + l * c,
                    l < this.rows && (r[e] || (r[e] = []),
                    r[e].push(_, v, x)),
                    l > 0 && p % h == 0) {
                        var b = f + (l - 1) * c;
                        r[b].push(_, v, x),
                        y > 0 && y % h == 0 && r[b - 1] && r[b - 1].push(_, v, x),
                        y === o - 1 && r[b].push(d[0], d[1], d[2])
                    }
                    0 === f && 0 === y && (d = [_, v, x]),
                    y > 0 && y % h == 0 && r[e - 1] && r[e - 1].push(_, v, x),
                    l < this.rows && y === o - 1 && r[e].push(d[0], d[1], d[2])
                }
            }
            return {
                vertexs: n,
                facesVertex: r
            }
        }
        ,
        e.getSphereFacesIndices = function() {
            for (var e = [], n = t.H_SEGS / this.cols, r = n + 1, i = 0; i < n; i++)
                for (var o = 0; o < n; o++) {
                    var a = i * r
                      , s = a + o + 1
                      , u = a + o + 1 + r;
                    e.push(a + o, s, u),
                    s = a + o + 1 + r,
                    e.push(a + o, s, a + r + o)
                }
            return e
        }
        ,
        e.getSphereFacesIndicesByimageZoom = function(e) {
            for (var n = this, r = [], i = t.H_SEGS, o = Math.pow(2, 5 - e), a = i / this.cols + 1, s = a * a, u = function(t) {
                for (var e = function(e) {
                    n.facesVertexIndice.forEach((function(n) {
                        r.push(n + s * e + s * t * 2)
                    }
                    ))
                }, i = 0; i < o; i++)
                    e(i)
            }, h = 0; h < o; h++)
                u(h);
            return r
        }
        ,
        t
    }();
    mo.DEFAULT_COLS = Math.pow(2, 4),
    mo.H_SEGS = 64,
    mo.V_SEGS = 33;
    var go = function() {
        function t() {
            this._counter = 0,
            this._imageCollection = {}
        }
        var e = t.prototype;
        return e.getImageInstance = function() {
            var t;
            for (var e in this._imageCollection)
                if (this._imageCollection[e] && !0 === this._imageCollection[e]._free)
                    return this._imageCollection[e]._free = !1,
                    this._imageCollection[e];
            t = new Image;
            var n = this.getGUID();
            return this._imageCollection[n] = t,
            t
        }
        ,
        e.freeImage = function(t) {
            t && (t._free = !0,
            t.src = "",
            t.onload = t.onerror = null)
        }
        ,
        e.getGUID = function() {
            return this._counter++,
            "img_".concat(this._counter)
        }
        ,
        t
    }()
      , yo = function() {
        function t(e, n) {
            var r = this
              , i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
            this.imageInstancePool = void 0,
            this.tileImagesCache = void 0,
            this.textureInfo = void 0,
            this.pano = void 0,
            this.udtVersion = void 0,
            this.cdnList = void 0,
            this.calcTileKey = function(t, e, n, r) {
                return "".concat(t, "_").concat(e, "_").concat(n, "_").concat(r)
            }
            ,
            this.loadImage = function(t, e, n, i) {
                var o = r.calcTileKey(t, e, n, i)
                  , a = r.getTilesUrl(t, {
                    x: e,
                    y: n
                }, i)
                  , s = r.tileImagesCache.getData(o);
                return new Promise((function(t, e) {
                    s ? t(s._loaded ? s : null) : ((s = r.imageInstancePool.getImageInstance()).crossOrigin = "anonymous",
                    s._loaded = !1,
                    s.onload = function() {
                        s._loaded = !0,
                        t(s)
                    }
                    ,
                    s.onerror = function(t) {
                        console.error("Tile ".concat(o, " load error => "), t),
                        e(t)
                    }
                    ,
                    s.src = a,
                    r.tileImagesCache.setData(o, s))
                }
                ))
            }
            ,
            this.loadTexture = function(t, e, n, i) {
                var o = r.calcTileKey(t, e, n, i)
                  , a = r.textureInfo.getData(o);
                return new Promise((function(s, u) {
                    a && a.loaded ? s(a) : r.loadImage(t, e, n, i).then((function(t) {
                        if (!t)
                            return null;
                        var e = new si(t);
                        1 !== i && r.textureInfo.setData(o, e),
                        s(e)
                    }
                    )).catch((function(t) {
                        console.error("[TextureManager] loadTexture fail => ".concat(t)),
                        u(null)
                    }
                    ))
                }
                ))
            }
            ,
            this.loadTopoTexture = function(t) {
                var e = 0
                  , n = new Image;
                return new Promise((function(r) {
                    n.onload = function() {
                        var t = new si(n);
                        t.flipY = !1,
                        r(t)
                    }
                    ,
                    n.onerror = function() {
                        2 > e ? (e++,
                        n.src = "".concat(t, "&random=").concat((new Date).getTime())) : r(null)
                    }
                    ,
                    n.crossOrigin = "anonymous",
                    n.src = t
                }
                ))
            }
            ,
            this.clear = function() {
                r.textureInfo.clear()
            }
            ,
            this.pano = e,
            this.udtVersion = i,
            this.cdnList = n || e.opts.tileBaseUrls,
            this.imageInstancePool = new go,
            this.tileImagesCache = new T(t.MAX_TILE_CACHED,{
                clearCallback: function(t) {
                    r.imageInstancePool.freeImage(t)
                }
            }),
            this.textureInfo = new T(t.MAX_TILE_CACHED,{
                clearCallback: function(t) {
                    t.destory()
                }
            })
        }
        var e = t.prototype;
        return e.getRandomCDN = function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
              , e = t.length;
            return t[Math.floor(Math.random() * e)]
        }
        ,
        e.getTilesUrl = function(e, n, r) {
            return this.getRandomCDN(this.cdnList) + (t.TILE_URL_TEMPLATE + "&".concat(J("/", {
                isCounter: !0
            }))).replace("{udt}", this.udtVersion).replace("{sid}", e).replace("{x}", "".concat(n.x)).replace("{y}", "".concat(n.y)).replace("{zoom}", "".concat(r))
        }
        ,
        t
    }();
    yo.MAX_TILE_CACHED = 160,
    yo.TILE_URL_TEMPLATE = "?qt=pdata&sid={sid}&pos={y}_{x}&z={zoom}&udt={udt}&from=H5";
    var _o = ["attribute vec2 uvBack;", "varying mediump vec2 vTextureCoordBack;", "varying mediump vec2 vTextureCoord;", "void main(void) {", "    gl_Position = mvpMatrix * vec4(position, 1.0);", "    vTextureCoordBack = uvBack;", "    vTextureCoord = uv;", "}"].join("\n")
      , xo = ["precision mediump float;", "varying vec2 vTextureCoordBack;", "varying vec2 vTextureCoord;", "uniform sampler2D uSamplerBack;", "uniform sampler2D uSampler;", "uniform bool uDrawThumb;", "uniform bool uDrawBack;", "uniform float uAlpha;", "void main(void) {", "    if (uDrawThumb) {", "        gl_FragColor = texture2D(uSamplerBack, vTextureCoordBack);", "        return;", "    }", "    if (uAlpha == 1.0) {", "        gl_FragColor = texture2D(uSampler, vTextureCoord);", "        return;", "    }", "    if (uDrawBack) {", "        gl_FragColor = texture2D(uSampler, vTextureCoord) * uAlpha + texture2D(uSamplerBack, vTextureCoordBack) * (1.0 - uAlpha);", "    } else {", "        vec4 textureColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));", "        gl_FragColor =  vec4(textureColor.rgb, textureColor.a * uAlpha);", "    }", "}"].join("\n")
      , bo = ["varying highp vec2 vTextureCoord;", "void main(void) {", "    gl_Position = mvpMatrix * vec4(position, 1.0);", "    vTextureCoord = uv;", "}"].join("\n")
      , Mo = ["precision mediump float;", "uniform sampler2D uSampler;", "varying highp vec2 vTextureCoord;", "void main(void) {", "    gl_FragColor = texture2D(uSampler, vTextureCoord);", "}"].join("\n")
      , wo = ["varying highp vec2 vTextureCoord;", "void main(void) {", "    gl_Position = mvpMatrix * vec4(position, 1.0);", "    vTextureCoord = uv;", "}"].join("\n")
      , Eo = ["uniform sampler2D uSampler;", "uniform float uOpacity;", "varying vec2 vTextureCoord;", "void main(void){", "    vec4 textureColor = texture2D(uSampler, vTextureCoord);", "    gl_FragColor = vec4(textureColor.rgb, textureColor.a * uOpacity);", "}"].join("\n")
      , To = ["varying highp vec3 vTextureCoord;", "void main(void){", "   gl_Position = mvpMatrix  * vec4(position, 1.0);", "   vTextureCoord = vec3(uv, 1.0) * length(position);", "}"].join("\n")
      , Ao = ["uniform sampler2D uSampler;", "uniform float uOpacity;", "varying vec3 vTextureCoord;", "uniform bool showDebugLine;", "uniform vec4 vColor;", "void main(void){", "   if (!showDebugLine) {", "       vec4 textureColor = texture2DProj(uSampler, vTextureCoord);", "       gl_FragColor = vec4(textureColor.rgb, textureColor.a * uOpacity);", "   } else {", "       gl_FragColor = vec4(vColor.rgb, vColor.a);", "   }", "}"].join("\n")
      , Co = function() {
        function t(e, n, r, i) {
            this.nodes = void 0,
            this.level = void 0,
            this.key = void 0,
            this.nodes = [],
            this.level = e,
            this.key = "".concat(r, "_").concat(i),
            e < n && (this.nodes[0] = new t(e + 1,n,2 * r,2 * i),
            this.nodes[1] = new t(e + 1,n,2 * r,2 * i + 1),
            this.nodes[2] = new t(e + 1,n,2 * r + 1,2 * i),
            this.nodes[3] = new t(e + 1,n,2 * r + 1,2 * i + 1))
        }
        var e = t.prototype;
        return e.hasNodes = function() {
            return this.nodes.length > 0
        }
        ,
        e.getNodeKeysByLevel = function(t) {
            if (t < this.level)
                return console.warn("指定节点".concat(t, " 不在当前节点").concat(this.level, "范围内！")),
                [];
            if (this.level === t)
                return [this.key];
            for (var e = [], n = 0; n < this.nodes.length; n++)
                if (Object.prototype.hasOwnProperty.call(this.nodes, n)) {
                    var r = this.nodes[n];
                    if (this.level === t - 1)
                        e.push(r.key);
                    else if (r.hasNodes()) {
                        var i = r.getNodeKeysByLevel(t);
                        e.push.apply(e, vi(i))
                    }
                }
            return e
        }
        ,
        t
    }();
    var Ro = function(t) {
        function e(e) {
            var n;
            return (n = t.call(this, e) || this).name = "SphereRender",
            n.sphere = void 0,
            n.textureManager = void 0,
            n.imgColsRows = void 0,
            n.curThumbTexture = void 0,
            n.meshCache = {},
            n.tileInfoCache = {},
            n.imgRange = void 0,
            n.faceRange = void 0,
            n.hitTile = void 0,
            n.setData = function(t) {
                n.panoData = t,
                n.curThumbTexture = null,
                n.loadThumbTextures(t.panoId)
            }
            ,
            n.update = function() {
                n.updateRangeInfo(),
                n.checkAndLoadTiles()
            }
            ,
            n.checkAndLoadTiles = function() {
                if (n.curThumbTexture && n.panoData) {
                    var t = n.panoData.panoId
                      , e = n.camera
                      , r = n.imgColsRows[n._imgZoom]
                      , i = r.cols
                      , o = i - 1
                      , a = r.rows - 1
                      , s = n.pano.getContainerSize()
                      , u = s.width
                      , h = s.height
                      , c = !1
                      , l = []
                      , f = _i(n.imgRange, 4)
                      , d = f[0]
                      , p = f[1]
                      , v = f[2]
                      , m = f[3];
                    if (po(zt(0, 100, 0), e, u, h)) {
                        for (var g = 0; g <= v; g++)
                            for (var y = 0; y <= o; y++)
                                n.checkAndLoadTile(t, y, g, n._imgZoom),
                                l.push([g, y]);
                        v < m && (v += 1,
                        c = !0)
                    } else if (po(zt(0, -100, 0), e, u, h)) {
                        for (var _ = m; _ <= a; _++)
                            for (var x = 0; x <= o; x++)
                                n.checkAndLoadTile(t, x, _, n._imgZoom),
                                l.push([_, x]);
                        v < m && (m -= 1,
                        c = !0)
                    } else
                        c = !0;
                    if (!0 === c) {
                        p > o && (p = o);
                        for (var b = d; b <= p; b++)
                            for (var M = v; M <= m; M++) {
                                var w = b < 0 ? b + i : b;
                                n.checkAndLoadTile(t, w, M, n._imgZoom),
                                l.push([M, w])
                            }
                    }
                    n.hitTile = l,
                    l.forEach((function(t) {
                        var e = _i(t, 2)
                          , r = e[0]
                          , i = e[1]
                          , o = "".concat(r, "_").concat(i, "_").concat(n._imgZoom);
                        if (void 0 === n.tileInfoCache[o]) {
                            var a = new Co(n._imgZoom,5,r,i).getNodeKeysByLevel(5);
                            n.tileInfoCache[o] = a
                        }
                    }
                    ))
                }
            }
            ,
            n.draw = function() {
                var t = n.meshs;
                if (!n.faceRange || !n.curThumbTexture)
                    return !1;
                t.children = [];
                for (var e = function(e, r) {
                    var i = n.curThumbTexture
                      , o = n.textureManager.calcTileKey(n.panoData.panoId, e, r, n._imgZoom)
                      , a = n.textureManager.textureInfo.getData(o)
                      , s = !1
                      , u = null;
                    if (a ? !(u = a).finished && u.aniInfo && u.aniInfo && u.aniInfo.update() : i && (s = !0,
                    u = i),
                    u) {
                        var h = "".concat(r, "_").concat(e, "_").concat(n._imgZoom)
                          , c = n.meshCache[h];
                        if (!c) {
                            if (!(c = n.createTileMesh(r, e)))
                                return;
                            n.meshCache[h] = c
                        }
                        if (!c.material)
                            return;
                        var l = c.material.uniforms;
                        l.uSamplerBack.value = i,
                        s ? l.uDrawThumb.value = !0 : (l.uDrawThumb.value = !1,
                        l.uSampler.value = u,
                        l.uAlpha.value = u.alpha),
                        t.add(c)
                    }
                }, r = 0; r < n.hitTile.length; r++) {
                    var i = _i(n.hitTile[r], 2)
                      , o = i[0];
                    e(i[1], o)
                }
                return !0
            }
            ,
            n.pano = e,
            n.sphere = new mo(e.opts.radius),
            n.textureManager = new yo(e),
            n.imgColsRows = function() {
                for (var t = [], e = 0; e <= 5; e++)
                    t[e] = e < 2 ? {
                        cols: 1,
                        rows: 1
                    } : {
                        cols: Math.pow(2, e - 1),
                        rows: Math.pow(2, e - 1) / 2
                    };
                return t
            }(),
            n.curThumbTexture = null,
            n.meshs = new Xr,
            n
        }
        c(e, t);
        var n = e.prototype;
        return n.checkAndLoadTile = function(t, e, n, r) {
            var i = this
              , o = this.textureManager
              , a = o.calcTileKey(t, e, n, r);
            !0 !== (void 0 !== o.textureInfo.getData(a)) && this.textureManager.loadTexture(t, e, n, r).then((function(t) {
                t && !t.done && (t.aniInfo = i.createTextureAnimation(t),
                t.done = !0,
                i.pano.dispatchEvent({
                    type: d.REFRESH,
                    log: "[Refresh Log] 瓦片加载完成， 渲染一帧"
                }))
            }
            ))
        }
        ,
        n.loadThumbTextures = function(t) {
            var e = this;
            this.textureManager.loadTexture(t, 0, 0, 1).then((function(t) {
                e.curThumbTexture = t,
                e.pano.dispatchEvent({
                    type: d.THUMB_LOADED
                }),
                e.pano.dispatchEvent({
                    debug: !0,
                    type: d.REFRESH,
                    log: "[Refresh Log] 缩略图加载完毕，渲染一帧"
                })
            }
            ))
        }
        ,
        n.createTextureAnimation = function(t) {
            var e = this;
            return t.alpha = 0,
            new uo(0,1,300).onUpdate((function(n) {
                t.alpha = n,
                e.pano.dispatchEvent({
                    debug: !0,
                    type: d.REFRESH,
                    log: "[Refresh Log] 纹理清晰度渐变动画，渲染一帧"
                })
            }
            )).onEnd((function() {
                t.finished = !0
            }
            )).start()
        }
        ,
        n.createTileMesh = function(t, e) {
            var n = new Ei
              , r = new Hr;
            if (n.depthTest = !1,
            n.vertexShader = _o,
            n.fragmentShader = xo,
            n.uniforms = {
                uSampler: {
                    type: "t",
                    value: null
                },
                uSamplerBack: {
                    type: "t",
                    value: null
                },
                uDrawThumb: {
                    type: "1i",
                    value: 1
                },
                uDrawBack: {
                    type: "1i",
                    value: 1
                },
                uAlpha: {
                    type: "1f",
                    value: 1
                }
            },
            !this.setGeometryAttrib(r, t, e))
                return null;
            var i = new Xr(r,n);
            return i.name = "tile-mesh",
            i
        }
        ,
        n.setGeometryAttrib = function(t, e, n) {
            var r = "".concat(e, "_").concat(n, "_").concat(this._imgZoom)
              , i = this.tileInfoCache[r];
            if (!i)
                return !1;
            for (var o = [], a = [], s = [], u = 0; u < i.length; u++) {
                var h = i[u].split("_")
                  , c = this.sphere.rows
                  , l = Number(h[1])
                  , f = c - 1 - Number(h[0]);
                o.push.apply(o, vi(this.sphere.getFaceVertex(f, l))),
                a.push.apply(a, vi(this.sphere.generateTextureCoord(f, l, this._imgZoom))),
                s.push.apply(s, vi(this.sphere.generateTextureCoord(f, l, 1)))
            }
            var d = this.sphere.getSphereFacesIndicesByimageZoom(this._imgZoom);
            return t.setAttribute("uv", new Vr(a,2)),
            t.setAttribute("uvBack", new Vr(s,2)),
            t.setAttribute("position", new Vr(o,3)),
            t.setIndexes(d),
            !0
        }
        ,
        n.getTileBoundary = function() {
            var t = this.pano.getContainerSize()
              , e = t.width
              , n = t.height
              , r = yt(0, 0)
              , i = yt(e, 0)
              , o = yt(0, n)
              , a = yt(e, n)
              , s = yt(.5 * e, 0)
              , u = yt(.5 * e, n)
              , h = yt(0, .5 * n)
              , c = yt(e, .5 * n)
              , l = this.getSpherePosition(r)
              , f = this.getSpherePosition(i)
              , d = this.getSpherePosition(o)
              , p = this.getSpherePosition(a)
              , v = this.getSpherePosition(s)
              , m = this.getSpherePosition(u)
              , g = this.getSpherePosition(h)
              , y = this.getSpherePosition(c)
              , _ = Math.max(l[1], v[1], f[1])
              , x = Math.min(d[1], m[1], p[1])
              , b = [l[0], g[0], d[0], v[0]]
              , w = [f[0], y[0], p[0], m[0]]
              , E = Math.min.apply(Math, b)
              , T = Math.max.apply(Math, w)
              , A = M(b)
              , C = M(w)
              , R = this.sphere.cols
              , S = R / 2;
            A.max - A.min > S && (E = Math.min.apply(Math, vi(b.filter((function(t) {
                return t > S
            }
            ))))),
            C.max - C.min > S && (T = Math.max.apply(Math, vi(w.filter((function(t) {
                return t < S
            }
            ))))),
            E > T && (E -= R);
            var P = this.getImgIndexByFaceColRow(E, _)
              , D = _i(P, 2)
              , O = D[0]
              , I = D[1]
              , L = this.getImgIndexByFaceColRow(T, x)
              , B = _i(L, 2);
            return [[E, T, _, x], [O, B[0], I, B[1]]]
        }
        ,
        n.updateRangeInfo = function() {
            var t = this.getTileBoundary()
              , e = _i(t, 2)
              , n = e[0]
              , r = e[1];
            this.imgRange = r,
            this.faceRange = n
        }
        ,
        n.getImgIndexByFaceColRow = function(t, e, n) {
            n = n || this._imgZoom;
            var r = Math.pow(2, 5 - n)
              , i = Math.floor(t / r)
              , o = Math.floor(e / r);
            return [i, o = this.imgColsRows[n].rows - o - 1, i + o * mo.DEFAULT_COLS / r]
        }
        ,
        n.normalizeNum = function(t, e) {
            for (var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, r = t; r < n; )
                r += e;
            return r %= e
        }
        ,
        n.getSpherePosition = function(t) {
            var e = this.camera
              , n = this.pano.getContainerSize()
              , r = n.width
              , i = n.height
              , o = this.sphere.viewportToSphereCoord(t, r, i, e)
              , a = this.sphere.getFaceIndex(o)
              , s = _i(a, 2);
            return yt(s[0], s[1])
        }
        ,
        n.generateBackThumb = function(t) {
            if (t) {
                var e = this.pano
                  , n = e.getContainerSize()
                  , r = n.width
                  , i = n.height
                  , o = "//apisv0.bdimg.com/?udt=20140616&qt=pdata&pos=0_0&z=2&sid=".concat(t, "&from=H5&").concat(J("/", {
                    isCounter: !0
                }))
                  , a = e.getPanes().tileLayer;
                a.style.backgroundImage = 'url("' + o + '")',
                a.style.backgroundPosition = "50% 50%",
                a.style.backgroundSize = "150% 150%",
                a.style.width = "".concat(r, "px"),
                a.style.height = "".concat(i, "px")
            }
        }
        ,
        o(e, [{
            key: "_imgZoom",
            get: function() {
                return this.pano.imageZoom
            }
        }]),
        e
    }(Qi)
      , So = [10, -20, 30, 10, -20, 10, -10, -20, 10, -10, -20, 30].map((function(t) {
        return -20 === t ? -20 : 1.8 * t
    }
    ))
      , Po = [10, -22, 30, 10, -22, 10, -10, -22, 10, -10, -22, 30].map((function(t) {
        return -22 === t ? -22 : 1.8 * t
    }
    ))
      , Do = [1.8, -20, 24.9, 1.8, -20, 16.3, -1.8, -20, 16.3, -1.8, -20, 24.9].map((function(t) {
        return -20 === t ? -20 : 1.8 * t
    }
    ))
      , Oo = [0, 0, 0, .5, .25, .5, .25, 0]
      , Io = function() {
        function t(t, e, n) {
            var r = this;
            this.mesh = void 0,
            this.material = void 0,
            this.linkData = void 0,
            this._pano = void 0,
            this.northDir = void 0,
            this.yAxisDis = void 0,
            this.isPosInArrow = function(t, e, n, i, o) {
                var a = yt(t, e)
                  , s = lo(a, n, i, o, -1)
                  , u = 200 * s[0]
                  , h = 200 * s[1]
                  , c = 200 * s[2]
                  , l = r.yAxisDis / h;
                if (l < 0)
                    return !1;
                var f = [u * l, h * l, c * l];
                return r.isHitLink(f)
            }
            ,
            this._pano = t,
            this.linkData = e,
            this.northDir = n,
            this.yAxisDis = 0,
            this.linkData.refinedDir = _((e.topoDir || 0) + this.northDir),
            this.material = this.createArrowMaterial(),
            this.mesh = this.initMesh(),
            this.changePose()
        }
        var e = t.prototype;
        return e.initMesh = function() {
            var t = this.createGeometry()
              , e = new Xr(t,this.material);
            return e.visible = !1,
            e.name = "link-mesh",
            e
        }
        ,
        e.createArrowMaterial = function() {
            var t = new Ei;
            return t.depthTest = !1,
            t.vertexShader = bo,
            t.fragmentShader = Mo,
            t.uniforms = {
                uSampler: {
                    type: "t",
                    value: null
                }
            },
            t
        }
        ,
        e.setTopoTexture = function(t) {
            t.isTexture && (this.material.uniforms.uSampler.value = t)
        }
        ,
        e.setVisible = function(t) {
            this.mesh.setVisible(t, !0)
        }
        ,
        e.createGeometry = function() {
            var t = new Hr
              , e = this.getTextCoord(this.linkData.topoDir)
              , n = [].concat(Po, So, Do)
              , r = [].concat([.5, 0, .5, .5, 1, .5, 1, 0], [0, 0, 0, .5, .5, .5, .5, 0], e)
              , i = [].concat([0, 1, 2, 0, 2, 3], [4, 5, 6, 4, 6, 7], [8, 9, 11, 10, 11, 9]);
            return t.setAttribute("position", new Vr(n,3)),
            t.setAttribute("uv", new Vr(r,2)),
            t.setIndexes(i),
            t
        }
        ,
        e.changePose = function(t) {
            t = t || this.mesh;
            var e = 50
              , n = -30
              , r = this._pano.getPov().pitch
              , i = this.linkData.refinedDir;
            (e += 20 * this._pano.getZoom(),
            r < 0) && (e *= (90 - (r = Math.abs(r))) / 90,
            n -= 20 * r / 90);
            var o = Math.cos(g(i)) * e
              , a = Math.sin(g(i)) * e;
            this.yAxisDis = n + -20,
            t.setPosition(o, n, a),
            t.rotateY(-_(i - 90)),
            t.rotateX(-5),
            t.updateWorldMatrix(!0)
        }
        ,
        e.getTextCoord = function(t) {
            t = (t + 360) % 360;
            var e = Math.ceil(Math.floor(t / 22.5) / 2);
            8 === e && (e = 0);
            for (var n = Oo.slice(0), r = Math.floor(e / 2), i = e % 2, o = 0; o < n.length; o++)
                o % 2 == 0 ? (n[o] += .25 * r,
                n[o] = .5 * n[o]) : (n[o] += .5 * i,
                n[o] = .5 * n[o] + .5);
            return n
        }
        ,
        e.isHitLink = function(t) {
            var e = t[0]
              , n = t[2]
              , r = this.mesh.worldMatrix
              , i = zt(So[0], So[1], So[2])
              , o = zt(So[6], So[7], So[8])
              , a = zt((i[0] + o[0]) / 2, (i[1] + o[1]) / 2, (i[2] + o[2]) / 2);
            return te(a, a, r),
            Math.abs(e - a[0]) < 18 && Math.abs(n - a[2]) < 18
        }
        ,
        t
    }()
      , Lo = function(t) {
        function e(e) {
            var n;
            return (n = t.call(this, e) || this).name = "PanoLinkRender",
            n.linkVisible = !0,
            n.textureManager = void 0,
            n.linkInfos = [],
            n.setData = function(t) {
                if (t && (o = t.getTopos,
                a = "[object Function]" === Object.prototype.toString.call(o),
                s = "[object AsyncFunction]" === Object.prototype.toString.call(o),
                a || s)) {
                    n.reset();
                    var e = t.getTopos()
                      , r = t.northDir
                      , i = t.panoType === p.TYPE_STREET;
                    e.length && i && (n.linkInfos = e.map((function(t) {
                        return new Io(n.pano,t,r)
                    }
                    )),
                    n.meshs = n.linkInfos.map((function(t) {
                        return t.mesh
                    }
                    )),
                    n.loadTextures(),
                    n.setVisible(!0))
                }
                var o, a, s
            }
            ,
            n.clickChecker = function(t, e) {
                if (n.linkVisible) {
                    var r = n.getIdByTouchPos(t, e);
                    return r && (n.setVisible(!1),
                    n.pano.dispatchEvent({
                        type: d.LINK_CLICK,
                        id: r
                    }),
                    n.pano.setId(r, {
                        animation: !0
                    })),
                    !r
                }
            }
            ,
            n.pano = e,
            n.meshs = [],
            n.textureManager = new yo(e),
            n
        }
        c(e, t);
        var n = e.prototype;
        return n.reset = function() {
            this.meshs = [],
            this.linkInfos = []
        }
        ,
        n.update = function() {
            this.linkInfos.forEach((function(t) {
                t.changePose()
            }
            ))
        }
        ,
        n.setVisible = function(t) {
            var e = this.linkInfos;
            if (!(e.length < 1)) {
                var n = this.pano.opts.linksControl
                  , r = !1;
                !0 === n && (r = t),
                this.linkVisible = r,
                e.forEach((function(t) {
                    return t.setVisible(r)
                }
                ))
            }
        }
        ,
        n.draw = function() {}
        ,
        n.loadTextures = function() {
            var t = this
              , e = this.pano.opts.imgPath ? "".concat(this.pano.opts.imgPath, "topo_arrow.png") : p.TOPO_ARROW_TEXTURE;
            this.textureManager.loadTopoTexture(e).then((function(e) {
                e && t.linkInfos.forEach((function(t) {
                    t.setTopoTexture(e)
                }
                ))
            }
            ))
        }
        ,
        n.getIdByTouchPos = function(t, e) {
            var n = this
              , r = null;
            if (!this.linkInfos.length)
                return r;
            var i = this.pano.getContainerSize()
              , o = i.width
              , a = i.height
              , s = this.linkInfos.filter((function(r) {
                return r.isPosInArrow(t, e, n.camera, o, a)
            }
            ));
            return s.length && (r = s[0].linkData.panoId),
            r
        }
        ,
        e
    }(Qi)
      , Bo = function() {
        function t(t, e, n) {
            var r = this;
            this.start = function() {
                r.fadeAni.start(),
                r._pano.dispatchEvent({
                    debug: !0,
                    log: "淡出动画，渲染一帧",
                    type: d.REFRESH
                })
            }
            ,
            this.update = function() {
                r.fadeAni.update()
            }
            ,
            this._pano = t,
            this.gl = this._pano.gl,
            this.snapshot = e,
            this.scene = this.initScene(),
            this.camera = this.initCamera();
            this.fadeAni = new uo(1,0,600).onUpdate((function(t) {
                r.material.uniforms.uOpacity.value = t,
                r._pano.dispatchEvent({
                    type: d.REFRESH
                })
            }
            )).onEnd((function() {
                n && n(),
                r._pano.dispatchEvent({
                    type: d.REFRESH,
                    debug: !0,
                    log: "淡出动画结束，渲染一帧"
                })
            }
            ))
        }
        var e = t.prototype;
        return e.initScene = function() {
            var t = new Kr
              , e = this._pano.getContainerSize()
              , n = e.width
              , r = e.height
              , i = new Fi(n,r)
              , o = this.initMaterial()
              , a = new Xr(i,o);
            return t.add(a),
            t
        }
        ,
        e.initMaterial = function() {
            var t = new Ei;
            return t.depthTest = !1,
            t.vertexShader = wo,
            t.fragmentShader = Eo,
            t.uniforms = {
                uSampler: {
                    type: "t",
                    value: this.snapshot
                },
                uOpacity: {
                    type: "1f",
                    value: 1
                }
            },
            this.material = t,
            t
        }
        ,
        e.initCamera = function() {
            var t = this._pano.getContainerSize()
              , e = t.width / 2
              , n = t.height / 2;
            return new Yi(-e,e,n,-n,0,11e3)
        }
        ,
        t
    }()
      , ko = function() {
        function t(t, e, n) {
            var r = this;
            this.start = function() {
                r.waveAni.start(),
                r._pano.dispatchEvent({
                    debug: !0,
                    log: "淡出动画，渲染一帧",
                    type: d.REFRESH
                })
            }
            ,
            this.update = function() {
                r.waveAni.update()
            }
            ,
            this._pano = t,
            this.gl = this._pano.gl,
            this.snapshot = e,
            this.scene = this.initScene(),
            this.camera = this.initCamera();
            this.waveAni = new uo(0,1,800).onUpdate((function(t) {
                r.material.uniforms.progress.value = t,
                r.material.uniforms.uOpacity.value = 1 - t,
                r._pano.dispatchEvent({
                    type: d.REFRESH
                })
            }
            )).onEnd((function() {
                n && n(),
                r._pano.dispatchEvent({
                    type: d.REFRESH,
                    debug: !0,
                    log: "淡出动画结束，渲染一帧"
                })
            }
            ))
        }
        var e = t.prototype;
        return e.initCamera = function() {
            var t = this._pano.getContainerSize()
              , e = t.width / 2
              , n = t.height / 2;
            return new Yi(-e,e,n,-n,0,11e3)
        }
        ,
        e.initScene = function() {
            var t = new Kr
              , e = this._pano.getContainerSize()
              , n = e.width
              , r = e.height
              , i = new Fi(n,r)
              , o = this.initMaterial()
              , a = new Xr(i,o);
            return t.add(a),
            t
        }
        ,
        e.initMaterial = function() {
            var t = new Ei
              , e = this._pano.getContainerSize()
              , n = e.width
              , r = e.height;
            return t.depthTest = !1,
            t.vertexShader = wo,
            t.fragmentShader = "\n    uniform float aspect;\n    uniform float radius;\n    uniform float amp;\n    uniform float band;\n    uniform float waves;\n    uniform float speed;\n    uniform float progress;\n    uniform vec2 uCenter;\n    uniform sampler2D uSampler;\n    uniform float uOpacity;\n\n    varying vec2 vTextureCoord;\n\n    void main() {\n        vec2 tc = vTextureCoord;\n        vec2 uv = vec2(0.0, 0.0);\n        vec2 p;\n        float len;\n        vec2 uv_offset;\n        float wave_width = band * radius;\n\n        p = (tc - uCenter);\n        p.x = p.x * aspect;\n        len = length(p);\n\n        float current_radius = radius * progress;\n        float damp_factor = 1.0;\n        if (progress > .5) {\n            damp_factor = (1.0 - progress) * 2.0;\n        }\n\n        float cut_factor = clamp(wave_width * damp_factor - abs(current_radius - len), 0.0, 1.0);\n        float waves_factor = waves * len / radius;\n        uv_offset = (p / len) * cos((waves_factor - progress * speed) * 3.14) * amp * cut_factor;\n\n        uv += uv_offset;\n\n        vec4 t_image = texture2D(uSampler, fract(tc + uv));\n\n        // gl_FragColor = t_image;\n        gl_FragColor = vec4(t_image.rgb, t_image.a * uOpacity);\n    }\n",
            t.uniforms = {
                uSampler: {
                    type: "t",
                    value: this.snapshot
                },
                uCenter: {
                    type: "2f",
                    value: [.5, .5]
                },
                uOpacity: {
                    type: "1f",
                    value: 1
                },
                progress: {
                    type: "1f",
                    value: 0
                },
                speed: {
                    type: "1f",
                    value: 4
                },
                waves: {
                    type: "1f",
                    value: 14
                },
                band: {
                    type: "1f",
                    value: .3
                },
                amp: {
                    type: "1f",
                    value: .3
                },
                aspect: {
                    type: "1f",
                    value: n / r
                },
                radius: {
                    type: "1f",
                    value: 1
                }
            },
            this.material = t,
            t
        }
        ,
        t
    }()
      , Uo = function() {
        function t(t, e, n, r) {
            var i = this;
            this.startAni = function() {
                i.animation.start()
            }
            ,
            this.update = function() {
                i.animation.update()
            }
            ,
            this.pano = t,
            this.distance = n,
            this.refinedDir = e,
            this.camera = this.pano.camera,
            this.cameraBase = this.pano.camera.clone(),
            this.handleEnd = r,
            this.initAni()
        }
        return t.prototype.initAni = function() {
            var t = this
              , e = this.distance
              , n = this.refinedDir
              , r = Math.cos(g(n))
              , i = Math.sin(g(n));
            this.animation = new uo(0,1,400,ao.easeOutQuad).onUpdate((function(n) {
                var o = e * n
                  , a = r * o
                  , s = i * o;
                t.camera.setPosition(a, 0, s),
                t.pano.dispatchEvent({
                    debug: !0,
                    type: d.REFRESH,
                    log: "[Refresh Log] 前进动画， 渲染一帧"
                })
            }
            )).onEnd((function() {
                t.handleEnd && t.handleEnd()
            }
            ))
        }
        ,
        t
    }()
      , No = function(t, e, n, r) {
        this.x = t || 0,
        this.y = e || 0,
        this.width = n || 0,
        this.height = r || 0
    }
      , Fo = function(t, e) {
        var n = this;
        this.angleDegreeDelta = function(t, e) {
            var n = Math.abs(t - e);
            return n > 180 ? 360 - n : n
        }
        ,
        this.getRoad = function(t, e, n, r, i) {
            for (var o, a = [], s = [[-t / 2, -e, -10], [-t / 2, -e, -20], [t / 2, -e, -10], [t / 2, -e, -20]], u = s.length, h = 0; h < u; h++)
                te(o = s[h], o, n),
                a[h] = {
                    x: o[0] * r * .5,
                    y: -o[1] * i * .5
                };
            return a
        }
        ,
        this.getIntersection = function(t, e, n, r) {
            if (t.x === e.x || n.x === r.x)
                return null;
            var i = (e.y - t.y) / (e.x - t.x)
              , o = (r.y - n.y) / (r.x - n.x);
            if (i === o)
                return null;
            var a = (o * n.x - i * t.x + t.y - n.y) / (o - i);
            return {
                x: a,
                y: i * (a - t.x) + t.y
            }
        }
        ,
        this.calculateVanishPoint = function(t, e, r, i) {
            var o = n.getIntersection(t[0], t[1], t[2], t[3]);
            return null === o ? null : (o.x += r * e * .5,
            o.y += i * e * .5,
            o)
        }
        ,
        this.getOuterRect = function(t, e, n) {
            return new No(t * (n - 1) * .5,e * (n - 1) * .5,t,e)
        }
        ,
        this.transformPoint = function(t, e, n) {
            return t && void 0 !== t.x && void 0 !== t.y ? {
                x: t.x + e,
                y: t.y + n
            } : t
        }
        ,
        this.getInnerRect = function(t, e, r, i, o) {
            var a = n.transformPoint(t, .5 * -r * o, .5 * -i * o)
              , s = n.transformPoint(a, 0, 20)
              , u = n.transformPoint(a, 10, 20)
              , h = n.getIntersection(e[0], e[1], s, u)
              , c = n.getIntersection(e[2], e[3], s, u)
              , l = n.transformPoint(h, 0, -70)
              , f = new No(l.x + r * o * .5,l.y + i * o * .5,c.x - h.x,70);
            return f = n.fixInnerRectPosition(f, t),
            f = n.fixInnerRectSize(f, t, r)
        }
        ,
        this.fixInnerRectPosition = function(t, e) {
            var n = t
              , r = (e.x - t.x) / t.width
              , i = 0;
            return r > .7 && (i = r - .7),
            r < .3 && (i = .3 - r),
            n.x = n.x + n.width * i,
            n
        }
        ,
        this.fixInnerRectSize = function(t, e, n) {
            var r, i, o, a, s = t;
            s.width / n > .12 && (a = (o = .12 * n) * (s.width / s.height),
            r = s.x + (s.width - o) * (e.x - s.x) / s.width,
            i = s.y + (s.height - a) * (e.y - s.y) / s.height,
            s = new No(r,i,o,a));
            var u = s.width / s.height;
            return a = s.height,
            u > 1.2 && (a = s.height * u / 1.2),
            u < .9 && (a = s.height * u / .9),
            i = s.y + s.height - a,
            s.height = a,
            s.y = i,
            s
        }
        ,
        this.panoData = t.panoData,
        this.camera = t.camera,
        this.projectionMatrix = this.camera.projectionMatrix,
        this.fov = g(this.camera.fov),
        this.traverseDir = e,
        this.cameraHeading = t.getPov().heading || 0,
        this.isMovingForward = this.angleDegreeDelta(this.cameraHeading, this.traverseDir) <= 90,
        this.roadWith = Math.min(1.5 * this.panoData.getRoadWidth(), 10),
        this.deviceHeight = this.panoData.deviceHeight || 2.2,
        this.panoWidth = t._container.clientWidth,
        this.panoHeight = t._container.clientHeight;
        var r = this.angleDegreeDelta(this.cameraHeading, this.traverseDir) > 45;
        this.snapshotRatio = r ? 1 : 1.8,
        this.projectionRoadInfos = this.getRoad(this.roadWith, this.deviceHeight, this.projectionMatrix, this.panoWidth, this.panoHeight),
        this.vanishPoint = this.calculateVanishPoint(this.projectionRoadInfos, this.snapshotRatio, this.panoWidth, this.panoHeight),
        this.innerRect = this.getInnerRect(this.vanishPoint, this.projectionRoadInfos, this.panoWidth, this.panoHeight, this.snapshotRatio),
        this.outerRect = this.getOuterRect(this.panoWidth, this.panoHeight, this.snapshotRatio),
        this.focusLength = .5 * this.panoHeight / Math.tan(.75 * this.fov),
        this.vanishPointDeltaX = this.vanishPoint.x - this.outerRect.x - .5 * this.outerRect.width,
        this.vanishPointDeltaY = this.vanishPoint.y - this.outerRect.y - .5 * this.outerRect.height
    }
      , jo = {
        FAR: [10, 10, 0],
        LEFT: [0, 10, 30],
        RIGHT: [0, 10, 30],
        TOP: [10, 0, 30],
        BOTTOM: [10, 0, 30]
    }
      , zo = {
        FAR: ["innerTopLeftVertex", "innerBottomRightVertex"],
        LEFT: ["outerTopLeftVertex", "innerBottomLeftVertex"],
        RIGHT: ["innerTopRightVertex", "outerBottomRightVertex"],
        TOP: ["outerTopLeftVertex", "innerTopRightVertex"],
        BOTTOM: ["innerBottomLeftVertex", "outerBottomRightVertex"]
    }
      , Vo = Object.keys(jo)
      , Go = function(t) {
        function e(e, n) {
            var r;
            if ((r = t.call(this) || this).createSkeleton = function(t) {
                var e = t.vanishPoint
                  , n = t.innerRect
                  , r = t.outerRect
                  , i = t.focusLength
                  , o = r.y + r.height - n.y - n.height
                  , a = e.y - n.y
                  , s = e.x - n.x
                  , u = n.x + n.width - e.x
                  , h = r.y + r.height - e.y
                  , c = o * i / (h - o)
                  , l = u * (i + c) / i
                  , f = -(s * (i + c) / i)
                  , d = h + a * (i + c) / i - h
                  , p = -h
                  , v = c / 5;
                return {
                    innerTopLeftVertex: {
                        x: f,
                        y: d,
                        z: -c
                    },
                    innerBottomLeftVertex: {
                        x: f,
                        y: p,
                        z: -c
                    },
                    innerTopRightVertex: {
                        x: l,
                        y: d,
                        z: -c
                    },
                    innerBottomRightVertex: {
                        x: l,
                        y: p,
                        z: -c
                    },
                    outerTopLeftVertex: {
                        x: f,
                        y: d,
                        z: v
                    },
                    outerTopRightVertex: {
                        x: l,
                        y: d,
                        z: v
                    },
                    outerBottomLeftVertex: {
                        x: f,
                        y: p,
                        z: v
                    },
                    outerBottomRightVertex: {
                        x: l,
                        y: p,
                        z: v
                    }
                }
            }
            ,
            r.modelSkeleton = function(t, e) {
                var n = []
                  , i = [];
                return Vo.forEach((function(o) {
                    var a = _i(zo[o], 2)
                      , s = a[0]
                      , u = a[1]
                      , h = n.length / 3;
                    n = n.concat(r.calculatePlaneVertex(t[s], t[u], o, e)),
                    i = i.concat(r.calculateIndices(o, h))
                }
                )),
                [n, i]
            }
            ,
            r.calculatePlaneVertex = function(t, e, n, i) {
                for (var o, a = [], s = _i(jo[n], 3), u = s[0], h = s[1], c = s[2], l = r.linerInterpolate(t.x, e.x, u), f = r.linerInterpolate(t.y, e.y, h), d = r.linerInterpolate(t.z, e.z, c), p = 0; p <= u; p++)
                    for (var v = 0; v <= h; v++)
                        for (var m = 0; m <= c; m++)
                            wn(o = un(l[p], f[v], d[m], 1), o, i),
                            o[0] = o[0] / o[3],
                            o[1] = o[1] / o[3],
                            o[2] = o[2] / o[3],
                            a.push(o[0], o[1], o[2]);
                return a
            }
            ,
            r.calculateIndices = function(t, e) {
                var n = []
                  , r = jo[t];
                r = r.filter((function(t) {
                    return t > 0
                }
                ));
                for (var i = _i(r, 2), o = i[0], a = i[1], s = 0, u = 0, h = 0, c = 0, l = 0; l < o; l++)
                    for (var f = 0; f < a; f++)
                        u = (s = e + (a + 1) * l + f) + 1,
                        c = (h = s + a + 1) + 1,
                        n.push(s, h, c),
                        n.push(s, c, u);
                return n
            }
            ,
            r.linerInterpolate = function(t, e, n) {
                var r = [];
                if (n <= 0)
                    r.push(t);
                else
                    for (var i = (e - t) / n, o = 0; o <= n; o++)
                        r[o] = t + i * o;
                return r
            }
            ,
            r.calculateUVCoordinate = function(t, e, n) {
                for (var i, o = t.camera, a = t.panoWidth, s = t.panoHeight, u = t.vanishPointDeltaX, h = t.vanishPointDeltaY, c = [], l = e.width, f = e.height, d = 0, p = 0, v = n.length / 3, m = 0; m < v; m++)
                    wn(i = un(n[3 * m], n[3 * m + 1], n[3 * m + 2], 1), i, o.viewMatrix),
                    wn(i, i, o.projectionMatrix),
                    i[0] = i[0] / i[3],
                    i[1] = i[1] / i[3],
                    i[2] = i[2] / i[3],
                    i[3] = 1,
                    d = (i[0] * a * .5 + u + .5 * l) / l,
                    p = (i[1] * s * .5 + h + .5 * f) / f,
                    c.push(r.getValidateUV(d), r.getValidateUV(p));
                return new Float32Array(c)
            }
            ,
            r.getValidateUV = function(t) {
                return Math.max(-.1, Math.min(1.1, t))
            }
            ,
            r.rotationMatrix = Se(),
            r.camera = e.camera,
            e.isMovingForward)
                ze(r.rotationMatrix, r.rotationMatrix, g(_(-e.traverseDir + e.panoData.heading)));
            else {
                var i = _(180 - e.traverseDir + e.panoData.heading);
                ze(r.rotationMatrix, r.rotationMatrix, g(i))
            }
            r.cuboidVertexes = r.createSkeleton(e);
            var o = r.modelSkeleton(r.cuboidVertexes, r.rotationMatrix)
              , a = _i(o, 2)
              , s = a[0]
              , u = a[1];
            return r.verticesBufferData = new Float32Array(s),
            r.indicesBufferData = new Uint16Array(u),
            r.uvtsBufferData = r.calculateUVCoordinate(e, n, s, r.rotationMatrix),
            r.setAttribute("position", new Vr(r.verticesBufferData,3)),
            r.setAttribute("uv", new Vr(r.uvtsBufferData,2)),
            r.setIndexes(r.indicesBufferData),
            r
        }
        return c(e, t),
        e
    }(Hr)
      , Wo = [0, 1, 0, .5]
      , Ho = function() {
        function t(t, e, n, r, i) {
            var o = this;
            this.start = function() {
                o.animation.start(),
                o._pano.dispatchEvent({
                    debug: !0,
                    log: "淡出动画，渲染一帧",
                    type: d.REFRESH
                })
            }
            ,
            this.update = function() {
                o.animation.update()
            }
            ,
            this._pano = t,
            this.distance = e,
            this.handleEnd = i,
            this.traverseDir = r,
            this.snapshot = n,
            this.camera = t.camera,
            this.scene = this.initScene(),
            this.rotationMatrix = this.traverseGeometry.rotationMatrix,
            this.initAni()
        }
        var e = t.prototype;
        return e.initAni = function() {
            var t = this
              , e = zt(0, 0, this.distance);
            te(e, e, this.rotationMatrix),
            this.animation = new uo(0,1,700,ao.linear).onUpdate((function(n) {
                var r = Nt();
                qt(r, e, n),
                t.scene.traverse((function(t) {
                    t.position = r,
                    t.updateWorldMatrix(!0)
                }
                )),
                t._pano.dispatchEvent({
                    debug: !0,
                    type: d.REFRESH,
                    log: "[Refresh Log] 前进动画， 渲染一帧"
                })
            }
            )).onEnd((function() {
                t.handleEnd && t.handleEnd(),
                t._pano.dispatchEvent({
                    debug: !0,
                    type: d.REFRESH,
                    log: "[Refresh Log] 前进动画， 渲染一帧"
                })
            }
            ))
        }
        ,
        e.initScene = function() {
            var t = new Kr
              , e = this._pano.getContainerSize()
              , n = e.width
              , r = e.height
              , i = new Fo(this._pano,this.traverseDir)
              , o = new No(0,0,n,r)
              , a = new Go(i,o)
              , s = this.initMaterial()
              , u = new Xr(a,s);
            return this.traverseGeometry = a,
            t.add(u),
            t
        }
        ,
        e.initMaterial = function() {
            var t = new Ei;
            return t.depthTest = !1,
            t.vertexShader = To,
            t.fragmentShader = Ao,
            t.uniforms = {
                uSampler: {
                    type: "t",
                    value: this.snapshot
                },
                uOpacity: {
                    type: "1f",
                    value: 1
                },
                vColor: {
                    type: "4f",
                    value: Wo
                },
                showDebugLine: {
                    type: "1i",
                    value: true
                }
            },
            this.material = t,
            t
        }
        ,
        t
    }()
      , Zo = function() {
        function t() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
              , e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            this.x = t,
            this.y = e
        }
        return t.prototype.equals = function(t) {
            return t && t.x === this.x && t.y === this.y
        }
        ,
        t
    }()
      , qo = function() {
        function t(t, e) {
            var n = this;
            this.setData = function(t, e) {
                n.panoData = t,
                n.nextPanoData = e
            }
            ,
            this.sceneChangeHandler = function() {
                if (n.panoData && n.nextPanoData)
                    return new Promise((function(t) {
                        var e = n.isStreet(n.panoData.panoType)
                          , r = n.isStreet(n.nextPanoData.panoType)
                          , i = n.snapshotFn()
                          , o = n.pano.animationType;
                        if (o && ["waterwave", "fade"].indexOf(o) > -1)
                            switch (o) {
                            case "waterwave":
                                n.prepareWaterWave(i),
                                t();
                                break;
                            case "fade":
                                n.prepareFade(i),
                                t()
                            }
                        else
                            r && e ? (n.setDir(),
                            n.prepareTraverse(i).then((function(e) {
                                n.prepareFade(e),
                                t()
                            }
                            ))) : (n.prepareFade(i),
                            t())
                    }
                    ))
            }
            ,
            this.setSnapshot = function(t) {
                n.snapshot = t
            }
            ,
            this.pano = t,
            this.snapshotFn = e,
            this.panoData = null,
            this.nextPanoData = null,
            this.changeAni = null,
            this.animateDir = 0
        }
        var e = t.prototype;
        return e.draw = function() {
            if (this.changeAni) {
                var t = this.changeAni
                  , e = t.scene
                  , n = t.camera;
                this.changeAni.update(),
                this.pano.renderer.render(e, n)
            }
        }
        ,
        e.setDir = function() {
            if (this.panoData && this.nextPanoData) {
                var t = this.nextPanoData.panoId
                  , e = this.panoData.getTopos().filter((function(e) {
                    return e && e.panoId === t
                }
                ));
                if (e.length) {
                    var n = e[0].topoDir;
                    this.animateDir = n
                } else
                    this.animateDir = this.pano.getPov().heading || 0
            }
        }
        ,
        e.prepareJump = function() {
            var t = this
              , e = this.calcJumpDistance();
            return new Promise((function(n) {
                t.changeAni = new Uo(t.pano,t.animateDir,e,(function() {
                    t.changeAni = null,
                    n()
                }
                )),
                t.changeAni.startAni(),
                t.pano.dispatchEvent({
                    debug: !0,
                    log: "穿梭动画，渲染一帧",
                    type: d.REFRESH
                })
            }
            ))
        }
        ,
        e.prepareTraverse = function(t) {
            var e = this
              , n = this.calcJumpDistance();
            return new Promise((function(r) {
                e.changeAni = new Ho(e.pano,n,t,e.animateDir,(function() {
                    var t = e.snapshotFn(e.changeAni.scene, e.changeAni.camera);
                    r(t),
                    e.changeAni = null
                }
                )),
                e.changeAni.start(),
                e.pano.dispatchEvent({
                    debug: !0,
                    log: "穿梭动画，渲染一帧",
                    type: d.REFRESH
                })
            }
            ))
        }
        ,
        e.prepareFade = function(t) {
            var e = this;
            this.changeAni = new Bo(this.pano,t,(function() {
                e.changeAni = null,
                e.pano.emit(d.SCENE_CHANGE_END)
            }
            ))
        }
        ,
        e.prepareWaterWave = function(t) {
            var e = this;
            this.changeAni = new ko(this.pano,t,(function() {
                e.changeAni = null,
                e.pano.emit(d.SCENE_CHANGE_END)
            }
            ))
        }
        ,
        e.calcJumpDistance = function() {
            var t, e, n = 300, r = (t = new Zo(this.panoData.panoX,this.panoData.panoY),
            e = new Zo(this.nextPanoData.panoX,this.nextPanoData.panoY),
            t && e ? Math.round(Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2))) : 0);
            "number" == typeof r && (n *= Math.pow(r, 1 / 4));
            return n
        }
        ,
        e.isStreet = function(t) {
            return t === p.TYPE_STREET
        }
        ,
        t
    }()
      , Yo = function() {
        function t(t, e) {
            var n = e.fov
              , r = void 0 === n ? 145 : n
              , i = e.cameraY
              , o = void 0 === i ? 3e3 : i
              , a = e.handleEnd;
            this._pano = void 0,
            this.originFov = void 0,
            this.originRotateX = void 0,
            this.originRotateY = void 0,
            this.targetFov = void 0,
            this.targetCameraY = void 0,
            this.handleEnd = void 0,
            this.animate = void 0,
            this._pano = t,
            this.originFov = this.camera.fov,
            this.originRotateX = this.camera.rotation.x,
            this.originRotateY = this.camera.rotation.y,
            this.targetFov = r,
            this.targetCameraY = o,
            this.handleEnd = a,
            this.init()
        }
        var e = t.prototype;
        return e.start = function() {
            this._pano.dispatchEvent({
                type: d.REFRESH,
                debug: !0,
                log: "开场动画动画起始，渲染一帧"
            }),
            this.animate.start()
        }
        ,
        e.update = function() {
            this.animate.update()
        }
        ,
        e.init = function() {
            var t = this
              , e = this.camera;
            this.handleCameraChange(0),
            this.animate = new uo(0,1,p.FISHEYE_DURATION,ao.easeInOutQuad).onUpdate((function(e) {
                t.handleCameraChange(e),
                t._pano.dispatchEvent({
                    type: d.REFRESH,
                    debug: !0,
                    log: "开场动画动画，渲染一帧"
                })
            }
            )).onEnd((function() {
                e.fov = t.originFov,
                e.rotateX(t.originRotateX),
                e.rotateY(t.originRotateY),
                e.setPosition(0, 0, 0),
                e.updateWorldMatrix(),
                e.updateProjectionMatrix(),
                t._pano.dispatchEvent({
                    type: d.REFRESH,
                    debug: !0,
                    log: "开场动画动画结束，渲染一帧"
                }),
                t.handleEnd()
            }
            ))
        }
        ,
        e.handleCameraChange = function(t) {
            var e = this.camera
              , n = this.targetCameraY
              , r = this.targetFov - (this.targetFov - this.originFov) * t
              , i = (this.originRotateX - -90) * t - 90
              , o = this.originRotateY * t;
            e.fov = r,
            e.rotateX(i),
            e.rotateY(o),
            e.setPosition(0, n - n * t, 0),
            e.updateWorldMatrix(),
            e.updateProjectionMatrix()
        }
        ,
        o(t, [{
            key: "camera",
            get: function() {
                return this._pano.camera
            }
        }]),
        t
    }();
    function Xo(t, e) {
        var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
        if (!n) {
            if (Array.isArray(t) || (n = function(t, e) {
                if (!t)
                    return;
                if ("string" == typeof t)
                    return Ko(t, e);
                var n = Object.prototype.toString.call(t).slice(8, -1);
                "Object" === n && t.constructor && (n = t.constructor.name);
                if ("Map" === n || "Set" === n)
                    return Array.from(t);
                if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                    return Ko(t, e)
            }(t)) || e && t && "number" == typeof t.length) {
                n && (t = n);
                var r = 0
                  , i = function() {};
                return {
                    s: i,
                    n: function() {
                        return r >= t.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: t[r++]
                        }
                    },
                    e: function(t) {
                        throw t
                    },
                    f: i
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        var o, a = !0, s = !1;
        return {
            s: function() {
                n = n.call(t)
            },
            n: function() {
                var t = n.next();
                return a = t.done,
                t
            },
            e: function(t) {
                s = !0,
                o = t
            },
            f: function() {
                try {
                    a || null == n.return || n.return()
                } finally {
                    if (s)
                        throw o
                }
            }
        }
    }
    function Ko(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var n = 0, r = new Array(e); n < e; n++)
            r[n] = t[n];
        return r
    }
    var Qo = function() {
        function t(t) {
            var e = this;
            this.name = "PanoOverlayManager",
            this.overlays = [],
            this.pano = void 0,
            this.isReady = !1,
            this.clickChecker = function(t, n) {
                var r, i = !0, o = Xo(e.overlays);
                try {
                    for (o.s(); !(r = o.n()).done; ) {
                        var a = r.value
                          , s = a.dom.getBoundingClientRect()
                          , u = s.left
                          , h = s.right
                          , c = s.top
                          , l = s.bottom;
                        if (t >= u && t <= h && n >= c && n <= l) {
                            i = !1,
                            a.handleClick();
                            break
                        }
                    }
                } catch (t) {
                    o.e(t)
                } finally {
                    o.f()
                }
                return i
            }
            ,
            this.pano = t
        }
        var e = t.prototype;
        return e.handleAdd = function(t) {
            t && t.id && (this.overlays.some((function(e) {
                return e.id === t.id
            }
            )) || (this.overlays.push(t),
            this.isReady && t.init(this.pano)))
        }
        ,
        e.handleRemove = function(t) {
            for (var e = 0; e < this.overlays.length; e++)
                if (this.overlays[e].id === t.id)
                    return this.overlays[e].remove(),
                    void this.overlays.splice(e, 1)
        }
        ,
        e.init = function() {
            this.isReady = !0;
            var t, e = Xo(this.overlays);
            try {
                for (e.s(); !(t = e.n()).done; ) {
                    t.value.init(this.pano)
                }
            } catch (t) {
                e.e(t)
            } finally {
                e.f()
            }
        }
        ,
        e.draw = function() {
            if (this.isReady) {
                var t, e = Xo(this.overlays);
                try {
                    for (e.s(); !(t = e.n()).done; ) {
                        t.value.draw()
                    }
                } catch (t) {
                    e.e(t)
                } finally {
                    e.f()
                }
            }
        }
        ,
        e.destroy = function() {
            var t, e = Xo(this.overlays);
            try {
                for (e.s(); !(t = e.n()).done; ) {
                    t.value.remove()
                }
            } catch (t) {
                e.e(t)
            } finally {
                e.f()
            }
            this.overlays = []
        }
        ,
        t
    }();
    function Jo(t, e) {
        var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
        if (!n) {
            if (Array.isArray(t) || (n = function(t, e) {
                if (!t)
                    return;
                if ("string" == typeof t)
                    return $o(t, e);
                var n = Object.prototype.toString.call(t).slice(8, -1);
                "Object" === n && t.constructor && (n = t.constructor.name);
                if ("Map" === n || "Set" === n)
                    return Array.from(t);
                if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                    return $o(t, e)
            }(t)) || e && t && "number" == typeof t.length) {
                n && (t = n);
                var r = 0
                  , i = function() {};
                return {
                    s: i,
                    n: function() {
                        return r >= t.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: t[r++]
                        }
                    },
                    e: function(t) {
                        throw t
                    },
                    f: i
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        var o, a = !0, s = !1;
        return {
            s: function() {
                n = n.call(t)
            },
            n: function() {
                var t = n.next();
                return a = t.done,
                t
            },
            e: function(t) {
                s = !0,
                o = t
            },
            f: function() {
                try {
                    a || null == n.return || n.return()
                } finally {
                    if (s)
                        throw o
                }
            }
        }
    }
    function $o(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var n = 0, r = new Array(e); n < e; n++)
            r[n] = t[n];
        return r
    }
    var ta = function() {
        function t(t) {
            var e = this;
            this.renderer = void 0,
            this.gl = void 0,
            this.camera = void 0,
            this.cameraNoFix = null,
            this.panoData = null,
            this.scene = void 0,
            this.sceneChange = void 0,
            this.openingAni = void 0,
            this.sphereRender = void 0,
            this.linkGLRender = void 0,
            this.overlayManager = void 0,
            this.skyboxRender = void 0,
            this.pano = void 0,
            this.renderThreadId = null,
            this.requestId = null,
            this.isRAFRuning = !1,
            this.setData = function() {
                var t = et(it.mark((function t(n) {
                    var r, o;
                    return it.wrap((function(t) {
                        for (; ; )
                            switch (t.prev = t.next) {
                            case 0:
                                if (n) {
                                    t.next = 2;
                                    break
                                }
                                return t.abrupt("return");
                            case 2:
                                if (!e.panoData || !e.pano.useAnimation) {
                                    t.next = 8;
                                    break
                                }
                                return e.sceneChange.setData(e.panoData, n),
                                t.next = 6,
                                e.sceneChange.sceneChangeHandler();
                            case 6:
                                void 0 !== e.pano.backupUseAnimation && (e.pano.useAnimation = e.pano.backupUseAnimation),
                                e.pano.animationType = "";
                            case 8:
                                e.reset(),
                                e.panoData = n,
                                e.pano.panoData = n,
                                void 0 === i(n.defaultHeading) && void 0 === i(n.defaultPitch) || e.pano.handlePovChange({
                                    heading: n.defaultHeading,
                                    pitch: n.defaultPitch
                                }),
                                r = n.image && 6 === n.image.length,
                                (o = r ? e.skyboxRender : e.sphereRender).setData(n),
                                e.linkGLRender.setData(n),
                                e.overlayManager.init(),
                                e.scene.add(o.meshs),
                                e.updateProjectionMatrix(e.camera),
                                e.updateCameraHeadingAndPitch(e.camera);
                            case 20:
                            case "end":
                                return t.stop()
                            }
                    }
                    ), t)
                }
                )));
                return function(e) {
                    return t.apply(this, arguments)
                }
            }(),
            this.getSnapshot = function(t, n) {
                t = t || e.scene,
                n = n || e.camera;
                var r = e.pano.getContainerSize()
                  , i = r.width
                  , o = r.height
                  , a = new zi(i,o);
                return a.premultiplyAlpha = !0,
                e.renderer.render(t, n, a),
                a
            }
            ,
            this.update = function() {
                e.panoData && (e.sphereRender.update(),
                e.linkGLRender.update(),
                e.startRenderThread())
            }
            ,
            this.onThumbLoaded = function() {
                e.sceneChange.changeAni && e.sceneChange.changeAni.start();
                var t = e.linkGLRender.meshs;
                t && e.scene.add(t),
                e.startFishEyeAni()
            }
            ,
            this.startRenderThread = function() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 100;
                e.renderThreadId && (clearTimeout(e.renderThreadId),
                e.renderThreadId = null),
                e.renderThreadId = window.setTimeout((function() {
                    e.isRAFRuning = !1,
                    e.renderThreadId = null
                }
                ), t),
                e.isRAFRuning || (e.isRAFRuning = !0,
                e.renderFrame())
            }
            ,
            this.resize = function() {
                var t = e.pano.getContainer();
                e.renderer.setSize(t.clientWidth, t.clientHeight)
            }
            ;
            var n = window.devicePixelRatio || 1
              , r = t.getContainer();
            this.pano = t,
            this.renderer = new ki({
                premultipliedAlpha: !1,
                preserveDrawingBuffer: t.opts.enableCapture || !1,
                antialias: !(n > 1),
                pixelRatio: n,
                width: r.clientWidth,
                height: r.clientHeight
            }),
            this.renderer.setSize(r.clientWidth, r.clientHeight),
            t.getPanes().tileLayer.appendChild(this.renderer.domElement),
            this.gl = this.renderer.getContext(),
            this.camera = new Xi(75,r.clientWidth / r.clientHeight,.01,67e3),
            this.scene = new Kr,
            t.gl = this.gl,
            t.canvas = this.renderer.domElement,
            t.scene = this.scene,
            t.camera = this.camera,
            t.cameraNoFix = this.cameraNoFix,
            t.renderer = this.renderer,
            t.renders = [],
            this.sceneChange = new qo(t,this.getSnapshot),
            this.initModule()
        }
        var e = t.prototype;
        return e.initModule = function() {
            var t = this.pano;
            this.sphereRender = new Ro(t),
            this.linkGLRender = new Lo(t),
            this.overlayManager = new Qo(t),
            this.skyboxRender = new to(t),
            this.pano.renders.push(this.sphereRender, this.linkGLRender, this.overlayManager, this.skyboxRender)
        }
        ,
        e.reset = function() {
            this.scene.remove(this.sphereRender.meshs),
            this.scene.remove(this.linkGLRender.meshs)
        }
        ,
        e.getModule = function(t) {
            var e, n = null, r = Jo(this.pano.renders);
            try {
                for (r.s(); !(e = r.n()).done; ) {
                    var i = e.value;
                    if (i.name === t) {
                        n = i;
                        break
                    }
                }
            } catch (t) {
                r.e(t)
            } finally {
                r.f()
            }
            return n
        }
        ,
        e.renderFrame = function() {
            !1 !== this.isRAFRuning ? (this.openingAni && this.openingAni.update(),
            this.sphereRender.draw(),
            this.renderer.render(this.scene, this.camera),
            this.overlayManager.draw(),
            this.sceneChange.draw(),
            this.requestId = requestAnimationFrame(this.renderFrame.bind(this))) : this.requestId && (cancelAnimationFrame(this.requestId),
            this.requestId = null)
        }
        ,
        e.startFishEyeAni = function() {
            var t = this;
            this.pano.fisheye && (this.openingAni = new Yo(this.pano,{
                handleEnd: function() {
                    t.openingAni = null,
                    t.pano.fisheye = !1
                }
            }),
            setTimeout((function() {
                t.openingAni.start(),
                t.startRenderThread()
            }
            ), p.FISHEYE_DELAY))
        }
        ,
        e.updateProjectionMatrix = function(t, e) {
            var n = this.pano.getFov(e)
              , r = this.pano.getContainerSize()
              , i = r.width / r.height;
            t.fov = n,
            t.aspect = i,
            t.updateProjectionMatrix()
        }
        ,
        e.updateCameraHeadingAndPitch = function(t) {
            var e = this.pano.getPov()
              , n = e.heading
              , r = e.pitch
              , i = this.panoData
              , o = i.fixHeading
              , a = void 0 === o ? 0 : o
              , s = i.fixPitch
              , u = void 0 === s ? 0 : s
              , h = i.fixRoll
              , c = void 0 === h ? 0 : h;
            t.rotateX(r - u),
            t.rotateY(-n + a),
            t.rotateZ(c),
            t.updateWorldMatrix()
        }
        ,
        e.safeCall = function(t, e, n) {
            var r = this.getModule(t);
            if (r && r[e])
                return r[e].apply(r, n || []);
            throw new Error("[safeCall] get module error => ".concat(t))
        }
        ,
        o(t, [{
            key: "isCanUpdate",
            get: function() {
                var t = this.sceneChange.changeAni
                  , e = this.openingAni;
                return this.panoData && !(t || e)
            }
        }]),
        t
    }()
      , ea = function() {
        function t(t) {
            var e = this;
            this.updateAnglePerPixel = function() {
                e._anglePerPixel = e._pano.calcAnglePerPixel()
            }
            ,
            this.destroy = function() {
                e.bindEvent(!1)
            }
            ,
            this._pano = t,
            this._displayZoom = t.getZoom(),
            this._anglePerPixel = t.calcAnglePerPixel(),
            this.lock = !1,
            this.clickTimer = null,
            this.dragAni = null,
            this.state = {
                initPos: null,
                initHeading: 0,
                initPitch: 0,
                lastDiffPos: null,
                moveDiffPos: null,
                isTouchDown: !1,
                isTouchMove: !1,
                startTime: 0,
                lastMoveTime: 0
            }
        }
        var e = t.prototype;
        return e.init = function() {
            this._initialized || (this._initialized = !0,
            this.isMobile = navigator.userAgent.toLowerCase().match(/ipod|ipad|iphone|android/),
            this.isMobile ? (this.EVENTS = {
                START: "touchstart",
                MOVING: "touchmove",
                END: "touchend",
                OUT: "touchcancel",
                WHEEL: "gesturechange",
                DOMMouseScroll: "DOMMouseScroll"
            },
            this.getPagePosition = function(t) {
                var e = t.touches.length > 0 ? t.touches[0] : t.changedTouches[0];
                return {
                    x: e.pageX,
                    y: e.pageY
                }
            }
            ) : (this.EVENTS = {
                START: "mousedown",
                MOVING: "mousemove",
                END: "mouseup",
                OUT: "mouseout",
                WHEEL: "mousewheel"
            },
            this.getPagePosition = function(t) {
                return {
                    x: t.pageX,
                    y: t.pageY
                }
            }
            ),
            this.bindEvent())
        }
        ,
        e.bindEvent = function() {
            var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]
              , e = document.body
              , n = this.EVENTS
              , r = n.START
              , i = n.MOVING
              , o = n.END
              , a = this._pano._svContainer
              , s = t ? "addEventListener" : "removeEventListener";
            a[s](r, this.handleDown.bind(this)),
            a[s](i, this.handleMove.bind(this)),
            e[s](o, this.handleUp.bind(this))
        }
        ,
        e.handleDown = function(t) {
            this.dragAni && this.dragAni.stop();
            var e = this.state
              , n = this.getPagePosition(t)
              , r = this._pano.getPov();
            e.initPos = n,
            e.isTouchDown = !0,
            e.initHeading = r.heading,
            e.initPitch = r.pitch,
            e.startTime = x(),
            this._pano.dispatchEvent(d.TOUCH_START, t)
        }
        ,
        e.handleMove = function(t) {
            if (this.state.isTouchDown) {
                this.state.isTouchMove = !0;
                var e = this.calcDiffPos(this.state.initPos, this.getPagePosition(t));
                this.setPov(e),
                this.state.moveDiffPos = e,
                this.state.lastDiffPos = e,
                this.state.lastMoveTime = x(),
                t.preventDefault(),
                t.stopPropagation()
            }
        }
        ,
        e.handleUp = function(t) {
            var e = this;
            if (this.state.isTouchDown) {
                var n = !0
                  , r = this.getPagePosition(t);
                if (t.pos = r,
                this.state.isTouchDown = !1,
                this._pano.dispatchEvent(d.TOUCH_END, t),
                this._pano.renders.length)
                    for (var i = 0; i < this._pano.renders.length; i++) {
                        var o = this._pano.renders[i];
                        if (o.clickChecker && !(n = o.clickChecker(r.x, r.y))) {
                            t.stopPropagation();
                            break
                        }
                    }
                if (!1 !== n)
                    if (this.state.isTouchMove)
                        this.state.isTouchMove = !1,
                        this.processMotion(t);
                    else if (t.stopPropagation(),
                    this.clickTimer)
                        clearTimeout(this.clickTimer),
                        this.clickTimer = null,
                        this._pano.dispatchEvent(d.DOUBLE_CLICK, t);
                    else {
                        this.clickTimer = setTimeout((function() {
                            e.clickTimer = null,
                            e._pano.dispatchEvent(d.CLICK, t)
                        }
                        ), 300)
                    }
            }
        }
        ,
        e.setPov = function(t) {
            var e = t.x
              , n = t.y
              , r = -e * this._anglePerPixel
              , i = n * this._anglePerPixel
              , o = this.state.initHeading + r
              , a = this.state.initPitch + i;
            this._pano.setPov({
                heading: o,
                pitch: a
            })
        }
        ,
        e.processMotion = function(t) {
            var e = this
              , n = this.state
              , r = x()
              , i = r - n.lastMoveTime
              , o = n.moveDiffPos
              , a = o.x
              , s = o.y;
            if (i < 300 && (Math.abs(a) > 10 || Math.abs(s) > 10)) {
                var u = this.calcDiffPos(this.state.initPos, this.getPagePosition(t))
                  , h = 2 * Math.sqrt(Math.pow(u.x, 2) + Math.pow(u.y, 2)) / (.008 * (r - n.startTime))
                  , c = [u.x > 0 ? 1 : -1, u.y > 0 ? 1 : -1]
                  , l = Math.abs(u.x)
                  , f = Math.abs(u.y)
                  , p = Math.atan2(f, l)
                  , v = Math.cos(p) * h
                  , m = Math.sin(p) * h;
                -1 === c[0] && (v = -v),
                -1 === c[1] && (m = -m),
                this.dragAni && this.dragAni.stop();
                var g = this._pano.getPov()
                  , y = g.heading
                  , _ = g.pitch;
                n.initHeading = y,
                n.initPitch = _;
                this.dragAni = new uo(0,1,400,(function(t) {
                    return .3125 * t - .15625 * t * t
                }
                )).onUpdate((function(t) {
                    var n = (t *= 6.4) * v
                      , r = t * m;
                    e.setPov({
                        x: n,
                        y: r
                    })
                }
                )).onEnd((function() {
                    e.dragAni = null,
                    e._pano.dispatchEvent({
                        type: d.POV_CHANGED_END
                    })
                }
                )).startAndAutoUpdate()
            } else
                this._pano.dispatchEvent({
                    type: d.POV_CHANGED_END
                })
        }
        ,
        e.calcDiffPos = function(t, e) {
            return t && e ? {
                x: e.x - t.x,
                y: e.y - t.y
            } : {
                x: 0,
                y: 0
            }
        }
        ,
        t
    }();
    function na(t, e) {
        var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
        if (!n) {
            if (Array.isArray(t) || (n = function(t, e) {
                if (!t)
                    return;
                if ("string" == typeof t)
                    return ra(t, e);
                var n = Object.prototype.toString.call(t).slice(8, -1);
                "Object" === n && t.constructor && (n = t.constructor.name);
                if ("Map" === n || "Set" === n)
                    return Array.from(t);
                if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                    return ra(t, e)
            }(t)) || e && t && "number" == typeof t.length) {
                n && (t = n);
                var r = 0
                  , i = function() {};
                return {
                    s: i,
                    n: function() {
                        return r >= t.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: t[r++]
                        }
                    },
                    e: function(t) {
                        throw t
                    },
                    f: i
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        var o, a = !0, s = !1;
        return {
            s: function() {
                n = n.call(t)
            },
            n: function() {
                var t = n.next();
                return a = t.done,
                t
            },
            e: function(t) {
                s = !0,
                o = t
            },
            f: function() {
                try {
                    a || null == n.return || n.return()
                } finally {
                    if (s)
                        throw o
                }
            }
        }
    }
    function ra(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var n = 0, r = new Array(e); n < e; n++)
            r[n] = t[n];
        return r
    }
    var ia = function() {
        function t(t) {
            this.pano = t,
            this.preZoom = t.getZoom(),
            this.zoomChangeAni = null,
            this.debug = !1,
            this.panoServiceLock = !1,
            this.bindEvent(),
            this.initModule(),
            this.initResize(),
            this.handleContextStatus()
        }
        var e = t.prototype;
        return e.initModule = function() {
            var t = this.pano;
            this.panoService = new $(t),
            this.panoGLRender = new ta(t),
            this.op = new ea(t)
        }
        ,
        e.initResize = function() {
            var t = this
              , e = this.pano.getContainerSize()
              , n = this.pano.getContainer()
              , r = function(n, r) {
                if (n && r) {
                    var i = new l(n,r);
                    i.equals(e) || (t.pano.dispatchEvent({
                        type: d.SIZE_CHANGED
                    }),
                    e = i)
                }
            };
            if (void 0 !== window.ResizeObserver) {
                var i = new window.ResizeObserver((function(t) {
                    var e, n = na(t);
                    try {
                        for (n.s(); !(e = n.n()).done; ) {
                            var i = e.value.target;
                            r(i.clientWidth, i.clientHeight)
                        }
                    } catch (t) {
                        n.e(t)
                    } finally {
                        n.f()
                    }
                }
                ));
                i.observe(n),
                this.resizeOb = i
            } else
                this.checkSizeTimer = setInterval((function() {
                    r(n.clientWidth, n.clientHeight)
                }
                ), 80)
        }
        ,
        e.bindEvent = function() {
            var t = this
              , e = this.pano;
            e.on(d.PANO_ERROR, (function() {
                t.panoServiceLock = !1
            }
            )),
            e.on(d.DATA_LOADED, (function(n) {
                t.pano.opts.visible ? t.pano.show() : t.pano.hide(),
                t.panoServiceLock = !1,
                n.options && n.options.animation && (e.backupUseAnimation = e.useAnimation,
                e.useAnimation = n.options.animation,
                "" !== n.options.animationType && (e.animationType = n.options.animationType)),
                t.panoGLRender.setData(n.data),
                t.op.init()
            }
            )),
            e.on(d.SET_POV, (function(n) {
                var r = n.pov
                  , i = n.options
                  , o = (void 0 === i ? {
                    animation: !0
                } : i).animation;
                if (t.panoGLRender.isCanUpdate) {
                    var a = function(n) {
                        e.handlePovChange(n) && (t.panoGLRender.updateCameraHeadingAndPitch(e.camera),
                        t.panoGLRender.update(),
                        e.dispatchEvent(d.POV_CHANGED, n))
                    };
                    if (o) {
                        var s = e.getPov()
                          , u = s.heading
                          , h = s.pitch
                          , c = r.heading - u
                          , l = r.pitch - h;
                        c > 180 ? (u += 360,
                        c = r.heading - u) : c < -180 && (u -= 360,
                        c = r.heading - u),
                        new uo(0,1,400,ao["ease-out"]).onUpdate((function(t) {
                            a({
                                heading: u + t * c,
                                pitch: h + t * l
                            })
                        }
                        )).onEnd((function() {}
                        )).startAndAutoUpdate()
                    } else
                        a(r)
                } else
                    e.handlePovChange(r)
            }
            )),
            e.on(d.ZOOM_CHANGED, (function() {
                var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                if (t.panoGLRender.isCanUpdate) {
                    var r = t.preZoom
                      , i = e.getZoom();
                    if (r !== i) {
                        var o = n.noAnimation || !1;
                        if (t.zoomChangeAni && (t.zoomChangeAni.stop(),
                        t.zoomChangeAni = null),
                        o)
                            return t.op.updateAnglePerPixel(),
                            t.panoGLRender.updateProjectionMatrix(e.camera),
                            t.panoGLRender.update(),
                            void (t.preZoom = i);
                        var a = 400;
                        t.zoomChangeAni = new uo(r,i,a,ao.easeOutCubic).onUpdate((function(n) {
                            t.panoGLRender.updateProjectionMatrix(e.camera, n),
                            t.panoGLRender.update(n)
                        }
                        )).onEnd((function() {
                            t.zoomChangeAni = null,
                            t.preZoom = i
                        }
                        )).startAndAutoUpdate()
                    }
                }
            }
            )),
            e.on(d.DOUBLE_CLICK, (function() {
                t.panoGLRender.isCanUpdate && (v.isMobile && (3 === e.getZoom() ? e.setZoom(2) : e.setZoom(3)))
            }
            )),
            e.on(d.REFRESH, (function(e) {
                var n = e.duration || 200;
                t.panoGLRender.startRenderThread(n),
                t.debug && e.log && e.debug && console.warn(e.log)
            }
            )),
            e.on(d.SET_ID, (function(e) {
                if (!t.panoServiceLock && e.id) {
					debugger
                    t.panoServiceLock = !0,
                    window.getPanoById = t.panoService.getPanoById;
                    var n = (1e5 * Math.random()).toFixed(0);
                    BMapGL._rd = BMapGL._rd || {},
                    BMapGL._rd["_cbk" + n] = function(t) {
                        t && void 0 !== t.error && 0 === t.error ? window.getPanoById(e.id) : K("PANORAMA"),
                        delete BMapGL._rd["_cbk" + n]
                    }
                    ,
                    X("PANORAMA", "BMapGL._rd._cbk" + n)
                }
            }
            )),
            e.on(d.SET_POSITION, (function(e) {
                if (!t.panoServiceLock && e.point) {
					debugger
                    t.panoServiceLock = !0,
                    window.getPanoByLocation = t.panoService.getPanoByLocation;
                    var n = (1e5 * Math.random()).toFixed(0);
                    BMapGL._rd = BMapGL._rd || {},
                    BMapGL._rd["_cbk" + n] = function(t) {
                        t && void 0 !== t.error && 0 === t.error ? window.getPanoByLocation(e.point) : K("PANORAMA"),
                        delete BMapGL._rd["_cbk" + n]
                    }
                    ,
                    X("PANORAMA", "BMapGL._rd._cbk" + n)
                }
            }
            )),
            e.on(d.SIZE_CHANGED, (function() {
                t.op.updateAnglePerPixel(),
                t.panoGLRender.resize(),
                t.panoGLRender.updateProjectionMatrix(e.camera),
                t.panoGLRender.update()
            }
            )),
            e.on(d.THUMB_LOADED, (function() {
                t.panoGLRender.onThumbLoaded(),
                t.panoGLRender.update()
            }
            )),
            e.on(d.OVERLAY_ADD, (function(e) {
                t.panoGLRender.overlayManager.handleAdd(e)
            }
            )),
            e.on(d.OVERLAY_REMOVE, (function(e) {
                t.panoGLRender.overlayManager.handleRemove(e)
            }
            )),
            e.on(d.OVERLAYS_CLEAR, (function() {
                t.panoGLRender.overlayManager.destroy()
            }
            )),
            e.on(d.LINK_VISIBLE_CHANGE, (function(e) {
                "boolean" == typeof e.value && (t.panoGLRender.safeCall("PanoLinkRender", "setVisible", [e.value]),
                t.pano.dispatchEvent(d.REFRESH))
            }
            )),
            e.on(d.DESTROY, (function() {
                t.op.destroy(),
                t.resizeOb && t.resizeOb.disconnect(),
                t.checkSizeTimer && clearInterval(t.checkSizeTimer),
                t.panoGLRender.renderer.forceContextLoss(),
                e.canvas.removeEventListener("webglcontextlost", t.onWebGLContextLost, !1)
            }
            ));
            var n = v.isFirefox ? "DOMMouseScroll" : "mousewheel"
              , r = new Date;
            e._svContainer.addEventListener(n, (function(t) {
                if (e.opts.enableScrollWheelZoom && e.opts.visible) {
                    var n = new Date;
                    if (n - r < 400)
                        return;
                    r = n;
                    var i = -t.detail / 3 || t.wheelDelta / 120
                      , o = e.getZoom() + i;
                    e.setZoom(o),
                    t.preventDefault()
                }
            }
            ))
        }
        ,
        e.getImgZoom = function() {
            return this.pano.calcDisplayZoom().imgZoom
        }
        ,
        e.handleContextStatus = function() {
            this.pano.canvas.addEventListener("webglcontextlost", this.onWebGLContextLost, !1)
        }
        ,
        e.onWebGLContextLost = function(t) {
            t.preventDefault(),
            setTimeout((function() {
                window.location.reload()
            }
            ), 200)
        }
        ,
        t
    }();
    function oa(t, e, n) {
        t.addEventListener(e, n, !1)
    }
    var aa = function(t) {
        function e(e, n) {
            var r;
            (r = t.call(this) || this).panoData = null,
            r.opts = void 0,
            r.useAnimation = !1,
            r.backupUseAnimation = r.useAnimation,
            r.animationType = "",
            r.fisheye = !1,
            r.canvas = void 0,
            r.camera = void 0,
            r.renderer = void 0,
            r.gl = void 0,
            r.scene = void 0,
            r.cameraNoFix = void 0,
            r.renders = void 0,
            r.closeBtn = null,
            r.navigator = null,
            r._container = void 0,
            r._pov = {
                heading: 0,
                pitch: 0
            },
            r._id = null,
            r._position = null,
            r._zoom = 2,
            r._displayZoomResultsCache = {},
            r._svContainer = void 0,
            r._eventManager = void 0,
            r._panes = void 0,
            r.addCloseButton = function(t) {
                var e = r.closeBtn = document.createElement("div");
                e.className = "pano_close",
                e.style.cssText = ["position:absolute", "right:10px", "top:10px", "padding: 5px 8px;", "cursor:pointer", "border-radius: 4px", "font-size: 14px", "background-color: rgba(0,0,0,.55)", "z-index: 99", "color: #fff"].join(";"),
                e.innerText = "关闭",
                e.title = "退出全景",
                e.onclick = function() {
                    r.hide(),
                    t && t()
                }
                ,
                r._svContainer.appendChild(e)
            }
            ,
            r.getContainer = function() {
                return r._container
            }
            ,
            r.getContainerSize = function() {
                var t = r._container;
                return new l(t.clientWidth,t.clientHeight)
            }
            ,
            r.getPanes = function() {
                return r._panes
            }
            ,
            r.show = function() {
                r.opts.visible = !0,
                w.show(r._svContainer)
            }
            ,
            r.hide = function() {
                r.opts.visible = !1,
                w.hide(r._svContainer)
            }
            ,
            r.getZoom = function() {
                return r._zoom
            }
            ,
            r.setZoom = function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                t !== r._zoom && (t > p.MAX_ZOOM && (t = p.MAX_ZOOM),
                t < p.MIN_ZOOM && (t = p.MIN_ZOOM),
                t !== r._zoom && (r._zoom = t,
                r.dispatchEvent(d.ZOOM_CHANGED, {
                    noAnimation: e.noAnimation || !1
                })))
            }
            ,
            r.getPov = function() {
                return r._pov
            }
            ,
            r.setPov = function(t, e) {
                r.dispatchEvent(d.SET_POV, {
                    pov: t,
                    options: e || {
                        animation: !1
                    }
                })
            }
            ,
            r.handlePovChange = function(t) {
                if ("object" === i(t)) {
                    var e = !1
                      , n = t.heading
                      , o = t.pitch;
                    if ("number" != typeof n || isNaN(n) || (e = !0,
                    n = _(n),
                    r._pov.heading = n),
                    "number" == typeof o && !isNaN(n)) {
                        e = !0;
                        var a = r.opts.minPitch
                          , s = r.opts.maxPitch;
                        o > s && (o = s),
                        o < a && (o = a),
                        r._pov.pitch = o
                    }
                    return e
                }
            }
            ,
            r.calcDisplayZoom = function(t, e) {
                t = t || r.getContainerSize(),
                e = e || r.getZoom();
                var n = t
                  , i = n.width
                  , o = n.height
                  , a = r.opts.maxImageZoom
                  , s = r.opts.minImageZoom
                  , u = "".concat(i, "_").concat(o, "_").concat(e);
                if (r._displayZoomResultsCache[u])
                    return r._displayZoomResultsCache[u];
                for (var h = r.calcAnglePerPixel(), c = Math.floor(e) + 2, l = 360 / (2 * Math.pow(2, c - 2) * h); l > 512; )
                    c++,
                    l = 360 / (2 * Math.pow(2, c - 2) * h);
                if (c > a) {
                    var f = c - a;
                    l *= Math.pow(2, f),
                    c = a
                }
                c < s && (c = s);
                var d = {
                    imgZoom: c,
                    displayTileSize: l = Math.round(l)
                };
                return r._displayZoomResultsCache[u] = d,
                d
            }
            ,
            r.calcAnglePerPixel = function() {
                return r.getFov() / r.getContainerSize().height
            }
            ,
            r.getFov = function(t) {
                return t = t || r.getZoom(),
                (v.isMobile ? r.calcMobileFovy : r.calcPCFovy).call(a(r), t)
            }
            ,
            r.getVisible = function() {
                return r.opts.visible
            }
            ,
            r.setId = function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                r.useAnimation = e.animation || !1,
                r.fisheye = e.fisheye || !1,
                r.animationType = e.animationType || "",
                r.dispatchEvent(d.SET_ID, {
                    id: t
                })
            }
            ,
            r.setPosition = function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                r.useAnimation = e.animation || !1,
                r.fisheye = e.fisheye || !1,
                r.animationType = e.animationType || "",
                r.dispatchEvent(d.SET_POSITION, {
                    point: t
                })
            }
            ;
            var o = {
                minImageZoom: p.TILE_MIN_ZOOM,
                maxImageZoom: p.TILE_MAX_ZOOM,
                minPitch: p.MIN_PITCH,
                maxPitch: p.MAX_PITCH,
                radius: p.RADIUS,
                tileBaseUrls: p.TILE_BASE_URLS,
                linksControl: !0,
                navigationControl: !0,
                enableScrollWheelZoom: !0,
                enableCapture: !1,
                visible: !0
            };
            r.opts = Object.assign({}, o, n);
            var s = "string" == typeof e ? document.querySelector(e) : e;
            if (!s)
                throw new Error("全景引擎宿主容器不存在");
            return r._container = s,
            r._init(),
            r
        }
        c(e, t);
        var n = e.prototype;
        return n.getPosition = function() {
            return this.position
        }
        ,
        n.setOptions = function(t) {
            var e;
            for (e in t)
                if (Object.prototype.hasOwnProperty.call(t, e)) {
                    var n = !0;
                    if ("object" !== i(t[e]) && (n = t[e] !== this.opts[e]),
                    this.opts[e] = t[e],
                    !n)
                        continue;
                    switch (e) {
                    case "linksControl":
                        this.dispatchEvent(d.LINK_VISIBLE_CHANGE, {
                            value: t[e]
                        });
                        break;
                    case "navigationControl":
                        var r = !!t[e]
                          , o = this.navigator;
                        r ? o.show() : o.hide()
                    }
                }
        }
        ,
        n.capture = function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            if (this.canvas) {
                var e = this.canvas
                  , n = t.quality || .8
                  , r = t.type || "image/jpeg"
                  , i = e.toDataURL(r, n);
                return i
            }
        }
        ,
        n.addOverlay = function(t) {
            this.dispatchEvent(d.OVERLAY_ADD, t)
        }
        ,
        n.removeOverlay = function(t) {
            this.dispatchEvent(d.OVERLAY_REMOVE, t)
        }
        ,
        n.clearOverlays = function() {
            this.dispatchEvent(d.OVERLAYS_CLEAR)
        }
        ,
        n.destroy = function() {
            this.dispatchEvent(d.DESTROY)
        }
        ,
        n._init = function() {
            this._createDoms(),
            this.navigator = function(t) {
                function e(t) {
                    this._initialize(t)
                }
                return m(e.prototype, {
                    _initialize: function(t) {
                        this._pano = t,
                        this.imgPath = t.opts.imgPath || "//api0.map.bdimg.com/images/",
                        this._zoomInEnabled = !0,
                        this._zoomOutEnabled = !0,
                        this._render(),
                        this._bind()
                    },
                    _render: function() {
                        this._container = w.create("div");
                        var t = this._container.style;
                        t.position = "absolute",
                        t.left = "10px",
                        t.top = "10px",
                        t.zIndex = 99;
                        var e = this._container;
                        e.innerHTML = this._generateHtml(),
                        v.isPc ? (this._panBtnContainer = e.children[2],
                        this._panBtns = [this._panBtnContainer.children[0], this._panBtnContainer.children[1], this._panBtnContainer.children[2], this._panBtnContainer.children[3]],
                        this._svgDirGroup = e.children[1].childNodes[0],
                        this._zoomContainer = e.children[3]) : v.isMobile && (this._zoomContainer = e.children[0]),
                        this._btnZoomIn = this._zoomContainer.children[0],
                        this._btnZoomOut = this._zoomContainer.children[1],
                        v.isMobile && (this._zoomContainer.style.left = this._zoomContainer.style.top = "0",
                        this._zoomContainer.style.width = "36px",
                        this._zoomContainer.style.height = "78px",
                        this._btnZoomIn.style.width = this._btnZoomOut.style.width = "33px",
                        this._btnZoomIn.style.height = this._btnZoomOut.style.height = "36px",
                        this._btnZoomOut.style.top = "37.5px"),
                        this._pano.getZoom() >= p.MAX_ZOOM && this._setZoomBtnEnabled("zoomIn", !1),
                        this._pano.getZoom() <= p.MIN_ZOOM && this._setZoomBtnEnabled("zoomOut", !1),
                        this._pano._svContainer.appendChild(e)
                    },
                    _generateHtml: function() {
                        var t = [];
                        return v.isPc && (t.push(this._generatePanHtml()),
                        t.push(this._generateDirHtml()),
                        t.push(this._generatePanBtnHtml())),
                        t.push(this._generateZoomContainerHtml()),
                        t.join("")
                    },
                    _generateDirHtml: function() {
                        return '<svg version="1.1" overflow="hidden" width="82px" height="82px" viewBox="0 0 82 82"style="position: absolute; top: 0px; left: 0px;"><g transform="rotate(0, 41, 41)"><rect x="33"y="1" width="14" height="12" rx="4" ry="4" stroke="#868685" stroke-width="1" fill="#f8f8f8"></rect><polyline points="37.5,9.5 37.5,3.5 42.5,9.5 42.5,3.5" stroke-linejoin="bevel" stroke-width="1.5" fill="#f2f4f6" stroke="#868685"></polyline></g></svg>'
                    },
                    _generatePanHtml: function() {
                        return '<div style="position:absolute;top:4px;left:4px;width:74px;height:74px;background:url(' + this.imgPath + 'st-navictrl.png) no-repeat;-webkit-user-select:none;overflow:hidden"><div></div></div>'
                    },
                    _generatePanBtnHtml: function() {
                        return '<div style="position:absolute;top:0px;left:0;width:82px;height:82px;user-select:none;"><div style="position:absolute;left:32px;top:13px;cursor:pointer;width:17px;height:17px;" title="向上平移"></div><div style="position:absolute;left:14px;top:32px;cursor:pointer;width:17px;height:17px;" title="向左平移"></div><div style="position:absolute;left:51px;top:32px;cursor:pointer;width:17px;height:17px;" title="向右平移"></div><div style="position:absolute;left:33px;top:51px;cursor:pointer;width:17px;height:17px;" title="向下平移"></div></div>'
                    },
                    _generateZoomContainerHtml: function() {
                        var t = "background-image:url('" + this.imgPath + "st-navictrl.png');background-repeat:no-repeat;background-position:-74px 0;";
                        return v.isMobile && (t = "background-image:url('" + this.imgPath + "st-navictrl-hd.png');background-repeat:no-repeat;background-position:0 0;background-size:180px 78px;"),
                        '<div style="position:absolute;top:84px;left:30px;width:24px;height:52px;' + t + '-webkit-user-select:none;overflow:hidden"><div style="position:absolute;cursor:pointer;width:22px;height:24px;top:0;left:0;-webkit-user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0)" title="放大一级"></div><div style="position:absolute;cursor:pointer;width:22px;height:24px;top:25px;left:0;-webkit-user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0)" title="缩小一级"></div><div></div></div>'
                    },
                    _bind: function() {
                        var t = this._pano
                          , e = this;
                        if (v.isPc) {
                            oa(this._panBtns[0], "click", (function() {
                                var e = t.getPov();
                                t.setPov({
                                    heading: e.heading,
                                    pitch: e.pitch + 30
                                }, {
                                    animation: !0
                                })
                            }
                            )),
                            oa(this._panBtns[1], "click", (function() {
                                var e = t.getPov();
                                t.setPov({
                                    heading: e.heading - 45,
                                    pitch: e.pitch
                                }, {
                                    animation: !0
                                })
                            }
                            )),
                            oa(this._panBtns[2], "click", (function() {
                                var e = t.getPov();
                                t.setPov({
                                    heading: e.heading + 45,
                                    pitch: e.pitch
                                }, {
                                    animation: !0
                                })
                            }
                            )),
                            oa(this._panBtns[3], "click", (function() {
                                var e = t.getPov();
                                t.setPov({
                                    heading: e.heading,
                                    pitch: e.pitch - 30
                                }, {
                                    animation: !0
                                })
                            }
                            ));
                            for (var n = 0; n < this._panBtns.length; n++)
                                oa(this._panBtns[n], "mousedown", (function(t) {
                                    t.stopPropagation()
                                }
                                ));
                            e._mousedown = !1,
                            oa(this._panBtnContainer, "mousedown", (function(n) {
                                e._mousedown = !0,
                                e._panBtnContainer.style.cursor = "grabbing",
                                e._startHeading = e._calcAngle(n),
                                e._curHeading = t.getPov().heading,
                                n.preventDefault()
                            }
                            )),
                            oa(document, "mousemove", (function(n) {
                                e._mousedown && t.setPov({
                                    heading: e._curHeading + 360 - (e._calcAngle(n) - e._startHeading),
                                    pitch: t.getPov().pitch
                                })
                            }
                            )),
                            oa(document, "mouseup", (function() {
                                e._mousedown && (e._mousedown = !1,
                                e._panBtnContainer.style.cursor = "grab",
                                e._startHeading = null)
                            }
                            )),
                            t.addEventListener("position_changed", (function() {
                                var t = 360 - this.getPov().heading;
                                e._svgDirGroup.setAttribute("transform", "rotate(" + t + ", 41, 41)")
                            }
                            )),
                            t.addEventListener("pov_changed", (function() {
                                var t = 360 - this.getPov().heading;
                                e._svgDirGroup.setAttribute("transform", "rotate(" + t + ", 41, 41)")
                            }
                            ))
                        }
                        oa(this._btnZoomIn, "click", (function() {
                            t.setZoom(t.getZoom() + 1)
                        }
                        )),
                        oa(this._btnZoomOut, "click", (function() {
                            t.setZoom(t.getZoom() - 1)
                        }
                        )),
                        v.isPc ? (oa(this._btnZoomIn, "mousedown", (function() {
                            e._redrawZoomBtn(e._zoomInEnabled, -98)
                        }
                        )),
                        oa(this._btnZoomOut, "mousedown", (function() {
                            e._redrawZoomBtn(e._zoomOutEnabled, -122)
                        }
                        )),
                        oa(this._btnZoomIn, "mouseup", (function() {
                            e._redrawZoomBtn(e._zoomInEnabled, -74)
                        }
                        )),
                        oa(this._btnZoomOut, "mouseup", (function() {
                            e._redrawZoomBtn(e._zoomOutEnabled, -74)
                        }
                        ))) : v.isMobile && (oa(this._btnZoomIn, "touchstart", (function() {
                            e._redrawZoomBtn(e._zoomInEnabled, -98)
                        }
                        )),
                        oa(this._btnZoomOut, "touchstart", (function() {
                            e._redrawZoomBtn(e._zoomOutEnabled, -122)
                        }
                        )),
                        oa(this._btnZoomIn, "touchend", (function() {
                            e._redrawZoomBtn(e._zoomInEnabled, -74)
                        }
                        )),
                        oa(this._btnZoomOut, "touchend", (function() {
                            e._redrawZoomBtn(e._zoomOutEnabled, -74)
                        }
                        ))),
                        t.addEventListener("zoom_changed", (function(n) {
                            t.getZoom() >= p.MAX_ZOOM ? e._setZoomBtnEnabled("zoomIn", !1) : t.getZoom() <= p.MIN_ZOOM ? e._setZoomBtnEnabled("zoomOut", !1) : (e._setZoomBtnEnabled("zoomIn", !0),
                            e._setZoomBtnEnabled("zoomOut", !0))
                        }
                        ))
                    },
                    _redrawZoomBtn: function(t, e) {
                        t && (v.isMobile && (e = (e + 74) / 24 * 36),
                        this._zoomContainer.style.backgroundPosition = e + "px 0")
                    },
                    show: function() {
                        this._container.style.display = ""
                    },
                    hide: function() {
                        this._container.style.display = "none"
                    },
                    _calcAngle: function(t) {
                        var e = (t = window.event || t).pageX || t.clientX
                          , n = t.pageY || t.clientY
                          , r = this._pano.getContainer().getBoundingClientRect();
                        e = e - r.left - 50,
                        n = -(n - r.top - 50);
                        var i = Math.atan2(n, e) / Math.PI * 180;
                        return i < 90 ? 90 - i : 450 - i
                    },
                    _setZoomBtnEnabled: function(t, e) {
                        if ("zoomIn" === t)
                            if (e) {
                                this._zoomInEnabled = !0,
                                this._btnZoomIn.style.cursor = "pointer";
                                var n = -74;
                                v.isMobile && (n = 0),
                                this._zoomContainer.style.backgroundPosition = n + "px 0"
                            } else {
                                this._zoomInEnabled = !1,
                                this._btnZoomIn.style.cursor = "";
                                var r = -170;
                                v.isMobile && (r = -144),
                                this._zoomContainer.style.backgroundPosition = r + "px 0"
                            }
                        if ("zoomOut" === t)
                            if (e) {
                                this._zoomOutEnabled = !0,
                                this._btnZoomOut.style.cursor = "pointer";
                                var i = -74;
                                v.isMobile && (i = 0),
                                this._zoomContainer.style.backgroundPosition = i + "px 0"
                            } else {
                                this._zoomOutEnabled = !1,
                                this._btnZoomOut.style.cursor = "";
                                var o = -146;
                                v.isMobile && (o = -108),
                                this._zoomContainer.style.backgroundPosition = o + "px 0"
                            }
                    }
                }),
                new e(t)
            }(this),
            this._eventManager = new ia(this)
        }
        ,
        n._createDoms = function() {
            var t = this._container
              , e = w.create("div")
              , n = e.style;
            n.overflow = "hidden",
            n.position = "absolute",
            n.zIndex = "20",
            n.top = n.left = "0px",
            n.height = n.width = "100%",
            n.backgroundColor = "#e5e3df",
            n.display = "none",
            n.cursor = "grab",
            e.addEventListener("mousedown", (function() {
                return n.cursor = "grabbing"
            }
            )),
            e.addEventListener("mouseup", (function() {
                return n.cursor = "grab"
            }
            )),
            this._svContainer = e,
            this._panes = {
                tileLayer: this._createContainer("1"),
                maskLayer: this._createContainer("2"),
                linksLayer: this._createContainer("3"),
                overlayLayer: this._createContainer("4"),
                effectLayer: this._createContainer("5")
            },
            e.appendChild(this._panes.tileLayer),
            e.appendChild(this._panes.linksLayer),
            e.appendChild(this._panes.overlayLayer),
            e.appendChild(this._panes.effectLayer),
            b() || (e.appendChild(this._panes.maskLayer),
            this._panes.maskLayer.style.width = "".concat(t.clientWidth, "px"),
            this._panes.maskLayer.style.height = "".concat(t.clientHeight, "px"),
            this._panes.maskLayer.style.overflow = "hidden"),
            t.appendChild(e),
            "absolute" !== w.getCurrentStyle(t).position && (t.style.position = "relative")
        }
        ,
        n._createContainer = function(t) {
            var e = w.create("div")
              , n = e.style;
            return n.position = "absolute",
            n.top = n.left = "0",
            n.zIndex = t || "0",
            e
        }
        ,
        n.calcMobileFovy = function(t) {
            var e = this.getContainerSize()
              , n = e.width
              , r = e.height
              , i = 240 / Math.pow(2, t)
              , o = n / 2 / Math.tan(g(i / 2))
              , a = Math.atan2(r / 2, o);
            return 2 * y(a)
        }
        ,
        n.calcPCFovy = function(t) {
            return 90 - 15 * (t - 1)
        }
        ,
        o(e, [{
            key: "imageZoom",
            get: function() {
                return this.calcDisplayZoom().imgZoom
            }
        }, {
            key: "panoId",
            get: function() {
                return this.panoData ? this.panoData.panoId : ""
            }
        }, {
            key: "panoNorthDir",
            get: function() {
                return this.panoData ? this.panoData.northDir : 0
            }
        }, {
            key: "position",
            get: function() {
                return this.panoData && "number" == typeof this.panoData.panoX && "number" == typeof this.panoData.panoY ? new f(this.panoData.panoX,this.panoData.panoY) : null
            }
        }]),
        e
    }(Dr)
      , sa = {
        dom: null,
        anchor: null,
        width: null,
        height: null,
        altitude: 2,
        sphereZ: null,
        useUV: !1
    }
      , ua = function(t) {
        function e(e) {
            var n, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            return (n = t.call(this) || this).visible = !0,
            n.worldCoord = void 0,
            n.pov = void 0,
            n.id = n.genId(),
            n._pano = void 0,
            n.lastPanoPosition = null,
            n.initialized = !1,
            n.position = void 0,
            n.options = void 0,
            n.position = e,
            n.options = Object.assign({}, sa, r),
            n.pov = null,
            n
        }
        c(e, t);
        var n = e.prototype;
        return n.getPov = function() {
            return this.pov
        }
        ,
        n.genId = function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 4;
            return Number("".concat(Math.random().toString().substr(3, t)).concat(Date.now())).toString(36)
        }
        ,
        n.init = function(t) {
            t && !this.initialized && (this._pano = t,
            this.lastPanoPosition = this._pano.position,
            this.worldCoord = this.options.useUV ? this.calcCoordsByUV() : this.calcCoordsByMC(),
            this.worldCoord && (this.initialized = !0,
            this.add(),
            this.draw()))
        }
        ,
        n.calcCoordsByMC = function() {
            var t = this._pano.position;
            if (t && this.position) {
                var e, n = this.position, r = n.lng - t.lng, i = n.lat - t.lat, o = Math.atan2(r, i);
                o < 0 && (o += 2 * Math.PI),
                o = Math.round(y(o));
                var a = 500
                  , s = this.options
                  , u = s.sphereZ
                  , h = s.altitude;
                null === u ? e = 25 * h : (e = u || 0,
                a = Math.sqrt(Math.pow(r, 2) + Math.pow(i, 2) + Math.pow(e, 2)));
                var c = y(Math.asin(e / a));
                c = c > 90 ? 90 : c < -90 ? -90 : c;
                var l = _(o + this._pano.panoNorthDir)
                  , f = this.radius
                  , d = Math.cos(g(c)) * f;
                d = Math.round(100 * d) / 100;
                var p = Math.cos(g(l)) * d
                  , v = Math.sin(g(c)) * f
                  , m = Math.sin(g(l)) * d;
                return this.pov = {
                    heading: o,
                    pitch: c
                },
                zt(p, v, m)
            }
        }
        ,
        n.calcCoordsByUV = function() {
            if (this.position) {
                var t = this.radius
                  , e = this.position
                  , n = _i(e, 2)
                  , r = n[0]
                  , i = n[1]
                  , o = 2 * r * Math.PI
                  , a = (i - .5) * Math.PI
                  , s = Math.cos(a) * Math.cos(o) * t
                  , u = Math.sin(a) * t
                  , h = Math.cos(a) * Math.sin(o) * t;
                return this.pov = {
                    heading: _(y(o) - this._pano.panoNorthDir),
                    pitch: y(a)
                },
                zt(s, u, h)
            }
        }
        ,
        n.add = function() {
            var t = this.options
              , e = t.width
              , n = t.height;
            if (this.dom) {
                var r = this._pano
                  , i = this.dom;
                i.style.position = "absolute",
                r.getPanes().overlayLayer.appendChild(i),
                "number" != typeof e && (this.options.width = i.clientWidth),
                "number" != typeof n && (this.options.height = i.clientHeight),
                r.dispatchEvent({
                    type: "onoverlaydomadded",
                    overlay: this
                })
            }
        }
        ,
        n.remove = function() {
            var t = this.dom;
            t && t.parentNode && t.parentNode.removeChild(t)
        }
        ,
        n.povToPointGL = function() {
            if (!this.worldCoord)
                return null;
            var t = this._pano
              , e = t.camera
              , n = t.getContainerSize()
              , r = n.width
              , i = n.height;
            return fo(e, this.worldCoord, r, i)
        }
        ,
        n.draw = function() {
            if (this.initialized && this.visible && this._pano && this._pano.panoData && this.dom) {
                var t = this.lastPanoPosition
                  , e = this._pano.position;
                t.lng === e.lng && t.lat === e.lat || (this.lastPanoPosition = e,
                this.worldCoord = this.options.useUV ? this.calcCoordsByUV() : this.calcCoordsByMC());
                var n = this.dom
                  , r = this.povToPointGL();
                if (n.style.visibility = "hidden",
                r) {
                    var i = this.calcAnchor()
                      , o = "".concat(r[0] - i.width, "px")
                      , a = "".concat(r[1] - i.height, "px");
                    if (isNaN(r[0]) || isNaN(r[1]))
                        return;
                    n.style.visibility = "visible",
                    n.style.webkitTransform = "translate(".concat(o, ", ").concat(a, ")"),
                    n.style.transform = "translate(".concat(o, ", ").concat(a, ")")
                }
            }
        }
        ,
        n.handleClick = function() {
            this.dispatchEvent("click")
        }
        ,
        n.calcAnchor = function() {
            var t = this.options
              , e = t.anchor
              , n = t.width
              , r = void 0 === n ? 0 : n
              , i = t.height;
            return e || new l(r / 2,(void 0 === i ? 0 : i) / 2)
        }
        ,
        n.show = function() {
            this.visible = !0,
            this.dom && (this.dom.style.display = "")
        }
        ,
        n.hide = function() {
            this.visible = !1,
            this.dom && (this.dom.style.display = "none")
        }
        ,
        o(e, [{
            key: "radius",
            get: function() {
                return this._pano ? this._pano.opts.radius : 0
            }
        }, {
            key: "dom",
            get: function() {
                return this.options.dom
            }
        }]),
        e
    }(Dr)
      , ha = function(t) {
        function e(e, n) {
            var r = n.position
              , i = n.altitude
              , o = void 0 === i ? 2 : i
              , a = n.costomStyle
              , s = function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = document.createElement("div")
                  , r = {
                    backgroundColor: "rgba(29, 29, 29, 0.8)",
                    fontSize: "14px",
                    padding: "7px 14px",
                    height: "19px",
                    color: "#fff",
                    whiteSpace: "nowrap",
                    borderRadius: "4px"
                };
                return m(n.style, r, e),
                n.innerText = t,
                n
            }(e, void 0 === a ? {} : a);
            return t.call(this, r, {
                dom: s,
                altitude: o
            }) || this
        }
        return c(e, t),
        e
    }(ua);
    t.Converters = vo,
    t.Engines = Ki,
    t.EventType = d,
    t.PanoLabel = ha,
    t.PanoOverlay = ua,
    t.PanoramaService = function() {
        var t = this;
        this.getPanoById = function(e, n) {
            var r;
            r = "".concat($.SERVICE_URL, "?qt=sdata&sid=").concat(e, "&").concat(J("/")),
            t.request(r).then((function(t) {
                n && n(t)
            }
            )).catch((function(t) {
                n && n(null)
            }
            ))
        }
        ,
        this.getPanoByLocation = function(e, n, r) {
            var i;
            i = "".concat($.SERVICE_URL, "?qt=qsdata&x=").concat(e.lng, "&y=").concat(e.lat).concat(n ? "&r=" + n : "", "&action=1&").concat(J("/")),
            t.request(i).then((function(t) {
                r && r(t)
            }
            )).catch((function(t) {
                r && r(null)
            }
            ))
        }
        ,
        this.request = function(t) {
            return E(t, {}, {
                jsonp: "fn"
            })
        }
    }
    ,
    t.Point = f,
    t.getPanoControl = function(t, e) {
        var n, r, i, o = (e = e || {}).imgPath || "//api.map.baidu.com/images/";
        function a(e) {
            e.call(this),
            this.defaultAnchor = t.ControlAnchor.TOP_RIGHT,
            this.defaultOffset = new t.Size(10,10),
            this._isOn = !1
        }
        return n = a,
        r = t.Control,
        (i = Object.create(r.prototype)).constructor = n,
        n.prototype = i,
        m(a.prototype, {
            initialize: function(t) {
                return this._map = t,
                this._render(),
                this._bind(),
                this._container
            },
            _render: function() {
                var t = this
                  , n = w.create("div");
                n.innerHTML = '<span style="position:relative;top:33px;">全景</span>',
                n.title = "进入全景",
                m(n.style, {
                    width: "49px",
                    height: "51px",
                    color: "#565656",
                    background: 'url("'.concat(o, 'st-control.png")'),
                    position: "absolute",
                    cursor: "pointer",
                    fontFamily: "arial,sans-serif",
                    fontSize: "13px",
                    textAlign: "center",
                    boxShadow: "0px 0px 3px rgba(0, 0, 0, 0.3)",
                    MozBoxShadow: "0px 0px 3px rgba(0, 0, 0, 0.3)",
                    WebkitBoxShadow: "0px 0px 3px rgba(0, 0, 0, 0.3)"
                }),
                this._container = n;
                var r = this._map.getContainer();
                r.appendChild(n);
                var i = {
                    visible: !1
                };
                e.imgPath && (i.imgPath = [e.imgPath]),
                e.tileBaseUrl && (i.tileBaseUrls = [e.tileBaseUrl]),
                this._pano = new aa(r,i),
                this._pano.addCloseButton((function() {
                    t.isMapEnableWheelZoom && t._map.enableScrollWheelZoom()
                }
                ));
                var a = this._scout = w.create("div");
                m(a.style, {
                    position: "absolute",
                    width: "24px",
                    height: "41px",
                    cursor: "pointer",
                    backgroundImage: 'url("'.concat(o, 'st-scout.png")'),
                    backgroundRepeat: "no-repeat",
                    backgroundPosition: "-24px 0",
                    overflow: "hidden",
                    display: "none",
                    zIndex: 11
                }),
                r.appendChild(a);
                var s = this._infoWindow = w.create("div");
                m(s.style, {
                    position: "absolute",
                    width: "112px",
                    height: "119px",
                    backgroundImage: 'url("'.concat(o, 'st-infowindow.gif")'),
                    backgroundRepeat: "no-repeat",
                    backgroundPosition: "0 0",
                    display: "none",
                    cursor: "pointer",
                    zIndex: 12
                });
                var u = this._thumb = w.create("img");
                s.appendChild(u),
                u.src = o + "st-noresult.png",
                m(u.style, {
                    width: "100px",
                    height: "75px",
                    left: "6px",
                    top: "6px",
                    position: "absolute"
                });
                var h = this._stDescription = w.create("div");
                m(h.style, {
                    position: "absolute",
                    top: "85px",
                    fontFamily: "arial,sans-serif",
                    fontSize: "13px",
                    paddingLeft: "6px"
                }),
                s.appendChild(h),
                r.appendChild(s)
            },
            _updateView: function() {
                var t = this._container.style;
                this._isOn || this._isOver ? (t.backgroundPosition = "-49px 0",
                t.color = "#fff") : (t.backgroundPosition = "0 0",
                t.color = "#565656")
            },
            _bind: function() {
                var n = this;
                this._pano.on("dataload", (function(t) {
                    var r = t.data;
                    r ? (n._currentSvId = r.panoId,
                    e.tileBaseUrl ? n._thumb.src = "".concat(e.tileBaseUrl, "?&sid=").concat(r.panoId, "&pos=0_0&z=0") : n._thumb.src = "//apisv0.bdimg.com/?qt=pdata&sid=".concat(r.panoId, "&pos=0_0&z=0&from=H5&").concat(J("/")),
                    n._stDescription.innerHTML = r.roadName) : (n._currentSvId = null,
                    n._thumb.src = o + "st-noresult.png",
                    n._stDescription.innerHTML = "")
                }
                ));
                var r = this;
                v.isPc && (this._container.addEventListener("mouseover", (function() {
                    r._isOver = !0,
                    r._updateView()
                }
                )),
                this._container.addEventListener("mouseout", (function() {
                    r._isOver = !1,
                    r._updateView()
                }
                ))),
                this._container.addEventListener("click", (function() {
                    r._isOn ? r._close() : r._open()
                }
                )),
                this._map.getContainer().addEventListener("mousemove", (function(e) {
                    if (r._isOn) {
                        var n = (e = window.event || e).pageX || e.clientX
                          , i = e.pageY || e.clientY
                          , a = function(t) {
                            for (var e = {
                                left: 0,
                                top: 0
                            }; t && t.offsetParent; )
                                e.left += t.offsetLeft,
                                e.top += t.offsetTop,
                                t = t.offsetParent;
                            return e
                        }(r._map.container)
                          , s = new Zo(n - a.left,i - a.top)
                          , u = r._map.pixelToPoint(s);
                        if ("" !== r._scout.style.display && v.isPc && (r._scout.style.display = "",
                        r._infoWindow.style.display = ""),
                        r._scout.style.left = s.x - 12 + "px",
                        r._scout.style.top = s.y - 41 - 2 + "px",
                        r._prePixel = r._curPixel,
                        r._curPixel = s,
                        r._prePixel) {
                            var h = s.x - r._prePixel.x;
                            h > 0 ? r._scout.style.backgroundPosition = "-48px 0" : h < 0 && (r._scout.style.backgroundPosition = "0 0")
                        }
                        r._curPixel.y < 170 ? r._infoStatus = 2 : r._infoStatus = 1,
                        r._curPixel.x < 66 && (r._infoStatus = 3),
                        r._curPixel.x > r._map.getSize().width - 56 - 10 && (r._infoStatus = 4);
                        var c = 1 === r._infoStatus || 2 === r._infoStatus ? 112 : 126
                          , l = 1 === r._infoStatus || 2 === r._infoStatus ? 119 : 105;
                        1 !== r._infoStatus && 2 !== r._infoStatus || (r._infoWindow.style.left = r._curPixel.x - Math.round(c / 2) + "px",
                        1 === r._infoStatus ? (r._infoWindow.style.top = r._curPixel.y - l - 42 + "px",
                        r._infoWindow.style.backgroundPosition = "0 0",
                        r._thumb.style.top = "6px",
                        r._thumb.style.bottom = "",
                        r._stDescription.style.top = "85px",
                        r._stDescription.style.bottom = "") : (r._infoWindow.style.top = r._curPixel.y + 2 + "px",
                        r._infoWindow.style.backgroundPosition = "-112px 0",
                        r._thumb.style.top = "",
                        r._thumb.style.bottom = "6px",
                        r._stDescription.style.top = "",
                        r._stDescription.style.bottom = "85px"),
                        r._infoWindow.style.width = "112px",
                        r._infoWindow.style.height = "119px",
                        r._thumb.style.left = "6px",
                        r._stDescription.style.left = "0"),
                        3 !== r._infoStatus && 4 !== r._infoStatus || (r._infoWindow.style.top = r._curPixel.y - Math.round(l / 2) - 20 + "px",
                        3 === r._infoStatus ? (r._infoWindow.style.left = r._curPixel.x + 12 + "px",
                        r._infoWindow.style.backgroundPosition = "0 -119px",
                        r._thumb.style.left = "20px",
                        r._stDescription.style.left = "14px") : (r._infoWindow.style.left = r._curPixel.x - 12 - c + "px",
                        r._infoWindow.style.backgroundPosition = "-126px -119px",
                        r._thumb.style.left = "6px",
                        r._stDescription.style.left = "0"),
                        r._infoWindow.style.width = "126px",
                        r._infoWindow.style.height = "105px"),
                        r._infoWindow.style.backgroundImage = 'url("'.concat(o, 'st-infowindow.gif")'),
                        r._timerId && (clearTimeout(r._timerId),
                        r._timerId = null),
                        r._timerId = setTimeout((function() {
                            r._currentPoint = u,
                            r._scout.style.backgroundPosition = "-24px 0";
                            var e = r._map.lnglatToMercator(u.lng, u.lat);
                            r._pano.setPosition(new t.Point(e[0],e[1]))
                        }
                        ), 200)
                    }
                }
                )),
                this._map.addEventListener("click", (function(t) {
                    r._isOn && v.isMobile && (r._pano.setPosition(t.point),
                    r._pano.show(),
                    r._close()),
                    r._isOn && r._currentSvId && (r._pano.setId(r._currentSvId),
                    r._pano.show(),
                    r._map.config.enableWheelZoom && (r._map.disableScrollWheelZoom(),
                    r.isMapEnableWheelZoom = !0),
                    r._close())
                }
                ))
            },
            _open: function() {
                this._isOn || (this._isOn = !0,
                this._map.addTileLayer(this._panoCoverageLayer),
                v.isPc && (this._preDefaultCursor = this._map.getDefaultCursor(),
                this._preDraggingCursor = this._map.getDraggingCursor(),
                this._map.setDefaultCursor("pointer"),
                this._map.setDraggingCursor("pointer"))),
                this._updateView()
            },
            _close: function() {
                this._isOn && (this._map.removeTileLayer(this._panoCoverageLayer),
                v.isPc && (this._scout.style.display = "none",
                this._infoWindow.style.display = "none",
                this._map.setDefaultCursor(this._preDefaultCursor),
                this._map.setDraggingCursor(this._preDraggingCursor)),
                this._isOn = !1),
                this._updateView()
            }
        }),
        new a(t.Control)
    }
    ,
    t.getStreetViewCoverageLayer = function(t) {
        var e = new t.TileLayer({
            transparentPng: !0,
            dataType: 1,
            cacheSize: 32
        });
        return e.zIndex = 110,
        e.getTilesUrl = window.PANORAMA_URL ? function(t, e) {
            var n = window.PANORAMA_URL + "/tile"
              , r = t.x
              , i = t.y;
            return window.BMAPGL_84 && (i = Math.pow(2, e) - i - 1),
            "".concat(n, "?customid=panorama&x=").concat(r, "&y=").concat(i, "&z=").concat(e, "&type=WGS84")
        }
        : function(t, e) {
            var n = ["//apisv0.bdimg.com/", "//apisv1.bdimg.com/"]
              , r = (Math.abs(t.x) + Math.abs(t.y)) % n.length;
            return "".concat(n[r], "?udt=").concat("20150114", "&qt=tile&styles=").concat("pl", "&x=").concat(t.x, "&y=").concat(t.y, "&z=").concat(e).replace(/-(\d+)/gi, "M$1") + "&" + J("/", {
                isCounter: !1
            })
        }
        ,
        e
    }
    ,
    t.init = function(t, e) {
        return new aa(t,e)
    }
    ,
    Object.defineProperty(t, "__esModule", {
        value: !0
    })
}
)(Pano = {});
window.BMapGL = window.BMapGL || {};
(function(bp, eY) {
    var ev = ev || {
        version: "20150702",
        emptyFn: function() {}
    };
    (function() {
        ev._log = [];
        var i = 0;
        var T = {};
        ev.BaseClass = function(je) {
            T[(this.hashCode = (je || ev.BaseClass.guid()))] = this
        }
        ;
        ev.BaseClass.guid = function() {
            return "mz_" + (i++).toString(36)
        }
        ;
        ev.BaseClass.create = function() {
            var je = new ev.BaseClass();
            je.decontrol();
            return je
        }
        ;
        var e = ev.instance = ev.I = function(je) {
            return T[je]
        }
        ;
        ev.BaseClass.prototype.dispose = function() {
            if (this.hashCode) {
                delete T[this.hashCode]
            }
            for (var je in this) {
                if (typeof this[je] != "function") {
                    delete this[je]
                }
            }
        }
        ;
        ev.BaseClass.prototype.getHashCode = function() {
            if (!this.hashCode) {
                T[(this.hashCode = ev.BaseClass.guid())] = this
            }
            return this.hashCode
        }
        ;
        ev.BaseClass.prototype.decontrol = function() {
            delete T[this.hashCode]
        }
        ;
        ev.BaseClass.prototype.toString = function() {
            return "[object " + (this._className || "Object") + "]"
        }
        ;
        ev.BaseClass.prototype._wlog = function(jf, jg) {
            var je = ev._log;
            if (je.length > 100) {
                je.reverse().length = 50;
                je.reverse()
            }
            je[je.length] = "[" + jf + "][" + (this._className || "Object") + " " + this.hashCode + "] " + jg
        }
    }
    )();
    Function.prototype.inherits = function(je, T) {
        var e, jf, jh = this.prototype, jg = function() {};
        jg.prototype = je.prototype;
        jf = this.prototype = new jg();
        if (typeof (T) == "string") {
            jf._className = T
        }
        for (e in jh) {
            jf[e] = jh[e]
        }
        this.prototype.constructor = jh.constructor;
        jh = jg = null;
        return jf
    }
    ;
    ev.BaseEvent = function(e, i) {
        this.type = e;
        this.returnValue = true;
        this.target = i || null;
        this.currentTarget = this.srcElement = null;
        this.cancelBubble = false;
        this.domEvent = null
    }
    ;
    ev.BaseClass.prototype.on = ev.BaseClass.prototype.addEventListener = function(T, i) {
        if (typeof i !== "function") {
            return this._wlog("error", "addEventListener:" + i + " is not a function")
        }
        if (!this._listeners) {
            this._listeners = {}
        }
        var e = this._listeners;
        if (T.indexOf("on") !== 0) {
            T = "on" + T
        }
        if (typeof e[T] !== "object") {
            e[T] = {}
        }
        var je = i.hashCode || ev.BaseClass.guid();
        i.hashCode = je;
        if (e[T][je]) {
            this._wlog("warning", "repeat key:" + je)
        }
        e[T][je] = i
    }
    ;
    ev.BaseClass.prototype.off = ev.BaseClass.prototype.removeEventListener = function(T, i) {
        if (typeof i == "function") {
            i = i.hashCode
        } else {
            if (typeof i !== "string" && typeof i !== "undefined") {
                return
            }
        }
        if (!this._listeners) {
            this._listeners = {}
        }
        if (T.indexOf("on") != 0) {
            T = "on" + T
        }
        var e = this._listeners;
        if (!e[T]) {
            return
        }
        if (i === undefined) {
            e[T] = {};
            return
        }
        if (e[T][i]) {
            delete e[T][i]
        }
    }
    ;
    ev.BaseClass.prototype.fire = ev.BaseClass.prototype.dispatchEvent = function(je) {
        if (!this._listeners) {
            this._listeners = {}
        }
        var T, e = this._listeners, jf = je.type;
        je.target = je.srcElement = je.target || je.srcElement || this;
        je.currentTarget = this;
        if (typeof this[jf] == "function") {
            this[jf](je)
        }
        if (typeof e[jf] == "object") {
            for (T in e[jf]) {
                if (typeof e[jf][T] == "function") {
                    e[jf][T].call(this, je)
                }
            }
        }
        return je.returnValue
    }
    ;
    ev.BaseEvent.prototype.inherit = function(T) {
        var i = this;
        this.domEvent = T = window.event || T;
        i.clientX = T.clientX || T.pageX;
        i.clientY = T.clientY || T.pageY;
        i.offsetX = T.offsetX || T.layerX;
        i.offsetY = T.offsetY || T.layerY;
        i.screenX = T.screenX;
        i.screenY = T.screenY;
        i.ctrlKey = T.ctrlKey || T.metaKey;
        i.shiftKey = T.shiftKey;
        i.altKey = T.altKey;
        return i
    }
    ;
    ev.Browser = (function() {
        var T = navigator.userAgent;
        var jf = 0;
        var e = 0;
        var jg = 0;
        var i = 0;
        var jk = 0;
        var ji = 0;
        var jj = 0;
        var jh = 0;
        var je = 0;
        var jl = 0;
        if (typeof window.opera === "object" && /Opera(\s|\/)(\d+(\.\d+)?)/.test(T)) {
            jg = parseFloat(RegExp.$2)
        } else {
            if (/OPR(\/(\d+)(\..?)?)/.test(T)) {
                jg = parseInt(RegExp.$2, 10)
            } else {
                if (/Edge\/((\d+)\.\d+)/.test(T)) {
                    jf = parseInt(RegExp.$2, 10)
                } else {
                    if (/MSIE (\d+(\.\d+)?)/.test(T)) {
                        e = parseFloat(RegExp.$1)
                    } else {
                        if (T.indexOf("Trident") > -1 && /rv:(\d+(\.\d+)?)/.test(T)) {
                            e = parseInt(RegExp.$1, 10)
                        } else {
                            if (/Firefox(\s|\/)(\d+(\.\d+)?)/.test(T)) {
                                jk = parseFloat(RegExp.$2)
                            } else {
                                if (navigator.vendor === "Netscape" && /Netscape(\s|\/)(\d+(\.\d+)?)/.test(T)) {
                                    jj = parseFloat(RegExp.$2)
                                } else {
                                    if (T.indexOf("Safari") > -1 && /Version\/(\d+(\.\d+)?)/.test(T)) {
                                        i = parseFloat(RegExp.$1)
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if (T.indexOf("Trident") > -1 && /Trident\/(\d+(\.\d+)?)/.test(T)) {
            jh = parseInt(RegExp.$1, 10)
        } else {
            if (!e && !jf && T.indexOf("Gecko") > -1 && T.indexOf("KHTML") === -1 && /rv\:(\d+(\.\d+)?)/.test(T)) {
                je = parseFloat(RegExp.$1)
            } else {
                if (!jf && /chrome\/(\d+(\.\d+)?)/i.test(T)) {
                    ji = parseFloat(RegExp.$1)
                } else {
                    if (!jf && /AppleWebKit\/(\d+(\.\d+)?)/.test(T)) {
                        jl = parseInt(RegExp.$1, 10)
                    }
                }
            }
        }
        var jm = {
            edge: jf,
            ie: e,
            firefox: jk,
            netscape: jj,
            opera: jg,
            safari: i,
            chrome: ji,
            gecko: je,
            trident: jh,
            webkit: jl
        };
        return jm
    }
    )();
    window.FeBrowser = ev.Browser;
    ev.Dom = {};
    ev.Dom.createDom = function(i, e) {
        if (ev.isIE && e && e.name) {
            i = "<" + i + ' name="' + ev.String.escapeHTML(e.name) + '">'
        }
        var T = document.createElement(i);
        if (e) {
            ev.Dom.setProperties(T, e)
        }
        return T
    }
    ;
    ev.Dom.getOffset = function(je) {
        var jh = ev.Dom.getOwnerDocument(je);
        var jg = ev.isGecko > 0 && jh.getBoxObjectFor && ev.Dom.getStyle(je, "position") == "absolute" && (je.style.top === "" || je.style.left === "");
        var ji = {
            left: 0,
            top: 0
        };
        var i = (ev.isIE && !ev.isStrict) ? jh.body : jh.documentElement;
        if (je == i) {
            return ji
        }
        var T = null;
        var jf;
        if (je.getBoundingClientRect) {
            jf = je.getBoundingClientRect();
            ji.left = jf.left + Math.max(jh.documentElement.scrollLeft, jh.body.scrollLeft);
            ji.top = jf.top + Math.max(jh.documentElement.scrollTop, jh.body.scrollTop);
            ji.left -= jh.documentElement.clientLeft;
            ji.top -= jh.documentElement.clientTop;
            if (ev.isIE && !ev.isStrict) {
                ji.left -= 2;
                ji.top -= 2
            }
        } else {
            if (jh.getBoxObjectFor && !jg) {
                jf = jh.getBoxObjectFor(je);
                var e = jh.getBoxObjectFor(i);
                ji.left = jf.screenX - e.screenX;
                ji.top = jf.screenY - e.screenY
            } else {
                T = je;
                do {
                    ji.left += T.offsetLeft;
                    ji.top += T.offsetTop;
                    if (ev.isWebkit > 0 && ev.Dom.getStyle(T, "position") == "fixed") {
                        ji.left += jh.body.scrollLeft;
                        ji.top += jh.body.scrollTop;
                        break
                    }
                    T = T.offsetParent
                } while (T && T != je);if (ev.isOpera > 0 || (ev.isWebkit > 0 && ev.Dom.getStyle(je, "position") == "absolute")) {
                    ji.top -= jh.body.offsetTop
                }
                T = je.offsetParent;
                while (T && T != jh.body) {
                    ji.left -= T.scrollLeft;
                    if (!ev.isOpera || T.tagName != "TR") {
                        ji.top -= T.scrollTop
                    }
                    T = T.offsetParent
                }
            }
        }
        return ji
    }
    ;
    ev.Dom.getOwnerDocument = function(e) {
        return e.nodeType == 9 ? e : e.ownerDocument || e.document
    }
    ;
    ev.Dom.setProperties = function(i, e) {
        ev.each(e, function(je, T) {
            ev.Dom._setProperty(i, T, je)
        })
    }
    ;
    ev.Dom._setProperty = function(i, e, T) {
        if (e == "style") {
            i.style.cssText = T
        } else {
            if (e == "class") {
                i.className = T
            } else {
                if (e == "for") {
                    i.htmlFor = T
                } else {
                    if (e in ev.Dom._DIRECT_ATTRIBUTE_MAP) {
                        i.setAttribute(ev.Dom._DIRECT_ATTRIBUTE_MAP[e], T)
                    } else {
                        i[e] = T
                    }
                }
            }
        }
    }
    ;
    ev.Dom._DIRECT_ATTRIBUTE_MAP = {
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        colspan: "colSpan",
        rowspan: "rowSpan",
        valign: "vAlign",
        height: "height",
        width: "width",
        usemap: "useMap",
        frameborder: "frameBorder"
    };
    ev.G = function() {
        for (var T = [], je = arguments.length - 1; je > -1; je--) {
            var jf = arguments[je];
            T[je] = null;
            if (typeof jf == "object" && jf && jf.dom) {
                T[je] = jf.dom
            } else {
                if ((typeof jf == "object" && jf && jf.tagName) || jf == window || jf == document) {
                    T[je] = jf
                } else {
                    if (typeof jf == "string" && (jf = document.getElementById(jf))) {
                        T[je] = jf
                    }
                }
            }
        }
        return T.length < 2 ? T[0] : T
    }
    ;
    ev.ac = function(e, i) {
        if (!(e = this.G(e))) {
            return
        }
        i = this.trim(i);
        if (!new RegExp("(^| )" + i.replace(/(\W)/g, "\\$1") + "( |$)").test(e.className)) {
            e.className = e.className.split(/\s+/).concat(i).join(" ")
        }
    }
    ;
    ev.addClassName = ev.ac;
    ev.each = function(jg, e) {
        if (typeof e != "function") {
            return jg
        }
        if (jg) {
            if (jg.length === undefined) {
                for (var T in jg) {
                    e.call(jg[T], jg[T], T)
                }
            } else {
                for (var je = 0, jf = jg.length; je < jf; je++) {
                    e.call(jg[je], jg[je], je)
                }
            }
        }
        return jg
    }
    ;
    ev.extend = function(jg, je) {
        if (jg && je && typeof (je) == "object") {
            for (var jf in je) {
                jg[jf] = je[jf]
            }
            var T = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
            for (var e = 0, i; e < T.length; e++) {
                i = T[e];
                if (Object.prototype.hasOwnProperty.call(je, i)) {
                    jg[i] = je[i]
                }
            }
        }
        return jg
    }
    ;
    ev.hide = function() {
        ev.each(arguments, function(e) {
            if (e = ev.G(e)) {
                e.style.display = "none"
            }
        })
    }
    ;
    ev.inherit = function(ji, je, T) {
        var jh = ji.prototype;
        var jg = function() {};
        jg.prototype = je.prototype;
        var jf = ji.prototype = new jg();
        if (typeof T == "string") {
            jf._className = T
        }
        for (var e in jh) {
            jf[e] = jh[e]
        }
        ji.prototype.constructor = jh.constructor;
        jh = null;
        return jf
    }
    ;
    ev.isIE = 0;
    (function() {
        if (navigator.userAgent.indexOf("MSIE") > 0 && !window.opera) {
            /MSIE (\d+(\.\d+)?)/.test(navigator.userAgent);
            ev.isIE = parseFloat(RegExp.$1)
        }
    }
    )();
    ev.rc = function(e, i) {
        if (!(e = this.G(e))) {
            return
        }
        i = this.trim(i);
        var T = e.className.replace(new RegExp("(^| +)" + i.replace(/(\W)/g, "\\$1") + "( +|$)","g"), "$2");
        if (e.className != T) {
            e.className = T
        }
    }
    ;
    ev.removeClassName = ev.rc;
    ev.show = function() {
        this.each(arguments, function(e) {
            if (e = ev.G(e)) {
                e.style.display = ""
            }
        })
    }
    ;
    ev.trim = function(e) {
        return e.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+$)/g, "")
    }
    ;
    ev.getElementsByClassName = function(e, i) {
        if (e.getElementsByClassName) {
            return e.getElementsByClassName(i)
        } else {
            return (function T(jl, jj) {
                if (jj == null) {
                    jj = document
                }
                var ji = [], jh = jj.getElementsByTagName("*"), je = jh.length, jk = new RegExp("(^|\\s)" + jl + "(\\s|$)"), jg, jf;
                for (jg = 0,
                jf = 0; jg < je; jg++) {
                    if (jk.test(jh[jg].className)) {
                        ji[jf] = jh[jg];
                        jf++
                    }
                }
                return ji
            }
            )(i, e)
        }
    }
    ;
    ev.toggleClass = function(e, i) {
        if (ev.hasClass(e, i)) {
            ev.removeClassName(e, i)
        } else {
            ev.addClassName(e, i)
        }
    }
    ;
    ev.hasClass = function(je, T) {
        if (!je || !je.className || typeof je.className != "string") {
            return false
        }
        var i = -1;
        try {
            i = je.className == T || je.className.search(new RegExp("(\\s|^)" + T + "(\\s|$)"))
        } catch (jf) {
            return false
        }
        return i > -1
    }
    ;
    ev.insertHTML = function(je, e, T) {
        je = ev.G(je);
        if (je === null) {
            return je
        }
        var i, jf;
        if (je.insertAdjacentHTML) {
            je.insertAdjacentHTML(e, T)
        } else {
            i = je.ownerDocument.createRange();
            e = e.toUpperCase();
            if (e == "AFTERBEGIN" || e == "BEFOREEND") {
                i.selectNodeContents(je);
                i.collapse(e == "AFTERBEGIN")
            } else {
                jf = e == "BEFOREBEGIN";
                i[jf ? "setStartBefore" : "setEndAfter"](je);
                i.collapse(jf)
            }
            i.insertNode(i.createContextualFragment(T))
        }
        return je
    }
    ;
    if (typeof HTMLElement != "undefined" && HTMLElement.prototype.__lookupGetter__ && !HTMLElement.prototype.__lookupGetter__("children") && !window.opera) {
        try {
            HTMLElement.prototype.__defineGetter__("children", function() {
                for (var T = [], je = 0, jg, jf = 0, e = this.childNodes.length; jf < e; jf++) {
                    jg = this.childNodes[jf];
                    if (jg.nodeType == 1) {
                        T[je++] = jg;
                        if (jg.name) {
                            if (!T[jg.name]) {
                                T[jg.name] = []
                            }
                            T[jg.name][T[jg.name].length] = jg
                        }
                        if (jg.id) {
                            T[jg.id] = jg
                        }
                    }
                }
                return T
            })
        } catch (ix) {}
    }
    if (typeof (HTMLElement) != "undefined" && !window.opera && HTMLElement.prototype && !HTMLElement.prototype.insertAdjacentHTML) {
        HTMLElement.prototype.insertAdjacentHTML = function(i, T) {
            var je = this.ownerDocument.createRange();
            je.setStartBefore(this);
            je = je.createContextualFragment(T);
            switch (i) {
            case "beforeBegin":
                this.parentNode.insertBefore(je, this);
                break;
            case "afterBegin":
                this.insertBefore(je, this.firstChild);
                break;
            case "beforeEnd":
                this.appendChild(je);
                break;
            case "afterEnd":
                if (!this.nextSibling) {
                    this.parentNode.appendChild(je)
                } else {
                    this.parentNode.insertBefore(je, this.nextSibling)
                }
                break
            }
        }
    }
    if (typeof HTMLElement != "undefined" && !window.opera) {
        HTMLElement.prototype.contains = function(e) {
            if (!e) {
                return false
            }
            if (e == this) {
                return true
            }
            while (e = e.parentNode) {
                if (e == this) {
                    return true
                }
            }
            return false
        }
    }
    if (!ev.Browser.ie && typeof Event != "undefined" && !window.opera) {
        Event.prototype.__defineSetter__("returnValue", function(e) {
            if (!e) {
                this.preventDefault()
            }
            return e
        });
        Event.prototype.__defineSetter__("cancelBubble", function(e) {
            if (e) {
                this.stopPropagation()
            }
            return e
        })
    }
    ev.each = function(jf, je) {
        if (bH(je)) {
            for (var T = 0, e = jf.length; T < e; T++) {
                if (je.call(jf, jf[T], T) === false) {
                    break
                }
            }
        }
        return jf
    }
    ;
    ev.Platform = {
        x11: 0,
        macintosh: 0,
        windows: 0,
        android: 0,
        iphone: 0,
        ipad: 0
    };
    for (var iv in ev.Platform) {
        if (ev.Platform.hasOwnProperty(iv)) {
            ev.Platform[iv] = new RegExp(iv,"i").test(window.navigator.userAgent) ? 1 : 0
        }
    }
    if (typeof (ev.Dom) === "undefined") {
        ev.Dom = {}
    }
    ev.Dom.getComputedStyle = function(i, e) {
        var je = i.nodeType == 9 ? i : i.ownerDocument || i.document, T;
        if (je.defaultView && je.defaultView.getComputedStyle) {
            T = je.defaultView.getComputedStyle(i, null);
            if (T) {
                return T[e] || T.getPropertyValue(e)
            }
        } else {
            if (i.currentStyle) {
                return i.currentStyle[e] || ""
            }
        }
        return ""
    }
    ;
    var fa = ev.BaseEvent;
    var cM = ev.BaseClass;
    cM.prototype.toString = function() {
        return this._className || ""
    }
    ;
    ev.on = function(T, i, e) {
        if (!(T = ev.G(T))) {
            return T
        }
        i = i.replace(/^on/, "");
        if (T.addEventListener) {
            T.addEventListener(i, e, false)
        } else {
            if (T.attachEvent) {
                T.attachEvent("on" + i, e)
            }
        }
        return T
    }
    ;
    ev.un = function(T, i, e) {
        if (!(T = ev.G(T))) {
            return T
        }
        i = i.replace(/^on/, "");
        if (T.removeEventListener) {
            T.removeEventListener(i, e, false)
        } else {
            if (T.detachEvent) {
                T.detachEvent("on" + i, e)
            }
        }
        return T
    }
    ;
    ev.hc = function(je, T) {
        if (!je || !je.className || typeof je.className != "string") {
            return false
        }
        var i = -1;
        try {
            i = je.className == T || je.className.search(new RegExp("(\\s|^)" + T + "(\\s|$)"))
        } catch (jf) {
            return false
        }
        return i > -1
    }
    ;
    ev.isEmptyObject = function(T) {
        if (Object.prototype.toString.call(T) === "[object Object]") {
            for (var e in T) {
                return false
            }
            return true
        } else {
            return false
        }
    }
    ;
    var bG = window.location.protocol === "http:" ? "http:" : "https:";
    var d2 = {
        fontFamily: 'Arial,Helvetica,"PingFang SC","Hiragino Sans GB",STHeiti,sans-serif',
        mapStyleNameIdPair: {
            "default": 0,
            "grayed-out": 1
        },
        mapHost: bG + "//map.baidu.com",
		//原来的
        //apiHost: bG + "//api.map.baidu.com",
        //改
		apiHost: bmapcfg.home,
        
		apiIMG: bG + "//api.map.11baidu.com/images",
		//改 staticHost: bG + "//webmap0.bdimg.com",
        staticHost: bmapcfg.home,
		//改 imgPath: bG + "//webmap0.bdimg.com/image/api/",
        imgPath: bmapcfg.home + "/image/api/",
		//改 tileDomain: [bG + "//maponline0.bdimg.com", bG + "//maponline1.bdimg.com", bG + "//maponline2.bdimg.com", bG + "//maponline3.bdimg.com"],
        tileDomain: [bmapcfg.home,bmapcfg.home, bmapcfg.home, bmapcfg.home],
        panoTilePath: "//apisv1.bdimg.com/",
        optDomain: "http://10.120.25.45:8017",
        rasterTilePath: "/tile/",
        vectorTilePath: "/pvd/",
        originTilePath: [bG + "//pcor.baidu.com"],
		//改 stylePath: "//maponline0.bdimg.com/sty/",
        stylePath: bmapcfg.home+"/sty/",
        getIconSetPath: function(e) {
            var i = "map_icons2x/";
            if (typeof e === "string" && this.mapStyleNameIdPair[e] > 0) {
                i = "map_icons2x_" + (this.mapStyleNameIdPair[e] - 1) + "/"
            }
            return  this.stylePath + i
        },
        getMapStyleFiles: function(T) {
            var jf = true;
            if (typeof T === "string" && T !== "default") {
                jf = false
            }
            var jg = jf ? "" : "_" + (this.mapStyleNameIdPair[T] - 1);
            var i = bq();
            var je = "udt=" + i.udt + "&v=" + i.ver;
            var e = this.stylePath;
            return [e + "icons_2x" + jg + ".js?" + je, e + "fs" + jg + ".js?" + je, e + "indoor_fs.js?" + je]
        },
        tvc: {
            ditu: {
                normal: {
                    version: "088",
                    updateDate: "20210726"
                },
                satellite: {
                    version: "009",
                    updateDate: "20210726"
                },
                normalTraffic: {
                    version: "081",
                    updateDate: "20210726"
                },
                satelliteTraffic: {
                    version: "083",
                    updateDate: "20210726"
                },
                mapJS: {
                    version: "104",
                    updateDate: "20210726"
                },
                satelliteStreet: {
                    version: "083",
                    updateDate: "20210726"
                },
                panoClick: {
                    version: "1033",
                    updateDate: "20180108"
                },
                panoUdt: {
                    version: "20180108",
                    updateDate: "20180108"
                },
                panoSwfAPI: {
                    version: "20150123",
                    updateDate: "20150123"
                },
                panoSwfPlace: {
                    version: "20141112",
                    updateDate: "20141112"
                },
                earthVector: {
                    version: "001",
                    updateDate: "20210726"
                }
            }
        },
        msv: {
            mapstyle: {
                updateDate: "20210726",
                version: "001"
            }
        }
    };
    d2.imgResources = {
        blankGIF: d2.staticHost + "/res/litemapapi/v1d1/images/blank.gif?20170501",
        markerPng: d2.staticHost + "/res/litemapapi/v1d1/images/marker.png?20170501",
        locPng: d2.staticHost + "/res/litemapapi/v1d1/images/loc.png?20180918",
        locNewPng: d2.staticHost + "/res/litemapapi/v1d1/images/loc_new.png?20190314",
        zoomPng: d2.staticHost + "/res/litemapapi/v1d1/images/zoombtn.png?20180918",
        mapLogoPng: d2.staticHost + "/res/litemapapi/v1d1/images/logo-2x.png?20190226"
    };
    var w = d2;
    var im = "ruler.cur";
    if (ev.Browser.ie || ev.Browser.edge) {
        ev.extend(w, {
            distCursor: "url(" + w.imgPath + im + "),crosshair",
            defaultCursor: "url(" + w.imgPath + "openhand.cur),default",
            draggingCursor: "url(" + w.imgPath + "closedhand.cur),move"
        })
    } else {
        if (ev.Browser.firefox) {
            ev.extend(w, {
                distCursor: "url(" + w.imgPath + im + "),crosshair",
                defaultCursor: "-moz-grab",
                draggingCursor: "-moz-grabbing"
            })
        } else {
            if (ev.Browser.chrome || ev.Browser.safari) {
                ev.extend(w, {
                    distCursor: "url(" + w.imgPath + im + ") 2 6,crosshair",
                    defaultCursor: "url(" + w.imgPath + "openhand.cur) 8 8,default",
                    draggingCursor: "url(" + w.imgPath + "closedhand.cur) 8 8,move"
                });
                if (ev.Platform.macintosh) {
                    w.defaultCursor = "-webkit-grab";
                    w.draggingCursor = "-webkit-grabbing"
                }
            } else {
                ev.extend(w, {
                    distCursor: "url(" + w.imgPath + im + "),crosshair",
                    defaultCursor: "url(" + w.imgPath + "openhand.cur),default",
                    draggingCursor: "url(" + w.imgPath + "closedhand.cur),move"
                })
            }
        }
    }
    bp = bp || {};
    bp.version = "gl";
    bp._register = [];
    bp.register = function(e) {
        this._register[this._register.length] = e
    }
    ;
    bp.guid = 1;
    bp.getGUID = function(e) {
        return (e || "") + bp.guid++
    }
    ;
    var el = window.BMAP_AUTHENTIC_KEY || "";
    function M(e, i, je) {
        var T = new Date();
        T.setTime(T.getTime() + je * 24 * 60 * 60 * 1000);
        document.cookie = e + "=" + escape(i) + ";expires=" + T.toGMTString()
    }
    function aV(e, i) {
        if (navigator.cookieEnabled) {
            return M(e, i, 30)
        }
        if (localStorage) {
            return localStorage.setItem(e, i)
        }
        if (sessionStorage) {
            return sessionStorage.setItem(e, i)
        }
    }
    bp.getSeckeyCid = function() {
        var i = +new Date();
        var e = bG + "//dlswbr.baidu.com/heicha/mw/abclite-2063-s.js?_t=" + i;
        ga.load(e, hV)
    }
    ;
    function hV() {
        if (window.___abvk) {
            aV("SECKEY_ABVK", window.___abvk)
        }
    }
    window.__abbaidu_2063_cb = function(i) {
        var e = JSON.parse(i);
        aV("BMAP_SECKEY", e.data)
    }
    ;
    bp.bmapVerifyCbk = function(jf) {
        if (jf && jf.error !== 0) {
            bp = null;
            BMapGL = null;
            var jg = "百度未授权使用地图API，可能是因为您提供的密钥不是有效的百度地图开放平台密钥，或此密钥未对本应用的百度地图JavaScriptAPI授权。您可以访问如下网址了解如何获取有效的密钥：https://lbs.baidu.com/apiconsole/key#。";
            switch (jf.error) {
            case 101:
                jg = "您所使用的密钥ak有问题，不支持jsapi服务，可以访问该网址了解如何获取有效密钥：http://lbsyun.baidu.com/apiconsole/key#。";
                break;
            case 102:
                jg = "MCODE参数不存在，mobile类型MCODE参数必需，详情查看：http://lbsyun.baidu.com/apiconsole/key#。";
                break;
            case 200:
                jg = "APP不存在，AK有误请检查再重试，详情查看：http://lbsyun.baidu.com/apiconsole/key#。";
                break;
            case 201:
                jg = "APP被您禁用啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
                break;
            case 202:
                jg = "APP被管理员删除啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
                break;
            case 203:
                jg = "APP类型错误，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
                break;
            case 210:
                jg = "APP IP校验失败，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
                break;
            case 220:
                jg = "APP Referer校验失败。请检查该ak设置的白名单与访问所有的域名是否一致。详情查看：http://lbsyun.baidu.com/apiconsole/key#";
                break;
            case 230:
                jg = "APP Mcode码校验失败，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
                break;
            case 240:
                jg = "APP服务被禁用了，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
                break;
            case 250:
                jg = "该用户不存在... 请登录 https://lbs.baidu.com 的控制台，注册成为开发者申请ak吧。";
                break;
            case 251:
                jg = "该用户被自己删除啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情。";
                break;
            case 252:
                jg = "该用户被管理员删除啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 了解如何获取有效密钥，或请联系我们了解详情。";
                break;
            case 260:
                jg = "您所使用的密钥AK不包含该服务呢，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看服务选择情况，或请联系我们了解详情。";
                break;
            case 261:
                jg = "您所使用的密钥AK的该服务被禁用啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看服务选择情况，或请联系我们了解详情。";
                break;
            case 401:
                jg = "您所使用的AK并发超限了，请登录 http://lbsyun.baidu.com/cashier/quota#/home 了解详情。";
                break;
            case 302:
                jg = "您所使用的AK天配额超限了，请登录 http://lbsyun.baidu.com/cashier/quota#/home 了解详情。";
                break
            }
            alert(jg);
            var T = document.getElementsByClassName("bmap-container");
            if (T) {
                for (var je = 0; je < T.length; je++) {
                    var e = T[je];
                    if (e && e.firstChild && e.firstChild.id === "platform") {
                        e.innerText = ""
                    }
                }
            }
        }
    }
    ;
    bp.frequencyCbk = function(e) {
        if (e) {
            window.QTFrequency = e
        }
    }
    ;
    bp.verify = function() {
        var e = w.apiHost + "/?qt=verify&v=gl&type=webgl&ak=" + el + "&callback=" + eY + ".bmapVerifyCbk";
        ga.load(e)
    }
    ;
    bp.frequency = function() {}
    ;
    bp.apiLoad = bp.apiLoad || function() {}
    ;
    function hn(i, e) {
        this._size = i;
        this._cache = [];
        this._totalGetTimes = 0;
        this._totalHitTimes = 0;
        this._options = {
            clearCallback: null,
            removeOldCallback: null
        };
        e = e || {};
        for (var T in e) {
            if (e.hasOwnProperty(T)) {
                this._options[T] = e[T]
            }
        }
    }
    hn.prototype.setData = function(T, je) {
        var e = this._cache;
        var i = this._size;
        if (i === 0) {
            return
        }
        if (e.length > i) {
            this._removeOld()
        }
        if (!e[T]) {
            e.push(je)
        }
        e[T] = je;
        je._key_ = T
    }
    ;
    hn.prototype.getHitRate = function() {
        return Math.round(this._totalHitTimes / this._totalGetTimes * 1000) / 1000
    }
    ;
    hn.prototype.getData = function(i) {
        var e = this._cache[i];
        if (e) {
            this._totalHitTimes++
        }
        this._totalGetTimes++;
        return e
    }
    ;
    hn.prototype.removeData = function(jf) {
        if (this._options.clearCallback) {
            this._options.clearCallback(this._cache[jf])
        }
        var T = this._cache;
        var jg = T[jf];
        for (var je = 0, e = T.length; je < e; je++) {
            if (T[je] === jg) {
                T.splice(je, 1);
                break
            }
        }
        delete T[jf]
    }
    ;
    hn.prototype._removeOld = function() {
        var e = this._cache;
        var jf = Math.round(this._size * 0.6);
        for (var je = 0; je < jf; je++) {
            var T = e[je]._key_;
            if (this._options.clearCallback) {
                this._options.clearCallback(e[T])
            }
            delete e[T]
        }
        e.splice(0, jf);
        if (this._options.removeOldCallback) {
            this._options.removeOldCallback()
        }
    }
    ;
    hn.prototype.clear = function() {
        var T = this._cache;
        for (var jf = 0, e = T.length; jf < e; jf++) {
            var je = T[jf]._key_;
            if (this._options.clearCallback) {
                this._options.clearCallback(T[je])
            }
            delete T[je]
        }
        this._cache = T = []
    }
    ;
    hn.prototype.forEach = function(je) {
        var T = this._cache;
        for (var jg = 0, e = T.length; jg < e; jg++) {
            var jf = T[jg]._key_;
            je(T[jf])
        }
    }
    ;
    hn.prototype.getBatch = function(jf) {
        var e = [];
        for (var je = 0, T = jf.length; je < T; je++) {
            if (this.getData(jf[je])) {
                e[e.length] = this.getData(jf[je])
            }
        }
        return e
    }
    ;
    hn.prototype.clearExcept = function(jg) {
        var T = this._cache;
        for (var e = T.length, jf = e - 1; jf >= 0; jf--) {
            var je = this._cache[jf]._key_;
            if (!jg[je]) {
                T.splice(jf, 1);
                if (this._options.clearCallback) {
                    this._options.clearCallback(T[je])
                }
                delete T[je]
            }
        }
    }
    ;
    hn.prototype.getDataCount = function() {
        return this._cache.length
    }
    ;
    function h0() {}
    ev.extend(h0.prototype, {
        centerAndZoomIn: function(jj, T, jk) {
            var jh = this;
            if (!jj && !T) {
                return
            }
            jj = jj || this.centerPoint;
            T = T || this.zoomLevel;
            T = this._getProperZoom(T).zoom;
            if (this.mapType === BMAP_EARTH_MAP) {
                if (!this._earth) {
                    this.mapType = BMAPGL_NORMAL_MAP;
                    this.temp.originMapType = BMAP_EARTH_MAP;
                    function ji() {
                        jh._earth = new bp.Earth(jh,{
                            showRealSunlight: jh.config.showRealSunlight,
                            showMilkyway: jh.config.showMilkyway,
                            earthBackground: jh.config.earthBackground
                        });
                        jh._proxyEarthEvents();
                        jh._changeEarthMapType(BMAP_EARTH_MAP);
                        ev.extend(jh, bp.EarthView.prototype);
                        if (!jh._navigationCtrl && jh.config.showControls) {
                            jh._navigationCtrl = new bp.NavigationControl3D(jh)
                        }
                        delete jh.temp.originMapType
                    }
                    gn.load("earth", function() {
                        if (bp["FeatureStyle" + jh.config.style]) {
                            ji()
                        } else {
                            jh.loadMapStyleFiles(function() {
                                ji()
                            })
                        }
                    })
                }
            }
            this.lastLevel = this.zoomLevel || T;
            this.zoomLevel = T;
            var jf = new fa("onload");
            jf.point = jj;
            jf.zoom = T;
            this.centerPoint = this.restrictCenter(new cf(jj.lng,jj.lat));
            if (this.centerPoint.zoom) {
                this.zoomLevel = this.centerPoint.zoom
            }
            this.defaultZoomLevel = this.defaultZoomLevel || this.zoomLevel;
            this.defaultCenter = this.defaultCenter || this.centerPoint;
            if (!this.loaded && !(this.temp.originMapType === BMAP_EARTH_MAP)) {
                var i = this.config.defaultMaxBounds;
                var jg = new h(i,"baidu",this.mapType);
                var je = new gN({
                    mapType: this.mapType,
                    copyright: jg,
                    customLayer: false,
                    baseLayer: true,
                    tileTypeName: "web"
                });
                je._isInnerLayer = true;
                this.addTileLayer(je);
                if (this.mapType === BMAP_SATELLITE_MAP && this._isHybridShow === true) {
                    this._addHybirdMap()
                }
            }
            this.dispatchEvent(jf);
            this.loaded = true;
            jk = jk || {};
            jk.callback && jk.callback()
        },
        _setPlatformPosition: function(jk, jj, jn) {
            jn = jn || {};
            if (jk === 0 && jj === 0 && !jn.point) {
                return
            }
            if (isNaN(jn.initMapOffsetX)) {
                jn.initMapOffsetX = this.offsetX
            }
            if (isNaN(jn.initMapOffsetY)) {
                jn.initMapOffsetY = this.offsetY
            }
            var jl = jk + jn.initMapOffsetX;
            var ji = jj + jn.initMapOffsetY;
            if (jn.point) {
                var i = this.restrictCenter(jn.point);
                if (!i.equals(this.centerPoint)) {
                    this.centerPoint = i.clone();
                    this.fire(new fa("oncenter_changed"))
                }
            } else {
                var je = this.offsetX - jl;
                var e = this.offsetY - ji;
                var T = this.getZoomUnits();
                var jh = this.centerPoint.lng;
                var jg = this.centerPoint.lat;
                var jf = new cf(jh,jg);
                this.centerPoint = this.restrictCenter(new cf(jf.lng + je * T,jf.lat - e * T), T);
                this.fire(new fa("oncenter_changed"));
                if (this.zoomLevel < 10) {
                    jl = this.offsetX - (this.centerPoint.lng - jf.lng) / T;
                    ji = this.offsetY + (this.centerPoint.lat - jf.lat) / T
                }
            }
            this.offsetX = jl;
            this.offsetY = ji;
            var jm = this.platform.style;
            jm.left = jl + "px";
            jm.top = ji + "px";
            this.maskLayer.style.left = -jl + "px";
            this.maskLayer.style.top = -ji + "px";
            if (jn.dispatchEvent !== false) {
                this.dispatchEvent(new fa("onmoving"))
            }
        },
        zoomTo: function(e, jh, jl) {
            jl = jl || {};
            jl.zoomCenter = jh;
            if (jl.noAnimation !== true) {
                this.deepZoomTo(e, jl);
                return
            }
            if (typeof e !== "number") {
                return
            }
            var jf = dR[this.mapType];
            if (!jf) {
                return
            }
            var T = e;
            e = this._getProperZoom(e).zoom;
            if (e === this.zoomLevel) {
                var ji = new fa("onzoomexceeded");
                ji.targetZoom = T;
                this.dispatchEvent(ji);
                jl.callback && jl.callback();
                return
            }
            this.lastLevel = this.zoomLevel;
            if (jh) {
                this.temp._cPoint = jh;
                this.temp._cPixel = this.pointToPixelIn(jh)
            } else {
                if (this.getInfoWindow()) {
                    var jk = this.getInfoWindow().getPoint();
                    this.temp._cPixel = this.pointToPixelIn(jk);
                    this.temp._cPoint = jk
                }
            }
            if (this.config.zoomCenter) {
                jh = this.config.zoomCenter;
                this.temp._cPoint = jh;
                this.temp._cPixel = this.pointToPixelIn(jh)
            }
            if (jh || this.temp.infoWin && this.temp.infoWin.isOpen()) {
                var i = this.temp._cPoint;
                var jj = this.temp._cPixel;
                var je = this.getZoomUnits(e);
                var jg = new cf(i.lng + je * (this.width / 2 - jj.x),i.lat - je * (this.height / 2 - jj.y));
                this.centerPoint = this.restrictCenter(jg, je, e);
                if (this.centerPoint.zoom) {
                    e = this.centerPoint.zoom
                }
            }
            if (jl.fireEvent !== false) {
                this.dispatchEvent(new fa("onzoomstart"))
            }
            if (e !== this.zoomLevel) {
                this.zoomLevel = e;
                this.dispatchEvent(new fa("onzooming"));
                this.dispatchEvent(new fa("onzoomstartcode"))
            }
            if (jl.fireEvent !== false) {
                this.dispatchEvent(new fa("onzoomend"))
            }
            if (jl.callback) {
                jl.callback()
            }
        },
        deepZoomMedia: function(e) {
            var i = this;
            if (!i.temp.isStdCtrlBusy) {
                i.temp.isStdCtrlBusy = true;
                i.deepZoomTo(i.zoomLevel + e);
                setTimeout(function() {
                    i.temp.isStdCtrlBusy = false
                }, 400)
            }
        },
        deepZoomTo: function(ji, je) {
            je = je || {};
            var jg = ji - this.zoomLevel;
            var jf = this._getProperZoom(ji);
            if (jf.exceeded) {
                var e = new fa("onzoomexceeded");
                e.targetZoom = ji;
                this.dispatchEvent(e);
                return
            }
            var i;
            if (je.zoomCenter) {
                i = this.pointToPixelIn(je.zoomCenter)
            } else {
                if (this.getInfoWindow()) {
                    i = this.pointToPixelIn(this.getInfoWindow().getPoint(), {
                        zoom: this.lastLevel
                    })
                } else {
                    var i = new eO(this.width / 2,this.height / 2)
                }
            }
            this.lastLevel = this.zoomLevel;
            var jh = this.deepZoom || new ax(this);
            var T = jg > 0 ? 1 : -1;
            jh.zoomMap(i, jg, T, null, je)
        },
        flyToIn: function(jj, e) {
            if (e === this.zoomLevel) {
                this.panToIn(jj);
                return
            }
            var jg = this._getProperZoom(e);
            if (jg.exceeded) {
                var jk = new fa("onzoomexceeded");
                jk.targetZoom = e;
                this.dispatchEvent(jk);
                return
            }
            var ji = e - this.zoomLevel;
            var T = new eO(this.width / 2,this.height / 2);
            var i = this.pointToPixelIn(jj);
            var jh = new h8(i.x - T.x,i.y - T.y);
            this.lastLevel = this.zoomLevel;
            if (Math.abs(ji) >= 4 || Math.abs(jh.width) > this.width || Math.abs(jh.height) > this.height) {
                this.centerAndZoomIn(jj, e);
                return
            }
            var jf = this.deepZoom || new ax(this);
            var je = ji > 0 ? 1 : -1;
            jf.zoomMap(i, ji, je, jh)
        },
        panToIn: function(i, T) {
            T = T || {};
            if (!i || i.equals(this.centerPoint)) {
                T.callback && T.callback();
                return
            }
            var je = this.pointToPixelIn(i);
            var e = Math.round(this.width / 2);
            var jf = Math.round(this.height / 2);
            if (Math.abs(e - je.x) > this.width || Math.abs(jf - je.y) > this.height || T.noAnimation === true) {
                this._panToIn(e - je.x, jf - je.y, i);
                T.callback && T.callback()
            } else {
                this._panBy(e - je.x, jf - je.y, T)
            }
        },
        _panToIn: function(i, e, je) {
            var T = this.temp;
            if (T.operating === true) {
                return
            }
            if (T.dragAni) {
                T.dragAni.stop();
                T.dragAni = null;
                this.dispatchEvent(new fa("onmoveend"))
            }
            this.dispatchEvent(new fa("onmovestart"));
            this._setPlatformPosition(i, e, {
                point: je
            });
            this.dispatchEvent(new fa("onmoveend"))
        },
        panBy: function(i, e, T) {
            T = T || {};
            i = Math.round(i) || 0;
            e = Math.round(e) || 0;
            if (Math.abs(i) <= this.width && Math.abs(e) <= this.height && T.noAnimation !== true) {
                this._panBy(i, e, T)
            } else {
                this._panToIn(i, e);
                T.callback && T.callback()
            }
        },
        _panBy: function(i, e, jf) {
            if (this.temp.operating === true) {
                return
            }
            jf = jf || {};
            this.dispatchEvent(new fa("onmovestart"));
            var je = this;
            var T = je.temp;
            T.pl = je.offsetX;
            T.pt = je.offsetY;
            if (T.tlPan) {
                T.tlPan.cancel()
            }
            if (T.dragAni) {
                T.dragAni.stop();
                T.dragAni = null;
                this.dispatchEvent(new fa("onmoveend"))
            }
            T.tlPan = new e3({
                fps: jf.fps || je.config.fps,
                duration: jf.duration || je.config.actionDuration,
                transition: jf.transition || fY.easeInOutQuad,
                render: function(jg) {
                    this.terminative = je.temp.operating;
                    if (je.temp.operating) {
                        return
                    }
                    je._setPlatformPosition(Math.ceil(i * jg), Math.ceil(e * jg), {
                        initMapOffsetX: T.pl,
                        initMapOffsetY: T.pt
                    })
                },
                finish: function(jg) {
                    je.dispatchEvent(new fa("onmoveend"));
                    je.temp.tlPan = false;
                    if (je.temp.stopArrow === true) {
                        je.temp.stopArrow = false;
                        if (je.temp.arrow !== 0) {
                            je._arrow()
                        }
                    }
                    jf.callback && jf.callback()
                }
            })
        },
        getCenterIn: function() {
            return this.centerPoint
        },
        getZoom: function() {
            return this.zoomLevel
        },
        setTilt: function() {},
        getTilt: function() {
            return this._tilt
        },
        setHeading: function() {},
        getHeading: function() {
            return this._heading
        },
        restrictCenter: function(jm, i, e) {
            this.isRestrict = false;
            i = i || this.getZoomUnits();
            e = e || this.zoomLevel;
            var jk = this.pixelToPointIn(new eO(this.width,0), {
                center: jm,
                zoom: e
            });
            var ji = this.pixelToPointIn(new eO(0,this.height), {
                center: jm,
                zoom: e
            });
            var jn = jm.lng;
            var js = jm.lat;
            if (this.config.restrictBounds !== null && !this.config.restrictBounds.isEmpty()) {
                var jr = this.config.restrictBounds;
                var je = jr.getSouthWest();
                var jp = jr.getNorthEast();
                var jl = ig.convertLL2MC(je);
                var jg = ig.convertLL2MC(jp);
                jm.lng = this.calcNewLngByBounds(jn, ji, jk, jl.lng, jg.lng, i);
                jm.lat = this.calcNewLatByBounds(js, ji, jk, jl.lat, jg.lat, i);
                return jm
            }
            var jj = this.pixelToPointIn(new eO(0,0), {
                center: jm,
                zoom: e
            });
            var jf = this.pixelToPointIn(new eO(0,this.height), {
                center: jm,
                zoom: e
            });
            if (this.zoomLevel < 5) {
                if (jj.lat > g0.MAX_LAT && jf.lat < g0.MIN_LAT) {
                    this.isRestrict = true;
                    var T = g0.MAX_LAT - jm.lat;
                    var jh = jm.lat - g0.MIN_LAT;
                    var jq;
                    if (T < jh) {
                        jq = T / (this.height / 2)
                    } else {
                        jq = jh / (this.height / 2)
                    }
                    var jo = 18 - m(jq);
                    this.zoomLevel = Math.ceil(jo);
                    jm.zoom = Math.ceil(jo);
                    return jm
                }
            }
            if (jj.lat > g0.MAX_LAT) {
                this.isRestrict = true;
                jm.lat = g0.MAX_LAT - this.height / 2 * i
            } else {
                if (jf.lat < g0.MIN_LAT) {
                    this.isRestrict = true;
                    jm.lat = g0.MIN_LAT + this.height / 2 * i
                }
            }
            return jm
        }
    });
    function g0(e, T) {
        if (typeof e === "string") {
            e = document.getElementById(e)
        }
        cM.call(this);
        this.container = e;
        this.width = e.clientWidth;
        this.height = e.clientHeight;
        this.offsetX = 0;
        this.offsetY = 0;
        this._setStyle(e);
        e.unselectable = "on";
        e.innerHTML = "";
        ev.ac(e, "bmap-container");
        e.appendChild(this.render());
        this._initDate = new Date();
        this.platform = e.children[0];
        this.maskLayer = this.platform.children[0];
        this._panes = {};
        this.centerPoint = new cf(0,0);
        this.zoomLevel = 0;
        this._heading = 0;
        this._tilt = 0;
        this._bounds = new hf();
        this.lastLevel = 0;
        this._lock = false;
        this._enableTiltZoom = 7;
        this._enableHeadingZoom = 7;
        this.defaultZoomLevel = null;
        this.defaultCenter = null;
        this.zoomEventStatus = "idle";
        this.currentOperation = dL.idle;
        this._setConfig(T);
        this._initMapRenderType();
        this._animationInfo = {};
        this._animationInfoUnstopable = {};
        this.suspendLoad = false;
        this._customTileLabels = [];
        if (this._renderType === "webgl") {
            this._workerMgr = new iA(this);
            this._featureMgr = new bY();
            ev.extend(this, x.prototype);
            this.jobScheduler = new bb(this);
            this.benchmark = new cD();
            this._setupWebGLMap();
            this.deviceInfo = {
                hardwareInfo: {
                    renderer: "",
                    vendor: ""
                }
            };
            if (cK.ifSupportWebGL._renderer) {
                this.deviceInfo.hardwareInfo.renderer = cK.ifSupportWebGL._renderer;
                this.deviceInfo.hardwareInfo.vendor = cK.ifSupportWebGL._vendor
            }
        } else {
            ev.extend(this, h0.prototype)
        }
        if (!dR[this.config.mapType]) {
            this.config.mapType = BMAPGL_NORMAL_MAP
        }
        if (this.config.mapType === BMAP_EARTH_MAP && !this.config.enableEarth) {
            if (this.forceEnableEarth() === false) {
                this.config.mapType = BMAPGL_NORMAL_MAP
            }
        }
        this.mapType = this.config.mapType;
        this.preMapType = null;
        if (this.config.enableEarth) {
            var jg = this.maskLayer.style;
            jg.opacity = 0;
            jg.background = "#000";
            if (this.config.mapType === BMAP_EARTH_MAP) {
                jg.opacity = 1
            }
            setTimeout(function() {
                jg.WebkitTransition = jg.transition = "opacity .4s"
            }, 100)
        }
        this._isHybridShow = this.config.showStreetLayer;
        this.temp = {
            operating: false,
            arrow: 0,
            lastDomMoveTime: 0,
            lastLoadTileTime: 0,
            lastMovingTime: 0,
            canKeyboard: false,
            I: function(i) {
                return ev.I(i)
            },
            curSpots: [],
            curSpotsArray: [],
            curAreaSpot: null,
            spotsGuid: 1,
            registerIndex: -1,
            hoverOnSpot: null,
            isStdCtrlBusy: false
        };
        window.InstanceCore = this.temp.I;
        this.platform.style.cursor = this.config.defaultCursor;
        this._bind();
        for (var je = 0; je < bp._register.length; je++) {
            bp._register[je](this)
        }
        this.temp.registerIndex = je;
        var jf = this;
        if (this._renderType === "webgl") {
            gn.load("oppcgl", function() {
                jf._asyncRegister()
            })
        } else {
            gn.load("oppc", function() {
                jf._asyncRegister()
            })
        }
        if (this.config.mapType === "B_EARTH_MAP") {
            if (!bp.Earth) {
                gn.load("earth", function() {})
            } else {
                jf._syncAndChangeMapType("B_EARTH_MAP")
            }
        }
    }
    g0.MAX_TILT = 87;
    g0.MAX_DRAG_TILT = 73;
    g0.MAX_DRAG_TILT_L2 = 50;
    g0.MIN_TILT = 0;
    g0.MAX_LAT = 19431424;
    g0.MIN_LAT = -16023552;
    g0.WORLD_SIZE_MC_HALF = 20037726.372307256;
    g0.WORLD_SIZE_MC = g0.WORLD_SIZE_MC_HALF * 2;
    g0.RIGHT_EDGE_POINT = new cf(g0.WORLD_SIZE_MC_HALF,0);
    g0.LEFT_EDGE_POINT = new cf(-g0.WORLD_SIZE_MC_HALF,0);
    g0.HIGH_RES_MIN_RATIO = 1.2;
    g0.inherits(cM, "Map");
    var eW = {
        NORMAL: "B_NORMAL_MAP",
        EARTH: "B_EARTH_MAP",
        SATELLITE: "B_STREET_MAP"
    };
    bp.MapTypeId = eW;
    ev.extend(g0.prototype, {
        render: function() {
            var e = bL("div", {
                id: "platform"
            });
            var je = e.style;
            je.overflow = "visible";
            je.position = "absolute";
            je.zIndex = 5;
            je.top = je.left = "0px";
            var i = bL("div", {
                id: "mask",
                "class": "BMap_mask"
            });
            var T = i.style;
            T.position = "absolute";
            T.top = T.left = "0px";
            T.zIndex = "9";
            T.overflow = "hidden";
            T.WebkitUserSelect = "none";
            T.width = this.width + "px";
            T.height = this.height + "px";
            e.appendChild(i);
            return e
        },
        _initMapRenderType: function() {
            var e = this.config.forceRenderType;
            if (e === "dom") {
                this._renderType = "dom";
                return
            } else {
                if (e === "canvas") {
                    if (cK.isModernBrowser && !cK.ifCanvas2dInBlackList()) {
                        this._renderType = "canvas";
                        return
                    } else {
                        this._renderType = "dom";
                        return
                    }
                } else {
                    if (e === "webgl") {
                        if (cK.ifSupportWebGL()) {
                            this._renderType = "webgl";
                            return
                        }
                    }
                }
            }
            if (cK.ifSupportWebGL() && cK.ifEnableWebGLMap()) {
                this._renderType = "webgl";
                return
            }
            if (cK.isModernBrowser && cK.ifEnableCanvas2dMap()) {
                this._renderType = "canvas";
                return
            }
            this._renderType = "dom"
        },
        _setConfig: function(i) {
            i = i || {};
            this.config = {
                bottomOffset: 0,
                clickInterval: 200,
                enableDragging: true,
                enableRotate: true,
                enableTilt: true,
                enableKeyboard: false,
                enableDblclickZoom: true,
                enableContinuousZoom: true,
                enableWheelZoom: false,
                enableRotateGestures: true,
                enableTiltGestures: true,
                enablePinchZoom: true,
                fixCenterWhenPinch: false,
                enableAutoResize: true,
                zoomCenter: null,
                fps: ev.Browser.ie ? 30 : 60,
                zoomerDuration: 240,
                actionDuration: 450,
                defaultCursor: w.defaultCursor,
                draggingCursor: w.draggingCursor,
                overlayMoveCursor: "pointer",
                coordType: BMAP_COORD_MERCATOR,
                mapType: BMAPGL_NORMAL_MAP,
                drawer: BMAP_SYS_DRAWER,
                enableInertialDragging: true,
                drawMargin: 500,
                drawMarginGL: 500,
                enableFulltimeSpotClick: false,
                enableResizeOnCenter: false,
                isModernBrowser: cK.isModernBrowser,
                forceRenderType: "",
                textRenderType: null,
                ratio: fD() >= g0.HIGH_RES_MIN_RATIO ? 2 : 1,
                enableEarth: cK.ifEnableEarth(),
                defaultMaxBounds: new hf(new cf(-21364736,-10616832),new cf(23855104,15859712)),
                showControls: false,
                showRealSunlight: true,
                showMilkyway: true,
                earthBackground: null,
                showStreetLayer: true,
                minZoom: null,
                maxZoom: null,
                style: "default",
                backgroundColor: null,
                enableIconClick: false,
                autoSafeArea: false,
                ak: null,
                webgl2: false,
                restrictCenter: true,
                restrictBounds: null,
                smaa: true,
                preserveDrawingBuffer: false,
                privateOn: false,
                privateRegions: null
            };
            for (var T in i) {
                if (i.hasOwnProperty(T)) {
                    this.config[T] = i[T];
                    if (T === "fixCenterWhenResize") {
                        this.config.enableResizeOnCenter = i[T]
                    }
                }
            }
            if (i.style) {
                if (i.style["styleId"] && i.style["styleId"].length < 32) {
                    this.config.style = i.style["styleId"]
                } else {
                    this.config.style = i.style
                }
            }
            this._setTextRenderType();
            this._displayOptions = {
                poi: true,
                poiText: true,
                poiIcon: true,
                overlay: true,
                layer: true,
                building: true,
                indoor: true,
                street: true,
                skyColors: ["rgba(226, 237, 248, 0)", "rgba(186, 211, 252, 1)"],
                isFlat: false,
                labelMargin: 0
            };
            if (i.displayOptions) {
                for (var e in i.displayOptions) {
                    if (i.displayOptions.hasOwnProperty(e)) {
                        this._displayOptions[e] = i.displayOptions[e]
                    }
                }
            }
            if (this.config.restrictCenter === false) {
                this._enableTiltZoom = 0;
                this._enableHeadingZoom = 0
            }
        },
        getMinZoom: function() {
            var T;
            if (dR[this.mapType][this._renderType]) {
                T = dR[this.mapType][this._renderType].minZoom
            } else {
                T = dR[this.mapType].minZoom
            }
            if (this.config.minZoom !== null && this.config.minZoom >= T) {
                T = this.config.minZoom
            }
            if (this.mapType === "B_EARTH_MAP") {
                return T
            }
            var i = this.getSize();
            var e = this.worldSize(T);
            while (e < i.width) {
                T++;
                e = this.worldSize(T)
            }
            return T
        },
        getMaxZoom: function() {
            var e;
            if (dR[this.mapType][this._renderType]) {
                e = dR[this.mapType][this._renderType].maxZoom
            } else {
                e = dR[this.mapType].maxZoom
            }
            if (this.config.maxZoom !== null && this.config.maxZoom <= e) {
                e = this.config.maxZoom
            } else {
                if (this._renderType === "webgl") {
                    e = 21
                }
            }
            return e
        },
        _drawFrame: function() {
            this._webglMapScene._painter.draw()
        },
        _setupWebGLMap: function() {
            var e = this;
            gn.load("mapgl", function() {
                e._asyncRegister()
            })
        },
        _setStyle: function(i) {
            var e = i.style;
            e.overflow = "hidden";
            if (b1(i).position !== "absolute") {
                e.position = "relative"
            }
            e.backgroundImage = "url(" + w.imgPath + "bg.png)";
            e.textAlign = "left";
            e.touchAction = e.MSTouchAction = "none"
        },
        _bind: function() {
            var e = this;
            if (e._renderType !== "webgl") {
                e._watchSize = function() {
                    var T = e.getContainerSize();
                    if (e.width !== T.width || e.height !== T.height) {
                        var jh = (T.width - e.width) / 2;
                        var jj = (T.height - e.height) / 2;
                        var je = e.getZoomUnits();
                        var jg = e.centerPoint;
                        if (jg && !e.config.enableResizeOnCenter) {
                            e.centerPoint = new cf(jg.lng + jh * je,jg.lat - jj * je)
                        }
                        e.maskLayer.style.width = (e.width = T.width) + "px";
                        e.maskLayer.style.height = (e.height = T.height) + "px";
                        var jf = new fa("onresize");
                        jf.size = T;
                        e.dispatchEvent(jf);
                        e.fire(new fa("onsize_changed"));
                        var i = parseInt(e.platform.style.left, 10) || 0;
                        var ji = parseInt(e.platform.style.top, 10) || 0;
                        if (e.currentOperation !== "undefined" && e.currentOperation !== dL.idle && (e.offsetX !== i || e.offsetY !== ji)) {
                            e._setPlatformPosition(i, ji)
                        }
                    }
                }
            } else {
                e._watchSize = function() {
                    var i = e.getContainerSize();
                    if (e.width !== i.width || e.height !== i.height) {
                        var je = e.getSize();
                        e.maskLayer.style.width = (e.width = i.width) + "px";
                        e.maskLayer.style.height = (e.height = i.height) + "px";
                        if (fD() !== e.config.ratio) {
                            e.config.ratio = fD()
                        }
                        var jf = new fa("onresize");
                        jf.size = i;
                        e.dispatchEvent(jf);
                        var T = new fa("onsize_changed");
                        T.size = i;
                        T.oldSize = je;
                        e.fire(T)
                    }
                }
            }
            if (e.config.enableAutoResize) {
                e.temp.autoResizeTimer = setInterval(e._watchSize, 16)
            }
            this.on("size_changed", function() {
                var i = e.getMinZoom();
                if (e.zoomLevel < i) {
                    e.setZoomIn(i, {
                        noAnimation: true
                    })
                }
            });
            this.on("zoom_changed", function() {
                this.dispatchEvent(new fa("onzooming"))
            })
        },
        addControl: function(e) {
            if (e && bH(e._i)) {
                e._i(this);
                this.dispatchEvent(new fa("onaddcontrol",e))
            }
        },
        removeControl: function(e) {
            if (e && bH(e.remove)) {
                e.remove();
                this.dispatchEvent(new fa("onremovecontrol",e))
            }
        },
        addContextMenu: function(e) {
            if (e) {
                e.initialize(this);
                this.dispatchEvent(new fa("onaddcontextmenu",e))
            }
        },
        removeContextMenu: function(e) {
            if (e) {
                this.dispatchEvent(new fa("onremovecontextmenu",e));
                e.remove()
            }
        },
        addDistrictLayer: function(e) {
            if (e) {
                e.initialize(this)
            }
        },
        removeDistrictLayer: function(e) {
            if (e) {
                e.removeDistrict(this, e)
            }
        },
        addOverlay: function(i) {
            if (i && bH(i._i)) {
                var T = new fa("onbeforeaddoverlay",i);
                T.overlay = i;
                this.dispatchEvent(T);
                i._i(this);
                T = new fa("onaddoverlay",i);
                T.overlay = i;
                this.dispatchEvent(T)
            }
        },
        removeOverlay: function(i) {
            if (i && bH(i.remove)) {
                if (i instanceof b3) {
                    if (this.stencil) {
                        this.stencil = null
                    }
                }
                var T = new fa("onremoveoverlay",i);
                T.overlay = i;
                i.remove();
                this.dispatchEvent(T)
            }
        },
        clearOverlays: function() {
            this.dispatchEvent(new fa("onclearoverlays"))
        },
        addTileLayer: function(jf) {
            if (!jf) {
                return
            }
            for (var je = 0, e = this.tileMgr.tileLayers.length; je < e; je++) {
                var T = this.tileMgr.tileLayers[je];
                if (T === jf || T.getMapType() === jf.getMapType()) {
                    return
                }
            }
            jf.initialize(this);
            this.dispatchEvent(new fa("onaddtilelayer",jf))
        },
        removeTileLayer: function(e) {
            if (e) {
                e.remove();
                this.dispatchEvent(new fa("onremovetilelayer",e))
            }
        },
        addGeoJSONLayer: function(e) {
            if (e && e instanceof aE) {
                e.init(this)
            }
        },
        removeGeoJSONLayer: function(e) {
            if (e && e instanceof aE) {
                e.remove()
            }
        },
        getTileLayer: function(e) {
            if (this.tileMgr) {
                return this.tileMgr.getTileLayer(e)
            }
            return null
        },
        setMapType: function(e) {
            var i = this;
            if (this.mapType === e || this._mapTypeChanging) {
                return
            }
            if (e === BMAP_EARTH_MAP && !this.config.enableEarth) {
                return
            }
            if (this._earth && this._earth.getLock()) {
                return
            }
            this._mapTypeChanging = true;
            this.preMapType = this.mapType;
            this._boundsInPreMapType = this.getBoundsIn();
            if (this.preMapType === BMAP_SATELLITE_MAP) {
                this._preStreetLayerShow = this._isHybridShow
            }
            if (e === BMAP_EARTH_MAP) {
                if (!bp.Earth) {
                    gn.load("earth", function() {
                        i._syncAndChangeMapType(e)
                    });
                    return
                }
                i._syncAndChangeMapType(e)
            } else {
                if (this.preMapType !== BMAP_EARTH_MAP) {
                    this._changeFlatMapType(e);
                    this._mapTypeChanging = false
                } else {
                    this._setMapTypeStatus(e, function(T, je) {
                        var jf = i._earth.getEarthCanvas();
                        i._changeFlatMapType(e, this.preMapType);
                        if (i._mapTypeChangAni) {
                            i._mapTypeChangAni.stop()
                        }
                        i._mapTypeChangAni = c1.start({
                            el: jf,
                            style: "opacity",
                            startValue: 1,
                            endValue: 0,
                            duration: 200,
                            callback: function() {
                                i._mapTypeChangAni = null;
                                i._mapTypeChanging = false
                            }
                        });
                        T = ig.convertLL2MC(T);
                        if (i._renderType === "webgl") {
                            ev.extend(i, x.prototype);
                            i.setCenterIn(T, {
                                noAnimation: true
                            });
                            i.setZoomIn(je, {
                                noAnimation: true
                            })
                        } else {
                            ev.extend(i, h0.prototype);
                            i.centerAndZoomIn(T, je)
                        }
                    })
                }
            }
        },
        _changeFlatMapType: function(jh) {
            if (!jh || !dR[jh]) {
                return
            }
            var jp = this.preMapType;
            this.mapType = jh;
            var je = this.getTileLayer(jp);
            if (je) {
                this.removeTileLayer(je)
            } else {
                if (this.tileMgr.tileLayers.length) {
                    var jo = this.getTileLayer("B_NORMAL_MAP");
                    if (jo) {
                        this.removeTileLayer(jo)
                    } else {
                        jo = this.getTileLayer("B_SATELLITE_MAP");
                        jo && this.removeTileLayer(jo)
                    }
                }
            }
            this._preStreetLayerShow = this.config.showStreetLayer;
            if (jp === BMAP_SATELLITE_MAP && this._preStreetLayerShow) {
                this._removeHybirdMap()
            }
            if (this.mapType !== BMAP_EARTH_MAP || this._renderType !== "webgl" || this.baseLayerAdded !== true) {
                var T = new hf(new cf(-21364736,-10616832),new cf(23855104,15859712));
                var jm = new h(T,"baidu",jh);
                var jf = new gN({
                    mapType: this.mapType,
                    copyright: jm,
                    dataType: this.mapType === BMAP_SATELLITE_MAP ? f3 : gY,
                    customLayer: this.mapType === BMAP_SATELLITE_MAP,
                    baseLayer: true,
                    transparentPng: true,
                    tileTypeName: this.mapType === BMAP_SATELLITE_MAP ? "web" : "na"
                });
                jf._isInnerLayer = true;
                jf.setZIndex(0);
                this.addTileLayer(jf);
                if (this._renderType === "webgl" && !this.baseLayerAdded) {
                    this.baseLayerAdded = true
                }
            }
            if (jh === BMAP_SATELLITE_MAP) {
                this._featureMgr.clearLabelOverlayData();
                this._featureMgr.setLabelData([]);
                if (this._preStreetLayerShow === true || typeof this._preStreetLayerShow === "undefined") {
                    this._addHybirdMap()
                }
            }
            var jj = this.tileMgr.tileLayers;
            for (var ji = 0, jg = jj.length; ji < jg; ji++) {
                var jk = jj[ji];
                var jn = jk.tilesDiv;
                if (!jn) {
                    continue
                }
                if (!jk._isInnerLayer && jn.style.visibility === "hidden") {
                    jn.style.visibility = ""
                }
            }
            var jl = new fa("onmaptypechange");
            jl.zoomLevel = this.zoomLevel;
            jl.mapType = jh;
            jl.exMapType = jp;
            this.dispatchEvent(jl)
        },
        showStreetLayer: function(e) {
            e ? this._addHybirdMap() : this._removeHybirdMap()
        },
        hideStreetLayer: function(e) {
            this._hideStreetLayerOptions = e;
            this._removeHybirdMap(e)
        },
        _addHybirdMap: function() {
            this._isHybridShow = true;
            if (this.mapType === "B_EARTH_MAP") {
                if (this._earth) {
                    this._earth.showStreetLayer()
                }
                return
            }
            if (this._hybridTileLayer) {
                this.addTileLayer(this._hybridTileLayer);
                var jh = new fa("onstreetlayer_show");
                this.dispatchEvent(jh);
                return
            }
            var jf = new hf(new cf(-21364736,-10616832),new cf(23855104,15859712));
            var T = new h(jf,"",BMAP_HYBRID_MAP);
            var i = new gN({
                copyright: T,
                transparentPng: true,
                tileTypeName: "web"
            });
            i._isInnerLayer = true;
            var je = this.isCanvasMap();
            i.getTilesUrl = function(ji, jn) {
                var jl = dR.B_STREET_MAP;
                var jm = iT("ditu", "satelliteStreet");
                var jj = jm.ver;
                var e = jm.udt;
				debugger
                var jk = jl.tileUrls[Math.abs(ji.x + ji.y) % jl.tileUrls.length] + "?qt=vtile&x=" + (ji.x + "").replace(/-/gi, "M") + "&y=" + (ji.y + "").replace(/-/gi, "M") + "&z=" + jn + "&styles=sl&v=" + jj + "&udt=" + e + "$scaler=" + fD() + "&showtext=" + (je ? 0 : 1);
                return jk
            }
            ;
            this._isHybridShow = true;
            this.addTileLayer(i);
            this._hybridTileLayer = i;
            var jg = new fa("onstreetlayer_show");
            this.dispatchEvent(jg)
        },
        _removeHybirdMap: function(i) {
            this._isHybridShow = false;
            if (this.mapType === "B_EARTH_MAP") {
                if (this._earth) {
                    this._earth.hideStreetLayer(i)
                }
                return
            }
            if (this._hybridTileLayer) {
                this.removeTileLayer(this._hybridTileLayer);
                var T = new fa("onstreetlayer_hide");
                this.dispatchEvent(T)
            }
        },
        isStreetLayerShow: function() {
            return this._isHybridShow
        },
        getTileId: function(e, jg) {
            var je = dR[this.mapType];
            if (typeof je !== "object") {
                return null
            }
            var T = je.baseUnits * Math.pow(2, (je.zoomLevelBase - jg));
            var jf = parseInt(e.lng / T, 10);
            var i = parseInt(e.lat / T, 10);
            return {
                row: jf,
                column: i,
                level: jg
            }
        },
        reset: function() {
            this.centerAndZoomIn(this.defaultCenter, this.defaultZoomLevel, true)
        },
        setOptions: function(i) {
            i = i || {};
            var jf = this;
            for (var je in i) {
                if (i.hasOwnProperty(je)) {
                    var T = true;
                    if (typeof i[je] !== "object") {
                        T = i[je] !== this.config[je]
                    }
                    this.config[je] = i[je];
                    if (je === "fixCenterWhenResize") {
                        this.config.enableResizeOnCenter = i[je]
                    }
                    if (!T) {
                        continue
                    }
                    switch (je) {
                    case "style":
                    case "styleUrl":
                        var e = {
                            os: i.style.os,
                            sv: i.style.sv
                        };
                        if (je === "style" && i.styleUrl) {
                            break
                        }
                        this.fire(new fa("onstyle_willchange"));
                        this.loadMapStyleFiles(function() {
                            var jg = new fa("onlayer_update");
                            jg.name = "na";
                            jf.fire(jg)
                        }, e);
                        break;
                    case "enableAutoResize":
                        if (i[je] === true) {
                            this.enableAutoResize()
                        } else {
                            this.disableAutoResize()
                        }
                        break;
                    case "displayOptions":
                        this.setDisplayOptions(i[je]);
                        break
                    }
                }
            }
        },
        setPrivateStatus: function(i) {
            if (typeof i === "boolean") {
                if (this.config.privateOn !== i) {
                    this.config.privateOn = i;
                    var e = new fa("onlayer_update");
                    e.name = "na";
                    this.fire(e)
                }
            }
        },
        getPrivateStatus: function() {
            return this.config.privateOn
        },
        setPrivateRegions: function(jf) {
            if (jf && jf instanceof Array) {
                var je = true;
                for (var T = 0; T < jf.length; T++) {
                    if (jf[T]instanceof cr) {
                        continue
                    } else {
                        je = false;
                        break
                    }
                }
                if (je) {
                    this.config.privateRegions = jf;
                    var e = new fa("onlayer_update");
                    e.name = "na";
                    this.fire(e)
                }
            }
        },
        getPrivateRegions: function() {
            if (!this.config.privateRegions) {
                return null
            } else {
                return this.config.privateRegions
            }
        },
        enableDragging: function() {
            this.config.enableDragging = true
        },
        disableDragging: function() {
            this.config.enableDragging = false
        },
        enableInertialDragging: function() {
            this.config.enableInertialDragging = true
        },
        disableInertialDragging: function() {
            this.config.enableInertialDragging = false
        },
        enableScrollWheelZoom: function() {
            this.config.enableWheelZoom = true
        },
        disableScrollWheelZoom: function() {
            this.config.enableWheelZoom = false
        },
        enableContinuousZoom: function() {
            this.config.enableContinuousZoom = true
        },
        disableContinuousZoom: function() {
            this.config.enableContinuousZoom = false
        },
        enableResizeOnCenter: function() {
            this.config.enableResizeOnCenter = true
        },
        disableResizeOnCenter: function() {
            this.config.enableResizeOnCenter = false
        },
        enableDoubleClickZoom: function() {
            this.config.enableDblclickZoom = true
        },
        disableDoubleClickZoom: function() {
            this.config.enableDblclickZoom = false
        },
        enableKeyboard: function() {
            this.config.enableKeyboard = true
        },
        disableKeyboard: function() {
            this.config.enableKeyboard = false
        },
        getSize: function() {
            return new h8(this.width,this.height)
        },
        enablePinchToZoom: function() {
            this.config.enablePinchZoom = true
        },
        disablePinchToZoom: function() {
            this.config.enablePinchZoom = false
        },
        enableTilt: function() {
            this.config.enableTilt = true
        },
        disableTilt: function() {
            this.config.enableTilt = false
        },
        enableRotate: function() {
            this.config.enableRotate = true
        },
        disableRotate: function() {
            this.config.enableRotate = false
        },
        enableAutoResize: function() {
            this.config.enableAutoResize = true;
            this._watchSize();
            if (!this.temp.autoResizeTimer) {
                this.temp.autoResizeTimer = setInterval(this._watchSize, 16)
            }
        },
        disableAutoResize: function() {
            this.config.enableAutoResize = false;
            if (this.temp.autoResizeTimer) {
                clearInterval(this.temp.autoResizeTimer);
                this.temp.autoResizeTimer = null
            }
        },
        checkResize: function() {
            this._watchSize()
        },
        resize: function() {
            this._watchSize()
        },
        getContainerSize: function() {
            return new h8(this.container.clientWidth,this.container.clientHeight)
        },
        _getProperZoom: function(T) {
            if (!T) {
                T = this.zoomLevel
            }
            var i = this.getMinZoom();
            var e = this.getMaxZoom();
            var je = false;
            if (T < i) {
                je = true;
                T = i
            }
            if (T > e) {
                je = true;
                T = e
            }
            if (this._renderType !== "webgl") {
                T = Math.round(T)
            }
            return {
                zoom: T,
                exceeded: je
            }
        },
        getContainer: function() {
            return this.container
        },
        getZoomUnits: function(T) {
            if (this.mapType === BMAP_EARTH_MAP) {
                return Math.pow(2, 18 - this._earth.getImageZoom())
            }
            var e = dR[this.mapType];
            if (typeof e !== "object") {
                return null
            }
            var i = T || this.zoomLevel;
            return Math.pow(2, (e.zoomLevelBase - i))
        },
        pointToPixelIn: function(jp, jr) {
            if (!jp) {
                return
            }
            jr = jr || {};
            if (this.mapType === BMAP_EARTH_MAP) {
                var jg;
                if (!jp._llPt) {
                    jg = ig.convertMC2LL(jp);
                    jp._llPt = jg
                }
                jg = jp._llPt;
                var jl = null;
                var jf = null;
                if (typeof jr.zoom === "number") {
                    var jo = this._earth;
                    var jq = jo._getEarthZoomByImgZoom(jr.zoom);
                    if (jq <= 3) {
                        jl = jo._generateTmpPMatrix(jq)
                    }
                    jf = jo._generateTmpMVMatrix(jo.getCenter(), jq)
                }
                var jh = this._earth.fromLatLngToPixel(jg, {
                    useRound: false,
                    isCalcOnBack: true,
                    matrixInfo: {
                        modelViewMatrix: jf,
                        projectionMatrix: jl
                    }
                });
                return jh
            }
            if ((this._heading % 360 === 0 && this._tilt === 0) || !this._webglMapCamera) {
                var jn = this.getZoomUnits(jr.zoom);
                var jj = jr.center || this.centerPoint;
                var je = this.width / 2;
                var ji = this.height / 2;
                var jm;
                if (jp.lng * jj.lng < 0) {
                    var i = Math.abs(jp.lng - jj.lng);
                    var e = (ey._mc180X * 2 - i) / jn;
                    if (jj.lng < 0) {
                        jm = je - e
                    } else {
                        jm = je + e
                    }
                } else {
                    jm = (jp.lng - jj.lng) / jn + je
                }
                var jk = (jj.lat - jp.lat) / jn + ji;
                if (jr.useRound !== false) {
                    jm = Math.round(jm);
                    jk = Math.round(jk)
                }
                return new eO(jm,jk)
            }
            var T = this._webglMapCamera.fromMCToScreenPixel(jp.lng, jp.lat, jr);
            if (jr.useRound === false) {
                return T
            }
            T.x = Math.round(T.x);
            T.y = Math.round(T.y);
            return T
        },
        pixelToPointIn: function(e, jl) {
            if (!e) {
                return
            }
            jl = jl || {};
            if (this.mapType === BMAP_EARTH_MAP) {
                if (typeof jl.zoom === "number") {
                    var jj = this._earth;
                    var jg = null;
                    var T = null;
                    var jk = jj._getEarthZoomByImgZoom(jl.zoom);
                    if (jk <= 3) {
                        jg = jj._generateTmpPMatrix(jk)
                    }
                    T = jj._generateTmpMVMatrix(jj.getCenter(), jk)
                }
                var i = this._earth.fromPixelToLatLng(e, {
                    matrixInfo: {
                        modelViewMatrix: T,
                        projectionMatrix: jg
                    }
                });
                if (i === null) {
                    return null
                }
                return ig.convertLL2MC(i)
            }
            if ((this._heading % 360 !== 0 || this._tilt > 0) && this._webglMapCamera) {
                return this._webglMapCamera.fromScreenPixelToMC(e.x, e.y, jl)
            }
            var jh = jl.center || this.centerPoint;
            var ji = this.getZoomUnits(jl.zoom);
            var jf = jh.lng + ji * (e.x - this.width / 2);
            var je = jh.lat - ji * (e.y - this.height / 2);
            return new cf(jf,je)
        },
        pointToOverlayPixelIn: function(e, je) {
            je = je || {};
            var T = this.pointToPixelIn(e, {
                zoom: je.zoom,
                center: je.center,
                forLabel: true,
                frustumTest: true,
                useRound: je.useRound
            });
            if (!T) {
                return
            }
            if (je.fixPosition && this.mapType !== "B_EARTH_MAP") {
                var jf = this.getSize();
                var i = this.worldSize(je.zoom);
                if (T.x > jf.width) {
                    while (T.x > jf.width) {
                        T.x -= i
                    }
                } else {
                    if (T.x < 0) {
                        while (T.x < 0) {
                            T.x += i
                        }
                    }
                }
            }
            if (this._renderType === "webgl") {
                return T
            }
            T.x -= this.offsetX;
            T.y -= this.offsetY;
            return T
        },
        overlayPixelToPointIn: function(i, e) {
            if (!i) {
                return
            }
            var T = i.clone();
            if (this._renderType !== "webgl") {
                T.x += this.offsetX;
                T.y += this.offsetY
            }
            return this.pixelToPointIn(T, e)
        },
        getProjection: function() {
            return new ig()
        },
        lnglatToMercator: function(e, je) {
            var i = new cf(e,je);
            var T = ig.convertLL2MC(i);
            return [T.lng, T.lat]
        },
        mercatorToLnglat: function(i, e) {
            if (isNaN(i) || isNaN(e)) {
                return []
            }
            i = parseFloat(i);
            e = parseFloat(e);
            var je = new cf(i,e);
            var T = ig.convertMC2LL(je);
            return [T.lng, T.lat]
        },
        getBoundsIn: function() {
            var jr = arguments[0];
            if (this.mapType === BMAP_EARTH_MAP && this._earth) {
                var jl = this._earth.getCustomBounds();
                if (!jl) {
                    return this.config.defaultMaxBounds
                }
                var jk = jl.getSouthWest();
                var e = jl.getNorthEast();
                if (jk.lng > e.lng) {
                    e.lng = 180
                }
                var jI = ig.convertLL2MC(jk);
                var jy = ig.convertLL2MC(e);
                var jo = this.config.defaultMaxBounds;
                var jx = Math.max(jI.lng, jo.sw.lng);
                var jw = Math.max(jI.lat, jo.sw.lat);
                var jq = Math.min(jy.lng, jo.ne.lng);
                var jp = Math.min(jy.lat, jo.ne.lat);
                var jt = new hf(new cf(jx,jw),new cf(jq,jp));
                jt.pointBottomLeft = new cf(jx,jw);
                jt.pointBottomRight = new cf(jq,jw);
                jt.pointTopLeft = new cf(jx,jp);
                jt.pointTopRight = new cf(jq,jp);
                jt.setMinMax();
                jt.makeNormalizedPoint(this._earth.getHeading());
                return jt
            }
            jr = jr || {};
            var jf = jr.margins || [0, 0, 0, 0];
            var jD = this.pixelToPointIn({
                x: jf[3],
                y: this.height - jf[2]
            }, jr);
            var jH = this.pixelToPointIn({
                x: this.width - jf[1],
                y: jf[0]
            }, jr);
            var jv = typeof jr.heading === "number" ? jr.heading : (this._heading % 360);
            var T = typeof jr.tilt === "number" ? jr.tilt : this._tilt;
            var jn = this._webglMapCamera;
            if ((jv === 0 && T === 0) || !jn) {
                this._bounds.setSouthWest(jD);
                this._bounds.setNorthEast(jH);
                this._bounds.pointBottomLeft = jD;
                this._bounds.pointBottomRight = new cf(jH.lng,jD.lat);
                this._bounds.pointTopRight = jH;
                this._bounds.pointTopLeft = new cf(jD.lng,jH.lat);
                this._bounds.setMinMax();
                this._bounds.makeNormalizedPoint(jv);
                return this._bounds
            }
            var ju = this.pixelToPointIn({
                x: jf[3],
                y: jf[0]
            }, jr);
            var je = jn.getPosition();
            var jJ = Math.sqrt(Math.pow(ju.lng - je[0], 2) + Math.pow(ju.lat - je[1], 2));
            var jE = this.getZoomUnits();
            var jL = jJ / jE;
            var jB = jn._frustumSideLen;
            var jj = jn._fovy;
            if (jL > jB || (90 - T) < jj / 2) {
                var jK = [ju.lng - je[0], ju.lat - je[1]];
                if ((90 - T) < jj / 2) {
                    jK[0] = -jK[0];
                    jK[1] = -jK[1]
                }
                var jC = jB * jE;
                var ji = [jK[0] / jJ * jC + je[0], jK[1] / jJ * jC + je[1]];
                var jz = [jH.lng - je[0], jH.lat - je[1]];
                if ((90 - T) < jj / 2) {
                    jz[0] = -jz[0];
                    jz[1] = -jz[1]
                }
                var jg = [jz[0] / jJ * jC + je[0], jz[1] / jJ * jC + je[1]];
                ju.lng = ji[0];
                ju.lat = ji[1];
                jH.lng = jg[0];
                jH.lat = jg[1]
            }
            var js = this.pixelToPointIn({
                x: this.width - jf[1],
                y: this.height - jf[2]
            }, jr);
            var jA = [jD, jH, ju, js];
            var jG = jA[0].lng;
            var jM = jA[0].lat;
            var jh = jA[0].lng;
            var jm = jA[0].lat;
            for (var jF = 1; jF < 4; jF++) {
                if (jA[jF].lng < jG) {
                    jG = jA[jF].lng
                }
                if (jA[jF].lng > jh) {
                    jh = jA[jF].lng
                }
                if (jA[jF].lat < jM) {
                    jM = jA[jF].lat
                }
                if (jA[jF].lat > jm) {
                    jm = jA[jF].lat
                }
            }
            this._bounds.setSouthWest(new cf(jG,jM));
            this._bounds.setNorthEast(new cf(jh,jm));
            this._bounds.pointTopLeft = ju;
            this._bounds.pointTopRight = jH;
            this._bounds.pointBottomRight = js;
            this._bounds.pointBottomLeft = jD;
            this._bounds.makeNormalizedPoint(jv);
            this._bounds.setMinMax();
            return this._bounds
        },
        isLoaded: function() {
            return !!this.loaded
        },
        _getBestLevel: function(i, jn) {
            var jg = 0;
            if (this._renderType === "webgl" && !bK()) {
                jg = 100
            }
            var jh = jn.margins || [10, 10, 10, 10];
            var je = jn.zoomFactor || 0;
            var ji = jh[1] + jh[3];
            var jf = jh[0] + jh[2];
            var e = this.getMinZoom();
            var jm = this.getMaxZoom();
            var jl = i.toSpan();
            var jk = jl.width / (this.width - ji - jg);
            var jj = jl.height / (this.height - jf - jg);
            var T = 18 - m(Math.max(jk, jj));
            if (T < e) {
                T = e
            }
            if (T > jm) {
                T = jm
            }
            T += je;
            if (this._renderType !== "webgl") {
                T = Math.floor(T)
            }
            return T
        },
        getViewportIn: function(jn, jf) {
            if (this.mapType === BMAP_EARTH_MAP) {
                jn = jn || [];
                var jh = [];
                for (var jo = 0; jo < jn.length; jo++) {
                    if (!jn[jo]) {
                        continue
                    }
                    jh.push(ig.convertMC2LL(jn[jo]))
                }
                var jp = this._earth.getViewportIn(jh, jf);
                var je = jp.center;
                var jl = jp.zoom;
                var jt = ig.convertLL2MC(je);
                return {
                    center: jt,
                    zoom: jl
                }
            }
            var jj = {
                center: this.getCenterIn(),
                zoom: this.getZoom()
            };
            if (!jn || jn.length === 0) {
                return jj
            }
            jf = jf || {};
            var ji;
            if (jn instanceof hf) {
                ji = jn
            } else {
                var jg = jn;
                ji = new hf();
                for (var jm = jg.length - 1; jm >= 0; jm--) {
                    ji.extend(jg[jm])
                }
                if (ji.isEmpty()) {
                    return jj
                }
            }
            var js = ji.getCenter();
            var e = this._getBestLevel(ji, jf);
            if (jf.margins) {
                var T = jf.margins;
                var jr = (T[1] - T[3]) / 2;
                var jk = (T[0] - T[2]) / 2;
                var jq = this.getZoomUnits(e);
                js.lng = js.lng + jq * jr;
                js.lat = js.lat + jq * jk
            }
            return {
                center: js,
                zoom: e
            }
        },
        setViewportIn: function(je, jf) {
            if (this.mapType === BMAP_EARTH_MAP) {
                var jj;
                if (je && je.center) {
                    var T = ig.convertMC2LL(je.center);
                    var jh = this._earth._getEarthZoomByImgZoom(je.zoom, T);
                    jj = {
                        center: T,
                        zoom: jh
                    }
                } else {
                    jj = [];
                    for (var jg = 0; jg < je.length; jg++) {
                        var ji = ig.convertMC2LL(je[jg]);
                        jj[jg] = new b9(ji.lat,ji.lng)
                    }
                }
                this._earth.setViewportIn(jj, jf);
                return
            }
            var e;
            if (je && je.center) {
                e = je
            } else {
                e = this.getViewportIn(je, jf)
            }
            jf = jf || {};
            if (this._renderType === "webgl") {
                this.centerAndZoomIn(e.center, e.zoom, jf);
                return
            }
            if (e.zoom === this.zoomLevel && jf.enableAnimation !== false) {
                this.panToIn(e.center, {
                    duration: 200,
                    callback: jf.callback
                })
            } else {
                this.centerAndZoomIn(e.center, e.zoom, jf)
            }
        },
        addSpots: function(T, i) {
            if (!T || T.length === 0) {
                return
            }
            i = i || {};
            var jg = i.zIndex || 0;
            var jf = typeof i.enableMultiResponse === "undefined" ? true : !!i.enableMultiResponse;
            this.spotsPool = this.spotsPool || {};
            var e = "sp" + (this.temp.spotsGuid++);
            this.spotsPool[e] = {
                spots: T.slice(0),
                zIndex: jg,
                enableMultiResponse: jf
            };
            var je = this;
            gn.load("hotspot", function() {
                je._asyncRegister()
            });
            return e
        },
        getSpots: function(e) {
            return this.spotsPool[e] && this.spotsPool[e].spots || []
        },
        removeSpots: function(e) {
            if (!e || !this.spotsPool[e]) {
                return
            }
            delete this.spotsPool[e]
        },
        clearSpots: function() {
            delete this.spotsPool
        },
        getIconByClickPosition: function(i) {
            if (!this.config.enableIconClick || !this._spotsMgr) {
                return null
            }
            var e = this._spotsMgr.getSpotsByScreenPosition(i);
            if (e[0] && e[0].userdata) {
                var T = e[0].userdata;
                return {
                    name: T.name,
                    uid: T.uid,
                    position: T.iconPoint || e[0].pt
                }
            }
            return null
        },
        setBounds: function(e) {
            dR[this.mapType].bounds = e.clone()
        },
        getCoordType: function() {
            return this.config.coordType
        },
        getPanes: function() {
            return this._panes
        },
        getInfoWindow: function() {
            if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
                return this.temp.infoWin
            }
            return null
        },
        getDistanceIn: function(jf, e) {
            if (!jf || !e) {
                return
            }
            if (jf.equals(e)) {
                return 0
            }
            if (this.mapType === BMAP_EARTH_MAP) {
                var je = ig.convertMC2LL(jf);
                var T = ig.convertMC2LL(e);
                return this._earth.getDistance(je, T)
            }
            var i = ig.getDistanceByMC(jf, e);
            return i
        },
        getOverlays: function() {
            var jg = [];
            var jh = this._overlays;
            var jf = this._customOverlays;
            if (jh) {
                for (var je in jh) {
                    if (jh[je]instanceof d9) {
                        jg.push(jh[je])
                    }
                }
            }
            if (jf) {
                for (var T = 0, e = jf.length; T < e; T++) {
                    jg.push(jf[T])
                }
            }
            return jg
        },
        getMapType: function() {
            return this.mapType
        },
        getMapCoordType: function() {
            return this.coordType
        },
        _asyncRegister: function() {
            for (var e = this.temp.registerIndex; e < bp._register.length; e++) {
                bp._register[e](this)
            }
            this.temp.registerIndex = e
        },
        setDefaultCursor: function(e) {
            this.config.defaultCursor = e;
            if (this.platform) {
                this.platform.style.cursor = this.config.defaultCursor
            }
        },
        getDefaultCursor: function() {
            return this.config.defaultCursor
        },
        setOverlayMoveCursor: function(e) {
            this.config.overlayMoveCursor = e
        },
        getOverlayMoveCursor: function() {
            return this.config.overlayMoveCursor
        },
        setDraggingCursor: function(e) {
            this.config.draggingCursor = e
        },
        getDraggingCursor: function() {
            return this.config.draggingCursor
        },
        _syncAndChangeMapType: function(e) {
            var i = this;
            if (i._renderType === "webgl" && i.getTilt() > g0.MAX_DRAG_TILT_L2) {
                i.setTilt(g0.MAX_DRAG_TILT_L2, {
                    callback: function() {
                        i._changeEarthMapType(e)
                    }
                })
            } else {
                i._changeEarthMapType(e)
            }
        },
        _changeEarthMapType: function(T) {
            var je = this;
            var jh = je.tileMgr.tileLayers;
            if (this._mapTypeChangAni) {
                this._mapTypeChangAni.stop()
            }
            var jg;
            if (this._earth) {
                jg = this._earth.getEarthCanvas()
            }
            if (!this._earth) {
                this.maskLayer.style.opacity = 1;
                this.maskLayer.style.zIndex = 999;
                this.maskLayer.style.background = "#000"
            }
            this._mapTypeChangAni = new e3({
                duration: 400,
                render: function(e) {
                    if (!je._earth) {
                        return
                    }
                    jg.style.opacity = e
                },
                finish: function() {
                    for (var e = jh.length - 1, ji = e; ji >= 0; ji--) {
                        var jk = jh[ji].tilesDiv;
                        if (jk) {
                            jk.style.visibility = "hidden"
                        }
                        if (jh[ji]._isInnerLayer && je._renderType !== "webgl") {
                            je.removeTileLayer(jh[ji])
                        }
                    }
                    je._mapTypeChangAni = null;
                    je._mapTypeChanging = false;
                    function jj() {
                        var jo = je.getZoom() - 2;
                        var jp = je.getCenterIn();
                        var jm = ig.convertMC2LL(jp);
                        je._earth = new bp.Earth(je,{
                            center: jm,
                            zoom: jo,
                            showRealSunlight: je.config.showRealSunlight,
                            showMilkyway: je.config.showMilkyway,
                            earthBackground: je.config.earthBackground
                        });
                        je._proxyEarthEvents();
                        var jl = je.mapType;
                        je.mapType = T;
                        var jn = new fa("onmaptypechange");
                        jn.zoomLevel = this.zoomLevel;
                        jn.mapType = T;
                        jn.exMapType = jl;
                        je.dispatchEvent(jn);
                        je._setMapTypeStatus(T);
                        ev.extend(je, bp.EarthView.prototype);
                        if (!je._navigationCtrl && je.config.showControls) {
                            je._navigationCtrl = new ex(je)
                        }
                    }
                    if (!je._earth) {
                        if (bp["FeatureStyle" + je.config.style]) {
                            jj()
                        } else {
                            je.loadMapStyleFiles(function() {
                                jj()
                            })
                        }
                    }
                    if (parseInt(je.maskLayer.style.opacity, 10) === 1) {
                        setTimeout(function() {
                            je.maskLayer.style.zIndex = 9;
                            je.maskLayer.style.opacity = 0
                        }, 1000)
                    }
                }
            });
            if (!this._earth) {
                return
            }
            var i = this.mapType;
            this.mapType = T;
            var jf = new fa("onmaptypechange");
            jf.zoomLevel = this.zoomLevel;
            jf.mapType = T;
            jf.exMapType = i;
            this.dispatchEvent(jf);
            je._setMapTypeStatus(T);
            ev.extend(je, bp.EarthView.prototype)
        },
        getMapStyleId: function() {
            if (typeof this.config.style === "string") {
                return this.config.style
            }
            return this.config.mapStyleId || "custom"
        },
        _setMapTypeStatus: function(T) {
            var ji = arguments[1];
            if (T === BMAP_EARTH_MAP) {
                var jg = this._earth.getEarthCanvas();
                if (jg) {
                    jg.style.display = ""
                }
                var jj = {
                    noAnimation: true
                };
                this._earth.setCenter(ig.convertMC2LL(this.centerPoint), jj);
                this._earth.setImageZoom(this.zoomLevel, jj);
                this._earth.setTilt(this.getTilt(), jj);
                this._earth.setHeading(this.getHeading(), jj)
            } else {
                if (this.preMapType === BMAP_EARTH_MAP && this._earth) {
                    var jh = this._earth;
                    var je = jh.getMapZoom();
                    var jf = jh._imageRawZoom || je;
                    var i = jf - je;
                    var e = jh.getCenter();
                    if (this._renderType === "webgl") {
                        this._tilt = jh.getTilt();
                        if (this.zoomLevel > 7) {
                            this._heading = jh.getHeading();
                            ji && ji(e, je);
                            return
                        }
                        if (jh.getHeading() !== 0) {
                            jh.setTilt(this.getTilt());
                            jh.setHeading(this.getHeading(), {
                                callback: function() {
                                    ji && ji(e, je)
                                }
                            })
                        } else {
                            ji && ji(e, je)
                        }
                        return
                    }
                    if (i < 0.1 && jh.getTilt() === 0 && jh.getHeading() === 0) {
                        ji && ji(e, je);
                        return
                    }
                    jh.setTilt(0);
                    jh.setHeading(0);
                    jh.setZoom(jh.getZoom() - i, {
                        callback: function() {
                            ji && ji(e, je)
                        }
                    })
                }
            }
        },
        _proxyEarthEvents: function() {
            var jf = this;
            var jg = this._earth;
            jg.on("tilesload", function(i) {
                jf.fire(i)
            });
            jg.on("centerandzoom", function(i) {
                jf.dispatchEvent(new fa("onmoveend"));
                jf.dispatchEvent(new fa("onzoomend"))
            });
            function je(i) {
                jf.fire(i)
            }
            var e = ["zoomstart", "zoomend", "tilesload", "sunlighttime_change", "sunlighttime_clear", "centerandzoom", "animation_start", "animation_stop", "movestart", "moveend", "moving", "dragstart", "dragend", "dragging"];
            for (var T = 0; T < e.length; T++) {
                jg.on(e[T], je)
            }
        },
        forceEnableEarth: function() {
            this.config.forceEnableEarth = true;
            this.config.enableEarth = cK.ifEnableEarth(true);
            this.dispatchEvent(new fa("forceenableearth"));
            return this.config.enableEarth
        },
        setLock: function(e) {
            if (this.mapType === BMAP_EARTH_MAP) {
                this._earth.setLock(e)
            }
            this._lock = e
        },
        getLock: function() {
            if (this.mapType === BMAP_EARTH_MAP) {
                return this._earth.getLock()
            }
            return this._lock
        },
        getEarth: function() {
            return this._earth
        },
        isSupportEarth: function() {
            return this.config.enableEarth
        },
        isCanvasMap: function() {
            return !!(this._renderType === "canvas" && this.getMapType() !== "B_EARTH_MAP")
        },
        getCanvasMapCoordByUid: function(jf) {
            if (this._renderType === "webgl") {
                var jg = this.tileMgr.tileLayers;
                for (var je = 0; je < jg.length; je++) {
                    if (jg[je].labelProcessor) {
                        return jg[je].labelProcessor.getLabelByUid(jf, "")
                    }
                }
                return null
            }
            var e = this.canvas2dMapMgr._labelClick;
            var T = e.findLabelByUid(jf);
            return T ? new cf(T.iconPos.geoX,T.iconPos.geoY) : null
        },
        loadBizData: function(i) {
            var e = new fa("onloadbizdata");
            e.data = i;
            this.dispatchEvent(e)
        },
        unloadBizData: function() {
            var e = new fa("onunloadbizdata");
            this.dispatchEvent(e)
        },
        zoomIn: function(e) {
            this.setZoomIn(this.zoomLevel + 1, {
                zoomCenter: e
            })
        },
        zoomOut: function(e) {
            this.setZoomIn(this.zoomLevel - 1, {
                zoomCenter: e
            })
        },
        setMaxZoom: function(e) {
            if (this._renderType === "webgl") {
                this.config.maxZoom = e <= 21 ? e : 21
            } else {
                this.config.maxZoom = e <= 19 ? e : 19
            }
        },
        setMinZoom: function(e) {
            this.config.minZoom = e >= 3 ? e : 3
        },
        setCenterIn: function(e, i) {
            this.panToIn(e, i)
        },
        getRenderType: function() {
            return this._renderType
        },
        getSolarInfo: function(je) {
            je = je || this._initDate;
            var T = e2(je);
            var e = ig.convertLL2MC(new cf(T[0],T[1]));
            var jm = e.latLng;
            var jh = bp.Projection.convertMC2LL(this.centerPoint);
            var jj = je.getUTCHours();
            var jl = jj + 24 * jh.lng / 360;
            var jk = jl - 12;
            var ji = jk * 60 * 0.25;
            var jg = Math.asin(Math.sin(hM(jh.lat)) * Math.sin(hM(jm.lat)) + Math.cos(hM(jh.lat)) * Math.cos(hM(jm.lat)) * Math.cos(hM(ji)));
            var jf = Math.asin(Math.sin(hM(ji)) * Math.cos(hM(jm.lat)) / Math.cos(jg));
            var i = "north";
            if (jh.lat < jm.lat) {
                i = "south"
            }
            return {
                zenith: e,
                solarAltitude: jg,
                solarAzimuth: jf,
                centerPosition: i,
                position: e
            }
        },
        setDisplayOptions: function(T) {
            if (!T) {
                return
            }
            for (var e in this._displayOptions) {
                if (this._displayOptions.hasOwnProperty(e)) {
                    if (typeof T[e] === "boolean" || (e === "skyColors" && typeof T.skyColors === "object") || (e === "labelMargin" && typeof T.labelMargin === "number")) {
                        this._displayOptions[e] = T[e]
                    }
                }
            }
            var i = this.getMapType();
            if (i === eW.NORMAL) {
                this.fire(new fa("ondisplayoptions_changed"))
            } else {
                if (i === eW.EARTH && this._earth) {
                    this._earth.fire(new fa("ondisplayoptions_changed"))
                }
            }
        },
        getHorizonPosY: function(e) {
            if (!e || !this._webglMapCamera) {
                return null
            }
            var i = this._webglMapCamera.fromMCToScreenPixel(e.lng, e.lat, {
                heading: 0
            });
            return i.y
        },
        getIndoorInfo: function() {
            if (!this._indoorMgr) {
                return
            }
            return this._indoorMgr.getData()
        },
        showIndoor: function(e, T) {
            var i = new fa("onindoor_status_changed");
            i.uid = e;
            i.floor = T;
            this.fire(i)
        },
        addAreaSpot: function(e, T) {
            if (!e || e.length === 0) {
                return
            }
            T = T || {};
            this.areaSpots = this.areaSpots || {};
            var i = T.id || ("sp" + (this.temp.spotsGuid++));
            this.areaSpots[i] = {
                spot: e,
                userData: T.userData
            };
            var je = this;
            gn.load("hotspot", function() {
                je._asyncRegister()
            });
            return i
        },
        getAreaSpot: function(e) {
            if (this.areaSpots && this.areaSpots[e]) {
                return this.areaSpots[e]
            }
            return null
        },
        removeAreaSpot: function(e) {
            if (!e || !this.areaSpots[e]) {
                return
            }
            delete this.areaSpots[e]
        },
        clearAreaSpots: function() {
            this.areaSpots = {}
        },
        resetSpotStatus: function() {
            this.fire(new fa("onspot_status_reset"))
        },
        hightlightSpotByUid: function(e, T) {
            var i = new fa("onspot_highlight");
            i.uid = e;
            i.tilePosStr = T;
            this.fire(i)
        },
        setZoomIn: function(i, e) {
            e = e || {};
            this.zoomTo(i, e.zoomCenter || null, e)
        },
        restrictBounds: function(e) {
            if (e instanceof hf) {
                this.config.restrictBounds = e;
                this.restrictCenter(this.getCenterIn());
                this.fire(new fa("oncenter_changed"))
            }
        },
        getCurrentMaxTilt: function() {
            var e = this.zoomLevel;
            if (this.mapType === "B_EARTH_MAP") {
                return g0.MAX_DRAG_TILT_L2
            }
            if (this.config.restrictCenter === false) {
                return g0.MAX_DRAG_TILT
            }
            if (e >= 19) {
                return g0.MAX_DRAG_TILT
            } else {
                if (e <= 18) {
                    if (e < this._enableTiltZoom) {
                        if (e >= this._enableTiltZoom - 2) {
                            return (1 - (this._enableTiltZoom - e) / 2) * g0.MAX_DRAG_TILT_L2
                        }
                        return 0
                    }
                    return g0.MAX_DRAG_TILT_L2
                } else {
                    return (g0.MAX_DRAG_TILT - g0.MAX_DRAG_TILT_L2) * (e - 18) + g0.MAX_DRAG_TILT_L2
                }
            }
        },
        worldSize: function(i) {
            var e = i || this.zoomLevel;
            return g0.WORLD_SIZE_MC / this.getZoomUnits(e)
        },
        setTrafficOn: function(e) {
            if (e && Number(e) > 1) {
                iH.setZIndex(Number(e))
            }
            this.addTileLayer(iH)
        },
        setTrafficOff: function() {
            this.removeTileLayer(iH)
        },
        showOverlayContainer: function() {
            this.setDisplayOptions({
                overlay: true
            })
        },
        hideOverlayContainer: function() {
            this.setDisplayOptions({
                overlay: false
            })
        },
        addLabelsToMapTile: function(T) {
            for (var e = 0; e < T.length; e++) {
                if (typeof T[e].type === "undefined") {
                    T[e].type = "fixed"
                }
                if (typeof T[e].rank !== "number") {
                    T[e].rank = 50000
                }
                T[e].pt = T[e].position;
                T[e].custom = true;
                T[e].processedInZoom = 0;
                this._customTileLabels.push(T[e])
            }
            this.dispatchEvent(new fa("onadd_tile_labels"))
        },
        removeLabelsFromMapTile: function(T) {
            for (var je = 0; je < T.length; je++) {
                for (var e = 0; e < this._customTileLabels.length; e++) {
                    if (this._customTileLabels[e].uid === T[je]) {
                        this._customTileLabels.splice(e, 1)
                    }
                }
            }
            this.dispatchEvent(new fa("onremove_tile_labels"))
        },
        clearLabels: function() {
            this._customTileLabels.length = 0;
            this.dispatchEvent(new fa("onclear_labels"))
        },
        loadMapStyleFiles: function(jg, e) {
            this.customLoaded = false;
            var T = this.config.style;
            var jf = this.config.styleUrl;
            var je = this;
            this._setTextRenderType();
            if (typeof T === "string" && !jf) {
                if (bp["FeatureStyle" + T]) {
                    this.customLoaded = true;
                    je.fire(new fa("onstyle_loaded"));
                    jg();
                    return
                }
                bp["FeatureStyle" + T] = window.FeatureStyle;
                bp["iconSetInfo" + T] = window.iconSetInfo_high;
                bp.indoorStyle = window.indoorStyle;
                ga.load(w.getMapStyleFiles(T), function() {
                    if (je.config.style === T) {
                        bp["FeatureStyle" + T] = window.FeatureStyle;
                        bp["iconSetInfo" + T] = window.iconSetInfo_high;
                        bp.indoorStyle = window.indoorStyle;
                        je.customLoaded = true;
                        je.fire(new fa("onstyle_loaded"));
                        jg()
                    }
                })
            } else {
                var i = T;
                t.init(je);
                t.getStyleJson(i, function(ji) {
                    var jn = el;
                    var jp = bp.getGUID("custom");
                    je.config.mapStyleId = jp;
                    var jl = {};
                    ev.extend(jl, ji);
                    var jj = Math.floor(je.getZoom());
                    var jm;
                    window["styleCbk_" + jp] = function(jq, jr) {
                        if (jr !== jm) {
                            return
                        }
                        if (typeof jq === "string") {
                            jq = JSON.parse(jq)
                        }
                        t.onStyleDataBack(jq, jj, jp, jl, jn, bp["customStyleInfo_" + jp]);
                        je.customLoaded = true;
                        je.fire(new fa("onstyle_loaded"));
                        jg()
                    }
                    ;
                    bp["customStyleInfo_" + jp] = {
                        zoomRegion: {},
                        zoomStyleBody: [],
                        zoomFrontStyle: {}
                    };
                    var jo = t.getStyleUrl(ji, jn, "styleCbk_" + jp, jj, e, bp["customStyleInfo_" + jp]);
                    var jh = jo.split("?")[0];
                    jm = jo.split("?")[1];
                    if (jf) {
                        jh = jf;
                        jm = jh.split("?")[1]
                    }
                    if (!bp.iconSetInfoCustom) {
                        var jk = w.getMapStyleFiles("default");
                        jk.splice(1, 1);
                        ga.load(jk, function() {
                            bp.iconSetInfoCustom = window.iconSetInfo_high;
                            bp.indoorStyle = window.indoorStyle;
                            if (jh.indexOf("jsonp") > "-1") {
                                ga.load(jh)
                            } else {
                                bp["customStyleInfo_" + jp].xhr = hm.post(jh, jm, window["styleCbk_" + jp])
                            }
                        })
                    } else {
                        if (jh.indexOf("jsonp") > "-1") {
                            ga.load(jh)
                        } else {
                            bp["customStyleInfo_" + jp].xhr = hm.post(jh, jm, window["styleCbk_" + jp])
                        }
                    }
                })
            }
        },
        getFeatureStyleTags: function() {
            var e = [];
            var jf = Object.keys(bp);
            for (var je = 0; je < jf.length; je++) {
                var T = jf[je];
                if (T.indexOf("FeatureStyle") > -1 && bp[T]) {
                    e.push(T)
                }
            }
            return e
        },
        setCopyrightOffset: function(je, i) {
            var T = new fa("oncopyrightoffsetchange",{
                logo: je,
                cpy: i
            });
            this.dispatchEvent(T)
        },
        _setTextRenderType: function(e) {
            if (e) {
                this.config.textRenderType = e;
                return
            }
            if (this.config.textRenderType !== null) {
                return
            }
            if (bK()) {
                this.config.textRenderType = "canvas"
            } else {
                if (typeof this.config.style === "string") {
                    this.config.textRenderType = "image"
                } else {
                    this.config.textRenderType = "canvas"
                }
            }
        },
        destroy: function() {
            this._destroyed = true;
            this.fire(new fa("ondestroy"))
        },
        centerAndZoom: function(e, jh, T) {
            if (Object.prototype.toString.call(jh) !== "[object Undefined]") {
                jh = parseInt(jh, 10)
            }
            if (typeof e === "string") {
                var je = this;
                var jg = new a7();
                jg.getPoint(e, function(ji) {
                    e = ji;
                    var jj = ig.convertLL2MC(e);
                    je.centerAndZoomIn(jj, jh, T)
                })
            } else {
                if (this.config.coordType === BMAP_COORD_GCJ02) {
                    var jf = hF(e, 3);
                    var i = ig.convertLL2MC(jf)
                } else {
                    var i = ig.convertLL2MC(e)
                }
                this.centerAndZoomIn(i, jh, T)
            }
        },
        pointToPixel: function(e, T) {
            var i = ig.convertLL2MC(e);
            var je = {};
            ev.extend(je, T);
            if (je && je.center) {
                je.center = ig.convertLL2MC(je.center)
            }
            return this.pointToPixelIn(i, je)
        },
        pixelToPoint: function(T, i) {
            var je = {};
            ev.extend(je, i);
            if (je && je.center) {
                je.center = ig.convertLL2MC(je.center)
            }
            var e = this.pixelToPointIn(T, je);
            return ig.convertMC2LL(e)
        },
        pointToOverlayPixel: function(e, T) {
            var i = ig.convertLL2MC(e);
            var je = {};
            ev.extend(je, T);
            if (je && je.center) {
                je.center = ig.convertLL2MC(je.center)
            }
            return this.pointToOverlayPixelIn(i, je)
        },
        overlayPixelToPoint: function(T, i) {
            var je = {};
            ev.extend(je, i);
            if (je && je.center) {
                je.center = ig.convertLL2MC(je.center)
            }
            var e = this.overlayPixelToPointIn(T, je);
            return ig.convertMC2LL(e)
        },
        setViewport: function(T, je) {
            var e;
            if (T && T.center) {
                e = {};
                ev.extend(e, T);
                e.center = ig.convertLL2MC(e.center)
            } else {
                e = [];
                for (var jf = 0; jf < T.length; jf++) {
                    e[jf] = ig.convertLL2MC(T[jf])
                }
            }
            this.setViewportIn(e, je)
        },
        getViewport: function(jg, je) {
            var T;
            if (jg && jg.length) {
                T = [];
                for (var jf = 0; jf < jg.length; jf++) {
                    T[jf] = ig.convertLL2MC(jg[jf])
                }
            } else {
                if (jg instanceof hf) {
                    T = new hf(ig.convertLL2MC(jg.getSouthWest()),ig.convertLL2MC(jg.getNorthEast()));
                    T.setMinMax()
                }
            }
            var e = this.getViewportIn(T, je);
            e.center = ig.convertMC2LL(e.center);
            return e
        },
        getDistance: function(jf, T) {
            var i = ig.convertLL2MC(jf);
            var je = ig.convertLL2MC(T);
            var e = this.getDistanceIn(i, je);
            return e
        },
        setCenter: function(e, T) {
            if (typeof e === "string") {
                var je = this;
                var jg = new a7();
                jg.getPoint(e, function(jh) {
                    e = jh;
                    var ji = ig.convertLL2MC(e);
                    je.setCenterIn(ji, T)
                })
            } else {
                if (this.config.coordType === BMAP_COORD_GCJ02) {
                    var jf = hF(e, 3);
                    var i = ig.convertLL2MC(jf)
                } else {
                    var i = ig.convertLL2MC(e)
                }
                this.setCenterIn(i, T)
            }
        },
        setZoom: function(T, e) {
            var i = {};
            ev.extend(i, e);
            if (i && i.zoomCenter) {
                i.zoomCenter = ig.convertLL2MC(i.zoomCenter)
            }
            this.setZoomIn(T, i)
        },
        flyTo: function(e, jf, T) {
            if (this.config.coordType === BMAP_COORD_GCJ02) {
                var je = hF(e, 3);
                var i = ig.convertLL2MC(je)
            } else {
                var i = ig.convertLL2MC(e)
            }
            this.flyToIn(i, jf, T)
        },
        panTo: function(e, T) {
            var i = ig.convertLL2MC(e);
            this.panToIn(i, T)
        },
        getCenter: function() {
            var e = this.getCenterIn();
            if (this.config.coordType === BMAP_COORD_GCJ02) {
                var i = ig.convertMC2LL(e);
                return ef(i)
            }
            return ig.convertMC2LL(e)
        },
        getBounds: function() {
            var e = this.getBoundsIn();
            var i = new hf(ig.convertMC2LL(e.getSouthWest()),ig.convertMC2LL(e.getNorthEast()));
            return i
        },
        setMapStyleV2: function(e) {
            if (typeof e === "string") {
                this._setTextRenderType("image")
            } else {
                this._setTextRenderType("canvas")
            }
            this.setOptions({
                style: e
            })
        },
        startViewAnimation: function(T) {
            var e = T._options.delay;
            var i = this;
            setTimeout(function() {
                T._start(i)
            }, e)
        },
        pauseViewAnimation: function(e) {
            e._pause(this)
        },
        continueViewAnimation: function(e) {
            e._continue(this)
        },
        cancelViewAnimation: function(e) {
            e._cancel(this)
        },
        getMapScreenshot: function() {
            return this._webglMapScene._painter._canvas.toDataURL()
        }
    });
    window.BMAP_NORMAL_MAP = "B_NORMAL_MAP";
    window.BMAPGL_NORMAL_MAP = "B_NORMAL_MAP";
    window.BMAP_SATELLITE_MAP = "B_SATELLITE_MAP";
    window.BMAP_HYBRID_MAP = "B_STREET_MAP";
    window.BMAP_EARTH_MAP = "B_EARTH_MAP";
    window.BMAP_NONE_MAP = "B_NONE_MAP";
    window.BMAP_COORD_MERCATOR = 1;
    window.BMAP_COORD_GCJ02 = 2;
    window.BMAP_SYS_DRAWER = 0;
    window.BMAP_SVG_DRAWER = 1;
    window.BMAP_VML_DRAWER = 2;
    window.BMAP_CANVAS_DRAWER = 3;
    var t = {
        environment: "jsapi",
        map: null,
        ontilesloaded: false,
        onstyle_loaded: false,
        init: function(i) {
            var e = this;
            e.map = i;
            this.changeCopyright();
            this.setEnvironment(e.map.config.style);
            this.resetEventListener()
        },
        resetEventListener: function() {
            var e = this;
            this.ontilesloaded = false;
            this.onstyle_loaded = false;
            e.map.addEventListener("ontilesloaded", e.checkLoadedStatus);
            e.map.addEventListener("onstyle_loaded", e.checkLoadedStatus)
        },
        checkLoadedStatus: function(i) {
            t[i.type] = true;
            if (t.ontilesloaded && t.onstyle_loaded) {
                this.dispatchEvent(new fa("onstylechangetilesloaded"));
                this.removeEventListener("ontilesloaded", t.checkLoadedStatus);
                this.removeEventListener("onstyle_loaded", t.checkLoadedStatus)
            }
        },
        changeCopyright: function() {
            var e = this;
            if (e.map.cpyCtrl) {
                e.map.cpyCtrl.hide();
                if (e.environment !== "customEditor") {
                    e.map.setCopyrightOffset(new h8(1,1))
                }
            } else {
                e.map.addEventListener("oncopyrightaddend", function() {
                    e.map.cpyCtrl.hide();
                    if (e.environment !== "customEditor") {
                        e.map.setCopyrightOffset(new h8(1,1))
                    }
                })
            }
        },
        setEnvironment: function(e) {
            if (e.customEditor) {
                this.environment = "customEditor";
                aO.map = this.map
            } else {
                if (e.sharing) {
                    this.environment = "sharing"
                } else {
                    if (e.preview) {
                        this.environment = "preview"
                    } else {
                        this.environment = "jsapi"
                    }
                }
            }
        },
        getStyleJson: function(je, jg) {
            var jf = this;
            if (je.styleJson) {
                jg && jg(je.styleJson)
            } else {
                if (je.styleId) {
                    var i = je.styleId;
                    var e = (Math.random() * 100000).toFixed(0);
                    bp["_cbk_si_phpui" + e] = function(ji) {
                        var jh = [];
                        if (ji.result && ji.result["error"] === 0 && ji.content && ji.content["status"] === 0) {
                            jh = jf.parseJson(ji.content["data"]["json"]);
                            jg && jg(jh)
                        } else {
                            jg && jg("default")
                        }
                    }
                    ;
                    bp["_cbk_si_api" + e] = function(ji) {
                        var jh = [];
                        if (ji.status === 0) {
                            if (ji.info) {
                                jh = jf.parseJson(ji.info["json"])
                            } else {
                                jh = jf.parseJson(ji.data["json"])
                            }
                            jg && jg(jh)
                        } else {
                            jg && jg("default")
                        }
                    }
                    ;
                    var T = "";
                    switch (this.environment) {
                    case "jsapi":
                        T = d2.apiHost + "/?qt=custom_map&v=3.0&style_id=" + i + "&type=publish&ak=" + el;
                        T += "&callback=" + eY + "._cbk_si_phpui" + e;
                        break;
                    case "sharing":
                        T += "/apiconsole/custommap/getSharingJson";
                        T += "?styleid=" + i + "&type=edit";
                        T += "&ck=" + eY + "._cbk_si_api" + e;
                        break;
                    case "preview":
                        T += "/apiconsole/custommap/getJson";
                        T += "?styleid=" + i + "&type=edit";
                        T += "&ck=" + eY + "._cbk_si_api" + e;
                        break
                    }
                    ga.load(T)
                } else {
                    jg && jg("default")
                }
            }
        },
        parseJson: function(T) {
            if (T === null || T === "") {
                return []
            }
            var i = {
                t: "featureType",
                e: "elementType",
                v: "visibility",
                c: "color",
                o: "opacity",
                l: "lightness",
                s: "saturation",
                w: "weight",
                z: "level",
                h: "hue",
                f: "fontsize",
                zri: "curZoomRegionId",
                zr: "curZoomRegion"
            };
            var jf = {
                all: "all",
                g: "geometry",
                "g.f": "geometry.fill",
                "g.s": "geometry.stroke",
                l: "labels",
                "l.t.f": "labels.text.fill",
                "l.t.s": "labels.text.stroke",
                "l.t": "labels.text",
                "l.i": "labels.icon",
                "g.tf": "geometry.topfill",
                "g.sf": "geometry.sidefill"
            };
            var je = T.split(",");
            var e = je.map(function(jj) {
                var ji = jj.split("|").map(function(jp) {
                    var jn = i[jp.split(":")[0]];
                    var jm = (jf[jp.split(":")[1]] ? jf[jp.split(":")[1]] : jp.split(":")[1]);
                    switch (jm) {
                    case "poi":
                        jm = "poilabel";
                        break;
                    case "districtlabel":
                        jm = "districtlabel";
                        break
                    }
                    var jo = {};
                    jo[jn] = jm;
                    return jo
                });
                var jg = ji[0];
                var jl = 1;
                if (ji[1]["elementType"]) {
                    jl = 2;
                    ev.extend(jg, ji[1])
                }
                var jk = {};
                for (var jh = jl; jh < ji.length; jh++) {
                    ev.extend(jk, ji[jh])
                }
                return ev.extend(jg, {
                    stylers: jk
                })
            });
            return e
        },
        getStyleUrl: function(i, jh, jf, T, je, jj) {
            this.styleJson = i;
            var e = w.apiHost + "/custom/v2/mapstyle?version=" + 4 + "&ak=" + jh + "&qt=custom_v2&is_all=true&is_new=1&";
            var ji = this.styleJson2styleStringV2(i, T, jj);
            e += "styles=" + encodeURIComponent(ji);
            if (je && je.os && je.sv) {
                e += "&os=" + je.os + "&sv=" + je.sv
            }
            var jg = new Date()["getTime"]();
            e += "&timeStamp=" + jg;
            e += iu()(e);
            return e
        },
        styleJson2styleStringV2: function(e, jm, ji) {
            var jn = {
                featureType: "t",
                elementType: "e",
                visibility: "v",
                color: "c",
                opacity: "o",
                lightness: "l",
                saturation: "s",
                weight: "w",
                level: "z",
                hue: "h",
                fontsize: "f"
            };
            var jo = {
                all: "all",
                geometry: "g",
                "geometry.fill": "g.f",
                "geometry.stroke": "g.s",
                labels: "l",
                "labels.text.fill": "l.t.f",
                "labels.text.stroke": "l.t.s",
                "labels.text": "l.t",
                "labels.icon": "l.i",
                "geometry.topfill": "g.tf",
                "geometry.sidefill": "g.sf"
            };
            var jp = [];
            for (var je = this.map.getMinZoom(); je <= this.map.getMaxZoom(); je++) {
                ji.zoomFrontStyle[je] = {}
            }
            ji.zoomFrontStyle.main = {};
            var T = false;
            for (var je = 0; !!e[je]; je++) {
                var jl = e[je];
                if (this.isOnlyZoomStyler(jl)) {
                    continue
                }
                jm = this.getFrontZoom(jl, jm);
                if ((jl.featureType === "land" || jl.featureType === "all" || jl.featureType === "background") && typeof jl.elementType === "string" && (jl.elementType === "geometry" || jl.elementType === "geometry.fill" || jl.elementType === "all") && jl.stylers && !T) {
                    if (jl.stylers["color"]) {
                        ji.bmapLandColor = jl.stylers["color"]
                    }
                    if (jl.stylers["opacity"]) {
                        ji.bmapLandColor = jl.stylers["opacity"]
                    }
                    if (jl.stylers["visibility"] && jl.stylers["visibility"] === "off") {
                        ji.bmapLandColor = "#00000000"
                    }
                    if (jl.featureType === "land") {
                        T = true
                    }
                }
                if (jl.featureType === "building" && typeof jl.elementType === "string" && jl.elementType === "geometry.fill") {
                    ji.buildingFill = true
                }
                if (jl.featureType === "roadarrow" && jl.elementType === "labels.icon" && jl.stylers) {
                    var jj = jl.stylers["visibility"];
                    ji.zoomFrontStyle[jm]["bmapRoadarrowVisibility"] = jj
                }
                var jf = {};
                ev.extend(jf, jl);
                var jh = jf.stylers;
                delete jf.stylers;
                ev.extend(jf, jh);
                var jg = [];
                for (var jk in jn) {
                    if (jf[jk]) {
                        if (this.isEditorZoomKeys(jk)) {
                            continue
                        }
                        if (jk === "elementType") {
                            jg.push(jn[jk] + ":" + jo[jf[jk]])
                        } else {
                            switch (jf[jk]) {
                            case "poilabel":
                                jf[jk] = "poi";
                                break;
                            case "districtlabel":
                                jf[jk] = "label";
                                break
                            }
                            jg.push(jn[jk] + ":" + jf[jk])
                        }
                    }
                }
                if (jg.length > 2) {
                    jp.push(jg.join("|"))
                }
            }
            return jp.join(",")
        },
        getFrontZoom: function(i, e) {
            var T = i.stylers["level"];
            if (T === undefined) {
                return "main"
            } else {
                return parseInt(T, 10)
            }
        },
        isZoomConfig: function(e) {
            var i = e.stylers["level"];
            if (i === undefined) {
                return false
            } else {
                return true
            }
        },
        isOnlyZoomStyler: function(e) {
            var i = {};
            ev.extend(i, e.stylers);
            delete i.curZoomRegionId;
            delete i.curZoomRegion;
            delete i.level;
            if (ev.isEmptyObject(i)) {
                return true
            } else {
                return false
            }
        },
        isSelectZoom: function(i, e) {
            var T = i.stylers["level"];
            if (T === undefined) {
                return true
            } else {
                if (T === e + "") {
                    return true
                } else {
                    return false
                }
            }
        },
        isEditorZoomKeys: function(e) {
            var i = {
                curZoomRegionId: true,
                curZoomRegion: true
            };
            if (i[e]) {
                return true
            } else {
                return false
            }
        },
        getZoomRegion: function(e, i) {
            var je = e.stylers["level"];
            var T = {};
            ev.extend(T, i);
            if (je === undefined) {
                return T
            } else {
                T[parseInt(je, 10)] = true;
                return T
            }
        },
        onStyleDataBack: function(jf, e, i, je, jh, T) {
            if (jf.status !== 0) {
                return
            }
            if (jf.data.style.length === 3) {
                if (!T.baseFs) {
                    T.baseFs = jf.data.style
                }
                bp.StyleBody = jf.data.style[2]
            } else {
                bp.StyleBody = jf.data.style
            }
            var jg = T.baseFs;
            bp["FeatureStyle" + i] = jg;
            this.updateFrontFeatureStyle(T)
        },
        updateFrontFeatureStyle: function(T) {
            if (T.zoomFrontStyle.main["bmapRoadarrowVisibility"]) {
                for (var e = this.map.getMinZoom(); e <= this.map.getMaxZoom(); e++) {
                    if (!T.zoomFrontStyle[e]["bmapRoadarrowVisibility"]) {
                        T.zoomFrontStyle[e]["bmapRoadarrowVisibility"] = T.zoomFrontStyle.main["bmapRoadarrowVisibility"]
                    }
                }
            }
        }
    };
    var aO = {
        map: null,
        labelCache: {},
        calcDrawMc: function(T, i, e) {
            var je = [];
            switch (i) {
            case "fill":
                je = this.calcFill(T, e);
                break;
            case "line":
                break;
            case "building3d":
                je = this.calcBuilding3d(T, e);
                break
            }
            return je
        },
        calcFill: function(jf, T) {
            var jg = [];
            for (var je = 0; je < jf.length; je = je + 5) {
                var e = this.coordToMc({
                    x: jf[je],
                    y: jf[je + 1]
                }, T.row, T.col, T.mercatorSize, T.baseTileSize);
                jg.push(e[0], e[1])
            }
            return jg
        },
        calcLine: function(jf, T) {
            var jg = [];
            var jh = new Int16Array(jf.buffer);
            for (var je = 0; je < jh.length; je = je + 10) {
                var e = this.coordToMc({
                    x: jh[je] / 10,
                    y: jh[je + 1] / 10
                }, T.row, T.col, T.mercatorSize, T.baseTileSize);
                jg.push(e[0], e[1])
            }
            return jg
        },
        calcBuilding3d: function(jg, T) {
            var jh = [];
            var je = {};
            for (var jf = 0; jf < jg.length / 2; jf = jf + 7) {
                if (jg[jf] === jg[jf - 7] && jg[jf + 1] === jg[jf - 6]) {
                    continue
                }
                if (je[jg[jf].toString() + jg[jf + 1].toString()]) {
                    continue
                }
                je[jg[jf].toString() + jg[jf + 1].toString()] = true;
                var e = this.coordToMc({
                    x: jg[jf],
                    y: jg[jf + 1]
                }, T.row, T.col, T.mercatorSize, T.baseTileSize);
                jh.push(e[0], e[1])
            }
            return jh
        },
        coordToMc: function(jf, je, e, i, T) {
            return [jf.x * (i / T) + e * i, jf.y * (i / T) + je * i]
        },
        addDrawIntoAreaSpots: function(e, jf) {
            if (t.environment !== "customEditor") {
                return
            }
            if (!jf.styleIds) {
                return
            }
            for (var T = 0; T < jf.styleIds.length; T++) {
                var ji = 0;
                if (T > 0) {
                    ji = jf.verticesLength[T - 1]
                }
                end = jf.verticesLength[T];
                var jg = [];
                var je = "";
                if (jf.vertex) {
                    jg = jf.vertex;
                    je = "building3d"
                } else {
                    if (jf.data[0]) {
                        jg = jf.data[0];
                        je = jf.type
                    } else {
                        continue
                    }
                }
                var jh = this.calcDrawMc(jg.slice(ji, end), je, e);
                this.map.addAreaSpot(jh, {
                    userData: {
                        styleId: jf.styleIds[T],
                        type: "mapstyle"
                    }
                })
            }
        },
        addLabelIntoAreaSpots: function(e) {
            if (t.environment !== "customEditor") {
                return
            }
            for (var jf = 0; jf < e.length; jf++) {
                var jg = e[jf];
                for (var je = 0; je < jg.fixedLabel.length; je++) {
                    var T = jg.fixedLabel[je];
                    if (!T._mcBds) {
                        continue
                    }
                    var jh = [T._mcBds[0].lng, T._mcBds[0].lat, T._mcBds[0].lng, T._mcBds[1].lat, T._mcBds[1].lng, T._mcBds[1].lat, T._mcBds[1].lng, T._mcBds[0].lat];
                    if (!this.labelCache[jh.join()]) {
                        this.labelCache[jh.join()] = true;
                        this.map.addAreaSpot(jh, {
                            userData: {
                                styleId: T.styleId,
                                type: "mapstyle",
                                name: T.name
                            }
                        })
                    }
                }
            }
        }
    };
    function b5(i, e, je, T) {
        this.cx = 3 * i;
        this.bx = 3 * (je - i) - this.cx;
        this.ax = 1 - this.cx - this.bx;
        this.cy = 3 * e;
        this.by = 3 * (T - e) - this.cy;
        this.ay = 1 - this.cy - this.by;
        this.p1x = i;
        this.p1y = T;
        this.p2x = je;
        this.p2y = T
    }
    b5.prototype.sampleCurveX = function(e) {
        return ((this.ax * e + this.bx) * e + this.cx) * e
    }
    ;
    b5.prototype.sampleCurveY = function(e) {
        return ((this.ay * e + this.by) * e + this.cy) * e
    }
    ;
    b5.prototype.sampleCurveDerivativeX = function(e) {
        return (3 * this.ax * e + 2 * this.bx) * e + this.cx
    }
    ;
    b5.prototype.solveCurveX = function(e, jj) {
        if (typeof jj === "undefined") {
            jj = 0.000001
        }
        var ji;
        var jh;
        var jf;
        var T;
        var je;
        for (jf = e,
        je = 0; je < 8; je++) {
            T = this.sampleCurveX(jf) - e;
            if (Math.abs(T) < jj) {
                return jf
            }
            var jg = this.sampleCurveDerivativeX(jf);
            if (Math.abs(jg) < 0.000001) {
                break
            }
            jf = jf - T / jg
        }
        ji = 0;
        jh = 1;
        jf = e;
        if (jf < ji) {
            return ji
        }
        if (jf > jh) {
            return jh
        }
        while (ji < jh) {
            T = this.sampleCurveX(jf);
            if (Math.abs(T - e) < jj) {
                return jf
            }
            if (e > T) {
                ji = jf
            } else {
                jh = jf
            }
            jf = (jh - ji) * 0.5 + ji
        }
        return jf
    }
    ;
    b5.prototype.solve = function(e, i) {
        return this.sampleCurveY(this.solveCurveX(e, i))
    }
    ;
    var fY = {};
    function e3(T) {
        var e = {
            duration: 1000,
            fps: 30,
            delay: 0,
            transition: fY.linear,
            dropLastAnimation: false
        };
        if (T) {
            for (var je in T) {
                e[je] = T[je]
            }
        }
        if (T.beginTime) {
            this._beginTime = T.beginTime
        }
        this._callbacks = [];
        this._options = e;
        if (e.delay) {
            var jf = this;
            setTimeout(function() {
                jf._doStart()
            }, e.delay)
        } else {
            this._doStart()
        }
        this._pauseTime = 0
    }
    e3.INFINITE = "INFINITE";
    e3.prototype._doStart = function() {
        if (this._isPausing) {
            var e = performance.now() || new Date().getTime();
            this._pauseTime += e - this._isPausing;
            this._isPausing = undefined
        }
        if (window.requestAnimationFrame) {
            var i = this;
            i._timer = window.requestAnimationFrame(function(T) {
                i._loop(T)
            })
        } else {
            this._beginTime = new Date().getTime();
            if (this._options.duration === e3.INFINITE) {
                this._endTime = null
            } else {
                this._endTime = this._beginTime + this._options.duration
            }
            this._loop()
        }
    }
    ;
    e3.prototype._loop = function(je) {
        var jh = this;
        je = je || new Date().getTime();
        je = je - this._pauseTime;
        if (!this._beginTime) {
            this._beginTime = je
        }
        if (!this._endTime && typeof this._options.duration === "number") {
            this._endTime = this._beginTime + this._options.duration
        }
        if (jh._endTime !== null && je >= jh._endTime) {
            if (jh._options.dropLastAnimation === false) {
                jh._options.render(jh._options.transition(1), 1, je)
            }
            if (typeof jh._options.finish === "function") {
                jh._options.finish(je, this)
            }
            for (var jg = 0, e = jh._callbacks.length; jg < e; jg++) {
                jh._callbacks[jg]()
            }
            return
        }
        var jf;
        if (typeof jh._options.duration === "number") {
            jf = (je - jh._beginTime) / jh._options.duration;
            jh.schedule = jh._options.transition(jf)
        } else {
            jf = je - jh._beginTime;
            jh.schedule = 0
        }
        jh._options.render(jh.schedule, jf, je);
        if (!jh.terminative) {
            if (window.requestAnimationFrame) {
                jh._timer = requestAnimationFrame(function T(i) {
                    jh._loop(i)
                })
            } else {
                jh._timer = setTimeout(function() {
                    jh._loop()
                }, 1000 / jh._options.fps)
            }
        }
    }
    ;
    e3.prototype.stop = function(i, e) {
        this.terminative = true;
        if (this._timer) {
            if (window.cancelAnimationFrame) {
                cancelAnimationFrame(this._timer)
            } else {
                clearTimeout(this._timer)
            }
            this._timer = null;
            if (typeof this._options.onStop === "function") {
                this._options.onStop(e)
            }
        }
        if (i) {
            this._endTime = this._beginTime;
            this._loop()
        }
    }
    ;
    e3.prototype.pause = function() {
        if (!this._isPausing) {
            this.stop();
            this.terminative = undefined;
            this._isPausing = performance.now() || new Date().getTime()
        }
    }
    ;
    e3.prototype.cancel = function() {
        this.stop()
    }
    ;
    e3.prototype.append = function(e) {
        this._callbacks.push(e);
        return this
    }
    ;
    fY = {
        _p1: 1,
        _p2: 1 * 1.525,
        linear: function(e) {
            return e
        },
        reverse: function(e) {
            return 1 - e
        },
        easeInQuad: function(e) {
            return e * e
        },
        easeInCubic: function(e) {
            return Math.pow(e, 3)
        },
        easeInBiquad: function(e) {
            return Math.pow(e, 4)
        },
        easeInBack: function(e) {
            return e * e * ((fY._p1 + 1) * e - fY._p1)
        },
        easeOutQuad: function(e) {
            return -(e * (e - 2))
        },
        easeOutCubic: function(e) {
            return Math.pow((e - 1), 3) + 1
        },
        easeOutBiquad: function(e) {
            return 1 - Math.pow((e - 1), 4)
        },
        easeOutBack: function(e) {
            return ((e = e - 1) * e * ((fY._p1 + 1) * e + fY._p1) + 1)
        },
        easeInOutQuad: function(e) {
            if (e < 0.5) {
                return e * e * 2
            } else {
                return -2 * (e - 2) * e - 1
            }
        },
        easeInOutCubic: function(e) {
            if (e < 0.5) {
                return Math.pow(e, 3) * 4
            } else {
                return Math.pow(e - 1, 3) * 4 + 1
            }
        },
        easeInOutBiquad: function(e) {
            if (e < 0.5) {
                return Math.pow(e, 4) * 8
            } else {
                return 1 - (Math.pow(e - 1, 4) * 8)
            }
        },
        easeInOutSine: function(e) {
            return (1 - Math.cos(Math.PI * e)) / 2
        }
    };
    fY.ease = (function() {
        var e = new b5(0.4,0,0.6,1);
        return function(i) {
            return e.solve(i)
        }
    }
    )();
    fY["ease-in"] = fY.easeInQuad;
    fY["ease-out"] = fY.easeOutQuad;
    var c1 = {
        start: function(jk) {
            var je = jk.el;
            var e = jk.style;
            var i = jk.startValue;
            var jh = jk.endValue;
            var jf = jk.duration || 1400;
            var jg = jk.transition || fY.linear;
            var jj = jk.callback;
            var ji = jh - i;
            var T = jk.unit || "";
            return new e3({
                fps: 60,
                duration: jf,
                transition: jg,
                render: function(jl) {
                    je.style[e] = i + ji * jl + T
                },
                finish: function() {
                    jj && jj()
                }
            })
        }
    };
    function n(jf, T) {
        cM.call(this);
        this.keyframes = jf;
        var e = {
            duration: 1000,
            delay: 0,
            transition: fY.linear,
            interation: 1
        };
        if (T) {
            for (var je in T) {
                e[je] = T[je]
            }
        }
        this._options = e
    }
    n.inherits(cM, "ViewAnimation");
    n.prototype._start = function(jg) {
        var T = this;
        T.map = jg;
        var jf = new fa("onanimationstart");
        T.dispatchEvent(jf);
        this._initStatus(T.map);
        var je = this._options.duration;
        var i = this._options.interation;
        var jh = this._options.transition;
        var ji = 0;
        T.poiStatus = T.map._displayOptions.poi;
        if (T.poiStatus) {
            T.map.setDisplayOptions({
                poi: false
            })
        }
        T.map.viewAnimationTime = new Date().getTime();
        this.animation = new e3({
            duration: je,
            transition: jh,
            start: function(e) {},
            render: function(jj, e) {
                if (jj === 0) {
                    T._initStatus(T.map)
                } else {
                    T._setViewByRate(jj)
                }
            },
            finish: function(jk, jj) {
                if (++ji < i || i === "INFINITE") {
                    var jl = new fa("onanimationiterations");
                    T.dispatchEvent(jl);
                    delete jj._beginTime;
                    delete jj._endTime;
                    jj._doStart()
                } else {
                    var jl = new fa("onanimationend");
                    T.dispatchEvent(jl);
                    delete T.map.viewAnimationTime;
                    T.map.setDisplayOptions({
                        poi: T.poiStatus
                    })
                }
            }
        })
    }
    ;
    n.prototype._getTotalDuration = function(e, i) {
        if (e === e3.INFINITE) {
            return e3.INFINITE
        } else {
            return e * i
        }
    }
    ;
    n.prototype._initStatus = function(e) {
        if (this.keyframes[0]) {
            e.setCenter(this.keyframes[0].center, {
                noAnimation: true
            });
            e.setZoom(this.keyframes[0].zoom, {
                noAnimation: true
            });
            e.setTilt(this.keyframes[0].tilt, {
                noAnimation: true
            });
            e.setHeading(this.keyframes[0].heading, {
                noAnimation: true
            })
        }
    }
    ;
    n.prototype._setViewByRate = function(je) {
        for (var e = 0; e < this.keyframes.length - 1; e++) {
            var jf = this.keyframes[e];
            var T = this.keyframes[e + 1];
            if (je >= jf.percentage && je < T.percentage) {
                this.map.setHeading(this._getHeadingDelta(jf, T, je), {
                    noAnimation: true
                });
                this.map.setTilt(this._getTiltDelta(jf, T, je), {
                    noAnimation: true
                });
                this.map.setCenter(this._getCenterDelta(jf, T, je), {
                    noAnimation: true
                });
                this.map.setZoom(this._getZoomDelta(jf, T, je), {
                    noAnimation: true
                })
            }
        }
    }
    ;
    n.prototype._getHeadingDelta = function(T, i, e) {
        var jf = (e - T.percentage) / (i.percentage - T.percentage);
        var je = T.heading + (i.heading - T.heading) * jf;
        return je
    }
    ;
    n.prototype._getTiltDelta = function(T, i, e) {
        var jf = (e - T.percentage) / (i.percentage - T.percentage);
        var je = T.tilt + (i.tilt - T.tilt) * jf;
        return je
    }
    ;
    n.prototype._getCenterDelta = function(T, i, e) {
        var jf = (e - T.percentage) / (i.percentage - T.percentage);
        var je = T.center.add(i.center.sub(T.center).mult(jf));
        return je
    }
    ;
    n.prototype._getZoomDelta = function(je, T, i) {
        var jf = (i - je.percentage) / (T.percentage - je.percentage);
        var e = je.zoom + (T.zoom - je.zoom) * jf;
        return e
    }
    ;
    n.prototype._pause = function(e) {
        this.animation.pause()
    }
    ;
    n.prototype._continue = function(e) {
        this.animation._doStart()
    }
    ;
    n.prototype._cancel = function(T) {
        T.setDisplayOptions({
            poi: this.poiStatus
        });
        this.animation.cancel();
        delete T.viewAnimationTime;
        var i = new fa("onanimationcancel");
        this.dispatchEvent(i)
    }
    ;
    var co = undefined;
    var eZ = {
        is64Bit: function() {
            if (/Windows/.test(navigator.userAgent)) {
                if (/Win64; x64/.test(navigator.userAgent)) {
                    return true
                } else {
                    if (/WOW64/.test(navigator.userAgent)) {
                        return true
                    } else {
                        return false
                    }
                }
            }
            return true
        },
        isIOS112: function aX(e) {
            return /11_2/.test(navigator.userAgent)
        },
        canUseWebAssembly: function(i) {
            if (co !== undefined) {
                i && i(co);
                return
            }
            if (window.WebAssembly && this.is64Bit()) {
                if (window.disableWebAssembly === true) {
                    co = false;
                    i && i(co)
                } else {
                    if (!cb()) {
                        co = true;
                        i && i(co)
                    } else {
                        if (this.isIOS112()) {
                            co = false;
                            i && i(co)
                        } else {
                            var e = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 133, 128, 128, 128, 0, 1, 96, 0, 1, 127, 3, 130, 128, 128, 128, 0, 1, 0, 4, 132, 128, 128, 128, 0, 1, 112, 0, 0, 5, 131, 128, 128, 128, 0, 1, 0, 1, 6, 129, 128, 128, 128, 0, 0, 7, 145, 128, 128, 128, 0, 2, 6, 109, 101, 109, 111, 114, 121, 2, 0, 4, 109, 97, 105, 110, 0, 0, 10, 138, 128, 128, 128, 0, 1, 132, 128, 128, 128, 0, 0, 65, 42, 11]);
                            WebAssembly.instantiate(e).then(function(T) {
                                co = true;
                                i && i(co)
                            }, function(T) {
                                co = false;
                                i && i(co)
                            })
                        }
                    }
                }
            } else {
                co = false;
                i && i(co)
            }
        }
    };
    var aA = {};
    bp.Utils = aA;
    function i6(e) {
        return e.style
    }
    function hh(i) {
        if (ev.Browser.ie > 0) {
            i.unselectable = "on";
            i.selectstart = function() {
                return false
            }
            ;
            i.onmousedown = function(T) {
                T.preventDefault();
                return false
            }
        } else {
            var e = i6(i);
            e.MozUserSelect = "none";
            e.WebkitUserSelect = "none";
            i.addEventListener("mousedown", function(T) {
                T.preventDefault()
            }, false)
        }
    }
    function aJ(e) {
        return e && e.parentNode && e.parentNode.nodeType !== 11
    }
    function bB(i, e) {
        i.insertAdjacentHTML("beforeEnd", e);
        return i.lastChild
    }
    function fe(T, i) {
        var je = document.createElement("div");
        je.innerHTML = i;
        var e = je.childNodes[0];
        return T.parentNode.insertBefore(e, T)
    }
    function ad(i) {
        i = i || window.event;
        i.stopPropagation ? i.stopPropagation() : i.cancelBubble = true
    }
    function b(i) {
        i = i || window.event;
        i.preventDefault ? i.preventDefault() : i.returnValue = false;
        return false
    }
    function gH(i) {
        ad(i);
        return b(i)
    }
    function ge() {
        var e = document.documentElement;
        var i = document.body;
        if (e && (e.scrollTop || e.scrollLeft)) {
            return [e.scrollTop, e.scrollLeft]
        } else {
            if (i) {
                return [i.scrollTop, i.scrollLeft]
            } else {
                return [0, 0]
            }
        }
    }
    function hz(jf) {
        if (!jf) {
            return
        }
        jf.onload = jf.onerror = null;
        var T = jf.attributes, je, e, jg;
        if (T) {
            e = T.length;
            for (je = 0; je < e; je += 1) {
                jg = T[je].name;
                if (typeof jf[jg] === "function") {
                    jf[jg] = null
                }
            }
        }
        T = jf.children;
        if (T) {
            e = T.length;
            for (je = 0; je < e; je += 1) {
                hz(jf.children[je])
            }
        }
    }
    function fh(i, jh, jg) {
        var jf = jh.lng - jg.lng;
        var je = jh.lat - jg.lat;
        if (jf === 0) {
            return Math.abs(i.lng - jh.lng)
        }
        if (je === 0) {
            return Math.abs(i.lat - jh.lat)
        }
        var T = je / jf;
        var e = jh.lat - T * jh.lng;
        return Math.abs(T * i.lng - i.lat + e) / Math.sqrt(T * T + 1)
    }
    function b2(i, e) {
        if (!i || !e) {
            return
        }
        return Math.round(Math.sqrt(Math.pow(i.x - e.x, 2) + Math.pow(i.y - e.y, 2)))
    }
    function dZ(i, e) {
        if (!i || !e) {
            return 0
        }
        return Math.round(Math.sqrt(Math.pow(i.lng - e.lng, 2) + Math.pow(i.lat - e.lat, 2)))
    }
    function eH(T, i) {
        var e = Math.round((T.x + i.x) / 2);
        var je = Math.round((T.y + i.y) / 2);
        return new eO(e,je)
    }
    function ir(e, T) {
        var i = [];
        T = T || function(jf) {
            return jf
        }
        ;
        for (var je in e) {
            i.push(je + "=" + T(e[je]))
        }
        return i.join("&")
    }
    function bL(T, i, jg) {
        var jh = document.createElement(T);
        if (jg) {
            jh = document.createElementNS(jg, T)
        }
        i = i || {};
        for (var je in i) {
            var jf = {
                "for": "htmlFor",
                "class": "cssClass"
            }[je] || je;
            if (je === "style") {
                jh.style.cssText = i[je];
                continue
            }
            if (je === "class") {
                ev.ac(jh, i[je]);
                continue
            }
            if (jh.setAttribute) {
                jh.setAttribute(jf, i[je])
            } else {
                try {
                    jh[jf] = i[je]
                } catch (jh) {}
            }
        }
        return jh
    }
    function b1(e) {
        if (e.currentStyle) {
            return e.currentStyle
        } else {
            if (e.ownerDocument && e.ownerDocument.defaultView) {
                return e.ownerDocument.defaultView.getComputedStyle(e, null)
            }
        }
    }
    function bH(e) {
        return typeof e === "function"
    }
    function fC(e) {
        return e === void 0
    }
    function iF(e, i) {
        return Object.prototype.hasOwnProperty.call(e, i)
    }
    function f(jf, jg) {
        if (fC(jf.length)) {
            for (var je in jf) {
                if (iF(jf, je)) {
                    jg.call(null, je, jf[je])
                }
            }
        } else {
            var T = jf.length;
            if (T) {
                for (var e = 0; e < T; e++) {
                    jg.call(null, e, jf[e])
                }
            }
        }
    }
    function ak(i, e) {
        if (!e) {
            return i
        }
        f(e, function(T, je) {
            i[T] = je
        });
        return i
    }
    var gr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    function cY(jf) {
        var T = "";
        var jm;
        var jk;
        var ji = "";
        var jl;
        var jj;
        var jh;
        var jg = "";
        var je = 0;
        var e = /[^A-Za-z0-9+/=]/g;
        if (!jf || e.exec(jf)) {
            return jf
        }
        jf = jf.replace(/[^A-Za-z0-9+/=]/g, "");
        do {
            jl = gr.indexOf(jf.charAt(je++));
            jj = gr.indexOf(jf.charAt(je++));
            jh = gr.indexOf(jf.charAt(je++));
            jg = gr.indexOf(jf.charAt(je++));
            jm = (jl << 2) | (jj >> 4);
            jk = ((jj & 15) << 4) | (jh >> 2);
            ji = ((jh & 3) << 6) | jg;
            T = T + String.fromCharCode(jm);
            if (jh !== 64) {
                T = T + String.fromCharCode(jk)
            }
            if (jg !== 64) {
                T = T + String.fromCharCode(ji)
            }
            jm = jk = ji = "";
            jl = jj = jh = jg = ""
        } while (je < jf.length);return T
    }
    function iq(e) {
        return btoa(encodeURIComponent(e))
    }
    function fo(e) {
        return decodeURIComponent(atob(e))
    }
    (function(e) {
        if (!e.Utils) {
            e.Utils = {}
        }
        var i = e.Utils;
        i.format = (function() {
            function T(jh, jg, ji) {
                var jf = ji[+jg];
                return typeof (jf) === "function" ? jf(jg) : jf
            }
            function je(jh, jg, ji) {
                var jk = jg;
                var jl = [];
                var jf = jg.split(":");
                if (jf.length === 2) {
                    jk = jf[0];
                    jl.push(jf[1])
                }
                var jj = typeof (ji[jk]);
                if (jj === "function") {
                    return ji[jk].apply(undefined, jl)
                } else {
                    if (jj === "undefined") {
                        return jh
                    } else {
                        return String(ji[jk])
                    }
                }
            }
            return function(jf, jg) {
                var ji = jg.splice ? T : je;
                var jh = jf.splice ? jf.join("") : jf;
                return jh.replace(/{([a-zA-Z0-9_$:.]+)}/g, function(jk, jj) {
                    return ji(jk, jj, jg)
                })
            }
        }
        )();
        i.ErrorMonitor = function(je, T, jf) {}
        ;
        eZ.canUseWebAssembly(function(T) {
            i.canUseWebAssembly = T
        })
    }
    )(bp);
    function bK() {
        return (cb() || g9())
    }
    function cb() {
        var e = navigator.userAgent;
        if (e.indexOf("iPhone") > -1 || e.indexOf("iPad") > -1) {
            return true
        }
        return false
    }
    function g9() {
        var e = navigator.userAgent;
        if (e.indexOf("Android") > -1) {
            return true
        }
        return false
    }
    function hM(e) {
        return e * Math.PI / 180
    }
    function eG(e) {
        return e / Math.PI * 180
    }
    function bt(e, jf) {
        var je = Math.pow(10, jf);
        if (typeof e === "number") {
            return Math.round(e * je) / je
        }
        for (var T = 0; T < e.length; T++) {
            e[T] = bt(e[T], jf)
        }
        return e
    }
    function bW(T, i, e) {
        if (T < i) {
            T = i
        } else {
            if (T > e) {
                T = e
            }
        }
        return T
    }
    function dM(e, i) {
        while (e < 0) {
            e += i
        }
        return e % i
    }
    function g5(i, e) {
        return (i >= 0 && e >= 0) || (i < 0 && e < 0)
    }
    function G(i) {
        if (i._gl) {
            return i._gl
        }
        var e = {
            alpha: true,
            antialias: false,
            failIfMajorPerformanceCaveat: false,
            preserveDrawingBuffer: false,
            stencil: false
        };
        var T = i.getContext("webgl", e) || i.getContext("experimental-webgl", e);
        i._gl = T;
        return T
    }
    function hK(je, T) {
        for (var e = 0; e < T.length; e++) {
            ev.on(je, T[e], ad)
        }
    }
    function ep(i, T, e) {
        T[e] = i.getUniformLocation(T, e)
    }
    function bN(jf, jg, e, T, i) {
        var je = "";
        switch (i) {
        case "mat4":
            jf.uniformMatrix4fv(jg[e], false, T);
            return;
        case "v3":
            je = "uniform3fv";
            break;
        case "f":
            je = "uniform1f";
            break;
        case "i":
            je = "uniform1i";
            break
        }
        if (je === "") {
            throw "error"
        }
        jf[je](jg[e], T)
    }
    function gQ(jm, e) {
        while (jm < 0) {
            jm += 360
        }
        jm = jm % 360;
        var je = e.width;
        var jl = e.height;
        var jh = je;
        var T = jl;
        if (jm < 90) {
            var i = Math.sin(hM(jm)) * je;
            var jj = Math.sin(hM(jm)) * jl;
            var jk = Math.cos(hM(jm)) * je;
            var jg = Math.cos(hM(jm)) * jl;
            var jh = Math.ceil(jk + jj);
            var T = Math.ceil(i + jg)
        } else {
            if (jm < 180) {
                var jm = jm - 90;
                var i = Math.sin(hM(jm)) * je;
                var jj = Math.sin(hM(jm)) * jl;
                var jk = Math.cos(hM(jm)) * je;
                var jg = Math.cos(hM(jm)) * jl;
                var jh = Math.ceil(i + jg);
                var T = Math.ceil(jk + jj)
            } else {
                if (jm < 270) {
                    var jm = jm - 180;
                    var i = Math.sin(hM(jm)) * je;
                    var jj = Math.sin(hM(jm)) * jl;
                    var jk = Math.cos(hM(jm)) * je;
                    var jg = Math.cos(hM(jm)) * jl;
                    var jh = Math.ceil(jk + jj);
                    var T = Math.ceil(i + jg)
                } else {
                    var jm = jm - 270;
                    var i = Math.sin(hM(jm)) * je;
                    var jj = Math.sin(hM(jm)) * jl;
                    var jk = Math.cos(hM(jm)) * je;
                    var jg = Math.cos(hM(jm)) * jl;
                    var jh = Math.ceil(i + jg);
                    var T = Math.ceil(jk + jj)
                }
            }
        }
        var ji = jh - je;
        var jf = T - jl;
        return [0 - ji / 2, 0 - jf / 2, je + ji / 2, jl + jf / 2]
    }
    function bV(e) {
        if (e.toDataURL() === bV._blankData) {
            return true
        }
        return false
    }
    function P(jf, je, T) {
        var i = [T.lng - jf.lng, T.lat - jf.lat];
        var e = [je.lng - jf.lng, je.lat - jf.lat];
        return i[0] * e[1] - i[1] * e[0]
    }
    function h6(jg, jf, T) {
        var e;
        var jh;
        var je;
        var i;
        if (jg.lng < jf.lng) {
            e = jg.lng;
            je = jf.lng
        } else {
            e = jf.lng;
            je = jg.lng
        }
        if (jg.lat < jf.lat) {
            jh = jg.lat;
            i = jf.lat
        } else {
            jh = jf.lat;
            i = jg.lat
        }
        if (T.lng < e || T.lng > je || T.lat < jh || T.lat > i) {
            return false
        }
        return true
    }
    function ie(ji, jh, jg, je) {
        var jf = P(jg, je, ji);
        var T = P(jg, je, jh);
        var i = P(ji, jh, jg);
        var e = P(ji, jh, je);
        if (jf * T < 0 && i * e < 0) {
            return true
        } else {
            if (jf === 0 && h6(jg, je, ji)) {
                return true
            } else {
                if (T === 0 && h6(jg, je, jh)) {
                    return true
                } else {
                    if (i === 0 && h6(ji, jh, jg)) {
                        return true
                    } else {
                        if (e === 0 && h6(ji, jh, je)) {
                            return true
                        } else {
                            return false
                        }
                    }
                }
            }
        }
    }
    function gT(T, i) {
        var e = i.parentNode;
        if (e.lastChild === i) {
            e.appendChild(T)
        } else {
            e.insertBefore(T, i.nextSibling)
        }
    }
    function ds(jk, jl) {
        if (jl === 0) {
            return jk
        }
        var jj = 0;
        var jh = 0;
        if (!jk) {
            throw "异常"
        }
        if (jk.length === 0) {
            return []
        }
        for (var jf = 1, T = jk.length - 1; jf < T; jf++) {
            var ji = fh(jk[jf], jk[0], jk[jk.length - 1]);
            if (ji > jj) {
                jh = jf;
                jj = ji
            }
        }
        var e = [];
        if (jj >= jl) {
            var jn = jk.slice(0, jh);
            var jm = jk.slice(jh, jk.length);
            var jg = ds(jn, jl);
            var je = ds(jm, jl);
            for (var jf = 0, T = jg.length; jf < T; jf++) {
                e.push(jg[jf])
            }
            for (var jf = 0, T = je.length; jf < T; jf++) {
                e.push(je[jf])
            }
        } else {
            e.push(jk[0]);
            e.push(jk[jk.length - 1])
        }
        return e
    }
    function m(e) {
        if (Math.log2) {
            return Math.log2(e)
        }
        return Math.log(e) / Math.LN2
    }
    function cR(T, i, e) {
        return Math.min(e, Math.max(i, T))
    }
    function aj(e, i) {
        if (!i) {
            return e
        }
        var jg = i[0];
        var jf = i[1];
        var je = i[2];
        var T = i[3];
        var ji = [];
        var jh = [];
        ji[0] = T * e[0] + je * e[2];
        ji[1] = e[1];
        ji[2] = -je * e[0] + T * e[2];
        jh[0] = ji[0];
        jh[1] = jf * ji[1] - jg * ji[2];
        jh[2] = jg * ji[1] + jf * ji[2];
        return jh
    }
    var k = Math.PI / 180;
    var f9 = 180 / Math.PI;
    function e2(T) {
        var i = (T - Date.UTC(2000, 0, 1, 12)) / 86400000 / 36525;
        var e = (d3.utcDay.floor(T) - T) / 86400000 * 360 - 180;
        return [e - eR(i) * f9, dy(i) * f9]
    }
    function eR(je) {
        var jf = bh(je);
        var i = dE(je);
        var T = hH(je);
        var jg = Math.tan(hG(je) / 2);
        jg *= jg;
        return jg * Math.sin(2 * T) - 2 * jf * Math.sin(i) + 4 * jf * jg * Math.sin(i) * Math.cos(2 * T) - 0.5 * jg * jg * Math.sin(4 * T) - 1.25 * jf * jf * Math.sin(2 * i)
    }
    function dy(e) {
        return Math.asin(Math.sin(hG(e)) * Math.sin(bl(e)))
    }
    function bl(e) {
        return i1(e) - (0.00569 + 0.00478 * Math.sin((125.04 - 1934.136 * e) * k)) * k
    }
    function i1(e) {
        return hH(e) + ik(e)
    }
    function dE(e) {
        return (357.52911 + e * (35999.05029 - 0.0001537 * e)) * k
    }
    function hH(i) {
        var e = (280.46646 + i * (36000.76983 + i * 0.0003032)) % 360;
        return (e < 0 ? e + 360 : e) / 180 * Math.PI
    }
    function ik(i) {
        var e = dE(i);
        return (Math.sin(e) * (1.914602 - i * (0.004817 + 0.000014 * i)) + Math.sin(e + e) * (0.019993 - 0.000101 * i) + Math.sin(e + e + e) * 0.000289) * k
    }
    function hG(e) {
        return c7(e) + 0.00256 * Math.cos((125.04 - 1934.136 * e) * k) * k
    }
    function c7(e) {
        return (23 + (26 + (21.448 - e * (46.815 + e * (0.00059 - e * 0.001813))) / 60) / 60) * k
    }
    function bh(e) {
        return 0.016708634 - e * (0.000042037 + 1.267e-7 * e)
    }
    function fD() {
        return window.devicePixelRatio || 1
    }
    function hT(T) {
        var i;
        var e;
        var je;
        if (T >= 0) {
            je = Math.floor(T / 65536) * 65536;
            i = je;
            e = T - je
        } else {
            je = Math.floor(-T / 65536) * 65536;
            i = -je;
            e = T + je
        }
        return [i, e]
    }
    function cj(e) {
        if (e.lng >= 0 && e.lat >= 0) {
            return new cf(e.lng - 10000000,e.lat - 6000000)
        }
        if (e.lng >= 0 && e.lat < 0) {
            return new cf(e.lng - 10000000,e.lat + 6000000)
        }
        if (e.lng < 0 && e.lat >= 0) {
            return new cf(e.lng + 10000000,e.lat - 6000000)
        }
        if (e.lng < 0 && e.lat < 0) {
            return new cf(e.lng + 10000000,e.lat + 6000000)
        }
    }
    var hq = null;
    if (window.performance && window.performance.now) {
        hq = function() {
            return performance.now()
        }
    } else {
        if (Date.now) {
            hq = function() {
                return Date.now()
            }
        } else {
            hq = function() {
                return (new Date).getTime()
            }
        }
    }
    function g4(je, e, i) {
        var T = "mouseWheel";
        if (ev.Platform.macintosh) {
            if (!isNaN(je) && (je < 10 || je !== 120) && (e % 1 === 0 && e < 5)) {
                T = "padScroll"
            }
            if (ev.Browser.firefox && (e % 1 === 0 && e < 5 && i === 0)) {
                T = "padScroll"
            }
        }
        if (ev.Browser.safari && je === 12) {
            T = "mouseWheel"
        }
        return T
    }
    function bC(jn, ji) {
        var jm = jn[0];
        var jl = jn[1];
        var je = false;
        for (var jh = 0, jg = ji.length - 2; jh < ji.length; jh += 2) {
            var jk = ji[jh];
            var jf = ji[jh + 1];
            var jj = ji[jg];
            var T = ji[jg + 1];
            var e = ((jf > jl) !== (T > jl)) && (jm < (jj - jk) * (jl - jf) / (T - jf) + jk);
            if (e) {
                je = !je
            }
            jg = jh
        }
        return je
    }
    function am(jf, jh) {
        var e = jh.length;
        var T = 0;
        var jg = false;
        for (var je = 0; je < e; je++) {
            T = (je === e - 1) ? 0 : T + 1;
            if ((jh[je].lat !== jh[T].lat) && (((jf.lat >= jh[je].lat) && (jf.lat < jh[T].lat)) || ((jf.lat >= jh[T].lat) && (jf.lat < jh[je].lat))) && (jf.lng < (jh[T].lng - jh[je].lng) * (jf.lat - jh[je].lat) / (jh[T].lat - jh[je].lat) + jh[je].lng)) {
                jg = !jg
            }
        }
        return jg
    }
    function dq(T, e, i, je) {
        je = je || 0.4;
        if (T > i) {
            T = Math.pow(T - i + 1, je) + i - 1
        } else {
            if (T < e) {
                T = e - Math.pow(e - T + 1, je) + 1
            }
        }
        return T
    }
    function er(ji) {
        var jg = "";
        for (var T = 0; T < ji.length; T++) {
            var jj = ji.charCodeAt(T) << 1;
            var e = jj.toString(2);
            var jf = e.length;
            var jm = e;
            if (jf < 8) {
                jm = "00000000" + e;
                jm = jm.substr(e.length, 8)
            }
            jg += jm
        }
        var jk = 5 - jg.length % 5;
        var je = [];
        for (var T = 0; T < jk; T++) {
            je[T] = "0"
        }
        jg = je.join("") + jg;
        var jl = [];
        for (var T = 0; T < jg.length / 5; T++) {
            var jj = jg.substr(T * 5, 5);
            var jh = parseInt(jj, 2) + 50;
            jl.push(String.fromCharCode(jh))
        }
        return jl.join("") + jk.toString()
    }
    function iT(T, i) {
        var e = bp.TILE_VERSION || window.TILE_VERSION;
        if (!e || !e[T] || !e[T][i] || !e[T][i].version || !e[T][i].updateDate) {
            e = w.tvc
        }
        return {
            ver: e[T][i].version,
            udt: e[T][i].updateDate
        }
    }
    function bq() {
        var e = bp.MSV || window.MSV;
        if (!e || !e.mapstyle || !e.mapstyle.updateDate || !e.mapstyle.version) {
            e = w.msv
        }
        return {
            ver: e.mapstyle.version,
            udt: e.mapstyle.updateDate
        }
    }
    function db(e, jf) {
        var je = e.slice(0);
        for (var T = 0; T < je.length; T++) {
            je[T] += jf
        }
        return je
    }
    var gl = null;
    function gA(e) {
        if (gl) {
            return
        }
        e.fire(new fa("onloadtile"));
        gl = setTimeout(function() {
            gl = null
        }, 1000)
    }
    function aC() {
        if (y("//map.baidu.com") || y("//maps.baidu.com") || y("//ditu.baidu.com")) {
            return true
        }
        return false
    }
    aA.inMapHost = aC();
    if (typeof window._inMapHost === "boolean") {
        aA.inMapHost = window._inMapHost
    }
    function y(i) {
        var T = window.location;
        var e = document.createElement("a");
        e.href = i;
        return e.hostname === T.hostname && e.port === T.port && e.protocol === T.protocol
    }
    var dx = [72.685732, 0.193351, 136.10888, 54.392257];
    var eu = [72.6892532, 0.1939743381, 136.1168614, 54.392257];
    var s = [72.69566833, 0.1999420909, 136.1232863, 54.39791217];
    var hI = 158;
    var c0 = [98.789081, 122.948721, 107.857301, 118.082148, 119.126627, 128.021934, 79.939914, 99.021873, 119.912937, 122.084572, 127.906381, 130.933385, 106.496057, 108.066113, 119.818772, 126.367919, 111.789929, 119.311401, 100.742164, 102.220151, 99.853589, 100.781289, 97.522631, 98.834615, 99.092638, 99.892947, 122.905967, 123.761867, 123.716213, 125.494726, 123.723977, 124.755034, 125.475833, 126.398284, 125.471687, 126.065118, 130.817003, 133.605851, 127.900156, 128.656536, 128.646633, 129.625389, 132.88057, 134.104549, 117.365548, 119.230813, 116.073074, 117.416898, 114.406274, 116.123791, 116.479038, 119.591534, 110.566812, 111.851324, 74.465162, 79.993155, 82.858046, 91.345214, 85.71485, 98.969834, 127.651377, 129.532029, 129.462275, 130.209769, 133.716214, 134.731053, 134.366834, 135.103133, 130.854579, 131.32966, 115.499125, 117.530421, 115.765224, 116.734157, 108.524336, 110.601747, 121.351282, 124.612037, 126.151954, 127.332751, 91.273562, 95.604179, 79.87318, 82.935667, 76.413314, 78.336484, 78.275229, 79.993668, 83.956612, 85.725267, 85.500637, 89.346601, 97.990127, 98.94176, 106.641956, 108.599215, 111.386259, 111.810312, 111.578597, 111.803167, 115.99273, 117.010413, 116.24461, 116.675246, 119.422198, 119.909078, 120.646056, 121.38098, 120.335038, 120.662183, 124.579855, 125.773243, 126.207803, 126.774849, 95.565331, 102.037736, 95.576121, 96.158028, 95.556699, 97.799055, 91.296205, 93.348146, 93.321994, 94.690522, 89.339313, 90.540241, 82.263039, 82.882528, 78.335615, 80.023512, 76.623947, 78.352608, 73.495149, 74.48155, 74.846872, 76.479412, 91.560058, 94.871116, 88.759515, 89.235995, 83.237883, 83.965264, 82.292123, 83.246813, 81.876477, 83.253307, 80.75212, 81.463265, 86.463409, 88.267232, 102.199623, 104.225963, 112.153727, 116.823265, 108.965663, 113.021145, 111.166575, 117.972799];
    var cZ = [22.548416, 42.276971, 17.227969, 22.7346, 41.292761, 50.741667, 30.365133, 42.324913, 21.701924, 22.69335, 42.4176, 48.936335, 21.429059, 22.648399, 50.650499, 52.914825, 42.20449, 45.199078, 21.13391, 22.568612, 21.441033, 22.583349, 23.73862, 25.298628, 22.00409, 22.563095, 38.97849, 41.338631, 40.287973, 41.330108, 39.732801, 40.343252, 40.966852, 41.323446, 40.719312, 41.05937, 44.869472, 48.009884, 41.336325, 42.443362, 42.008104, 42.434713, 45.873151, 48.205746, 45.132322, 46.784582, 45.133383, 46.392803, 45.148771, 45.740273, 47.478161, 50.064393, 42.216229, 43.461282, 37.014302, 40.662281, 42.219985, 47.31417, 27.726965, 30.466651, 48.911271, 49.642488, 48.831706, 49.434487, 46.941762, 48.37425, 47.651781, 48.463782, 42.851964, 44.905396, 47.598273, 48.438467, 48.409141, 48.901651, 42.22756, 42.906402, 52.821047, 53.578094, 50.701837, 51.654278, 42.292419, 44.392214, 42.295918, 45.385017, 34.680866, 37.027803, 30.743515, 37.066586, 28.245649, 30.406053, 47.270872, 48.497371, 25.238932, 27.778469, 42.215754, 42.540416, 43.427677, 44.689208, 44.685587, 44.994131, 48.878657, 49.318659, 49.281099, 49.624515, 50.710468, 51.306809, 52.90717, 53.331981, 52.903016, 53.107959, 52.900867, 53.250033, 51.638073, 52.400678, 42.229657, 42.691928, 43.061242, 43.891083, 42.663095, 43.074222, 44.37174, 45.180155, 44.375135, 44.974219, 47.3035, 48.053221, 45.352401, 46.807875, 40.563053, 42.040289, 40.581871, 41.405172, 38.516328, 40.178756, 35.790476, 37.02337, 26.825605, 27.761303, 27.197399, 27.74932, 29.147561, 30.37813, 29.570893, 30.062042, 30.045026, 30.380952, 29.998038, 30.385203, 48.487385, 49.16832, 22.395733, 22.598229, 7.441114, 11.501436, 3.767491, 9.000793, 12.642067, 17.406563];
    var bS = [98.795985, 122.960792, 107.867379, 118.093451, 119.139658, 128.035888, 79.948212, 99.029524, 119.923388, 122.094977, 127.918527, 130.94789, 106.50606, 108.076783, 119.8329, 126.382207, 111.803567, 119.324928, 100.749858, 102.227985, 99.860885, 100.788921, 97.529435, 98.841564, 99.100017, 99.90035, 122.917416, 123.774367, 123.728314, 125.507211, 123.736065, 124.767299, 125.488463, 126.410675, 125.484326, 126.07764, 130.830784, 133.620042, 127.912178, 128.668957, 128.658937, 129.638599, 132.894179, 134.119086, 117.379378, 119.244569, 116.086736, 117.431212, 114.420233, 116.137458, 116.492775, 119.605527, 110.579401, 111.86488, 74.468228, 80.001908, 82.867432, 91.353788, 85.721075, 98.976964, 127.664757, 129.546833, 129.476893, 130.22449, 133.730358, 134.745235, 134.381034, 135.1178, 130.868117, 131.34409, 115.513245, 117.544751, 115.779271, 116.748045, 108.536254, 110.614326, 121.365534, 124.626434, 126.165992, 127.347013, 91.281869, 95.611754, 79.879648, 82.945041, 76.413314, 78.345207, 78.275229, 80.002329, 83.956612, 85.734098, 85.510186, 89.356499, 97.997001, 98.948845, 106.653208, 108.610811, 111.400183, 111.824179, 111.592224, 111.817136, 116.00682, 117.024631, 116.258574, 116.689291, 119.436876, 119.922961, 120.659806, 121.395479, 120.349116, 120.676014, 124.59389, 125.787788, 126.221756, 126.788962, 95.572955, 102.046581, 95.583772, 96.165551, 95.564318, 97.806095, 91.30446, 93.356438, 93.330319, 94.698145, 89.349129, 90.548677, 82.268802, 82.892025, 78.335615, 80.032266, 76.625755, 78.361413, 73.498248, 74.490992, 74.846872, 76.488771, 91.563521, 94.878444, 88.768214, 89.244787, 83.247076, 83.974127, 82.29595, 83.256003, 81.885315, 83.26249, 80.760619, 81.472404, 86.470983, 88.276988, 102.207537, 104.234614, 112.164795, 116.833667, 108.965663, 113.032246, 111.166575, 117.983363];
    var bR = [22.551183, 42.284787, 17.227969, 22.738314, 41.300981, 50.749638, 30.368087, 42.332701, 21.705055, 22.696452, 42.426047, 48.944674, 21.432184, 22.651387, 50.657409, 52.92296, 42.212192, 45.206905, 21.137031, 22.57186, 21.444502, 22.586566, 23.741571, 25.301472, 22.006806, 22.56637, 38.985114, 41.346531, 40.295617, 41.338581, 39.740021, 40.351012, 40.974644, 41.331562, 40.726852, 41.067192, 44.877158, 48.018285, 41.344597, 42.451798, 42.016305, 42.443235, 45.880906, 48.214001, 45.140027, 46.792775, 45.141083, 46.400433, 45.156418, 45.748281, 47.485889, 50.071879, 42.223667, 43.469487, 37.019867, 40.668675, 42.226823, 47.321605, 27.72944, 30.469853, 48.919002, 49.650614, 48.840188, 49.443166, 46.949801, 48.382798, 47.660603, 48.472692, 42.859946, 44.913298, 47.605896, 48.445914, 48.41698, 48.909667, 42.23507, 42.914193, 52.8281, 53.585952, 50.709311, 51.662219, 42.29968, 44.399225, 42.302746, 45.391958, 34.680866, 37.03377, 30.743515, 37.07228, 28.245649, 30.408935, 47.277693, 48.504255, 25.241528, 27.780726, 42.223363, 42.548418, 43.435888, 44.696952, 44.693193, 45.00187, 48.886267, 49.326755, 49.288642, 49.632304, 50.717486, 51.314369, 52.914204, 53.33964, 52.910094, 53.115926, 52.908382, 53.258095, 51.64533, 52.408305, 42.236825, 42.699126, 43.068466, 43.898632, 42.670403, 43.082219, 44.379045, 45.187742, 44.382336, 44.981379, 47.310362, 48.06019, 45.359099, 46.814439, 40.569751, 42.047741, 40.587956, 41.41263, 38.519192, 40.185033, 35.790476, 37.029005, 26.825605, 27.763896, 27.199658, 27.751649, 29.150192, 30.381073, 29.573886, 30.065162, 30.047775, 30.384089, 30.001277, 30.388525, 48.494118, 49.173841, 22.398528, 22.601198, 7.441114, 11.505968, 3.767491, 9.005209, 12.642067, 17.410886];
    var Y = 95;
    var cH = [110.3961374, 105.0743788, 96.8991824, 95.61810411, 93.82412598, 91.3892353, 91.38931858, 89.08325955, 87.22469808, 86.26278402, 85.17353, 85.23741211, 82.86627441, 81.90481038, 79.59687147, 80.39829237, 79.93319363, 77.80279948, 75.2557704, 73.49357829, 73.1892532, 73.87758816, 74.4064738, 74.10215224, 75.46409695, 76.77739692, 78.28299615, 78.15499485, 78.37920654, 78.89145345, 79.69282199, 81.19938178, 81.80830295, 83.89093424, 85.94149523, 87.86447266, 89.03414958, 90.05918132, 91.10026937, 92.15733832, 93.74361735, 95.82597331, 97.95655545, 97.12363037, 98.2129739, 99.2068571, 101.6587874, 102.5239084, 102.2356106, 105.0249238, 106.0992342, 107.8617093, 111.6439372, 109.591869, 112.284586, 117.7961157, 118.9495128, 114.2076584, 118.693565, 123.1475225, 122.730705, 120.9361393, 123.4207441, 122.3787782, 122.1385425, 121.5904281, 121.1773763, 120.6805404, 120.2483355, 122.795807, 122.8759077, 121.3060262, 122.1392177, 123.7418799, 126.4177599, 128.5647409, 129.7194884, 131.2259136, 131.9950494, 133.6289931, 135.6168614, 131.3875545, 130.8743365, 128.6303223, 126.0997773, 124.4015375, 122.22161, 119.6586483, 119.7866827, 118.5685878, 116.5177976, 114.819101, 119.0812964, 116.453265, 111.7431171];
    var cF = [43.2190351, 42.38053385, 43.17417589, 44.42226915, 45.09863634, 45.56708116, 47.33599718, 48.68832709, 49.62448486, 48.9482175, 48.4800472, 47.33564399, 47.43948676, 46.03452067, 45.20221788, 43.34563043, 42.32965739, 41.39690972, 40.82972331, 39.95567654, 39.25892877, 38.36098768, 38.05441569, 37.16878445, 36.38899414, 35.36126817, 34.30953451, 32.58503879, 31.56975694, 30.77800266, 30.43559814, 29.7744892, 30.0931977, 28.71103299, 27.70739665, 27.5775472, 27.01096137, 27.77857883, 27.50707954, 26.50328315, 26.70387804, 27.95548557, 27.29428901, 23.64685493, 23.62310601, 21.67493381, 20.77751465, 21.32070991, 22.1824113, 22.31232964, 22.51316054, 16.80037679, 13.19749864, 0.6939743381, 1.541660428, 10.50208252, 15.58926975, 17.89090007, 19.94928467, 22.18490153, 25.37285292, 25.61456434, 30.62532552, 31.08099284, 31.89238173, 32.50092692, 32.80325765, 34.25546956, 35.15486138, 36.90170139, 37.8348272, 37.941604, 38.6480797, 38.96797201, 40.98146918, 41.25573296, 42.07218153, 42.49132813, 44.65259766, 44.69330702, 48.62286865, 48.09383952, 49.19628499, 50.03402317, 53.27678901, 53.62976345, 53.89420546, 52.98933322, 52.01872884, 50.23210259, 50.18807048, 47.49769857, 47.34362712, 46.50502143, 45.24770128];
    var ed = [98.7895, 122.954182, 107.860913, 118.087007, 119.133165, 128.029533, 79.941749, 99.023087, 119.916883, 122.08841, 127.912143, 130.941471, 106.499502, 108.070244, 119.826245, 126.375818, 111.797006, 119.318387, 100.743285, 102.221517, 99.854448, 100.782445, 97.522928, 98.835028, 99.093518, 99.893783, 122.910927, 123.767769, 123.721954, 125.50077, 123.729657, 124.760724, 125.481902, 126.404079, 125.477737, 126.071019, 130.824331, 133.613395, 127.905767, 128.662524, 128.652527, 129.6321, 132.887552, 134.11249, 117.37297, 119.237999, 116.080154, 117.424589, 114.413586, 116.130948, 116.486264, 119.598927, 110.5728, 111.858437, 74.465162, 79.995337, 82.860821, 91.347291, 85.716024, 98.970481, 127.658331, 129.540202, 129.470528, 130.21808, 133.723748, 134.738785, 134.374555, 135.111443, 130.861475, 131.337438, 115.506627, 117.538123, 115.772783, 116.741632, 108.529656, 110.60782, 121.358945, 124.619773, 126.159424, 127.340582, 91.275275, 95.605228, 79.874427, 82.938601, 76.413314, 78.338763, 78.275229, 79.995765, 83.956612, 85.727511, 85.503554, 89.349858, 97.990418, 98.942257, 106.646704, 108.604437, 111.393667, 111.817723, 111.585811, 111.810645, 116.000232, 117.018216, 116.252108, 116.682705, 119.430384, 119.916417, 120.653168, 121.38883, 120.342727, 120.669383, 124.587426, 125.781376, 126.215282, 126.782323, 95.566367, 102.040026, 95.577158, 96.159009, 95.557772, 97.799728, 91.298032, 93.350057, 93.323794, 94.691771, 89.342471, 90.542019, 82.264229, 82.885485, 78.335615, 80.025844, 76.623947, 78.355027, 73.495149, 74.484473, 74.846872, 76.482208, 91.560117, 94.871859, 88.761692, 89.23822, 83.240549, 83.967602, 82.292367, 83.2495, 81.878825, 83.256003, 80.75421, 81.465955, 86.465421, 88.270356, 102.201019, 104.228033, 112.158282, 116.827153, 108.965663, 113.025767, 111.166575, 117.97687];
    var ec = [22.545421, 42.279053, 17.226272, 22.731982, 41.294917, 50.743316, 30.361986, 42.326603, 21.699185, 22.690751, 42.419757, 48.938435, 21.426505, 22.64567, 50.651745, 52.916705, 42.20641, 45.201064, 21.131326, 22.565685, 21.438288, 22.580379, 23.735785, 25.295582, 22.001087, 22.560315, 38.979333, 41.340757, 40.28938, 41.332289, 39.734164, 40.344718, 40.968803, 41.325813, 40.721073, 41.061503, 44.871533, 48.012179, 41.338366, 42.445601, 42.010343, 42.436934, 45.875217, 48.208327, 45.134237, 46.786509, 45.135376, 46.394665, 45.150734, 45.742257, 47.480099, 50.065931, 42.217982, 43.46329, 37.014057, 40.662848, 42.221079, 47.315558, 27.723432, 30.46385, 48.913298, 49.644555, 48.83396, 49.436824, 46.944059, 48.376613, 47.654503, 48.466331, 42.854333, 44.907682, 47.600253, 48.440245, 48.410926, 48.903468, 42.229292, 42.908294, 52.822466, 53.58012, 50.703491, 51.656037, 42.29378, 44.393379, 42.296912, 45.385809, 34.679282, 37.027699, 30.740622, 37.066377, 28.241967, 30.403134, 47.271949, 48.49848, 25.235818, 27.774976, 42.217425, 42.542102, 43.429763, 44.691016, 44.687044, 44.995758, 48.880431, 49.320551, 49.282865, 49.626267, 50.711607, 51.308382, 52.908547, 53.333963, 52.904419, 53.109706, 52.902338, 53.251938, 51.639701, 52.402205, 42.231045, 42.693581, 43.062756, 43.892771, 42.664519, 43.075927, 44.372942, 45.1815, 44.376327, 44.975476, 47.304623, 48.054453, 45.353174, 46.808493, 40.563653, 42.041556, 40.582164, 41.4064, 38.51618, 40.179105, 35.789745, 37.023144, 26.825402, 27.757641, 27.193806, 27.745766, 29.144229, 30.375186, 29.567889, 30.059102, 30.041938, 30.378006, 29.995047, 30.382338, 48.48834, 49.169021, 22.392816, 22.595333, 7.439914, 11.500161, 3.766676, 9.000793, 12.640512, 17.406563];
    var e9 = 3000;
    var gd = 0.00002;
    var gc = 0.000003;
    var h3 = 0.0174532925194;
    var gW = 0.0065;
    var gV = 0.006;
    var dj = 40000;
    var e0 = 0;
    var il = 1;
    var ar = 2;
    var hj = 3;
    var eT = 4;
    var gD = 1e-10;
    var hP = 6370996.81;
    var fc = 100000000;
    function gL(T, jf, i, je) {
        var e = arguments.length;
        this.ll = {};
        this.ru = {};
        if (e === 0) {} else {
            if (e === 4) {
                this.normalize(T, jf, i, je)
            }
        }
    }
    gL.prototype.contains = function(e) {
        if (e.lng > this.ll.lng && e.lng < this.ru.lng && e.lat > this.ll.lat && e.lat < this.ru.lat) {
            return hj
        }
        if (Math.abs(e.lng - this.ll.lng) < gD || Math.abs(e.lng - this.ru.lng) < gD || Math.abs(e.lat - this.ll.lat) < gD || Math.abs(e.y - this.ru.lat) > gD) {
            return ar
        }
        return e0
    }
    ;
    gL.prototype.normalize = function(i, je, e, T) {
        if (i > e) {
            this.ll.lng = e;
            this.ru.lng = i
        } else {
            this.ll.lng = i;
            this.ru.lng = e
        }
        if (je > T) {
            this.ll.lat = T;
            this.ru.lat = je
        } else {
            this.ll.lat = je;
            this.ru.lat = T
        }
    }
    ;
    function d4(i, je, e, T) {
        this.sp = {
            lng: i,
            lat: je
        };
        this.ep = {
            lng: e,
            lat: T
        };
        this.mbr = new gL(i,je,e,T)
    }
    function hr(je, e, jg, jf) {
        for (var T = 0; T < jf; T = T + 2) {
            if (je.lng >= e[T] && je.lng <= e[T + 1] && je.lat >= jg[T] && je.lat <= jg[T + 1]) {
                return true
            }
        }
        return false
    }
    function fI(jj) {
        var i = jj.lng;
        var ji = jj.lat;
        var je = Math.sqrt(i * i + ji * ji);
        var jg = Math.atan2(ji, i);
        var T = je + fS(ji);
        var jf = jg + fR(i);
        var e = T * Math.cos(jf);
        var jh = T * Math.sin(jf);
        return {
            lng: e + gW,
            lat: jh + gV
        }
    }
    function aR(jj) {
        var i = jj.lng - gW;
        var ji = jj.lat - gV;
        var je = Math.sqrt(i * i + ji * ji);
        var jg = Math.atan2(ji, i);
        var T = je - fS(ji);
        var jf = jg - fR(i);
        var e = T * Math.cos(jf);
        var jh = T * Math.sin(jf);
        return {
            lng: e,
            lat: jh
        }
    }
    function fS(e) {
        return Math.sin(e * e9 * h3) * gd
    }
    function fR(e) {
        return Math.cos(e * e9 * h3) * gc
    }
    function al(T, i, e) {
        return ((i.lng - T.lng) * (e.lat - T.lat) - (e.lng - T.lng) * (i.lat - T.lat))
    }
    function g1(i, e) {
        return Math.abs(i - e) <= gD
    }
    function fZ(je, T) {
        var i = je.lat * h3;
        var jj = je.lng * h3;
        var e = T.lat * h3;
        var ji = T.lng * h3;
        var jg = Math.cos(i) * Math.cos(e);
        var jf = Math.cos(jj) * Math.cos(ji);
        var jl = Math.sin(i) * Math.sin(e);
        var jk = Math.sin(jj) * Math.sin(ji);
        var jm = jg * jf + jg * jk + jl;
        if (jm < -1) {
            jm = -1
        } else {
            if (jm > 1) {
                jm = 1
            }
        }
        var jh = Math.acos(jm) * hP;
        return jh
    }
    function g(ji, jh) {
        var i = ji.lat * h3;
        var e = jh.lat * h3;
        var je = ji.lng * h3;
        var T = jh.lng * h3;
        var jg = i - e;
        var jf = je - T;
        var jj = Math.sin(jg / 2) * Math.sin(jg / 2) + Math.cos(i) * Math.cos(e) * Math.sin(jf / 2) * Math.sin(jf / 2);
        return 2 * Math.asin(Math.sqrt(jj)) * hP
    }
    function fX(jj, T) {
        var jl = br(jj, T);
        var jk = 180;
        var ji = 90;
        var jh = -180;
        var jf = -90;
        var jg = T.sp;
        var je = T.ep;
        jk = jg.lng < je.lng ? jg.lng : je.lng;
        ji = jg.lat < je.lat ? jg.lat : je.lat;
        jh = jg.lng < je.lng ? jg.lng : je.lng;
        jf = jg.lat < je.lat ? jg.lat : je.lat;
        if (jl.lng <= jh && jl.lng >= jk && jl.lng <= jf && jl.lat >= ji) {
            return fZ(jj, jl)
        } else {
            var i = g(jj, T.sp);
            var e = g(jj, T.ep);
            return i < e ? i : e
        }
    }
    function aS(i, e) {}
    function bv(i, je, e, T) {
        return Math.sqrt((i - e) * (i - e) + (je - T) * (je - T))
    }
    function br(jp, jh) {
        var jg = jp.lng;
        var jo = jp.lat;
        var jf = jh.sp.lng;
        var jn = jh.sp.lat;
        var T = jh.ep.lng;
        var jl = jh.ep.lat;
        var jm = jl - jn;
        var jk = jf - T;
        if (g1(jm, 0) && g1(jk, 0)) {
            return jh.sp
        }
        var jj = T * jn - jf * jl;
        var ji = jk * jg - jm * jo;
        var e = jm * jm - jk * jk;
        var je = jk * ji - jm * jj;
        var i = jm * ji + jk * jj;
        return {
            lng: je / e,
            lat: -i / e
        }
    }
    function bz(je) {
        var T = 0;
        for (var e = 0; e < Y; ++e) {
            if (cF[e] <= je.lat) {
                if (cF[(e + 1) % Y] > je.lat) {
                    if (al({
                        lng: cH[e],
                        lat: cF[e]
                    }, {
                        lng: cH[(e + 1) % Y],
                        lat: cF[(e + 1) % Y]
                    }, je) > 0) {
                        ++T
                    }
                }
            } else {
                if (cF[(e + 1) % Y] <= je.lat) {
                    if (al({
                        lng: cH[e],
                        lat: cF[e]
                    }, {
                        lng: cH[(e + 1) % Y],
                        lat: cF[(e + 1) % Y]
                    }, je) < 0) {
                        --T
                    }
                }
            }
        }
        return T === 0 ? e0 : hj
    }
    function iW(je) {
        var jh = {};
        if (je.lng < eu[0] - 0.4 || je.lat < eu[1] - 0.4 || je.lng > eu[2] + 0.4 || je.lat > eu[3] + 0.4) {
            jh.lng = je.lng;
            jh.lat = je.lat;
            return jh
        } else {
            if (hr(je, ed, ec, hI)) {
                jh = fI(je);
                return jh
            }
        }
        var e = 0;
        var jk = dj;
        var T = 0;
        var ji = new gL();
        var jj = 1;
        if (bz(je) === e0) {
            for (var jg = 0; jg < Y; ++jg) {
                var jf = new d4(cH[jg],cF[jg],cH[(jg + 1) % Y],cF[(jg + 1) % Y]);
                ji.ll.lng = jf.mbr.ll.lng - 0.5;
                ji.ll.lat = jf.mbr.ll.lat - 0.5;
                ji.ru.lng = jf.mbr.ru.lng + 0.5;
                ji.ru.lat = jf.mbr.ru.lat + 0.5;
                if (ji.contains(je) === e0) {
                    continue
                }
                T = fX(je, jf);
                if (T < jk) {
                    jk = T
                }
            }
            if (jk < dj) {
                e = (dj - jk) / dj;
                jj = 2
            }
        } else {
            jj = 3;
            e = 1
        }
        var jl = fI(je);
        jh = {
            lng: je.lng + (jl.lng - je.lng) * e,
            lat: je.lat + (jl.lat - je.lat) * e
        };
        return jh
    }
    function ew(i) {
        var T = {};
        if (i.lng < s[0] - 0.4 || i.lat < s[1] - 0.4 || i.lng > s[2] + 0.4 || i.lat > s[3] + 0.4) {
            T.lng = i.lng;
            T.lat = i.lat;
            return T
        } else {
            if (hr(i, bS, bR, hI)) {
                T = aR(i);
                return T
            }
        }
        var e = iW(i);
        if (i.lng === e.lng && i.lat === e.lng) {
            T.lng = i.lng;
            T.lat = i.lat;
            return T
        }
        return decryptPt1(i, iW)
    }
    function hF(i, e) {
        if (e === 3 && i instanceof cf) {
            var T = iW(i);
            return new cf(T.lng,T.lat)
        } else {
            return i
        }
    }
    function ef(i, e) {
        if (e === 3 && i instanceof cf) {
            var T = ew(i);
            return new cf(T.lng,T.lat)
        } else {
            if (e === 5 && i instanceof cf) {
                return new cf(i.lng,i.lat)
            } else {
                return i
            }
        }
    }
    function l(jg) {
        var jh = JSON.stringify(jg);
        var jf = 0, T, je, e;
        if (jh.length === 0) {
            return jf
        }
        for (T = 0,
        e = jh.length; T < e; T++) {
            je = jh.charCodeAt(T);
            jf = ((jf << 5) - jf) + je;
            jf |= 0
        }
        return jf
    }
    function cI() {
        var i = new Date().getTime();
        var e = "xxxyxxxy".replace(/[xy]/g, function(je) {
            var T = (i + Math.random() * 16) % 16 | 0;
            i = Math.floor(i / 16);
            return (je == "x" ? T : (T & 3 | 8)).toString(16)
        });
        return e
    }
    function iu() {
        var T = function(jv, ju) {
            var jt = {
                "\x61\x63\x64\x68\x78": function(jA, jz) {
                    return jA !== jz
                },
                "\x63\x61\x68\x61\x65": "\x6c\x6d\x61",
                "\x69\x68\x6d\x64\x61": function(jA, jz) {
                    return jA < jz
                },
                "\x6c\x61\x68\x65\x69": "\x61\x64\x64",
                "\x65\x68\x78\x69\x64": "\x69\x6d\x61",
                "\x78\x68\x6c\x65\x64": "\x6d\x69\x61",
                "\x6d\x68\x68\x6c\x78": function(jA, jz) {
                    return jA + jz
                },
                "\x68\x78\x6d\x63\x78": function(jA, jz) {
                    return jA(jz)
                },
                "\x64\x61\x63\x61\x6c": function(jA, jz) {
                    return jA(jz)
                },
                "\x6c\x61\x61\x64\x69": "\x43\x68\x61\x72",
                "\x63\x61\x69\x68\x63": function(jA, jz) {
                    return jA + jz
                },
                "\x64\x6c\x6c\x6d\x6d": function(jB, jA, jz) {
                    return jB(jA, jz)
                },
                "\x63\x63\x6d\x64\x68": function(jz, jB, jA) {
                    return jz(jB, jA)
                }
            };
            var js = "\x31\x2e\x31\x2e\x32";
            function jr(jF, jE) {
                var jD = "\x6d\x69\x61";
                while (jt["\x61\x63\x64\x68\x78"](jD, "\x69\x63\x61\x6c")) {
                    switch (jD) {
                    case "\x61\x64\x64":
                        return jA;
                    case jt["\x63\x61\x68\x61\x65"]:
                        for (var jC = 0; jt["\x69\x68\x6d\x64\x61"](jC, jz); jC++) {
                            var jB = jE(jF[jC]);
                            jA["\x70\x75\x73\x68"](jB)
                        }
                        jD = jt["\x6c\x61\x68\x65\x69"];
                        break;
                    case jt["\x65\x68\x78\x69\x64"]:
                        var jA = [];
                        jD = "\x6c\x6d\x61";
                        break;
                    case jt["\x78\x68\x6c\x65\x64"]:
                        var jz = jF["\x6c\x65\x6e\x67\x74\x68"];
                        jD = jt["\x65\x68\x78\x69\x64"];
                        break
                    }
                }
            }
            var jq, jp, jo, jn, jm, jl = decodeURIComponent, jk = jt["\x6c\x61\x61\x64\x69"], jj = "";
            var ji = [T];
            jq = "\x64\x65";
            jp = "\x66\x72";
            jo = "\x6f";
            jm = jt["\x6d\x68\x68\x6c\x78"](jt["\x63\x61\x69\x68\x63"](jp, jo), "\x6d");
            jn = "\x43\x6f" + jq;
            var jh = function(jz) {
                return jt["\x6d\x68\x68\x6c\x78"](jz, jj)["\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72"][jm + jk + jn](jz)
            };
            var jg = function(jz) {
                return jr(jz, function(jA) {
                    return jt["\x68\x78\x6d\x63\x78"](jh, jA)
                })
            };
            var jf = jg["\x63\x61\x6c\x6c"](jh, [39, 34, 37, 96, 60, 120, 97, 65, 98, 66, 99, 67, 100, 68, 101, 69, 102, 70, 103, 110, 109, 111, 112, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);
            var je = jt["\x64\x6c\x6c\x6d\x6d"](jr, [28782, 27702, 26416, 25167, 24183], function(jz) {
                return jl(jz)
            });
            var jy = jg["\x63\x61\x6c\x6c"](je, [22354, 22749, 24415, 23346, 22257, 22688, 24306, 25174, 23595, 25547, 22984, 25690, 22212, 27547, 21594, 27210, 23090, 29193, 22394, 29368, 29532, 29459, 29530, 24146, 24500, 26352, 27441, 28788, 29370, 27673, 26925, 25249, 24430])
              , jx = {};
            je = jg(je);
            var jw = new RegExp(je["\x6a\x6f\x69\x6e"]("\x7c"));
            for (var jq = 0; jt["\x69\x68\x6d\x64\x61"](jq, jf["\x6c\x65\x6e\x67\x74\x68"]); jq++) {
                jx[jy[jq]] = jf[jq]
            }
            ju = jt["\x63\x63\x6d\x64\x68"](jr, ju["\x73\x70\x6c\x69\x74"](jj), function(jz) {
                return jx[jz] || jz
            })["\x6a\x6f\x69\x6e"](jj);
            return jr(ju["\x73\x70\x6c\x69\x74"](jw), function(jz) {
                return jt["\x64\x61\x63\x61\x6c"](jl, jz)
            })
        }(this, "\u56c4\x6c\u735c\u6730\u5ef2\u5ef2\x68\u5e77\u59c8\u5ef2\x69\u624f\x69\u58a0\u545a\x69\u56c4\u6730\u59c8\x6c\u5ef2\u5ef2\u545a\u706e\x73\x75\u5c2b\x73\x74\x72\u6730\x69\u72b8\u56c4\u545a\u58a0\x4f\u5a32\u6c36\x68\x6c\u545a\u5ef2\u5ef2\u6c36\u7209\u72ba\x4c\u66f0\x4f\u6c19\x52\u6c19\u6256\u6b9b\u62a1\u5f6e\u5f6e\u5e52\x4f\u6730\x48\u5e52\u6256\u5f6e\x50\u62a1\x50\u692d\x59\u6c19\u6256\u63cb\x51\x4f\u5e52\u5e77\x6c\x69\u5ef2\u5ef2\x68\u5e77\u5f5f\u66f0\u6c19\x73\x69\u577a\u72b8\u5f5f\u6b31\u6b9b\u6730\x73\x75\u5c2b\x73\x74\x72\x69\u72b8\u577a\u6c36\x6c\u545a\u72b8\u577a\x74\x68\u5e77\x68\u5ef2\u735c\u545a\u545a\u706e\u56c4\u58a0\u58a0\x6c\u6c36\u545a\x68\x69");
        (function(jg, jf) {
            var je = function(jh) {
                while (--jh) {
                    jg.push(jg.shift())
                }
            };
            je(++jf)
        }(T, 287));
        var i = function(jg, jf) {
            jg = jg - 0;
            var je = T[jg];
            return je
        };
        function e(jk) {
            var jj = {
                "\x69\x78\x65\x69\x64": i("0x0"),
                "\x63\x6c\x61\x61\x65": i("0x1"),
                "\x68\x6c\x65\x61\x61": i("0x2"),
                "\x65\x6c\x63\x65\x68": "\x65\x65\x64",
                "\x6c\x69\x61\x61\x68": i("0x3"),
                "\x68\x61\x6d\x65\x65": function(jm, jl) {
                    return jm(jl)
                }
            };
            var ji = i("0x4");
            while (ji !== jj[i("0x5")]) {
                switch (ji) {
                case jj[i("0x6")]:
                    var jh = jk[i("0x7")](jk[i("0x8")]("\x3f") + 1);
                    ji = jj[i("0x9")];
                    break;
                case i("0x4"):
                    var jg = i("0xa");
                    ji = jj["\x65\x6c\x63\x65\x68"];
                    break;
                case "\x65\x65\x64":
                    var jf = i("0xb");
                    ji = jj[i("0x6")];
                    break;
                case jj[i("0xc")]:
                    return i("0xd") + je[i("0xe")](je[i("0xf")] - 12);
                case "\x64\x6c\x6d":
                    var je = jj[i("0x10")](md5, md5(jh + jg) + jf);
                    ji = jj[i("0xc")];
                    break
                }
            }
        }
        return e
    }
    function gn() {}
    ev.extend(gn, {
        Request: {
            INITIAL: -1,
            WAITING: 0,
            LOADED: 1,
            COMPLETED: 2
        },
        Dependency: {
            poly: ["marker"],
            layer: ["poly"],
            hotspot: ["poly"],
            infowindow: ["marker", "hotspot"],
            simpleInfowindow: ["marker"],
            tools: ["marker", "poly"],
            mapgl: ["glcommon", "poly"],
            earth: ["glcommon"],
            control: ["scommon"],
            scommon: [],
            localSearch: ["scommon"],
            otherSearch: ["scommon"],
            route: ["scommon"],
            buslineSearch: ["route"],
            autocomplete: ["scommon"]
        },
        MD5Mapping: {
            control: "jm21i5",
            marker: "lcxdao",
            poly: "ibjvsi",
            layer: "$layer$",
            infowindow: "djtrd5",
            simpleInfowindow: "rwmmjl",
            hotspot: "gfozxx",
            menu: "wi5gto",
            tools: "ux4dlc",
            oppc: "mzhnhm",
            oppcgl: "kvtxps",
            mapgl: "1spgfm",
            markeranimation: "jbu5pq",
            earth: "mkhvfw",
            glcommon: "5wjhyo",
            localSearch: "bpudxf",
            scommon: "qkhitw",
            otherSearch: "debzkd",
            route: "11qctn",
            buslineSearch: "y25lmr",
            autocomplete: "nxfccl"
        },
        Config: {
            //改 baseUrl: w.apiHost + "/getmodules?v=1.0&type=webgl",
			baseUrl: w.apiHost + "/modules/",
            jsModPath: (aA.inMapHost ? "" : w.mapHost) + "/res/newui/",
            timeout: 5000
        },
        delayFlag: false,
        Module: {
            modules: {},
            modulesNeedToLoad: []
        },
        _getMd5ModsStr: function(jg) {
            var jf = [];
            for (var ji = 0, T = jg.length; ji < T; ji++) {
                var jh = jg[ji];
                var e = this.MD5Mapping[jh];
                var je = "$" + jh + "$";
                if (e !== je) {
                    jf.push(jh + "_" + e)
                }
            }
            return jf.join(",")
        },
        load: function(i, jg, je) {
            var e = this.getModuleInfo(i);
            if (e.status === this.Request.COMPLETED) {
                if (je === true) {
                    jg()
                }
            } else {
                if (e.status === this.Request.INITIAL) {
                    this.combine(i);
                    this.addToLoadQueue(i);
                    var T = this;
                    if (T.delayFlag === false) {
                        T.delayFlag = true;
                        setTimeout(function() {
							//改
                            //var jh = T.Config.baseUrl + "&mod=" + T._getMd5ModsStr(T.Module.modulesNeedToLoad);
							var hS=T._getMd5ModsStr(T.Module.modulesNeedToLoad);
							for(hV=0,T_index=hS.split(",");hV<T_index.length;hV++){
								if(bmapcfg.debug==true){
									console.log( "%c原JS插件:https://api.map.baidu.com/getmodules?v=1.0&type=webgl&mod="+T_index[hV] + "\n%c ➡️ \n" + "%c现JS插件:"+T.Config.baseUrl +T_index[hV]+".js\n", 'color: #fadfa3; background: #030307;', 'color: red;', 'color: #fadfa3; background: #030307;');
								}
							    var jh=T.Config.baseUrl +T_index[hV]+".js";
								ga.load(jh);
							}
                            T.Module.modulesNeedToLoad.length = 0;
                            T.delayFlag = false
                        }, 1)
                    }
                    e.status = this.Request.WAITING;
                    function jf(jj) {
                        var ji = T.getModuleInfo(i);
                        if (ji.status !== T.Request.COMPLETED) {
                            if (window.map) {
                                var jh = new fa("onmod_timeout");
                                jh.timeout = jj / 1000;
                                jh.moduleName = i;
                                window.map.fire(jh)
                            }
                        }
                    }
                    setTimeout(jf, this.Config.timeout, this.Config.timeout);
                    setTimeout(jf, this.Config.timeout * 2, this.Config.timeout * 2)
                }
                if (jg) {
                    e.callbacks.push(jg)
                }
            }
        },
        combine: function(e) {
            if (e && this.Dependency[e]) {
                var je = this.Dependency[e];
                for (var T = 0; T < je.length; T++) {
                    this.combine(je[T]);
                    if (!this.Module.modules[je[T]]) {
                        this.addToLoadQueue(je[T])
                    }
                }
            }
        },
        addToLoadQueue: function(e) {
            var i = this.getModuleInfo(e);
            if (i.status === this.Request.INITIAL) {
                i.status = this.Request.WAITING;
                this.Module.modulesNeedToLoad.push(e)
            }
        },
        run: function(T, je) {
            var ji = this.getModuleInfo(T);
            var jl = this.Dependency[T];
            if (jl) {
                for (var jg = 0; jg < jl.length; jg++) {
                    var jh = this.getModuleInfo(jl[jg]);
                    if (jh.status !== this.Request.COMPLETED) {
                        jh.modsNeedToRun.push({
                            name: T,
                            code: je
                        });
                        return
                    }
                }
            }
            try {
                eval(je)
            } catch (jj) {
                return
            }
            ji.status = this.Request.COMPLETED;
            for (var jg = 0, jf = ji.callbacks.length; jg < jf; jg++) {
                ji.callbacks[jg]()
            }
            ji.callbacks.length = 0;
            for (jg = 0; jg < ji.modsNeedToRun.length; jg++) {
                var jk = ji.modsNeedToRun[jg];
                this.run(jk.name, jk.code)
            }
            ji.modsNeedToRun.length = 0
        },
        getModuleInfo: function(i) {
            var e;
            if (!this.Module.modules[i]) {
                this.Module.modules[i] = {
                    status: this.Request.INITIAL,
                    callbacks: [],
                    modsNeedToRun: []
                }
            }
            e = this.Module.modules[i];
            return e
        }
    });
    window._jsload = function(jf, jg) {
        var i = gn.getModuleInfo(jf);
        i.status = gn.Request.LOADED;
        if (jg !== "") {
            gn.run(jf, jg)
        } else {
            if (window.map) {
                var e = new fa("ongetmodules_fail");
                e.moduleName = jf;
                window.map.fire(e)
            }
            var T = document.createElement("script");
            var je = gn.MD5Mapping[jf];
            T.src = gn.Config.jsModPath + jf + "_" + je + ".js";
            document.getElementsByTagName("head")[0].appendChild(T)
        }
    }
    ;
    function cD() {
        this._timeData = {}
    }
    var bn;
    if (typeof window !== "undefined") {
        bn = window
    } else {
        bn = self
    }
    cD.prototype.mark = function(e) {
        this._timeData[e] = this._getTime()
    }
    ;
    cD.prototype.getMark = function(e) {
        return this._timeData[e]
    }
    ;
    cD.prototype.getTime = function(i, e) {
        return parseFloat((this._timeData[e] - this._timeData[i]).toFixed(2))
    }
    ;
    cD.prototype.print = function() {}
    ;
    cD.prototype.clear = function() {
        this._timeData = {}
    }
    ;
    if (bn.performance && bn.performance.now) {
        cD.prototype._getTime = function() {
            return performance.now()
        }
    } else {
        cD.prototype._getTime = function() {
            return Date.now()
        }
    }
    !function(i, T) {
        T(i.d3 = i.d3 || {})
    }(window, function(jR) {
        function j9(kg, kh, T, kf) {
            function e(i) {
                return kg(i = new Date(+i)),
                i
            }
            return e.floor = e,
            e.ceil = function(i) {
                return kg(i = new Date(i - 1)),
                kh(i, 1),
                kg(i),
                i
            }
            ,
            e.round = function(i) {
                var ki = e(i)
                  , kj = e.ceil(i);
                return kj - i > i - ki ? ki : kj
            }
            ,
            e.offset = function(i, ki) {
                return kh(i = new Date(+i), null == ki ? 1 : Math.floor(ki)),
                i
            }
            ,
            e.range = function(kj, i, ki) {
                var kk = [];
                if (kj = e.ceil(kj),
                ki = null == ki ? 1 : Math.floor(ki),
                !(i > kj && ki > 0)) {
                    return kk
                }
                do {
                    kk.push(new Date(+kj))
                } while (kh(kj, ki),
                kg(kj),
                i > kj);return kk
            }
            ,
            e.filter = function(i) {
                return j9(function(ki) {
                    for (; kg(ki),
                    !i(ki); ) {
                        ki.setTime(ki - 1)
                    }
                }, function(ki, kj) {
                    for (; --kj >= 0; ) {
                        for (; kh(ki, 1),
                        !i(ki); ) {}
                    }
                })
            }
            ,
            T && (e.count = function(i, ki) {
                return jT.setTime(+i),
                jX.setTime(+ki),
                kg(jT),
                kg(jX),
                Math.floor(T(jT, jX))
            }
            ,
            e.every = function(i) {
                return i = Math.floor(i),
                isFinite(i) && i > 0 ? i > 1 ? e.filter(kf ? function(ki) {
                    return kf(ki) % i === 0
                }
                : function(ki) {
                    return e.count(0, ki) % i === 0
                }
                ) : e : null
            }
            ),
            e
        }
        function jY(e) {
            return j9(function(i) {
                i.setDate(i.getDate() - (i.getDay() + 7 - e) % 7),
                i.setHours(0, 0, 0, 0)
            }, function(i, T) {
                i.setDate(i.getDate() + 7 * T)
            }, function(i, T) {
                return (T - i - (T.getTimezoneOffset() - i.getTimezoneOffset()) * jS) / j6
            })
        }
        function jQ(e) {
            return j9(function(i) {
                i.setUTCDate(i.getUTCDate() - (i.getUTCDay() + 7 - e) % 7),
                i.setUTCHours(0, 0, 0, 0)
            }, function(i, T) {
                i.setUTCDate(i.getUTCDate() + 7 * T)
            }, function(i, T) {
                return (T - i) / j6
            })
        }
        var jT = new Date
          , jX = new Date
          , j4 = j9(function() {}, function(i, T) {
            i.setTime(+i + T)
        }, function(i, T) {
            return T - i
        });
        j4.every = function(e) {
            return e = Math.floor(e),
            isFinite(e) && e > 0 ? e > 1 ? j9(function(i) {
                i.setTime(Math.floor(i / e) * e)
            }, function(i, T) {
                i.setTime(+i + T * e)
            }, function(i, T) {
                return (T - i) / e
            }) : j4 : null
        }
        ;
        var kd = j4.range
          , kb = 1000
          , jS = 60000
          , j8 = 3600000
          , j0 = 86400000
          , j6 = 604800000
          , jk = j9(function(e) {
            e.setTime(Math.floor(e / kb) * kb)
        }, function(i, T) {
            i.setTime(+i + T * kb)
        }, function(i, T) {
            return (T - i) / kb
        }, function(e) {
            return e.getUTCSeconds()
        })
          , ka = jk.range
          , jZ = j9(function(e) {
            e.setTime(Math.floor(e / jS) * jS)
        }, function(i, T) {
            i.setTime(+i + T * jS)
        }, function(i, T) {
            return (T - i) / jS
        }, function(e) {
            return e.getMinutes()
        })
          , js = jZ.range
          , jM = j9(function(i) {
            var T = i.getTimezoneOffset() * jS % j8;
            0 > T && (T += j8),
            i.setTime(Math.floor((+i - T) / j8) * j8 + T)
        }, function(i, T) {
            i.setTime(+i + T * j8)
        }, function(i, T) {
            return (T - i) / j8
        }, function(e) {
            return e.getHours()
        })
          , j5 = jM.range
          , jC = j9(function(e) {
            e.setHours(0, 0, 0, 0)
        }, function(i, T) {
            i.setDate(i.getDate() + T)
        }, function(i, T) {
            return (T - i - (T.getTimezoneOffset() - i.getTimezoneOffset()) * jS) / j0
        }, function(e) {
            return e.getDate() - 1
        })
          , jj = jC.range
          , jz = jY(0)
          , jB = jY(1)
          , jf = jY(2)
          , jx = jY(3)
          , jm = jY(4)
          , jP = jY(5)
          , jW = jY(6)
          , jh = jz.range
          , jO = jB.range
          , jq = jf.range
          , jL = jx.range
          , j1 = jm.range
          , jN = jP.range
          , kc = jW.range
          , j3 = j9(function(e) {
            e.setDate(1),
            e.setHours(0, 0, 0, 0)
        }, function(i, T) {
            i.setMonth(i.getMonth() + T)
        }, function(i, T) {
            return T.getMonth() - i.getMonth() + 12 * (T.getFullYear() - i.getFullYear())
        }, function(e) {
            return e.getMonth()
        })
          , ke = j3.range
          , jw = j9(function(e) {
            e.setMonth(0, 1),
            e.setHours(0, 0, 0, 0)
        }, function(i, T) {
            i.setFullYear(i.getFullYear() + T)
        }, function(i, T) {
            return T.getFullYear() - i.getFullYear()
        }, function(e) {
            return e.getFullYear()
        });
        jw.every = function(e) {
            return isFinite(e = Math.floor(e)) && e > 0 ? j9(function(i) {
                i.setFullYear(Math.floor(i.getFullYear() / e) * e),
                i.setMonth(0, 1),
                i.setHours(0, 0, 0, 0)
            }, function(i, T) {
                i.setFullYear(i.getFullYear() + T * e)
            }) : null
        }
        ;
        var jp = jw.range
          , jU = j9(function(e) {
            e.setUTCSeconds(0, 0)
        }, function(i, T) {
            i.setTime(+i + T * jS)
        }, function(i, T) {
            return (T - i) / jS
        }, function(e) {
            return e.getUTCMinutes()
        })
          , jE = jU.range
          , jD = j9(function(e) {
            e.setUTCMinutes(0, 0, 0)
        }, function(i, T) {
            i.setTime(+i + T * j8)
        }, function(i, T) {
            return (T - i) / j8
        }, function(e) {
            return e.getUTCHours()
        })
          , jA = jD.range
          , jy = j9(function(e) {
            e.setUTCHours(0, 0, 0, 0)
        }, function(i, T) {
            i.setUTCDate(i.getUTCDate() + T)
        }, function(i, T) {
            return (T - i) / j0
        }, function(e) {
            return e.getUTCDate() - 1
        })
          , jv = jy.range
          , ju = jQ(0)
          , jt = jQ(1)
          , jr = jQ(2)
          , jo = jQ(3)
          , jn = jQ(4)
          , ji = jQ(5)
          , jg = jQ(6)
          , je = ju.range
          , jK = jt.range
          , j7 = jr.range
          , jV = jo.range
          , j2 = jn.range
          , jJ = ji.range
          , jI = jg.range
          , jH = j9(function(e) {
            e.setUTCDate(1),
            e.setUTCHours(0, 0, 0, 0)
        }, function(i, T) {
            i.setUTCMonth(i.getUTCMonth() + T)
        }, function(i, T) {
            return T.getUTCMonth() - i.getUTCMonth() + 12 * (T.getUTCFullYear() - i.getUTCFullYear())
        }, function(e) {
            return e.getUTCMonth()
        })
          , jG = jH.range
          , jl = j9(function(e) {
            e.setUTCMonth(0, 1),
            e.setUTCHours(0, 0, 0, 0)
        }, function(i, T) {
            i.setUTCFullYear(i.getUTCFullYear() + T)
        }, function(i, T) {
            return T.getUTCFullYear() - i.getUTCFullYear()
        }, function(e) {
            return e.getUTCFullYear()
        });
        jl.every = function(e) {
            return isFinite(e = Math.floor(e)) && e > 0 ? j9(function(i) {
                i.setUTCFullYear(Math.floor(i.getUTCFullYear() / e) * e),
                i.setUTCMonth(0, 1),
                i.setUTCHours(0, 0, 0, 0)
            }, function(i, T) {
                i.setUTCFullYear(i.getUTCFullYear() + T * e)
            }) : null
        }
        ;
        var jF = jl.range;
        jR.timeInterval = j9,
        jR.timeMillisecond = j4,
        jR.timeMilliseconds = kd,
        jR.utcMillisecond = j4,
        jR.utcMilliseconds = kd,
        jR.timeSecond = jk,
        jR.timeSeconds = ka,
        jR.utcSecond = jk,
        jR.utcSeconds = ka,
        jR.timeMinute = jZ,
        jR.timeMinutes = js,
        jR.timeHour = jM,
        jR.timeHours = j5,
        jR.timeDay = jC,
        jR.timeDays = jj,
        jR.timeWeek = jz,
        jR.timeWeeks = jh,
        jR.timeSunday = jz,
        jR.timeSundays = jh,
        jR.timeMonday = jB,
        jR.timeMondays = jO,
        jR.timeTuesday = jf,
        jR.timeTuesdays = jq,
        jR.timeWednesday = jx,
        jR.timeWednesdays = jL,
        jR.timeThursday = jm,
        jR.timeThursdays = j1,
        jR.timeFriday = jP,
        jR.timeFridays = jN,
        jR.timeSaturday = jW,
        jR.timeSaturdays = kc,
        jR.timeMonth = j3,
        jR.timeMonths = ke,
        jR.timeYear = jw,
        jR.timeYears = jp,
        jR.utcMinute = jU,
        jR.utcMinutes = jE,
        jR.utcHour = jD,
        jR.utcHours = jA,
        jR.utcDay = jy,
        jR.utcDays = jv,
        jR.utcWeek = ju,
        jR.utcWeeks = je,
        jR.utcSunday = ju,
        jR.utcSundays = je,
        jR.utcMonday = jt,
        jR.utcMondays = jK,
        jR.utcTuesday = jr,
        jR.utcTuesdays = j7,
        jR.utcWednesday = jo,
        jR.utcWednesdays = jV,
        jR.utcThursday = jn,
        jR.utcThursdays = j2,
        jR.utcFriday = ji,
        jR.utcFridays = jJ,
        jR.utcSaturday = jg,
        jR.utcSaturdays = jI,
        jR.utcMonth = jH,
        jR.utcMonths = jG,
        jR.utcYear = jl,
        jR.utcYears = jF,
        Object.defineProperty(jR, "__esModule", {
            value: !0
        })
    });
    function eF(e) {
        this._elemType = e;
        this._objCollection = {}
    }
    eF.prototype.get = function() {
        var i = null;
        for (var e in this._objCollection) {
            if (this._objCollection[e] && this._objCollection[e]._free === true) {
                this._objCollection[e]._free = false;
                return this._objCollection[e]
            }
        }
        i = bL(this._elemType);
        e = bp.getGUID("obj_pool_");
        this._objCollection[e] = i;
        return i
    }
    ;
    eF.prototype.free = function(e) {
        if (!e) {
            return
        }
        e._free = true;
        if (e.tagName.toLowerCase() === "img") {
            e.src = "";
            e.crossOrigin = null;
            e.onload = e.onerror = null
        }
    }
    ;
    eF.prototype.clear = function() {
        for (var e in this._objCollection) {
            if (this._objCollection[e] && this._objCollection[e].tagName.toLowerCase === "img") {
                this._objCollection[e].onload = this._objCollection[e].onerror = null
            }
        }
        this._objCollection = {}
    }
    ;
    var hm = {
        get: function(i, jf, e, T) {
            var je = new XMLHttpRequest();
            je.open("GET", i, true);
            je.timeout = 10000;
            je.ontimeout = function() {
                T && T()
            }
            ;
            je.onreadystatechange = function(jg) {
                if (this.readyState === 4) {
                    if (this.status === 200) {
                        jf && jf(je.responseText)
                    } else {
                        e && e()
                    }
                }
            }
            ;
            je.send()
        },
        post: function(i, jg, jf, e, T) {
            var je = new XMLHttpRequest();
            je.open("POST", i, true);
            je.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            je.timeout = 10000;
            je.ontimeout = function() {
                T && T()
            }
            ;
            je.onreadystatechange = function(jh) {
                if (this.readyState === 4) {
                    if (this.status === 200) {
                        jf && jf(je.responseText, jg)
                    } else {
                        e && e()
                    }
                }
            }
            ;
            je.send(jg);
            return je
        }
    };
    var ga = (function(e) {
        function i(jg, T, jf) {
            if (jg.indexOf("v=") === -1) {
				if(jg.substring(jg.length-3,jg.length)==".js"){
					jg += "?v=gl"
				}else{
					jg += "&v=gl"
				}
                
            }
            var je = bL("script", {
                src: jg,
                type: "text/javascript",
                charset: "utf-8"
            });
            if (je.addEventListener) {
                je.addEventListener("load", function(ji) {
                    var jh = ji.target;
                    jh.parentNode.removeChild(jh);
                    T && T()
                }, false);
                je.addEventListener("error", function(ji) {
                    if (ji) {
                        var jh = ji.target;
                        jh && jh.parentNode && jh.parentNode.removeChild(jh)
						
						var yl=("http://maponline2.bdimg.com/tile/?qt=vtile&x={x}&y={y}&z={z}&styles=sl&showtext=0&v=" + this._version + "&udt=" + this._udt).replace("{z}", jg).replace("{x}", je).replace("{y}", jh).replace("=-", "=M");
						
						console.log("%c\n js加载失败删除script:%c ➡️ "+jh.outerHTML, "color: #fadfa3; background: #030307;", "color: red;");
									
                    }
					
					
					
                    jf && jf(null)
                }, false)
            } else {
                if (je.attachEvent) {
                    je.attachEvent("onreadystatechange", function(ji) {
                        var jh = window.event.srcElement;
                        if (jh && (jh.readyState === "loaded" || jh.readyState === "complete")) {
                            jh.parentNode.removeChild(jh)
                        }
                        T && T()
                    })
                }
            }
			if(je.src.indexOf("/mapcat/?qt=verify&v=gl&type=webgl&ak=R4pWCxXH9qm9ZpbnppGyxUGKydAd6esD&callback=BMapGL.bmapVerifyCbk")!=-1){
				je.src=w.apiHost+"/BMapGL.bmapVerifyCbk.js"
			}
			if(je.src.indexOf("/dlswbr.baidu.com/heicha/mw/abclite-2063-s.js")!=-1){
				//je.src=w.apiHost+"/abclite-2063-s.js"
				je.src="";
			}
			
			//console.log(je);
			//console.log( " %c加载地址:https://maponline0.bdimg.com/pvd/?qt=vtile&param="+window.encodeURIComponent(er(T)) + "\n%c ➡️ \n" + "%c现地图加载:"+je, 'color: #fadfa3; background: #030307;', 'color: red;', 'color: #fadfa3; background: #030307;');
            e.getElementsByTagName("head")[0].appendChild(je)
        }
        return {
            load: function(jh, T, je) {
                if (typeof jh === "string") {
                    i(jh, T, je)
                } else {
                    if (jh.length > 0) {
                        var jg = jh.length;
                        for (var jf = 0; jf < jg; jf++) {
                            i(jh[jf], function() {
                                jg--;
                                if (jg === 0 && T) {
                                    T()
                                }
                            })
                        }
                    }
                }
            }
        }
    }
    )(window.document);
    function hg() {}
    hg.instances = {};
    hg.getInstance = function(i, T) {
        if (hg.instances[i]) {
            return hg.instances[i]
        }
        var e = new i9(i,T);
        hg.instances[i] = e;
        return e
    }
    ;
    function i9(e, i) {
        this._name = e;
        this._baseZoom = 18;
        this._opts = {
            tileSize: 256
        };
        ev.extend(this._opts, i || {})
    }
    i9.mapZoomBaseIndex = [8, 8, 8, 8, 7, 7, 6, 6, 5, 5, 4, 3, 3, 3, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0];
    i9.baseScaleZoom = [19, 17, 15, 12, 10, 9, 7, 5, 3];
    i9.baseScaleZoomMercatorSize = [512, 2048, 4096, 32768, 65536, 262144, 1048576, 4194304, 8388608];
    i9.mapZoomBaseZoomMapping = [3, 3, 3, 3, 5, 5, 7, 7, 9, 9, 10, 12, 12, 12, 15, 15, 17, 17, 19, 19, 19, 19, 19, 19, 19, 19];
    i9.mapZoomStartZoomMapping = [3, 3, 3, 3, 4, 4, 6, 6, 8, 8, 10, 11, 11, 11, 14, 14, 16, 16, 18, 18, 18, 18, 18, 18, 18, 18];
    i9.baseScaleTileSize = [1024, 1024, 512, 512, 256, 512, 512, 512, 256];
    i9.mapZoomTileSize = [256, 256, 256, 256, 256, 512, 256, 512, 256, 512, 256, 256, 512, 1024, 256, 512, 512, 1024, 512, 1024, 2048, 4096, 4096 * 2, 4096 * 2 * 2, 4096 * 2 * 2 * 2, 4096 * 2 * 2 * 2 * 2];
    i9.baseZoomInfo = {
        "3": [3],
        "5": [4, 5],
        "7": [6, 7],
        "9": [8, 9],
        "10": [10],
        "12": [11, 12, 13],
        "15": [14, 15],
        "17": [16, 17],
        "19": [18, 19, 20, 21, 22, 23, 24, 25]
    };
    i9.prototype = {
        getName: function() {
            return this._name
        },
        getTileSize: function(e) {
            e = Math.floor(e);
            if (e < 3) {
                e = 3
            }
            if (this._name === "na") {
                return i9.mapZoomTileSize[e]
            }
            return this._opts.tileSize
        },
        getBaseTileSize: function(i) {
            i = Math.floor(i);
            if (this._name === "na") {
                var e = i9.mapZoomBaseZoomMapping[i];
                return i9.mapZoomTileSize[e]
            }
            return this._opts.tileSize
        },
        getDataZoom: function(e) {
            e = Math.floor(e);
            if (this._name === "na") {
                return i9.mapZoomBaseZoomMapping[e]
            }
            return e
        },
        getZoomUnits: function(e) {
            return Math.pow(2, (this._baseZoom - e))
        },
        getMercatorSize: function(T, i) {
            if (this._name === "na") {
                T = Math.floor(T);
                var e = i9.mapZoomBaseIndex[T];
                return i9.baseScaleZoomMercatorSize[e]
            }
            return this._opts.tileSize * this.getZoomUnits(i)
        },
        getBaseZoom: function() {
            return this._baseZoom
        },
        getParentTile: function(je, jk, jj, T, i) {
            if (this._name === "na") {
                var jf = i9.baseZoomInfo[jj];
                T--;
                if (jf.indexOf(T) > -1) {
                    return {
                        col: je,
                        row: jk,
                        zoom: jj,
                        useZoom: T
                    }
                } else {
                    var jh = i9.mapZoomBaseIndex[jj];
                    var jg = i9.baseScaleZoom[jh + 1];
                    if (!jg) {
                        return null
                    }
                    var ji = this.getFactorByZooms(jg, jj);
                    var e = i9.baseZoomInfo[jg];
                    return {
                        col: Math.floor(je / ji),
                        row: Math.floor(jk / ji),
                        zoom: jg,
                        useZoom: e[e.length - 1]
                    }
                }
                return null
            }
            if (jj - 1 < i) {
                return null
            }
            return {
                col: Math.floor(je / 2),
                row: Math.floor(jk / 2),
                zoom: jj - 1,
                useZoom: jj - 1
            }
        },
        getChildTiles: function(jf, jh, e, T, jo, ju) {
            if (this._name === "na") {
                var je = i9.baseZoomInfo[e];
                T += ju;
                if (je.indexOf(T) > -1) {
                    return [{
                        col: jf,
                        row: jh,
                        zoom: e,
                        useZoom: T
                    }]
                } else {
                    var js = 0;
                    var jp = e;
                    while (js < ju) {
                        var jt = i9.mapZoomBaseIndex[jp];
                        var jj = i9.baseScaleZoom[jt - 1];
                        if (!jj) {
                            return null
                        }
                        var jk = i9.baseZoomInfo[jj];
                        if (jk[ju - 1]) {
                            var jl = [];
                            var jn = this.getFactorByZooms(e, jj);
                            var i = jf * jn;
                            var jm = jh * jn;
                            for (var jr = 0; jr < jn; jr++) {
                                var jg = i + jr;
                                for (var jq = 0; jq < jn; jq++) {
                                    var ji = jm + jq;
                                    jl.push({
                                        col: jg,
                                        row: ji,
                                        zoom: jj,
                                        useZoom: jk[ju - 1]
                                    })
                                }
                            }
                            return jl
                        }
                        js += jk.length;
                        if (ju === jk.length) {
                            jp = jj
                        }
                    }
                }
                return null
            }
            var jl = [];
            if (e + ju > jo) {
                return null
            }
            var jn = Math.pow(2, ju);
            var i = jf * jn;
            var jm = jh * jn;
            var jj = e + ju;
            var jl = [];
            for (var jr = 0; jr < 2; jr++) {
                var jg = i + jr;
                for (var jq = 0; jq < 2; jq++) {
                    var ji = jm + jq;
                    jl.push({
                        col: jg,
                        row: ji,
                        zoom: jj,
                        useZoom: jj
                    })
                }
            }
            return jl
        },
        getFactorByZooms: function(i, je) {
            var T = i9.mapZoomBaseIndex[i];
            var jf = i9.mapZoomBaseIndex[je];
            var e = i9.baseScaleZoomMercatorSize[T];
            var jg = i9.baseScaleZoomMercatorSize[jf];
            return e / jg
        }
    };
    var cK = {};
    var V = ["swiftshader", "microsoft basic render driver"];
    var gG = ["intel", "nvidia", "amd", "apple", "geforce"];
    function f1(e) {
        e = e.toLowerCase();
        if (V.indexOf(e) >= 0) {
            return true
        }
        if (e.indexOf("mobile") >= 0) {
            return true
        }
        return false
    }
    function cg(T) {
        T = T.toLowerCase();
        for (var e = 0; e < gG.length; e++) {
            if (T.indexOf(gG[e]) >= 0) {
                return true
            }
        }
        return false
    }
    function i8(e) {
        if (!e) {
            return false
        }
        if (f1(e)) {
            return false
        }
        if (cg(e)) {
            return true
        }
        return false
    }
    cK.ifEnableEarth = function(i) {
        var e = cK.ifEnableEarth;
        if (!i && typeof e._enable === "boolean") {
            return e._enable
        }
        if (cK.ifSupportWebGL()) {
            e._enable = true;
            return true
        }
        e._enable = false;
        return false
    }
    ;
    cK.ifEnableWebGLMap = function(i) {
        var e = cK.ifEnableWebGLMap;
        if (!i && typeof e._enable === "boolean") {
            return e._enable
        }
        if (cK.ifSupportWebGL()) {
            if (aA.inMapHost) {
                e._enable = true;
                return true
            } else {
                if (window.Blob || window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder) {
                    e._enable = true;
                    return true
                } else {
                    e._enable = false;
                    return false
                }
            }
        }
        e._enable = false;
        return false
    }
    ;
    cK.params = {};
    cK.ifSupportWebGL = function() {
        var i = cK.ifSupportWebGL;
        if (typeof i._supportWebGL === "boolean") {
            return i._supportWebGL
        }
        if (!window.WebGLRenderingContext) {
            i._supportWebGL = false;
            return false
        }
        var T = document.createElement("canvas");
        T.width = 300;
        T.height = 150;
        var jf = null;
        var jl = {
            alpha: true,
            antialias: false,
            failIfMajorPerformanceCaveat: true,
            preserveDrawingBuffer: false,
            stencil: false
        };
        try {
            jf = T.getContext("webgl", jl) || T.getContext("experimental-webgl", jl)
        } catch (jh) {
            i._supportWebGL = false
        }
        if (jf === null) {
            i._supportWebGL = false
        } else {
            i._supportWebGL = true;
            var jj = jf.getExtension("WEBGL_debug_renderer_info");
            var ji = "";
            if (jj) {
                ji = jf.getParameter(jj.UNMASKED_RENDERER_WEBGL);
                if (i8(ji) === true) {
                    i._supportWebGL = true
                }
                var jk = jf.getParameter(jj.UNMASKED_VENDOR_WEBGL);
                i._renderer = ji;
                i._vendor = jk
            }
            if (!jj && ev.Browser.firefox) {
                i._supportWebGL = true
            }
            if (!jj && ev.Platform.macintosh) {
                i._supportWebGL = true
            }
            if (jf.drawingBufferWidth !== T.width || jf.drawingBufferHeight !== T.height) {
                i._supportWebGL = false
            }
            if (jf.getParameter(jf.MAX_VERTEX_TEXTURE_IMAGE_UNITS) < 4) {
                i._supportWebGL = false
            }
            var je = jf.getParameter(jf.MAX_TEXTURE_SIZE);
            cK.params.maxTextureSize = je;
            if (je < 4096) {
                i._supportWebGL = false
            }
            var jg = jf.getParameter(jf.MAX_TEXTURE_IMAGE_UNITS);
            if (jg < 8) {
                i._supportWebGL = false
            }
            if (!jf.getShaderPrecisionFormat || jf.getShaderPrecisionFormat(jf.FRAGMENT_SHADER, jf.HIGH_FLOAT).precision < 23) {
                i._supportWebGL = false
            }
        }
        return i._supportWebGL
    }
    ;
    cK.ifSupportCanvas2d = function() {
        var jf = cK.ifSupportCanvas2d;
        if (typeof jf.supportCanvas2d === "boolean") {
            return jf.supportCanvas2d
        }
        var T = document.createElement("canvas");
        var i = null;
        try {
            i = T.getContext("2d")
        } catch (je) {
            jf.supportCanvas2d = false
        }
        if (i === null) {
            jf.supportCanvas2d = false
        } else {
            jf.supportCanvas2d = true
        }
        return jf.supportCanvas2d
    }
    ;
    cK.ifCanvas2dInBlackList = function() {
        return true
    }
    ;
    cK.ifEnableCanvas2dMap = function() {
        return false;
        var i = navigator.userAgent;
        var e = 0;
        var je = 0;
        var jf = 0;
        if (/macintosh/ig.test(i)) {
            var T = 0;
            if (/(\d+\.\d)?(?:\.\d)?\s+safari\/?(\d+\.\d+)?/i.test(i) && !/chrome/i.test(i)) {
                T = parseInt((RegExp["\x241"] || RegExp["\x242"]), 10)
            }
            if (T > 0) {
                return false
            }
            return true
        }
        if (/windows nt (\d+\.\d)/ig.test(i)) {
            je = parseFloat(RegExp.$1);
            if (je >= 6.1) {
                if (/chrome\/(\d+\.\d)/i.test(i)) {
                    e = parseFloat(RegExp.$1);
                    if (e >= 31) {
                        return true
                    }
                }
                if (/MSIE (\d+(\.\d+)?)/.test(i)) {
                    jf = parseFloat(RegExp.$1);
                    if (jf >= 10) {
                        return true
                    }
                }
                if (/Firefox/.test(i)) {
                    return true
                }
                if (/rv:11.0/ig.test(i)) {
                    return true
                }
                if (/edge/ig.test(i)) {
                    return true
                }
            }
        }
        return false
    }
    ;
    cK.ifSupportCSS3 = function(ji, i) {
        var jh = document.createElement("div");
        var jg = "Webkit Moz O ms".split(" ");
        var e = jg.length;
        var T = "";
        var je = jh.style;
        if (ji in je) {
            T = ji
        }
        ji = ji.replace(/^[a-z]/, function(jj) {
            return jj.toUpperCase()
        });
        while (e--) {
            var jf = jg[e] + ji;
            if (jf in je) {
                T = jf;
                break
            }
        }
        if (i) {
            return T
        } else {
            return T.length > 0 ? true : false
        }
    }
    ;
    cK.isModernBrowser = cK.ifSupportCanvas2d() && cK.ifSupportCSS3("transform");
    function at(i, e) {
        this._size = i;
        this._curSize = 0;
        this._cache = {};
        this._least = null;
        this._most = null;
        this._options = {
            clearCallback: null,
            removeOldCallback: null
        };
        e = e || {};
        for (var T in e) {
            this._options[T] = e[T]
        }
        this._getDataTimes = 0;
        this._hitTimes = 0
    }
    at.prototype.setData = function(je, jg) {
        var i = this._cache;
        var T = this._size;
        if (T === 0) {
            return
        }
        var e = this._curSize;
        if (e === T) {
            this._removeOld()
        }
        var jf;
        if (!i[je]) {
            jf = {
                key: je,
                data: jg,
                older: null,
                newwer: null
            };
            i[je] = jf;
            if (this._least === null) {
                this._least = jf
            }
            if (this._most === null) {
                this._most = jf
            }
            this._curSize++
        } else {
            jf = i[je];
            jf.data = jg;
            if (this._most === jf) {
                return
            }
            jf.older && (jf.older.newer = jf.newer);
            jf.newer && (jf.newer.older = jf.older);
            if (this._least === jf) {
                this._least = jf.newer
            }
        }
        if (this._most && this._most !== jf) {
            this._most.newer = jf;
            jf.older = this._most;
            this._most = jf;
            jf.newer = null
        }
    }
    ;
    at.prototype.getData = function(e) {
        var i = this._cache[e];
        this._getDataTimes++;
        if (i) {
            this._hitTimes++;
            var T = i.data;
            if (this._most === i) {
                return T
            }
            i.older && (i.older.newer = i.newer);
            i.newer && (i.newer.older = i.older);
            if (this._least === i) {
                this._least = i.newer
            }
            this._most.newer = i;
            i.older = this._most;
            i.newer = null;
            this._most = i;
            return T
        }
        return null
    }
    ;
    at.prototype.getAllData = function() {
        return this._cache
    }
    ;
    at.prototype.getHitRate = function() {
        return this._hitTimes / this._getDataTimes
    }
    ;
    at.prototype.removeData = function(i) {
        var e = this._cache;
        var T = e[i];
        if (!T) {
            return
        }
        if (this._options.clearCallback) {
            this._options.clearCallback(T.data, T.key)
        }
        T.older && (T.older.newer = T.newer);
        T.newer && (T.newer.older = T.older);
        if (this._least === T) {
            this._least = T.newer
        }
        if (this._most === T) {
            this._most = T.older
        }
        delete e[i];
        this._curSize--
    }
    ;
    at.prototype._removeOld = function() {
        var e = this._cache;
        var je = Math.round(this._size * 0.6);
        var T = 0;
        while (this._least && T < je) {
            var i = this._least;
            this._least = i.newer;
            i.newer && (i.newer.older = null);
            if (this._options.clearCallback) {
                this._options.clearCallback(i.data, i.key)
            }
            delete e[i.key];
            T++
        }
        this._curSize -= T;
        if (this._options.removeOldCallback) {
            this._options.removeOldCallback()
        }
    }
    ;
    at.prototype.clear = function() {
        var e = this._cache;
        var i = this._least;
        if (this._options.clearCallback) {
            while (i) {
                this._options.clearCallback(i.data, i.key);
                i = i.newer
            }
        }
        this._least = this._most = null;
        this._cache = {};
        this._curSize = 0
    }
    ;
    at.prototype.forEach = function(e) {
        var i = this._least;
        while (i) {
            e(i.data);
            i = i.newer
        }
    }
    ;
    at.prototype.clearExcept = function(i) {
        var e = this._cache;
        var T = this._least;
        while (T) {
            if (!i[T.key]) {
                if (this._options.clearCallback) {
                    this._options.clearCallback(T.data, T.key)
                }
                T.older && (T.older.newer = T.newer);
                T.newer && (T.newer.older = T.older);
                if (this._least === T) {
                    this._least = T.newer
                }
                if (this._most === T) {
                    this._most = T.older
                }
                delete e[T.key];
                this._curSize--
            }
            T = T.newer
        }
    }
    ;
    !function(T, i) {
        "object" == typeof bp && "undefined" != typeof module ? module.exports = i() : "function" == typeof define && define.amd ? define(i) : (T = "undefined" != typeof globalThis ? globalThis : T || self).gcoord = i()
    }(this, (function() {
        /* *****************************************************************************
        Copyright (c) Microsoft Corporation.

        Permission to use, copy, modify, and/or distribute this software for any
        purpose with or without fee is hereby granted.

        THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
        REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
        AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
        INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
        LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
        OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
        PERFORMANCE OF THIS SOFTWARE.
        ***************************************************************************** */
        var jS = function() {
            return (jS = Object.assign || function(jX) {
                for (var i, T = 1, jZ = arguments.length; T < jZ; T++) {
                    for (var jY in i = arguments[T]) {
                        Object.prototype.hasOwnProperty.call(i, jY) && (jX[jY] = i[jY])
                    }
                }
                return jX
            }
            ).apply(this, arguments)
        }
          , jD = Math.sin
          , jF = Math.cos
          , jJ = Math.sqrt
          , jI = Math.abs
          , jW = Math.PI
          , jO = 6378245
          , jC = 0.006693421622965823;
        function jR(T, i) {
            return T >= 72.004 && T <= 137.8347 && i >= 0.8293 && i <= 55.8271
        }
        function jU(jZ, jY) {
            var j2, i, j4, T = (j4 = 300 + (j2 = jZ - 105) + 2 * (i = jY - 35) + 0.1 * j2 * j2 + 0.1 * j2 * i + 0.1 * jJ(jI(j2)),
            j4 += 2 * (20 * jD(6 * j2 * jW) + 20 * jD(2 * j2 * jW)) / 3,
            (j4 += 2 * (20 * jD(j2 * jW) + 40 * jD(j2 / 3 * jW)) / 3) + 2 * (150 * jD(j2 / 12 * jW) + 300 * jD(j2 / 30 * jW)) / 3), jX = function(j7, j6) {
                var j5 = 2 * j7 - 100 + 3 * j6 + 0.2 * j6 * j6 + 0.1 * j7 * j6 + 0.2 * jJ(jI(j7));
                return j5 += 2 * (20 * jD(6 * j7 * jW) + 20 * jD(2 * j7 * jW)) / 3,
                j5 += 2 * (20 * jD(j6 * jW) + 40 * jD(j6 / 3 * jW)) / 3,
                j5 + 2 * (160 * jD(j6 / 12 * jW) + 320 * jD(j6 * jW / 30)) / 3
            }(jZ - 105, jY - 35), j1 = jY / 180 * jW, j0 = jD(j1), j3 = jJ(j0 = 1 - jC * j0 * j0);
            return [T = 180 * T / (jO / j3 * jF(j1) * jW), jX = 180 * jX / (jO * (1 - jC) / (j0 * j3) * jW)]
        }
        function jL(jX) {
            var i = jX[0]
              , T = jX[1];
            if (!jR(i, T)) {
                return [i, T]
            }
            var jY = jU(i, T);
            return [i + jY[0], T + jY[1]]
        }
        function jE(jZ) {
            var j3 = jZ[0]
              , T = jZ[1];
            if (!jR(j3, T)) {
                return [j3, T]
            }
            for (var jX = [j3, T], j1 = jX[0], jY = jX[1], j2 = jL([j1, jY]), j0 = j2[0] - j3, j4 = j2[1] - T; jI(j0) > 0.000001 || jI(j4) > 0.000001; ) {
                j0 = (j2 = jL([j1 -= j0, jY -= j4]))[0] - j3,
                j4 = j2[1] - T
            }
            return [j1, jY]
        }
        var jP = Math.sin
          , jQ = Math.cos
          , jm = Math.atan2
          , jT = Math.sqrt
          , jB = 3000 * Math.PI / 180;
        function jH(jX) {
            var i = jX[0] - 0.0065
              , T = jX[1] - 0.006
              , jZ = jT(i * i + T * T) - 0.00002 * jP(T * jB)
              , jY = jm(T, i) - 0.000003 * jQ(i * jB);
            return [jZ * jQ(jY), jZ * jP(jY)]
        }
        function jq(jX) {
            var i = jX[0]
              , T = jX[1]
              , jZ = jT(i * i + T * T) + 0.00002 * jP(T * jB)
              , jY = jm(T, i) + 0.000003 * jQ(i * jB);
            return [jZ * jQ(jY) + 0.0065, jZ * jP(jY) + 0.006]
        }
        var jy = 180 / Math.PI
          , jh = Math.PI / 180
          , jj = 6378137
          , jV = 20037508.342789244;
        function jv(i) {
            return [i[0] * jy / jj, (0.5 * Math.PI - 2 * Math.atan(Math.exp(-i[1] / jj))) * jy]
        }
        function jK(jX) {
            var i = Math.abs(jX[0]) <= 180 ? jX[0] : jX[0] - 360 * (jX[0] < 0 ? -1 : 1)
              , T = [jj * i * jh, jj * Math.log(Math.tan(0.25 * Math.PI + 0.5 * jX[1] * jh))];
            return T[0] > jV && (T[0] = jV),
            T[0] < -jV && (T[0] = -jV),
            T[1] > jV && (T[1] = jV),
            T[1] < -jV && (T[1] = -jV),
            T
        }
        var ju, jt, js, jA, jp, je, jz = Math.abs, jM = [12890594.86, 8362377.87, 5591021, 3481989.83, 1678043.12, 0], jo = [75, 60, 45, 30, 15, 0], jg = [[1.410526172116255e-8, 0.00000898305509648872, -1.9939833816331, 200.9824383106796, -187.2403703815547, 91.6087516669843, -23.38765649603339, 2.57121317296198, -0.03801003308653, 17337981.2], [-7.435856389565537e-9, 0.000008983055097726239, -0.78625201886289, 96.32687599759846, -1.85204757529826, -59.36935905485877, 47.40033549296737, -16.50741931063887, 2.28786674699375, 10260144.86], [-3.030883460898826e-8, 0.00000898305509983578, 0.30071316287616, 59.74293618442277, 7.357984074871, -25.38371002664745, 13.45380521110908, -3.29883767235584, 0.32710905363475, 6856817.37], [-1.981981304930552e-8, 0.000008983055099779535, 0.03278182852591, 40.31678527705744, 0.65659298677277, -4.44255534477492, 0.85341911805263, 0.12923347998204, -0.04625736007561, 4482777.06], [3.09191371068437e-9, 0.000008983055096812155, 0.00006995724062, 23.10934304144901, -0.00023663490511, -0.6321817810242, -0.00663494467273, 0.03430082397953, -0.00466043876332, 2555164.4], [2.890871144776878e-9, 0.000008983055095805407, -3.068298e-8, 7.47137025468032, -0.00000353937994, -0.02145144861037, -0.00001234426596, 0.00010322952773, -0.00000323890364, 826088.5]], jN = [[-0.0015702102444, 111320.7020616939, 1704480524535203, -10338987376042340, 26112667856603880, -35149669176653700, 26595700718403920, -10725012454188240, 1800819912950474, 82.5], [0.0008277824516172526, 111320.7020463578, 647795574.6671607, -4082003173.641316, 10774905663.51142, -15171875531.51559, 12053065338.62167, -5124939663.577472, 913311935.9512032, 67.5], [0.00337398766765, 111320.7020202162, 4481351.045890365, -23393751.19931662, 79682215.47186455, -115964993.2797253, 97236711.15602145, -43661946.33752821, 8477230.501135234, 52.5], [0.00220636496208, 111320.7020209128, 51751.86112841131, 3796837.749470245, 992013.7397791013, -1221952.21711287, 1340652.697009075, -620943.6990984312, 144416.9293806241, 37.5], [-0.0003441963504368392, 111320.7020576856, 278.2353980772752, 2485758.690035394, 6070.750963243378, 54821.18345352118, 9540.606633304236, -2710.55326746645, 1405.483844121726, 22.5], [-0.0003218135878613132, 111320.7020701615, 0.00369383431289, 823725.6402795718, 0.46104986909093, 2351.343141331292, 1.58060784298199, 8.77738589078284, 0.37238884252424, 7.45]];
        function jn(jY, T, jX) {
            var j0 = jz(T) / jX[9]
              , jZ = jX[0] + jX[1] * jz(jY)
              , i = jX[2] + jX[3] * j0 + jX[4] * Math.pow(j0, 2) + jX[5] * Math.pow(j0, 3) + jX[6] * Math.pow(j0, 4) + jX[7] * Math.pow(j0, 5) + jX[8] * Math.pow(j0, 6);
            return [jZ *= jY < 0 ? -1 : 1, i *= T < 0 ? -1 : 1]
        }
        function jG(jX) {
            for (var i = jX[0], T = jX[1], jZ = [], jY = 0; jY < jo.length; jY++) {
                if (jz(T) > jo[jY]) {
                    jZ = jN[jY];
                    break
                }
            }
            return jn(i, T, jZ)
        }
        function jl(jX) {
            for (var i = jX[0], T = jX[1], jZ = [], jY = 0; jY < jM.length; jY++) {
                if (T >= jM[jY]) {
                    jZ = jg[jY];
                    break
                }
            }
            return jn(i, T, jZ)
        }
        function jk(T, i) {
            if (!T) {
                throw new Error(i)
            }
        }
        function jw(i) {
            return !!i && "[object Array]" === Object.prototype.toString.call(i)
        }
        function jr(i) {
            return !isNaN(Number(i)) && null !== i && !jw(i)
        }
        function ji() {
            for (var jX = [], i = 0; i < arguments.length; i++) {
                jX[i] = arguments[i]
            }
            var T = jX.length - 1;
            return function() {
                for (var jY = [], j0 = 0; j0 < arguments.length; j0++) {
                    jY[j0] = arguments[j0]
                }
                for (var jZ = T, e = jX[T].apply(null, jY); jZ--; ) {
                    e = jX[jZ].call(null, e)
                }
                return e
            }
        }
        function jf(ke, j3, j5) {
            if (void 0 === j5 && (j5 = !1),
            null !== ke) {
                for (var j8, j7, kh, ka, j2, kd, kg, j9, j4 = 0, kb = 0, kc = ke.type, jY = "FeatureCollection" === kc, kf = "Feature" === kc, j1 = jY ? ke.features.length : 1, j6 = 0; j6 < j1; j6++) {
                    j2 = (j9 = !!(kg = jY ? ke.features[j6].geometry : kf ? ke.geometry : ke) && "GeometryCollection" === kg.type) ? kg.geometries.length : 1;
                    for (var j0 = 0; j0 < j2; j0++) {
                        var jZ = 0
                          , T = 0;
                        if (null !== (ka = j9 ? kg.geometries[j0] : kg)) {
                            var jX = ka.type;
                            switch (j4 = !j5 || "Polygon" !== jX && "MultiPolygon" !== jX ? 0 : 1,
                            jX) {
                            case null:
                                break;
                            case "Point":
                                if (!1 === j3(kd = ka.coordinates, kb, j6, jZ, T)) {
                                    return !1
                                }
                                kb++,
                                jZ++;
                                break;
                            case "LineString":
                            case "MultiPoint":
                                for (kd = ka.coordinates,
                                j8 = 0; j8 < kd.length; j8++) {
                                    if (!1 === j3(kd[j8], kb, j6, jZ, T)) {
                                        return !1
                                    }
                                    kb++,
                                    "MultiPoint" === jX && jZ++
                                }
                                "LineString" === jX && jZ++;
                                break;
                            case "Polygon":
                            case "MultiLineString":
                                for (kd = ka.coordinates,
                                j8 = 0; j8 < kd.length; j8++) {
                                    for (j7 = 0; j7 < kd[j8].length - j4; j7++) {
                                        if (!1 === j3(kd[j8][j7], kb, j6, jZ, T)) {
                                            return !1
                                        }
                                        kb++
                                    }
                                    "MultiLineString" === jX && jZ++,
                                    "Polygon" === jX && T++
                                }
                                "Polygon" === jX && jZ++;
                                break;
                            case "MultiPolygon":
                                for (kd = ka.coordinates,
                                j8 = 0; j8 < kd.length; j8++) {
                                    for (T = 0,
                                    j7 = 0; j7 < kd[j8].length; j7++) {
                                        for (kh = 0; kh < kd[j8][j7].length - j4; kh++) {
                                            if (!1 === j3(kd[j8][j7][kh], kb, j6, jZ, T)) {
                                                return !1
                                            }
                                            kb++
                                        }
                                        T++
                                    }
                                    jZ++
                                }
                                break;
                            case "GeometryCollection":
                                for (j8 = 0; j8 < ka.geometries.length; j8++) {
                                    if (!1 === jf(ka.geometries[j8], j3, j5)) {
                                        return !1
                                    }
                                }
                                break;
                            default:
                                throw new Error("Unknown Geometry Type")
                            }
                        }
                    }
                }
            }
        }
        !function(i) {
            i.WGS84 = "WGS84",
            i.WGS1984 = "WGS84",
            i.EPSG4326 = "WGS84",
            i.GCJ02 = "GCJ02",
            i.AMap = "GCJ02",
            i.BD09 = "BD09",
            i.BD09LL = "BD09",
            i.Baidu = "BD09",
            i.BMap = "BD09",
            i.BD09MC = "BD09MC",
            i.BD09Meter = "BD09MC",
            i.EPSG3857 = "EPSG3857",
            i.EPSG900913 = "EPSG3857",
            i.EPSG102100 = "EPSG3857",
            i.WebMercator = "EPSG3857",
            i.WM = "EPSG3857"
        }(je || (je = {}));
        var jx = {
            WGS84: {
                to: (ju = {},
                ju[je.GCJ02] = jL,
                ju[je.BD09] = ji(jq, jL),
                ju[je.BD09MC] = ji(jG, jq, jL),
                ju[je.EPSG3857] = jK,
                ju)
            },
            GCJ02: {
                to: (jt = {},
                jt[je.WGS84] = jE,
                jt[je.BD09] = jq,
                jt[je.BD09MC] = ji(jG, jq),
                jt[je.EPSG3857] = ji(jK, jE),
                jt)
            },
            BD09: {
                to: (js = {},
                js[je.WGS84] = ji(jE, jH),
                js[je.GCJ02] = jH,
                js[je.EPSG3857] = ji(jK, jE, jH),
                js[je.BD09MC] = jG,
                js)
            },
            EPSG3857: {
                to: (jA = {},
                jA[je.WGS84] = jv,
                jA[je.GCJ02] = ji(jL, jv),
                jA[je.BD09] = ji(jq, jL, jv),
                jA[je.BD09MC] = ji(jG, jq, jL, jv),
                jA)
            },
            BD09MC: {
                to: (jp = {},
                jp[je.WGS84] = ji(jE, jH, jl),
                jp[je.GCJ02] = ji(jH, jl),
                jp[je.EPSG3857] = ji(jK, jE, jH, jl),
                jp[je.BD09] = jl,
                jp)
            }
        };
        return jS(jS({}, je), {
            CRSTypes: je,
            transform: function(j1, jZ, j0) {
                if (jk(!!j1, "The args[0] input coordinate is required"),
                jk(!!jZ, "The args[1] original coordinate system is required"),
                jk(!!j0, "The args[2] target coordinate system is required"),
                jZ === j0) {
                    return j1
                }
                var j3 = jx[jZ];
                jk(!!j3, "Invalid original coordinate system: " + jZ);
                var j2 = j3.to[j0];
                jk(!!j2, "Invalid target coordinate system: " + j0);
                var T = typeof j1;
                if (jk("string" === T || "object" === T, "Invalid input coordinate type: " + T),
                "string" === T) {
                    try {
                        j1 = JSON.parse(j1)
                    } catch (jZ) {
                        throw new Error("Invalid input coordinate: " + j1)
                    }
                }
                var jY = !1;
                jw(j1) && (jk(j1.length >= 2, "Invalid input coordinate: " + j1),
                jk(jr(j1[0]) && jr(j1[1]), "Invalid input coordinate: " + j1),
                j1 = j1.map(Number),
                jY = !0);
                var jX = j2;
                return jY ? jX(j1) : (jf(j1, (function(j4) {
                    var i;
                    i = jX(j4),
                    j4[0] = i[0],
                    j4[1] = i[1]
                }
                )),
                j1)
            }
        })
    }
    ));
    var gR = {
        ColorRefTable: {
            aliceblue: ["#f0f8ff", "rgb(240,248,255)"],
            antiquewhite: ["#faebd7", "rgb(250,235,215)"],
            aqua: ["#00ffff", "rgb(0,255,255)"],
            aquamarine: ["#7fffd4", "rgb(127,255,212)"],
            azure: ["#f0ffff", "rgb(240,255,255)"],
            beige: ["#f5f5dc", "rgb(245,245,220)"],
            bisque: ["#ffe4c4", "rgb(255,228,196)"],
            black: ["#000000", "rgb(0,0,0)"],
            blanchedalmond: ["#ffebcd", "rgb(255,235,205)"],
            blue: ["#0000ff", "rgb(0,0,255)"],
            blueviolet: ["#8a2be2", "rgb(138,43,226)"],
            brown: ["#a52a2a", "rgb(165,42,42)"],
            burlywood: ["#deb887", "rgb(222,184,135)"],
            cadetblue: ["#5f9ea0", "rgb(95,158,160)"],
            chartreuse: ["#7fff00", "rgb(127,255,0)"],
            chocolate: ["#d2691e", "rgb(210,105,30)"],
            coral: ["#ff7f50", "rgb(255,127,80)"],
            cornflowerblue: ["#6495ed", "rgb(100,149,237)"],
            cornsilk: ["#fff8dc", "rgb(255,248,220)"],
            crimson: ["#dc143c", "rgb(220,20,60)"],
            cyan: ["#00ffff", "rgb(0,255,255)"],
            darkblue: ["#00008b", "rgb(0,0,139)"],
            darkcyan: ["#008b8b", "rgb(0,139,139)"],
            darkgoldenrod: ["#b8860b", "rgb(184,134,11)"],
            darkgray: ["#a9a9a9", "rgb(169,169,169)"],
            darkgreen: ["#006400", "rgb(0,100,0)"],
            darkgrey: ["#a9a9a9", "rgb(169,169,169)"],
            darkkhaki: ["#bdb76b", "rgb(189,183,107)"],
            darkmagenta: ["#8b008b", "rgb(139,0,139)"],
            darkolivegreen: ["#556b2f", "rgb(85,107,47)"],
            darkorange: ["#ff8c00", "rgb(255,140,0)"],
            darkorchid: ["#9932cc", "rgb(153,50,204)"],
            darkred: ["#8b0000", "rgb(139,0,0)"],
            darksalmon: ["#e9967a", "rgb(233,150,122)"],
            darkseagreen: ["#8fbc8f", "rgb(143,188,143)"],
            darkslateblue: ["#483d8b", "rgb(72,61,139)"],
            darkslategray: ["#2f4f4f", "rgb(47,79,79)"],
            darkslategrey: ["#2f4f4f", "rgb(47,79,79)"],
            darkturquoise: ["#00ced1", "rgb(0,206,209)"],
            darkviolet: ["#9400d3", "rgb(148,0,211)"],
            deeppink: ["#ff1493", "rgb(255,20,147)"],
            deepskyblue: ["#00bfff", "rgb(0,191,255)"],
            dimgray: ["#696969", "rgb(105,105,105)"],
            dimgrey: ["#696969", "rgb(105,105,105)"],
            dodgerblue: ["#1e90ff", "rgb(30,144,255)"],
            firebrick: ["#b22222", "rgb(178,34,34)"],
            floralwhite: ["#fffaf0", "rgb(255,250,240)"],
            forestgreen: ["#228b22", "rgb(34,139,34)"],
            fuchsia: ["#ff00ff", "rgb(255,0,255)"],
            gainsboro: ["#dcdcdc", "rgb(220,220,220)"],
            ghostwhite: ["#f8f8ff", "rgb(248,248,255)"],
            gold: ["#ffd700", "rgb(255,215,0)"],
            goldenrod: ["#daa520", "rgb(218,165,32)"],
            gray: ["#808080", "rgb(128,128,128)"],
            green: ["#008000", "rgb(0,128,0)"],
            greenyellow: ["#adff2f", "rgb(173,255,47)"],
            grey: ["#808080", "rgb(128,128,128)"],
            honeydew: ["#f0fff0", "rgb(240,255,240)"],
            hotpink: ["#ff69b4", "rgb(255,105,180)"],
            indianred: ["#cd5c5c", "rgb(205,92,92)"],
            indigo: ["#4b0082", "rgb(75,0,130)"],
            ivory: ["#fffff0", "rgb(255,255,240)"],
            khaki: ["#f0e68c", "rgb(240,230,140)"],
            lavender: ["#e6e6fa", "rgb(230,230,250)"],
            lavenderblush: ["#fff0f5", "rgb(255,240,245)"],
            lawngreen: ["#7cfc00", "rgb(124,252,0)"],
            lemonchiffon: ["#fffacd", "rgb(255,250,205)"],
            lightblue: ["#add8e6", "rgb(173,216,230)"],
            lightcoral: ["#f08080", "rgb(240,128,128)"],
            lightcyan: ["#e0ffff", "rgb(224,255,255)"],
            lightgoldenrodyellow: ["#fafad2", "rgb(250,250,210)"],
            lightgray: ["#d3d3d3", "rgb(211,211,211)"],
            lightgreen: ["#90ee90", "rgb(144,238,144)"],
            lightgrey: ["#d3d3d3", "rgb(211,211,211)"],
            lightpink: ["#ffb6c1", "rgb(255,182,193)"],
            lightsalmon: ["#ffa07a", "rgb(255,160,122)"],
            lightseagreen: ["#20b2aa", "rgb(32,178,170)"],
            lightskyblue: ["#87cefa", "rgb(135,206,250)"],
            lightslategray: ["#778899", "rgb(119,136,153)"],
            lightslategrey: ["#778899", "rgb(119,136,153)"],
            lightsteelblue: ["#b0c4de", "rgb(176,196,222)"],
            lightyellow: ["#ffffe0", "rgb(255,255,224)"],
            lime: ["#00ff00", "rgb(0,255,0)"],
            limegreen: ["#32cd32", "rgb(50,205,50)"],
            linen: ["#faf0e6", "rgb(250,240,230)"],
            magenta: ["#ff00ff", "rgb(255,0,255)"],
            maroon: ["#800000", "rgb(128,0,0)"],
            mediumaquamarine: ["#66cdaa", "rgb(102,205,170)"],
            mediumblue: ["#0000cd", "rgb(0,0,205)"],
            mediumorchid: ["#ba55d3", "rgb(186,85,211)"],
            mediumpurple: ["#9370db", "rgb(147,112,219)"],
            mediumseagreen: ["#3cb371", "rgb(60,179,113)"],
            mediumslateblue: ["#7b68ee", "rgb(123,104,238)"],
            mediumspringgreen: ["#00fa9a", "rgb(0,250,154)"],
            mediumturquoise: ["#48d1cc", "rgb(72,209,204)"],
            mediumvioletred: ["#c71585", "rgb(199,21,133)"],
            midnightblue: ["#191970", "rgb(25,25,112)"],
            mintcream: ["#f5fffa", "rgb(245,255,250)"],
            mistyrose: ["#ffe4e1", "rgb(255,228,225)"],
            moccasin: ["#ffe4b5", "rgb(255,228,181)"],
            navajowhite: ["#ffdead", "rgb(255,222,173)"],
            navy: ["#000080", "rgb(0,0,128)"],
            oldlace: ["#fdf5e6", "rgb(253,245,230)"],
            olive: ["#808000", "rgb(128,128,0)"],
            olivedrab: ["#6b8e23", "rgb(107,142,35)"],
            orange: ["#ffa500", "rgb(255,165,0)"],
            orangered: ["#ff4500", "rgb(255,69,0)"],
            orchid: ["#da70d6", "rgb(218,112,214)"],
            palegoldenrod: ["#eee8aa", "rgb(238,232,170)"],
            palegreen: ["#98fb98", "rgb(152,251,152)"],
            paleturquoise: ["#afeeee", "rgb(175,238,238)"],
            palevioletred: ["#db7093", "rgb(219,112,147)"],
            papayawhip: ["#ffefd5", "rgb(255,239,213)"],
            peachpuff: ["#ffdab9", "rgb(255,218,185)"],
            peru: ["#cd853f", "rgb(205,133,63)"],
            pink: ["#ffc0cb", "rgb(255,192,203)"],
            plum: ["#dda0dd", "rgb(221,160,221)"],
            powderblue: ["#b0e0e6", "rgb(176,224,230)"],
            purple: ["#800080", "rgb(128,0,128)"],
            red: ["#ff0000", "rgb(255,0,0)"],
            rosybrown: ["#bc8f8f", "rgb(188,143,143)"],
            royalblue: ["#4169e1", "rgb(65,105,225)"],
            saddlebrown: ["#8b4513", "rgb(139,69,19)"],
            salmon: ["#fa8072", "rgb(250,128,114)"],
            sandybrown: ["#f4a460", "rgb(244,164,96)"],
            seagreen: ["#2e8b57", "rgb(46,139,87)"],
            seashell: ["#fff5ee", "rgb(255,245,238)"],
            sienna: ["#a0522d", "rgb(160,82,45)"],
            silver: ["#c0c0c0", "rgb(192,192,192)"],
            skyblue: ["#87ceeb", "rgb(135,206,235)"],
            slateblue: ["#6a5acd", "rgb(106,90,205)"],
            slategray: ["#708090", "rgb(112,128,144)"],
            slategrey: ["#708090", "rgb(112,128,144)"],
            snow: ["#fffafa", "rgb(255,250,250)"],
            springgreen: ["#00ff7f", "rgb(0,255,127)"],
            steelblue: ["#4682b4", "rgb(70,130,180)"],
            tan: ["#d2b48c", "rgb(210,180,140)"],
            teal: ["#008080", "rgb(0,128,128)"],
            thistle: ["#d8bfd8", "rgb(216,191,216)"],
            tomato: ["#ff6347", "rgb(255,99,71)"],
            turquoise: ["#40e0d0", "rgb(64,224,208)"],
            violet: ["#ee82ee", "rgb(238,130,238)"],
            wheat: ["#f5deb3", "rgb(245,222,179)"],
            white: ["#ffffff", "rgb(255,255,255)"],
            whitesmoke: ["#f5f5f5", "rgb(245,245,245)"],
            yellow: ["#ffff00", "rgb(255,255,0)"],
            yellowgreen: ["#9acd32", "rgb(154,205,50)"]
        },
        parseHexToRgbaArray: function(jg) {
            var jh = jg.replace("#", "");
            if (jh.length === 3) {
                jh += "f"
            } else {
                if (jh.length === 6) {
                    jh += "ff"
                }
            }
            var e = [];
            var jf = jh.length;
            var je = jf === 8 ? 2 : 1;
            for (var T = 0; T < jf; T = T + je) {
                if (je === 2) {
                    e.push(parseInt(jh.slice(T, T + 2), 16))
                } else {
                    e.push(parseInt(jh.slice(T, T + 1) + jh.slice(T, T + 1), 16))
                }
            }
            return e
        },
        parseRgbaStrToArray: function(i) {
            var e = [0, 0, 0, 255];
            if (i.indexOf("rgba(") === 0) {
                var je = i.replace("rgba(", "").replace(")", "");
                var T = je.split(",");
                e[0] = parseInt(T[0], 10);
                e[1] = parseInt(T[1], 10);
                e[2] = parseInt(T[2], 10);
                e[3] = Math.round(parseFloat(T[3]) * 255)
            } else {
                if (i.indexOf("rgb(") === 0) {
                    var je = i.replace("rgb(", "").replace(")", "");
                    var jf = je.split(",");
                    e[0] = parseInt(jf[0], 10);
                    e[1] = parseInt(jf[1], 10);
                    e[2] = parseInt(jf[2], 10);
                    e[3] = 255
                }
            }
            return e
        },
        parseHexAndOpacityToRgbaArray: function(jf, jg) {
            var T = [];
            var jj = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;
            var ji = jf.toLowerCase();
            if (jj.test(ji)) {
                if (ji.length === 4) {
                    var e = "#";
                    for (var jh = 1; jh < 4; jh++) {
                        e += ji.slice(jh, jh + 1).concat(ji.slice(jh, jh + 1))
                    }
                    ji = e
                }
                for (var je = 1; je < 7; je += 2) {
                    T.push(parseInt(ji.slice(je, je + 2), 16))
                }
                T.push(jg)
            }
            return T
        },
        parseCSSColor: function(e) {
            if (e.indexOf("#") === 0) {
                return gR.parseHexToRgbaArray(e)
            }
            return gR.parseRgbaStrToArray(e)
        },
        rgbToHSV: function(jf) {
            var e = jf[0] / 255;
            var T = jf[1] / 255;
            var jg = jf[2] / 255;
            var jj = Math.max(e, T, jg);
            var je = Math.min(e, T, jg);
            var ji = jj - je;
            var i;
            if (ji === 0) {
                i = 0
            } else {
                if (jj === e) {
                    i = 60 * (((T - jg) / ji) % 6)
                } else {
                    if (jj === T) {
                        i = 60 * ((jg - e) / ji + 2)
                    } else {
                        if (jj === jg) {
                            i = 60 * ((e - T) / ji + 4)
                        }
                    }
                }
            }
            var jk = jj === 0 ? 0 : (ji / jj);
            var jh = jj;
            while (i < 0) {
                i += 360
            }
            return [i, jk, jh]
        },
        hsvToRGB: function(je) {
            var ji = je[2] * je[1];
            var T = ji * (1 - Math.abs((je[0] / 60) % 2 - 1));
            var i = je[2] - ji;
            var jf = je[0];
            var jh;
            var jg;
            var e;
            if (jf >= 0 && jf < 60) {
                jh = ji;
                jg = T;
                e = 0
            } else {
                if (jf >= 60 && jf < 120) {
                    jh = T;
                    jg = ji;
                    e = 0
                } else {
                    if (jf >= 120 && jf < 180) {
                        jh = 0;
                        jg = ji;
                        e = T
                    } else {
                        if (jf >= 180 && jf < 240) {
                            jh = 0;
                            jg = T;
                            e = ji
                        } else {
                            if (jf >= 240 && jf < 300) {
                                jh = T;
                                jg = 0;
                                e = ji
                            } else {
                                if (jf >= 300 && jf < 360) {
                                    jh = ji;
                                    jg = 0;
                                    e = T
                                }
                            }
                        }
                    }
                }
            }
            jh = (jh + i) * 255 > 255 ? 255 : (jh + i) * 255;
            jg = (jg + i) * 255 > 255 ? 255 : (jg + i) * 255;
            e = (e + i) * 255 > 255 ? 255 : (e + i) * 255;
            return [Math.round(jh), Math.round(jg), Math.round(e)]
        },
        formatColorCssToRgbaArray: function(jg, T, je) {
            je = (typeof je !== "boolean") ? true : je;
            if (typeof jg !== "string") {
                return je ? [0, 0, 0, 1] : [0, 0, 0, 255]
            }
            var i = (jg || "Black").trim().toLowerCase();
            var e = [];
            var jf = gR.ColorRefTable[i];
            if (jf !== undefined) {
                i = jf[0]
            }
            e = gR.parseCSSColor(i);
            if (T !== undefined && !isNaN(Number(T))) {
                T = Number(T);
                e[3] = gR.fitTo(T, 0, 1)
            } else {
                e[3] = Number((e[3] / 255).toFixed(2))
            }
            if (!je) {
                e[3] = Math.floor(e[3] * 255)
            }
            return e
        },
        fitTo: function(T, i, e) {
            if (T < i) {
                T = i
            } else {
                if (T > e) {
                    T = e
                }
            }
            return T
        },
        generateColorRamp: function(e, jk, jl, je, jq) {
            jl = jl || [];
            je = je || "#ccc";
            jq = jq || 1;
            const T = document.createElement("canvas");
            const jr = T.getContext("2d");
            T.width = 256;
            T.height = jq;
            const jg = jk[0];
            const jn = jk[jk.length - 1];
            if (e.length === jk.length) {
                const jo = jr.createLinearGradient(0, 0, 256, 1);
                for (var jj = 0; jj < e.length; ++jj) {
                    var jp = (jk[jj] - jg) / (jn - jg);
                    jo.addColorStop(jp, e[jj])
                }
                jr.fillStyle = jo;
                jr.fillRect(0, 0, 256, jq)
            } else {
                if (e.length - jk.length === -1) {
                    var ji = 0;
                    var jf = 1;
                    for (var jj = 0; jj < e.length; ++jj) {
                        var jm = (jk[jf] - jg) / (jn - jg);
                        var jp = Math.floor(jm * 256);
                        jr.fillStyle = e[jj];
                        jr.fillRect(ji, 0, jp, jq);
                        ji = jp;
                        jf++
                    }
                } else {
                    jr.fillStyle = je || "#ccc";
                    jr.fillRect(0, 0, 256, jq)
                }
            }
            if (e.length - jk.length <= -1 && jl.length === 2) {
                jr.fillStyle = je || "#ccc";
                var jm = (jl[0] - jg) / (jn - jg);
                var jp = Math.floor(jm * 256);
                jr.fillRect(0, 0, jp, jq);
                jm = (jl[1] - jg) / (jn - jg);
                jp = Math.floor(jm * 256);
                jr.fillRect(jp, 0, 255, jq)
            }
            var jh = new Uint8Array(new Uint8ClampedArray(jr.getImageData(0, 0, 256, jq).data));
            return {
                canvas: T,
                data: jh,
                width: 256,
                height: jq
            }
        }
    };
    (function(jg) {
        function jq(jv, jy) {
            var jx = (jv & 65535) + (jy & 65535);
            var jw = (jv >> 16) + (jy >> 16) + (jx >> 16);
            return (jw << 16) | (jx & 65535)
        }
        function jp(jv, jw) {
            return (jv << jw) | (jv >>> (32 - jw))
        }
        function jk(jA, jx, jw, jv, jz, jy) {
            return jq(jp(jq(jq(jx, jA), jq(jv, jy)), jz), jw)
        }
        function e(jx, jw, jB, jA, jv, jz, jy) {
            return jk((jw & jB) | (~jw & jA), jx, jw, jv, jz, jy)
        }
        function jh(jx, jw, jB, jA, jv, jz, jy) {
            return jk((jw & jA) | (jB & ~jA), jx, jw, jv, jz, jy)
        }
        function jn(jx, jw, jB, jA, jv, jz, jy) {
            return jk(jw ^ jB ^ jA, jx, jw, jv, jz, jy)
        }
        function jt(jx, jw, jB, jA, jv, jz, jy) {
            return jk(jB ^ (jw | ~jA), jx, jw, jv, jz, jy)
        }
        function T(jF, jA) {
            jF[jA >> 5] |= 128 << (jA % 32);
            jF[((jA + 64) >>> 9 << 4) + 14] = jA;
            var jx;
            var jz;
            var jy;
            var jw;
            var jv;
            var jE = 1732584193;
            var jD = -271733879;
            var jC = -1732584194;
            var jB = 271733878;
            for (jx = 0; jx < jF.length; jx += 16) {
                jz = jE;
                jy = jD;
                jw = jC;
                jv = jB;
                jE = e(jE, jD, jC, jB, jF[jx], 7, -680876936);
                jB = e(jB, jE, jD, jC, jF[jx + 1], 12, -389564586);
                jC = e(jC, jB, jE, jD, jF[jx + 2], 17, 606105819);
                jD = e(jD, jC, jB, jE, jF[jx + 3], 22, -1044525330);
                jE = e(jE, jD, jC, jB, jF[jx + 4], 7, -176418897);
                jB = e(jB, jE, jD, jC, jF[jx + 5], 12, 1200080426);
                jC = e(jC, jB, jE, jD, jF[jx + 6], 17, -1473231341);
                jD = e(jD, jC, jB, jE, jF[jx + 7], 22, -45705983);
                jE = e(jE, jD, jC, jB, jF[jx + 8], 7, 1770035416);
                jB = e(jB, jE, jD, jC, jF[jx + 9], 12, -1958414417);
                jC = e(jC, jB, jE, jD, jF[jx + 10], 17, -42063);
                jD = e(jD, jC, jB, jE, jF[jx + 11], 22, -1990404162);
                jE = e(jE, jD, jC, jB, jF[jx + 12], 7, 1804603682);
                jB = e(jB, jE, jD, jC, jF[jx + 13], 12, -40341101);
                jC = e(jC, jB, jE, jD, jF[jx + 14], 17, -1502002290);
                jD = e(jD, jC, jB, jE, jF[jx + 15], 22, 1236535329);
                jE = jh(jE, jD, jC, jB, jF[jx + 1], 5, -165796510);
                jB = jh(jB, jE, jD, jC, jF[jx + 6], 9, -1069501632);
                jC = jh(jC, jB, jE, jD, jF[jx + 11], 14, 643717713);
                jD = jh(jD, jC, jB, jE, jF[jx], 20, -373897302);
                jE = jh(jE, jD, jC, jB, jF[jx + 5], 5, -701558691);
                jB = jh(jB, jE, jD, jC, jF[jx + 10], 9, 38016083);
                jC = jh(jC, jB, jE, jD, jF[jx + 15], 14, -660478335);
                jD = jh(jD, jC, jB, jE, jF[jx + 4], 20, -405537848);
                jE = jh(jE, jD, jC, jB, jF[jx + 9], 5, 568446438);
                jB = jh(jB, jE, jD, jC, jF[jx + 14], 9, -1019803690);
                jC = jh(jC, jB, jE, jD, jF[jx + 3], 14, -187363961);
                jD = jh(jD, jC, jB, jE, jF[jx + 8], 20, 1163531501);
                jE = jh(jE, jD, jC, jB, jF[jx + 13], 5, -1444681467);
                jB = jh(jB, jE, jD, jC, jF[jx + 2], 9, -51403784);
                jC = jh(jC, jB, jE, jD, jF[jx + 7], 14, 1735328473);
                jD = jh(jD, jC, jB, jE, jF[jx + 12], 20, -1926607734);
                jE = jn(jE, jD, jC, jB, jF[jx + 5], 4, -378558);
                jB = jn(jB, jE, jD, jC, jF[jx + 8], 11, -2022574463);
                jC = jn(jC, jB, jE, jD, jF[jx + 11], 16, 1839030562);
                jD = jn(jD, jC, jB, jE, jF[jx + 14], 23, -35309556);
                jE = jn(jE, jD, jC, jB, jF[jx + 1], 4, -1530992060);
                jB = jn(jB, jE, jD, jC, jF[jx + 4], 11, 1272893353);
                jC = jn(jC, jB, jE, jD, jF[jx + 7], 16, -155497632);
                jD = jn(jD, jC, jB, jE, jF[jx + 10], 23, -1094730640);
                jE = jn(jE, jD, jC, jB, jF[jx + 13], 4, 681279174);
                jB = jn(jB, jE, jD, jC, jF[jx], 11, -358537222);
                jC = jn(jC, jB, jE, jD, jF[jx + 3], 16, -722521979);
                jD = jn(jD, jC, jB, jE, jF[jx + 6], 23, 76029189);
                jE = jn(jE, jD, jC, jB, jF[jx + 9], 4, -640364487);
                jB = jn(jB, jE, jD, jC, jF[jx + 12], 11, -421815835);
                jC = jn(jC, jB, jE, jD, jF[jx + 15], 16, 530742520);
                jD = jn(jD, jC, jB, jE, jF[jx + 2], 23, -995338651);
                jE = jt(jE, jD, jC, jB, jF[jx], 6, -198630844);
                jB = jt(jB, jE, jD, jC, jF[jx + 7], 10, 1126891415);
                jC = jt(jC, jB, jE, jD, jF[jx + 14], 15, -1416354905);
                jD = jt(jD, jC, jB, jE, jF[jx + 5], 21, -57434055);
                jE = jt(jE, jD, jC, jB, jF[jx + 12], 6, 1700485571);
                jB = jt(jB, jE, jD, jC, jF[jx + 3], 10, -1894986606);
                jC = jt(jC, jB, jE, jD, jF[jx + 10], 15, -1051523);
                jD = jt(jD, jC, jB, jE, jF[jx + 1], 21, -2054922799);
                jE = jt(jE, jD, jC, jB, jF[jx + 8], 6, 1873313359);
                jB = jt(jB, jE, jD, jC, jF[jx + 15], 10, -30611744);
                jC = jt(jC, jB, jE, jD, jF[jx + 6], 15, -1560198380);
                jD = jt(jD, jC, jB, jE, jF[jx + 13], 21, 1309151649);
                jE = jt(jE, jD, jC, jB, jF[jx + 4], 6, -145523070);
                jB = jt(jB, jE, jD, jC, jF[jx + 11], 10, -1120210379);
                jC = jt(jC, jB, jE, jD, jF[jx + 2], 15, 718787259);
                jD = jt(jD, jC, jB, jE, jF[jx + 9], 21, -343485551);
                jE = jq(jE, jz);
                jD = jq(jD, jy);
                jC = jq(jC, jw);
                jB = jq(jB, jv)
            }
            return [jE, jD, jC, jB]
        }
        function jo(jw) {
            var jx;
            var jv = "";
            var jy = jw.length * 32;
            for (jx = 0; jx < jy; jx += 8) {
                jv += String.fromCharCode((jw[jx >> 5] >>> (jx % 32)) & 255)
            }
            return jv
        }
        function jj(jw) {
            var jy;
            var jv = [];
            jv[(jw.length >> 2) - 1] = undefined;
            for (jy = 0; jy < jv.length; jy += 1) {
                jv[jy] = 0
            }
            var jx = jw.length * 8;
            for (jy = 0; jy < jx; jy += 8) {
                jv[jy >> 5] |= (jw.charCodeAt(jy / 8) & 255) << (jy % 32)
            }
            return jv
        }
        function ji(jv) {
            return jo(T(jj(jv), jv.length * 8))
        }
        function ju(jx, jA) {
            var jw;
            var jz = jj(jx);
            var jv = [];
            var jy = [];
            var jB;
            jv[15] = jy[15] = undefined;
            if (jz.length > 16) {
                jz = T(jz, jx.length * 8)
            }
            for (jw = 0; jw < 16; jw += 1) {
                jv[jw] = jz[jw] ^ 909522486;
                jy[jw] = jz[jw] ^ 1549556828
            }
            jB = T(jv.concat(jj(jA)), 512 + jA.length * 8);
            return jo(T(jy.concat(jB), 512 + 128))
        }
        function js(jy) {
            var jx = "0123456789abcdef";
            var jw = "";
            var jv;
            var jz;
            for (jz = 0; jz < jy.length; jz += 1) {
                jv = jy.charCodeAt(jz);
                jw += jx.charAt((jv >>> 4) & 15) + jx.charAt(jv & 15)
            }
            return jw
        }
        function jl(jv) {
            return unescape(encodeURIComponent(jv))
        }
        function je(jv) {
            return ji(jl(jv))
        }
        function jm(jv) {
            return js(je(jv))
        }
        function i(jv, jw) {
            return ju(jl(jv), jl(jw))
        }
        function jr(jv, jw) {
            return js(i(jv, jw))
        }
        function jf(jw, jx, jv) {
            if (!jx) {
                if (!jv) {
                    return jm(jw)
                }
                return je(jw)
            }
            if (!jv) {
                return jr(jx, jw)
            }
            return i(jx, jw)
        }
        if (typeof define === "function" && define.amd) {
            define(function() {
                return jf
            })
        } else {
            if (typeof module === "object" && module.exports) {
                module.exports = jf
            } else {
                jg.md5 = jf
            }
        }
    }
    )(this);
    var cq = {
        levels: {
            INFO: "info",
            WARNING: "warning",
            ERROR: "error"
        },
        category: {
            JS: "js",
            RESOURCE: "resource",
            AJAX: "ajax"
        },
        config: {
            jsError: true,
            resourceError: true,
            ajaxError: true
        },
        hosts: "api.map.baidu.com|webmap0.bdimg.com|maponline0.bdimg.com|",
        ignoreUrl: "api.map.11baidu.com/images/blank.gif",
        sender: true,
        collections: [],
        sendError: function() {},
        init: function(i, e, T) {
            this.hosts += i ? i : "";
            ak && ak(this.config, e);
            this.sender = true;
            if (T) {
                this.sender = false
            }
            this.hosts = this.urlScope(this.hosts);
            this.sendError = this.notifyError();
            var je = typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
            this.config.jsError && this.handleJavaScriptError(je);
            this.config.resourceError && this.handleResourceError(je);
            this.config.ajaxError && this.handleAjaxError(je)
        },
        handleJavaScriptError: function(T) {
            var e = this;
            var i = T.onerror;
            T.onerror = function(ji, jh, je, jg, jf) {
                if (e.isFetch(e.category.JS) && e.hostExit(jh)) {
                    if (jf && jf.stack) {
                        e.sendError({
                            title: ji,
                            msg: jf.stack,
                            category: e.category.JS,
                            level: e.levels.ERROR
                        })
                    } else {
                        if (typeof ji === "string") {
                            e.sendError({
                                title: ji,
                                msg: JSON.stringify({
                                    resourceUrl: jh,
                                    rowNum: je,
                                    colNum: jg
                                }),
                                category: "js",
                                level: e.levels.ERROR
                            })
                        }
                    }
                }
                if (i && bH(i)) {
                    i && i.apply(T, arguments)
                }
            }
        },
        handleResourceError: function(i) {
            var e = this;
            i.addEventListener("error", function(jg) {
                if (jg) {
                    var jh = jg.target || jg.srcElement;
                    var jf = jh instanceof HTMLScriptElement || jh instanceof HTMLLinkElement || jh instanceof HTMLImageElement;
                    if (!jf) {
                        if (!i.onerror) {
                            var T = jg.filename || null;
                            if (!e.isFetch(e.category.JS) || !e.hostExit(T)) {
                                return
                            }
                            if (jg.error && jg.error.stack) {
                                e.sendError({
                                    title: jg.message,
                                    msg: jg.error.stack,
                                    category: e.category.JS,
                                    level: e.levels.ERROR
                                })
                            } else {
                                if (typeof jg.message === "string") {
                                    e.sendError({
                                        title: jg.message,
                                        msg: JSON.stringify({
                                            resourceUrl: T,
                                            rowNum: jg.lineno,
                                            colNum: jg.cowno
                                        }),
                                        category: e.category.JS,
                                        level: e.levels.ERROR
                                    })
                                }
                            }
                        }
                        return
                    }
                    var je = jh.src || jh.href;
                    if (e.isFetch(e.category.RESOURCE) && e.hostExit(je)) {
                        e.sendError({
                            title: jh.nodeName,
                            msg: je,
                            category: e.category.RESOURCE,
                            level: e.levels.ERROR
                        })
                    }
                }
            }, true)
        },
        handleAjaxError: function(jg) {
            var e = this;
            var jf = jg.location.protocol;
            if (jf === "file:") {
                return
            }
            if (!jg.XMLHttpRequest) {
                return
            }
            var i = jg.XMLHttpRequest;
            var T = i.prototype.send;
            var je = function(ji) {
                if (ji && ji.currentTarget && ji.currentTarget.status !== 200) {
                    var jh = ji.target.responseURL;
                    if (e.isFetch(e.category.AJAX) && e.hostExit(jh)) {
                        e.sendError({
                            title: jh,
                            msg: JSON.stringify({
                                response: ji.target.response,
                                responseURL: jh,
                                status: ji.target.status,
                                statusText: ji.target.statusText
                            }),
                            category: e.category.AJAX,
                            level: e.levels.ERROR
                        })
                    }
                }
            };
            i.prototype.send = function() {
                if (this["addEventListener"]) {
                    this["addEventListener"]("error", je);
                    this["addEventListener"]("load", je);
                    this["addEventListener"]("abort", je)
                } else {
                    var jh = this["onreadystatechange"];
                    this["onreadystatechange"] = function(ji) {
                        if (this.readyState === 4) {
                            je(ji)
                        }
                        jh && jh.apply(this, arguments)
                    }
                }
                return T.apply(this, arguments)
            }
        },
        notifyError: function(T) {
            var i = T || 1000;
            this._idleWorkerTicker = (function(je) {
                return function() {
                    je.runJob()
                }
            }
            )(this);
            var e = this;
            return function(jf) {
                if (jf.url) {
                    if (!e.isFetch(jf.category)) {
                        return
                    }
                    var je = jf.url || "";
                    if (!e.hostExit(je)) {
                        return
                    }
                    delete jf.url
                }
                if (!navigator.onLine) {
                    return
                }
                e.collections.push(jf);
                e.checkJob(i)
            }
        },
        runJob: function() {
            if (this.collections.length === 0) {
                clearInterval(this.idleWork);
                this.idleWork = null;
                return
            }
            var jf = this.collections.slice(0, 2);
            var T = iq(JSON.stringify({
                dataset: jf
            }));
            var je = new Date().getTime();
            var i = d2.apiIMG + "/blank.gif?product=jsapi&v=gl&l=" + T + "&ak=" + el + "&t=" + je;
            if (this.sender) {
                try {
					return;
                    var jh = document.createElement("div");
                    jh.style = "width:0;height:0;visibility: hidden;opacity: 0;z-index:-999;background-image: url(" + i + ");";
                    document.querySelector("BODY").appendChild(jh);
                    setTimeout(function() {
                        document.querySelector("BODY").removeChild(jh)
                    })
                } catch (jg) {}
            }
            this.collections.splice(0, 2);
            if (this.collections.length === 0) {
                clearInterval(this.idleWork);
                this.idleWork = null
            }
        },
        checkJob: function(e) {
            if (!this.idleWork && this._idleWorkerTicker) {
                this.idleWork = setInterval(this._idleWorkerTicker, e)
            }
        },
        urlScope: function(je) {
            var T = {};
            var jg = Object.keys(w);
            if (w && jg.length > 0) {
                for (var jf in w) {
                    if (w[jf] && (typeof w[jf] !== "function")) {
                        T[jf] = w[jf]
                    }
                }
            }
            try {
                var ji = JSON.stringify(T);
                if (ji.length > 2) {
                    return je + "|" + ji
                } else {
                    return je
                }
            } catch (jh) {
                return je
            }
        },
        hostExit: function(i) {
            try {
                if (i && i.indexOf("//") === 0) {
                    i = window.location.protocol + i
                }
                var T = new URL(i);
                if (!T || !T.host) {
                    return false
                }
                var jf = T.host + T.pathname;
                if (this.ignoreUrl.indexOf(jf) === -1 && this.hosts.indexOf(T.host) > -1) {
                    return true
                }
                return false
            } catch (je) {
                return false
            }
        },
        isFetch: function(e) {
            return this.config[e + "Error"] || false
        }
    };
    bp.fetchDebug = cq;
    var iZ = {
        request: function(jm, ji, je, jp, jg) {
            var jj = new Date()["getTime"]();
            var jl = (Math.random() * 100000)["toFixed"](0);
            bp._rd["_cbk" + jl] = function(jq) {
                if (jq.result && jq.result["error"] && jq.result["error"] === 202) {
                    alert("该AK因为恶意行为已经被管理员封禁！");
                    return
                }
                je = je || {};
                jm && jm(jq, je);
                delete bp._rd["_cbk" + jl]
            }
            ;
            jp = jp || "";
            var jo;
            var jf;
            if (je && je.useEncodeURI) {
                jo = ir(ji, encodeURI);
                jf = ir(ji)
            } else {
                jo = ir(ji, encodeURIComponent);
                jf = ir(ji)
            }
            var i = w.apiHost + "/" + jp + "?" + jo + "&ie=utf-8&oue=1&fromproduct=jsapi";
            var jk = w.apiHost + "/" + jp + "?" + jf + "&ie=utf-8&oue=1&fromproduct=jsapi";
            if (!jg) {
                i += "&res=api";
                jk += "&res=api"
            }
            i += "&callback=" + eY + "._rd._cbk" + jl;
            jk += "&callback=" + eY + "._rd._cbk" + jl;
            var jh = window.___abvk ? window.___abvk : iZ.getSeckeyCidItem("SECKEY_ABVK");
            var e = iZ.getSeckeyCidItem("BMAP_SECKEY");
            var jn = encodeURIComponent(jh + "," + e);
            var T = jh + "," + e;
            i += "&ak=" + el + "&v=gl&seckey=" + jn + "&timeStamp=" + jj;
            jk += "&ak=" + el + "&v=gl&seckey=" + T + "&timeStamp=" + jj;
            i += iu()(jk);
            //原来的
			//ga.load(i)
        },
        getSeckeyCidItem: function(i) {
            if (navigator.cookieEnabled) {
                var T = new RegExp("(^| )" + i + "=([^;]*)(;|$)");
                var e = document.cookie.match(T);
                if (e) {
                    return unescape(e[2])
                }
                return -1
            }
            if (localStorage) {
                return localStorage.getItem(i) ? localStorage.getItem(i) : -1
            }
            if (sessionStorage) {
                return sessionStorage.getItem(i) ? localStorage.getItem(i) : -1
            }
        }
    };
    window.srqtimer = null;
    window.firstTime = true;
    window.srqcount = 0;
    bp._rd = {};
    var cV = {
        request: function(jh, e) {
			//改
			//if (/^http/.test(hR)) return; // 添加这一行
            if (e) {
				debugger
                var jg = (Math.random() * 100000).toFixed(0);
                BMapGL._rd["_cbk" + jg] = function(jj) {
                    e && e(jj);
                    delete BMapGL._rd["_cbk" + jg]
                }
                ;
                jh += "&callback=BMapGL._rd._cbk" + jg
            }
            function jf(jk) {
                var jj;
                var jl = new RegExp("(^| )" + jk + "=([^;]*)(;|$)");
                if (jj = document.cookie.match(jl)) {
                    return unescape(jj[2])
                } else {
                    return -1
                }
            }
            if (jh.indexOf("v=") === -1) {
                jh += "&v=gl"
            }
            var T = window.___abvk ? window.___abvk : this.getSeckeyCidItem("SECKEY_ABVK");
            var ji = this.getSeckeyCidItem("BMAP_SECKEY");
            var i = encodeURIComponent(T + "," + ji);
            jh += "&seckey=" + i;
            var je = bL("script", {
                src: jh,
                type: "text/javascript",
                charset: "utf-8"
            });
            if (je.addEventListener) {
                je.addEventListener("load", function(jk) {
                    var jj = jk.target;
                    jj.parentNode.removeChild(jj)
                }, false);
                je.addEventListener("error", function(jj) {
                    e && e([, , , , , ])
                }, false)
            } else {
                if (je.attachEvent) {
                    je.attachEvent("onreadystatechange", function(jk) {
                        var jj = window.event.srcElement;
                        if (jj && (jj.readyState == "loaded" || jj.readyState == "complete")) {
                            jj.parentNode.removeChild(jj)
                        }
                    })
                }
            }
            document.getElementsByTagName("head")[0].appendChild(je);
            je = null
        },
        getSeckeyCidItem: function(i) {
            if (navigator.cookieEnabled) {
                var T = new RegExp("(^| )" + i + "=([^;]*)(;|$)");
                var e = document.cookie.match(T);
                if (e) {
                    return unescape(e[2])
                }
                return -1
            }
            if (localStorage) {
                return localStorage.getItem(i) ? localStorage.getItem(i) : -1
            }
            if (sessionStorage) {
                return sessionStorage.getItem(i) ? localStorage.getItem(i) : -1
            }
        }
    };
    function f5() {
        this._map = null;
        this._container;
        this._type = "control";
        this.blockInfoWindow = true;
        this._visible = true
    }
    f5.inherits(cM, "Control");
    ev.extend(f5.prototype, {
        initialize: function(e) {
            this._map = e;
            if (this._container) {
                if (this._opts && this._opts.container) {
                    this._opts.container.appendChild(this._container)
                } else {
                    e.container.appendChild(this._container)
                }
                return this._container
            }
            return
        },
        _i: function(e) {
            if (!this._container && this.initialize && bH(this.initialize)) {
                this._container = this.initialize(e)
            }
            this._opts = this._opts || {
                printable: false
            };
            this._setStyle();
            this._setPosition();
            if (this._container) {
                this._container._jsobj = this
            }
        },
        _setStyle: function() {
            var i = this._container;
            if (i) {
                var e = i.style;
                e.position = "absolute";
                e.zIndex = this._cZIndex || "10";
                e.MozUserSelect = "none";
                if (!this._opts.printable) {
                    ev.ac(i, "BMap_noprint")
                }
                ev.on(i, "contextmenu", gH)
            }
        },
        remove: function() {
            this._map = null;
            if (!this._container) {
                return
            }
            this._container.parentNode && this._container.parentNode.removeChild(this._container);
            this._container._jsobj = null;
            this._container = null
        },
        _render: function(e) {
            if (this._opts && this._opts.container) {
                this._container = bB(this._opts.container, '<div unselectable="on"></div>')
            } else {
                var i = '<div unselectable="on"></div>';
                if (e && e.config.autoSafeArea && cb()) {
                    this._safeAreaContainer = bB(this._map.container, i);
                    this._safeAreaContainer.style.position = "absolute";
                    this._safeAreaContainer.style.bottom = "env(safe-area-inset-bottom)";
                    this._container = bB(this._safeAreaContainer, i)
                } else {
                    this._container = bB(this._map.container, i)
                }
            }
            if (this._visible === false) {
                this._container.style.display = "none"
            }
            return this._container
        },
        _setPosition: function() {
            this.setAnchor(this._opts.anchor)
        },
        setAnchor: function(je) {
            if (this.anchorFixed || typeof je !== "number" || isNaN(je) || je < BMAP_ANCHOR_TOP_LEFT || je > BMAP_ANCHOR_BOTTOM_RIGHT) {
                je = this.defaultAnchor
            }
            this._opts.offset = this._opts.offset || this.defaultOffset;
            var T = this._opts.anchor;
            this._opts.anchor = je;
            if (!this._container) {
                return
            }
            var jg = this._container;
            var e = this._opts.offset.width;
            var jf = this._opts.offset.height;
            jg.style.left = jg.style.top = jg.style.right = jg.style.bottom = "auto";
            switch (je) {
            case BMAP_ANCHOR_TOP_LEFT:
                jg.style.top = jf + "px";
                jg.style.left = e + "px";
                break;
            case BMAP_ANCHOR_TOP_RIGHT:
                jg.style.top = jf + "px";
                jg.style.right = e + "px";
                break;
            case BMAP_ANCHOR_BOTTOM_LEFT:
                jg.style.bottom = jf + "px";
                jg.style.left = e + "px";
                break;
            case BMAP_ANCHOR_BOTTOM_RIGHT:
                jg.style.bottom = jf + "px";
                jg.style.right = e + "px";
                break;
            default:
                break
            }
            var i = ["TL", "TR", "BL", "BR"];
            ev.rc(this._container, "anchor" + i[T]);
            ev.ac(this._container, "anchor" + i[je])
        },
        getAnchor: function() {
            return this._opts.anchor
        },
        setOffset: function(e) {
            if (!e) {
                return
            }
            this._opts = this._opts || {};
            this._opts.offset = new h8(e.width,e.height);
            if (!this._container) {
                return
            }
            this.setAnchor(this._opts.anchor)
        },
        getOffset: function() {
            return this._opts.offset
        },
        getDom: function() {
            return this._container
        },
        show: function() {
            if (this._visible === true) {
                return
            }
            this._visible = true;
            if (this._container) {
                this._container.style.display = ""
            }
            this.dispatchEvent(new fa("onshow"))
        },
        hide: function() {
            if (this._visible === false) {
                return
            }
            this._visible = false;
            if (this._container) {
                this._container.style.display = "none"
            }
            this.dispatchEvent(new fa("onhide"))
        },
        isPrintable: function() {
            return !!this._opts.printable
        },
        isVisible: function() {
            if (!this._container && !this._map) {
                return false
            }
            return !!this._visible
        },
        _asyncLoadCode: function() {
            var e = this;
            gn.load("control", function() {
                if (e._asyncDraw) {
                    e._asyncDraw()
                }
            })
        }
    });
    var dO = {
        TOP_LEFT: 0,
        TOP_RIGHT: 1,
        BOTTOM_LEFT: 2,
        BOTTOM_RIGHT: 3
    };
    bp.ControlAnchor = dO;
    window.BMAP_ANCHOR_TOP_LEFT = 0;
    window.BMAP_ANCHOR_TOP_RIGHT = 1;
    window.BMAP_ANCHOR_BOTTOM_LEFT = 2;
    window.BMAP_ANCHOR_BOTTOM_RIGHT = 3;
    function fv(e) {
        f5.call(this);
        e = e || {};
        this._opts = {
            printable: false
        };
        ev.extend(this._opts, e);
        this._copyrightCollection = [];
        this.defaultAnchor = BMAP_ANCHOR_BOTTOM_LEFT;
        this.defaultOffset = new h8(5,2);
        this.setAnchor(e.anchor);
        this._canShow = true;
        this.sateMapStyle = false;
        this.blockInfoWindow = false;
        this._asyncLoadCode()
    }
    fv.inherits(f5, "CopyrightControl");
    ev.extend(fv.prototype, {
        initialize: function(e) {
            this._map = e;
            return this._container
        },
        addCopyright: function(je) {
            var e = {
                minZoom: 0,
                bounds: null,
                content: "",
                mapType: ""
            };
            for (var T in je) {
                e[T] = je[T]
            }
            if (this._map) {
                var jh = e.minZoom;
                if (jh === -1 || jh < this._map.getMinZoom() || jh > this._map.getMaxZoom()) {
                    e.minZoom = this._map.getMinZoom()
                }
                if (e.mapType !== "" && !dR[e.mapType]) {
                    e.mapType = BMAPGL_NORMAL_MAP
                }
            }
            var jf = this.getCopyright(je.id);
            if (jf) {
                for (var jg in e) {
                    jf[jg] = e[jg]
                }
            } else {
                this._copyrightCollection.push(e)
            }
        },
        getCopyright: function(je) {
            for (var T = 0, e = this._copyrightCollection.length; T < e; T++) {
                if (this._copyrightCollection[T].id === je) {
                    return this._copyrightCollection[T]
                }
            }
        },
        addSateMapStyle: function() {
            this.sateMapStyle = true;
            if (this._container) {
                ev.ac(this._container, "BMap_cpyCtrl_w")
            }
        },
        removeSateMapStyle: function() {
            this.sateMapStyle = false;
            if (this._container) {
                ev.rc(this._container, "BMap_cpyCtrl_w")
            }
        }
    });
    function bk(e) {
        f5.call(this);
        e = e || {};
        this.canCheckSize = e.canCheckSize === false ? false : true;
        this.curCityName = "";
        this.curCityCode = "";
        this.defaultOffset = new h8(10,10);
        this.defaultAnchor = dO.TOP_LEFT;
        this.onChangeBefore = [];
        this.onChangeAfter = [];
        this.onChangeSuccess = [];
        this._opts = {
            printable: false,
            offset: e.offset || this.defaultOffset,
            anchor: e.anchor || this.defaultAnchor,
            expand: !!(e.expand)
        };
        if (e.onChangeBefore && bH(e.onChangeBefore)) {
            this.onChangeBefore.push(e.onChangeBefore)
        }
        if (e.onChangeAfter && bH(e.onChangeAfter)) {
            this.onChangeAfter.push(e.onChangeAfter)
        }
        if (e.onChangeSuccess && bH(e.onChangeSuccess)) {
            this.onChangeSuccess.push(e.onChangeSuccess)
        }
        this.setAnchor(e.anchor);
        this._asyncLoadCode()
    }
    bk.inherits(f5, "CityListControl");
    ev.extend(bk.prototype, {
        initialize: function(e) {
            this._map = e;
            return this._container
        }
    });
    function jd(e) {
        f5.call(this);
        e = e || {};
        this._opts = {
            printable: false
        };
        this._opts = ev.extend(ev.extend(this._opts, {
            unit: "metric"
        }), e);
        this.defaultAnchor = BMAP_ANCHOR_BOTTOM_LEFT;
        this.defaultOffset = new h8(81,18);
        if (bK()) {
            this.defaultOffset = new h8(75,10)
        }
        this.setAnchor(e.anchor);
        this._units = {
            metric: {
                name: "metric",
                conv: 1,
                incon: 1000,
                u1: "米",
                u2: "公里"
            },
            us: {
                name: "us",
                conv: 3.2808,
                incon: 5280,
                u1: "英尺",
                u2: "英里"
            }
        };
        this.sateMapStyle = false;
        if (!this._units[this._opts.unit]) {
            this._opts.unit = "metric"
        }
        this._scaleText = null;
        this._numberArray = {};
        this._asyncLoadCode()
    }
    window.BMAP_UNIT_METRIC = "metric";
    window.BMAP_UNIT_IMPERIAL = "us";
    jd.inherits(f5, "ScaleControl");
    ev.extend(jd.prototype, {
        initialize: function(e) {
            this._map = e;
            return this._container
        },
        setUnit: function(e) {
            this._opts.unit = this._units[e] && this._units[e].name || this._opts.unit
        },
        getUnit: function() {
            return this._opts.unit
        },
        addSateMapStyle: function() {
            this.sateMapStyle = true;
            var e = this._container;
            if (e) {
                ev.ac(e.children[0], "dark")
            }
        },
        removeSateMapStyle: function() {
            this.sateMapStyle = false;
            var e = this._container;
            if (e) {
                ev.rc(e.children[0], "dark")
            }
        }
    });
    window.BMAP_NAVIGATION_CONTROL_LARGE = 0;
    window.BMAP_NAVIGATION_CONTROL_SMALL = 1;
    window.BMAP_NAVIGATION_CONTROL_PAN = 2;
    window.BMAP_NAVIGATION_CONTROL_ZOOM = 3;
    window.BMAP_NAVIGATION_CONTROL_ANIM = 4;
    function iK(e) {
        f5.call(this);
        e = e || {};
        this._opts = {
            printable: false
        };
        ev.extend(this._opts, e);
        this.controlHeight = [{
            width: 65,
            height: 227,
            zoomHeight: 227,
            zoomWidth: 37,
            sliderHeight: 180
        }, {
            width: 65,
            height: 47,
            zoomHeight: (this._opts.forceNew === true) ? 56 : 47,
            zoomWidth: 37,
            sliderHeight: 0
        }, {
            width: 37,
            height: 57,
            zoomHeight: 0,
            zoomWidth: 0,
            sliderHeight: 0
        }, {
            width: 26,
            height: 56,
            zoomHeight: 56,
            zoomWidth: 6,
            sliderHeight: 0
        }, {
            width: 56,
            height: 47,
            zoomHeight: 47,
            zoomWidth: 37,
            sliderHeight: 180
        }];
        this.defaultAnchor = BMAP_ANCHOR_TOP_LEFT;
        this.defaultOffset = new h8(10,10);
        this.setAnchor(e.anchor);
        this.setType(e.type);
        this._maxTotalZoomLv = 19;
        this._minZoomLevel = -1;
        this._maxZoomLevel = -1;
        this._totalZoomLv = -1;
        this._sliderInterval = 10;
        this._sliderHeight = 180;
        this._minBarY = 1;
        this._maxBarY = -1;
        this._curBarY = -1;
        this._zoomDom = null;
        this._zoomBtnDom = null;
        this._sliderDom = null;
        this._sliderBaseDom = null;
        this._cZIndex = "1100";
        this._asyncLoadCode()
    }
    iK.inherits(f5, "NavigationControl");
    ev.extend(iK.prototype, {
        initialize: function(e) {
            this._map = e;
            return this._container
        },
        setType: function(e) {
            if (typeof e == "number" && e >= BMAP_NAVIGATION_CONTROL_LARGE && e <= BMAP_NAVIGATION_CONTROL_ANIM) {
                this._opts.type = e
            } else {
                this._opts.type = BMAP_NAVIGATION_CONTROL_LARGE
            }
        },
        getType: function() {
            return this._opts.type
        }
    });
    function u(i) {
        f5.call(this);
        i = i || {};
        this._opts = {
            printable: false
        };
        this.defaultAnchor = BMAP_ANCHOR_TOP_RIGHT;
        this.defaultOffset = new h8(10,10);
        this.setAnchor(i.anchor);
        this._opts = ev.extend(ev.extend(this._opts, {
            offset: this.defaultOffset,
            enableSwitch: true
        }), i);
        var e = this;
        gn.load("control", function() {
            e._asyncDraw()
        })
    }
    u.inherits(f5, "MapTypeControl");
    ev.extend(u.prototype, {
        initialize: function(e) {
            this._map = e;
            return this._container
        },
        showStreetLayer: function(e) {
            this._map.showStreetLayer(e)
        }
    });
    function ij(e) {
        f5.call(this);
        e = e || {};
        this._opts = {};
        this._opts = ev.extend(this._opts, e);
        this._zoomInDisabled = false;
        this._zoomOutDisabled = false;
        this._zoomInTapped = false;
        this._zoomOutTapped = false;
        this.defaultAnchor = dO.BOTTOM_RIGHT;
        this.defaultOffset = new h8(15,20);
        this.setAnchor(e.anchor);
        this._asyncLoadCode()
    }
    ij.inherits(f5, "ZoomControl");
    ev.extend(ij.prototype, {
        initialize: function(e) {
            this._map = e;
            return this._container
        }
    });
    function fN(e) {
        f5.call(this);
        e = e || {};
        this._opts = {
            autoZoom: true,
            autoViewport: true
        };
        this._opts = ev.extend(this._opts, e);
        this.defaultAnchor = dO.BOTTOM_LEFT;
        this.defaultOffset = new h8(10,50);
        this.watchPosition = this._opts.watchPosition || false;
        this.useCompass = this._opts.useCompass || false;
        this.locMarker = null;
        this.locLevel = 16;
        this.setAnchor(this._opts.anchor);
        this.onLocationStart = e.onLocationStart || null;
        this._asyncLoadCode()
    }
    fN.inherits(f5, "LocationControl");
    ev.extend(fN.prototype, {
        initialize: function(e) {
            this._map = e;
            return this._container
        },
        startLocation: function() {
            this._startLocationCalled = true
        },
        stopLocationTrace: function() {},
        setOptions: function(e) {
            e = e || {};
            ev.extend(this._opts, e)
        }
    });
    function bs(e) {
        f5.call(this);
        e = e || {};
        this._opts = {};
        this._opts = ev.extend(this._opts, e);
        this.defaultAnchor = dO.BOTTOM_LEFT;
        this.defaultOffset = new h8(5,15);
        if (bK()) {
            this.defaultOffset = new h8(10,10)
        }
        this.setAnchor(e.anchor)
    }
    bs.inherits(f5, "LogoControl");
    ev.extend(bs.prototype, {
        initialize: function(i) {
			if(bmapcfg.left_marker){
				this._map = i;
				var e = this._container = document.createElement("div");
				e.innerHTML = '<img src="' + w.apiHost + '/images/logo_hd.png"  style="height:21px;width:62px;"/>';
				i.getContainer().appendChild(e);
				return e
			}
        }
    });
    function an(e, i) {
        this._map = e;
        this._indoorInfo = i;
        this._visible = true;
        this._adjustVisible = true;
        this._isMobile = bK();
        this._sizeConfig = {
            FLOOR_BTN_HEIGHT: this._isMobile ? 35 : 26,
            SWITCH_ARROW_HEIGHT: this._isMobile ? 20 : 15
        };
        this._init()
    }
    an.prototype._init = function() {
        this._render();
        this._bindDom();
        this._bind();
        this._adjustDisplayHeight();
        var e = new fa("onindoor_bar_show");
        e.uid = this._indoorInfo.uid;
        this._map.dispatchEvent(e)
    }
    ;
    an.prototype._render = function() {
        if (!this._indoorInfo) {
            return
        }
        var ji = this._isMobile;
        var e = this._div = bL("div");
        ev.ac(e, "floor-select-container");
        ji && ev.ac(e, "mobile");
        ji && ev.ac(e, "all-border-radius");
        var i = this._btnTop = bL("button");
        ev.ac(i, "floor-switch-top");
        ev.ac(i, "top-border-radius");
        var jg = bL("div");
        ev.ac(jg, "floor-switch-top-icon");
        i.appendChild(jg);
        var jf = this._btnBottom = bL("button");
        var T = bL("div");
        ev.ac(T, "floor-switch-bottom-icon");
        jf.appendChild(T);
        ev.ac(jf, "floor-switch-bottom");
        ev.ac(jf, "bottom-border-radius");
        var je = this._floorsContainer = bL("div");
        ev.ac(je, "floors-container");
        je.appendChild(this._createFloorsDom());
        this._div.appendChild(i);
        this._div.appendChild(je);
        this._div.appendChild(jf);
        var jj = 0;
        if (this._btnTop.style.display === "") {
            jj = 2 * this._sizeConfig.SWITCH_ARROW_HEIGHT
        }
        this._div.style.height = parseInt(this._floorsContainer.style.height, 10) + jj + "px";
        this._map.getContainer().appendChild(this._div);
        if (!ji) {
            var jh = this;
            setTimeout(function() {
                jh._div.style.right = "20px"
            }, 20)
        }
    }
    ;
    an.prototype._createFloorsDom = function() {
        if (!this._indoorInfo) {
            return
        }
        var T = this._ol = bL("ol");
        var jg = this._indoorInfo.currentFloor;
        for (var jf = this._indoorInfo.floors.length - 1; jf >= 0; jf--) {
            var jh = this._indoorInfo.floors[jf].floorName;
            var e = bL("li");
            var je = bL("button");
            ev.ac(je, "btn-select-floor");
            if (jf === jg) {
                ev.ac(je, "selected")
            }
            je.setAttribute("data-floor", jf);
            je.innerHTML = jh;
            e.appendChild(je);
            T.appendChild(e)
        }
        return T
    }
    ;
    an.prototype._updateUI = function() {
        if (!this._ol) {
            this._render();
            this._bind();
            this._adjustDisplayHeight();
            return
        }
        this._ol = null;
        this._ol = this._createFloorsDom();
        this._floorsContainer.innerHTML = "";
        this._floorsContainer.appendChild(this._ol);
        this._adjustDisplayHeight()
    }
    ;
    an.prototype._bindDom = function() {
        var e = this;
        ev.on(this._floorsContainer, "click", function(je) {
            var T = je.target || je.srcElement;
            if (T.tagName.toLowerCase() === "button") {
                e._map.showIndoor(e._indoorInfo.uid, parseInt(T.getAttribute("data-floor"), 10));
                var i = new fa("onindoor_bar_click");
                i.uid = e._indoorInfo.uid;
                e._map.dispatchEvent(i)
            }
        });
        ev.on(this._floorsContainer, "mouseover", function(T) {
            var i = T.target;
            if (i.tagName.toLowerCase() === "button") {
                ev.ac(i, "hover")
            }
        });
        ev.on(this._floorsContainer, "mouseout", function(T) {
            var i = T.target;
            if (i.tagName.toLowerCase() === "button") {
                ev.rc(i, "hover")
            }
        });
        ev.on(this._floorsContainer, "touchstart", function(T) {
            var i = T.target;
            if (i.tagName.toLowerCase() === "button") {
                ev.ac(i, "onmousedown")
            }
        });
        ev.on(this._floorsContainer, "touchend", function(T) {
            var i = T.target;
            if (i.tagName.toLowerCase() === "button") {
                ev.rc(i, "onmousedown")
            }
        });
        ev.on(this._btnTop, "mouseover", function(i) {
            if (this._disable) {
                return
            }
            ev.ac(this, "hover")
        });
        ev.on(this._btnTop, "mouseout", function(i) {
            ev.rc(this, "hover")
        });
        ev.on(this._btnBottom, "mouseover", function(i) {
            if (this._disable) {
                return
            }
            ev.ac(this, "hover")
        });
        ev.on(this._btnBottom, "mouseout", function(i) {
            ev.rc(this, "hover")
        });
        ev.on(this._btnTop, "touchstart", function(i) {
            if (this.className.indexOf("disable") > -1) {
                return
            }
            ev.ac(this, "onmousedown")
        });
        ev.on(this._btnTop, "touchend", function(i) {
            ev.rc(this, "onmousedown")
        });
        ev.on(this._btnBottom, "touchstart", function(i) {
            if (this.className.indexOf("disable") > -1) {
                return
            }
            ev.ac(this, "onmousedown")
        });
        ev.on(this._btnBottom, "touchend", function(i) {
            ev.rc(this, "onmousedown")
        });
        ev.on(this._btnTop, "click", function(i) {
            e._setBarSliderTop(parseInt(e._ol.style.top, 10) + 26)
        });
        ev.on(this._btnBottom, "click", function(i) {
            e._setBarSliderTop(parseInt(e._ol.style.top, 10) - 26)
        });
        ev.on(this._div, "mousemove", ad);
        ev.on(this._div, "wheel", gH);
        ev.on(this._div, "mousewheel", gH);
        this._map.addEventListener("resize", function() {
            e._adjustDisplayHeight()
        })
    }
    ;
    an.prototype._adjustDisplayHeight = function() {
        if (!this._indoorInfo) {
            return
        }
        var jg = this._map.getSize().height;
        var jh = this._sizeConfig.FLOOR_BTN_HEIGHT;
        var ji = jg - 291 - 100;
        if (this._isMobile) {
            ji = jg - 12 - 108 - this._map.config.bottomOffset
        }
        var e = this._indoorInfo.floors.length;
        var T = e * jh;
        var je = e;
        var jk = 0;
        var jl = this._floorsContainer.children[0];
        if (T > ji) {
            this._showArrow = true;
            ev.rc(jl.children[0].children[0], "top-border-radius");
            ev.rc(jl.children[e - 1].children[0], "bottom-border-radius")
        } else {
            this._showArrow = false;
            ev.ac(jl.children[0].children[0], "top-border-radius");
            ev.ac(jl.children[e - 1].children[0], "bottom-border-radius")
        }
        while (T > ji) {
            if (je === 0) {
                break
            }
            je--;
            jk = 2 * this._sizeConfig.SWITCH_ARROW_HEIGHT;
            T = je * jh + jk
        }
        this._currentDisplayHeight = T;
        if (je < 3) {
            this._setAdjustVisbile(false)
        } else {
            this._setAdjustVisbile(true)
        }
        this._floorsContainer.style.height = je * jh + "px";
        var jf = this._indoorInfo.currentFloor;
        var i = e - jf;
        var jj = jf - 1;
        this._div.style.height = parseInt(this._floorsContainer.style.height, 10) + jk + "px";
        var jm = -(e - (jf + Math.round(je / 2))) * jh;
        this._setBarSliderTop(jm);
        if (je < e) {
            ev.show(this._btnTop);
            ev.show(this._btnBottom)
        } else {
            ev.hide(this._btnTop);
            ev.hide(this._btnBottom);
            this._setBarSliderTop(0)
        }
        if (this._isMobile) {
            this._div.style.bottom = 108 + this._map.config.bottomOffset + "px"
        }
    }
    ;
    an.prototype._setBarSliderTop = function(je) {
        var T = 26;
        var i = this._indoorInfo.floors.length;
        var e = i * T;
        if (this._currentDisplayHeight) {
            if (this._showArrow) {
                e = this._currentDisplayHeight - 30
            } else {
                e = this._currentDisplayHeight
            }
        }
        if (e - je >= i * T) {
            je = e - i * T;
            ev.ac(this._btnBottom, "disable");
            ev.rc(this._btnBottom, "hover");
            this._btnBottom._disable = true
        } else {
            ev.rc(this._btnBottom, "disable");
            this._btnBottom._disable = false
        }
        if (je >= 0) {
            je = 0;
            ev.ac(this._btnTop, "disable");
            ev.rc(this._btnTop, "hover");
            this._btnTop._disable = true
        } else {
            ev.rc(this._btnTop, "disable");
            this._btnTop._disable = false
        }
        this._ol.style.top = je + "px"
    }
    ;
    an.prototype._setAdjustVisbile = function(e) {
        if (this._adjustVisible === e) {
            return
        }
        this._adjustVisible = e;
        if (e && this._visible) {
            this._div.style.right = "20px"
        } else {
            this._div.style.right = "-30px"
        }
    }
    ;
    an.prototype._bind = function() {
        var i = this._map;
        var e = this;
        i.on("indoor_status_changed", function(ji) {
            if (e._visible === false) {
                return
            }
            var T = e._ol;
            var jg = ji.uid;
            if (!jg) {
                return
            }
            var jh = ji.floor;
            for (var jf = 0; jf < T.children.length; jf++) {
                var je = T.children[jf].children[0];
                if (parseInt(je.getAttribute("data-floor"), 10) === jh) {
                    ev.ac(je, "selected")
                } else {
                    ev.rc(je, "selected")
                }
            }
        });
        i.on("zoomend", function(T) {
            if (this.getZoom() < 17) {
                e._setAdjustVisbile(false)
            } else {
                e._setAdjustVisbile(true)
            }
        })
    }
    ;
    an.prototype.setInfo = function(e) {
        if (this._indoorInfo && this._indoorInfo.uid === e.uid) {
            return
        }
        this._indoorInfo = e;
        this._updateUI()
    }
    ;
    an.prototype.show = function() {
        if (this._visible === true) {
            return
        }
        this._visible = true;
        if (!this._isMobile) {
            this._div.style.right = "20px"
        } else {
            this._div.style.display = ""
        }
        var e = new fa("onindoor_bar_show");
        e.uid = this._indoorInfo.uid;
        this._map.dispatchEvent(e)
    }
    ;
    an.prototype.hide = function() {
        if (this._visible === false) {
            return
        }
        this._visible = false;
        if (!this._isMobile) {
            this._div.style.right = "-30px"
        } else {
            this._div.style.display = "none"
        }
    }
    ;
    function ex(e) {
        this._opts = e || {};
        this.defaultOffset = new h8(2,80);
        this.defaultAnchor = BMAP_ANCHOR_TOP_RIGHT;
        if (this._opts.anchor === undefined) {
            this.setAnchor(this.defaultAnchor)
        } else {
            this.setAnchor(this._opts.anchor)
        }
        this._firstAnimation = true
    }
    ex.inherits(f5, "NavigationControl3D");
    ev.extend(ex.prototype, {
        initialize: function(T) {
            this._map = T;
            this._createDom();
            this._bindDom();
            this._bind();
            if (!bK()) {
                this._headingControl = new hQ(this._map,this._div)
            }
            this._tiltControl = new cx(this._map,this._div);
            this._render();
            var i = this._map.getMapType();
            var e = this;
            if (i === "B_EARTH_MAP" || this._map._renderType === "webgl") {
                e._div.style.opacity = "1";
                e._div.style.visibility = "visible"
            } else {
                e._div.style.opacity = "0";
                e._div.style.visibility = "hidden"
            }
            return this._container
        },
        _createDom: function() {
            var i = this._div = document.createElement("div");
            this._container = i;
            var e = i.style;
            e.position = "absolute";
            e.zIndex = 5;
            e.width = "52px";
            e.height = "82px";
            e.right = "-3px";
            e.bottom = "79px";
            e.opacity = "0";
            e.visibility = "hidden";
            e.WebkitTransition = e.transition = "opacity .3s ease-out,visibility .3s ease-out"
        },
        _render: function() {
            var e = document.getElementById("map-operate");
            if (e) {
                e.appendChild(this._div)
            } else {
                this._map.getContainer().appendChild(this._div)
            }
        },
        _bindDom: function() {
            this._div.addEventListener("mousemove", ad)
        },
        _bind: function() {
            if (this._map._renderType === "webgl") {
                return
            }
            var e = this;
            this._map.on("maptypechange", function() {
                if (this.mapType === "B_EARTH_MAP") {
                    if (e._firstAnimation) {
                        e._firstAnimation = false;
                        setTimeout(function() {
                            e._div.style.opacity = "1";
                            e._div.style.visibility = "visible"
                        }, 300)
                    } else {
                        e._div.style.opacity = "1";
                        e._div.style.visibility = "visible"
                    }
                } else {
                    e._div.style.opacity = "0";
                    e._div.style.visibility = "hidden"
                }
            })
        }
    });
    function hQ(T, i) {
        this._map = T;
        this._target = T;
        var je = T.temp.originMapType || T.mapType;
        if (je === "B_EARTH_MAP" && T._earth) {
            this._target = T._earth
        }
        this._outContainer = i || T.getContainer();
        this._imgRatio = fD() >= g0.HIGH_RES_MIN_RATIO ? 2 : 1;
        this._imgPath = w.imgPath + "earth-navi-control-pc4" + (this._imgRatio === 2 ? "-2x.png" : ".png");
        this._enabled = true;
        var e = this;
        this._setHeadingOptions = {
            callback: function() {
                e._target.setLock(false)
            }
        };
        this._init()
    }
    ev.extend(hQ.prototype, {
        _init: function() {
            this._createDom();
            this._render();
            this._bindDom();
            this._bind();
            this._updateUI();
            this._checkEnable()
        },
        _checkEnable: function() {
            if (this._target.getZoom() >= this._target._enableHeadingZoom) {
                this.enable()
            } else {
                this.disable()
            }
        },
        _createDom: function() {
            var i = this._div = bL("div");
            var e = i.style;
            e.position = "absolute";
            e.zIndex = 5;
            e.top = "0";
            e.left = "0";
            e.width = "52px";
            e.height = "54px";
            e.background = "url(" + this._imgPath + ") no-repeat";
            e.backgroundSize = "266px auto";
            this._rotateCCW = this._createButton();
            this._rotateCCW.title = "逆时针转动";
            e = this._rotateCCW.style;
            e.left = "2px";
            e.top = "5px";
            e.zIndex = "1";
            e.width = "15px";
            e.height = "42px";
            e.backgroundPosition = "-75px -5px";
            this._rotateCW = this._createButton();
            this._rotateCW.title = "顺时针转动";
            e = this._rotateCW.style;
            e.right = "2px";
            e.top = "5px";
            e.zIndex = "1";
            e.width = "15px";
            e.height = "42px";
            e.backgroundPosition = "-75px -5px";
            e.WebkitTransform = e.transform = "scaleX(-1)";
            this._compass = this._createButton();
            this._compass.title = "恢复正北方向";
            e = this._compass.style;
            e.left = "19px";
            e.top = "4px";
            e.width = "14px";
            e.height = "44px";
            e.backgroundPosition = "-56px -4px";
            e.WebkitTransform = e.transform = "rotate(0deg)";
            this._div.appendChild(this._rotateCCW);
            this._div.appendChild(this._compass);
            this._div.appendChild(this._rotateCW);
            this._domRendered = true
        },
        _createButton: function() {
            var e = bL("button");
            var i = e.style;
            i.position = "absolute";
            i.outline = "none";
            i.border = "none";
            i.background = "url(" + this._imgPath + ") no-repeat";
            i.backgroundSize = "266px auto";
            i.cursor = "pointer";
            return e
        },
        _render: function() {
            this._outContainer.appendChild(this._div)
        },
        enable: function() {
            this._enabled = true;
            if (this._domRendered) {
                this._rotateCCW.style.cursor = "pointer";
                this._rotateCCW.style.opacity = 1;
                this._rotateCW.style.cursor = "pointer";
                this._rotateCW.style.opacity = 1;
                this._compass.style.cursor = "pointer";
                this._compass.style.opacity = 1
            }
        },
        disable: function() {
            this._enabled = false;
            if (this._domRendered) {
                this._rotateCCW.style.cursor = "";
                this._rotateCCW.style.opacity = 0.4;
                this._rotateCW.style.cursor = "";
                this._rotateCW.style.opacity = 0.4;
                this._compass.style.cursor = "";
                this._compass.style.opacity = 0.4
            }
        },
        _bindDom: function() {
            hK(this._div, ["mousedown", "click", "dblclick"]);
            var i = this._map;
            var e = this;
            this._rotateCW.addEventListener("click", function() {
                if (e._isOperating || e._enabled === false) {
                    return
                }
                if (e._target.getLock()) {
                    return
                }
                if (e._target.getHeading() === 360) {
                    e._target.setHeading(0)
                }
                e._target.setLock(true);
                e._target.setHeading(e._target.getHeading() + 90, e._setHeadingOptions);
                i.fire(new fa("onrotatecwclick"))
            }, false);
            this._rotateCCW.addEventListener("click", function() {
                if (e._isOperating || e._enabled === false) {
                    return
                }
                if (e._target.getLock()) {
                    return
                }
                if (e._target.getHeading() === -360) {
                    e._target.setHeading(0)
                }
                e._target.setLock(true);
                e._target.setHeading(e._target.getHeading() - 90, e._setHeadingOptions);
                i.fire(new fa("onrotateccwclick"))
            }, false);
            this._rotateCW.addEventListener("mouseover", function() {
                if (e._enabled === false) {
                    return
                }
                this.style.backgroundPosition = "-89px -5px"
            }, false);
            this._rotateCW.addEventListener("mouseout", function() {
                if (e._enabled === false) {
                    return
                }
                this.style.backgroundPosition = "-75px -5px"
            }, false);
            this._rotateCCW.addEventListener("mouseover", function() {
                if (e._enabled === false) {
                    return
                }
                this.style.backgroundPosition = "-89px -5px"
            }, false);
            this._rotateCCW.addEventListener("mouseout", function() {
                if (e._enabled === false) {
                    return
                }
                this.style.backgroundPosition = "-75px -5px"
            }, false);
            this._compass.addEventListener("click", function() {
                if (e._isOperating || e._enabled === false) {
                    return
                }
                if (e._target.getLock()) {
                    return
                }
                e._target.setLock(true);
                var T = false;
                if (e._target.getTilt() !== 0) {
                    T = true;
                    e._target.setTilt(0, e._setHeadingOptions)
                }
                if (e._target.getHeading() % 360 !== 0) {
                    T = true;
                    e._target.resetHeading(e._setHeadingOptions)
                }
                if (!T) {
                    e._target.setLock(false)
                }
                i.fire(new fa("oncompassclick"))
            }, false)
        },
        _bind: function() {
            var e = this;
            this._bindTarget(this._target);
            if (this._map._renderType === "webgl") {
                this._map.addEventListener("maptypechange", function(i) {
                    if (this.mapType === "B_EARTH_MAP") {
                        e._target = e._map._earth
                    } else {
                        e._target = e._map
                    }
                    e._bindTarget(e._target);
                    e._checkEnable()
                })
            }
        },
        _bindTarget: function(i) {
            if (i === this._map && this._mapBinded) {
                return
            }
            if (i === this._map._earth && this._earthBinded) {
                return
            }
            var e = this;
            i.addEventListener("heading_changed", function(T) {
                e._updateUI()
            });
            i.addEventListener("animation_start", function(T) {
                e._isOperating = true
            });
            i.addEventListener("animation_end", function(T) {
                e._isOperating = false
            });
            i.on("load", function() {
                e._checkEnable()
            });
            i.on("zoom_changed", function() {
                e._checkEnable()
            });
            if (i === this._map) {
                this._mapBinded = true
            } else {
                this._earthBinded = true
            }
        },
        _updateUI: function() {
            var e = this._target.getHeading();
            var i = this._compass.style;
            i.WebkitTransform = i.transform = "rotate(" + e + "deg)"
        },
        hide: function() {
            this._div.style.display = "none"
        },
        show: function() {
            this._div.style.display = "block"
        }
    });
    function cx(T, i) {
        this._map = T;
        this._target = T;
        var je = T.temp.originMapType || T.mapType;
        if (je === "B_EARTH_MAP" && T._earth) {
            this._target = T._earth
        }
        this._outContainer = i || T.getContainer();
        this._imgRatio = fD() >= g0.HIGH_RES_MIN_RATIO ? 2 : 1;
        this._imgPath = w.imgPath + "gl-navi-control-pc4" + (this._imgRatio === 2 ? "-2x.png" : ".png");
        this._enabled = true;
        var e = this;
        this._setTiltOptions = {
            callback: function() {
                e._target.setLock(false)
            }
        };
        this._init()
    }
    ev.extend(cx.prototype, {
        _init: function() {
            this._createDom();
            this._render();
            this._bindDom();
            this._bind();
            this._checkEnable()
        },
        _checkEnable: function() {
            if (this._target.getZoom() >= this._target._enableTiltZoom) {
                this.enable()
            } else {
                this.disable()
            }
        },
        _createDom: function() {
            var e = this._div = bL("button");
            e.title = "倾斜";
            var i = e.style;
            i.position = "absolute";
            i.zIndex = 5;
            i.outline = "none";
            i.border = "none";
            i.cursor = "pointer";
            i.width = "26px";
            i.height = "26px";
            i.top = "56px";
            i.right = "13px";
            i.background = "url(" + this._imgPath + ") no-repeat #fff";
            i.backgroundSize = "266px auto";
            i.backgroundPosition = "-110px 1px";
            i.boxShadow = "1px 2px 1px rgba(0, 0, 0, 0.15)"
        },
        enable: function() {
            this._enabled = true;
            if (this._div) {
                this._div.style.cursor = "pointer"
            }
            this._updateUI()
        },
        disable: function() {
            this._enabled = false;
            if (this._div) {
                this._div.style.cursor = ""
            }
            this._updateUI()
        },
        _render: function() {
            this._outContainer.appendChild(this._div)
        },
        _bindDom: function() {
            var e = this;
            this._div.addEventListener("mousedown", function(je) {
                if (!e._enabled) {
                    return
                }
                if (e._target.getLock()) {
                    return
                }
                var i = e._target.getTilt();
                var T;
                if (i === e._map.getCurrentMaxTilt()) {
                    T = "out"
                } else {
                    if (i === 0) {
                        T = "in"
                    } else {
                        T = e._preTrend ? e._preTrend : "in"
                    }
                }
                e._curTrend = T;
                e._clickTimer = setTimeout(function() {
                    e._map.fire(new fa("ontiltmsdown"));
                    e._tiltAni = new e3({
                        duration: 9999999,
                        render: function(jf) {
                            i = e._target.getTilt();
                            if (T === "in" && i < e._map.getCurrentMaxTilt()) {
                                e._target.setTilt(i + 1, {
                                    noAnimation: true
                                })
                            } else {
                                if (T === "out" && i > 0) {
                                    e._target.setTilt(i - 1, {
                                        noAnimation: true
                                    })
                                }
                            }
                        },
                        finish: function() {
                            e._tiltAni = null
                        }
                    });
                    e._clickTimer = null
                }, 200);
                je.stopPropagation()
            }, false);
            this._div.addEventListener("mouseup", function(i) {
                if (!e._enabled) {
                    return
                }
                if (e._tiltAni) {
                    e._tiltAni.stop()
                }
                e._preTrend = e._curTrend
            }, false);
            this._div.addEventListener("click", function(je) {
                if (!e._enabled) {
                    return
                }
                if (!e._clickTimer) {
                    return
                }
                if (e._target.getLock()) {
                    return
                }
                clearTimeout(e._clickTimer);
                e._map.fire(new fa("ontiltclick"));
                var i = e._target.getTilt();
                e._target.setLock(true);
                je.stopPropagation();
                var T = e._map.getCurrentMaxTilt();
                if (e._curTrend === "in") {
                    e._target.setTilt(T, e._setTiltOptions)
                } else {
                    if (e._curTrend === "out") {
                        e._target.setTilt(0, e._setTiltOptions)
                    } else {
                        if (i < T) {
                            e._target.setTilt(T, e._setTiltOptions)
                        } else {
                            e._target.setTilt(0, e._setTiltOptions)
                        }
                    }
                }
            }, false);
            this._div.addEventListener("mouseover", function(i) {
                if (!e._enabled) {
                    return
                }
                e._mouseOver = true;
                e._updateUI()
            }, false);
            this._div.addEventListener("mouseout", function(i) {
                if (!e._enabled) {
                    return
                }
                e._mouseOver = false;
                e._updateUI()
            }, false);
            hK(this._div, ["mousedown", "click", "dblclick"])
        },
        _bind: function() {
            var e = this;
            var i = this._map;
            this._bindTarget(this._target);
            if (this._map._renderType === "webgl") {
                this._map.addEventListener("maptypechange", function(T) {
                    if (this.mapType === "B_EARTH_MAP") {
                        e._target = e._map._earth
                    } else {
                        e._target = e._map
                    }
                    e._bindTarget(e._target);
                    e._checkEnable()
                })
            }
        },
        _bindTarget: function(i) {
            if (i === this._map && this._mapBinded) {
                return
            }
            if (i === this._map._earth && this._earthBinded) {
                return
            }
            var e = this;
            i.on("load", function() {
                e._checkEnable()
            });
            i.on("zoom_changed", function() {
                e._checkEnable()
            });
            i.on("tilt_changed", function() {
                e._updateUI()
            });
            if (i === this._map) {
                this._mapBinded = true
            } else {
                this._earthBinded = true
            }
        },
        _updateUI: function() {
            var T = this._target.getTilt();
            var i = 0;
            var je = 0;
            var e = 0;
            if (T > 0) {
                i = 78
            }
            if (this._mouseOver) {
                e = 52
            }
            if (this._enabled === false) {
                je = 26;
                e = 0;
                i = 0
            }
            var jf = "-" + (110 + i + je + e) + "px 1px";
            this._div && (this._div.style.backgroundPosition = jf);
            if (this._enabled) {
                if (T > 0) {
                    this._div && (this._div.title = "恢复")
                } else {
                    this._div && (this._div.title = "倾斜")
                }
            } else {
                this._div && (this._div.title = "请放大地图后操作")
            }
        },
        hide: function() {
            this._div.style.display = "none"
        },
        show: function() {
            this._div.style.display = "block"
        }
    });
    function gE(i) {
        cM.call(this);
        this._opts = {
            container: null,
            cursor: "default"
        };
        this._opts = ev.extend(this._opts, i);
        this._type = "contextmenu";
        this._map = null;
        this._container;
        this._left = 0;
        this._top = 0;
        this._items = [];
        this._rItems = [];
        this._dividers = [];
        this._enable = true;
        this.curPixel = null;
        this.curPoint = null;
        this._isOpen = false;
        var e = this;
        gn.load("menu", function() {
            e._draw()
        })
    }
    gE.inherits(cM, "ContextMenu");
    ev.extend(gE.prototype, {
        initialize: function(e) {
            this._map = e
        },
        remove: function() {
            this._map = null
        },
        addItem: function(jf, e) {
            if (!jf || jf._type != "menuitem" || jf._text == "" || jf._width <= 0) {
                return
            }
            for (var je = 0, T = this._items.length; je < T; je++) {
                if (this._items[je] === jf) {
                    return
                }
            }
            if (e === undefined || e > this._items.length - 1) {
                e = -1
            }
            jf._insertIndex = e;
            if (e === -1) {
                this._items.push(jf);
                this._rItems.push(jf)
            } else {
                this._items.splice(e, 0, jf);
                this._rItems.splice(e, 0, jf)
            }
        },
        removeItem: function(je) {
            if (!je || je._type != "menuitem") {
                return
            }
            for (var T = 0, e = this._items.length; T < e; T++) {
                if (this._items[T] === je) {
                    this._items[T].remove();
                    this._items.splice(T, 1);
                    delete je._insertIndex;
                    e--
                }
            }
            for (var T = 0, e = this._rItems.length; T < e; T++) {
                if (this._rItems[T] === je) {
                    this._rItems[T].remove();
                    this._rItems.splice(T, 1);
                    delete je._insertIndex;
                    e--
                }
            }
        },
        addSeparator: function(e) {
            if (e === undefined || e > this._items.length - 1) {
                e = -1
            }
            var i = {
                _type: "divider",
                _dIndex: this._dividers.length,
                _insertIndex: e
            };
            this._dividers.push({
                dom: null
            });
            if (e === -1) {
                this._items.push(i)
            } else {
                this._items.splice(e, 0, i)
            }
        },
        removeSeparator: function(T) {
            if (!this._dividers[T]) {
                return
            }
            for (var je = 0, e = this._items.length; je < e; je++) {
                if (this._items[je] && this._items[je]._type == "divider" && this._items[je]._dIndex == T) {
                    this._items.splice(je, 1);
                    e--
                }
                if (this._items[je] && this._items[je]._type == "divider" && this._items[je]._dIndex > T) {
                    this._items[je]._dIndex--
                }
            }
            this._dividers.splice(T, 1)
        },
        getDom: function() {
            return this._container
        },
        show: function() {
            if (this._isOpen == true) {
                return
            }
            this._isOpen = true
        },
        hide: function() {
            if (this._isOpen == false) {
                return
            }
            this._isOpen = false
        },
        setCursor: function(e) {
            if (!e) {
                return
            }
            this._opts.cursor = e
        },
        getItem: function(e) {
            return this._rItems[e]
        },
        enable: function() {
            this._enable = true
        },
        disable: function() {
            this._enable = false
        }
    });
    function hd(T, je, i) {
        if (!T || !je || typeof je != "function") {
            return
        }
        cM.call(this);
        this._opts = {
            width: 100,
            id: ""
        };
        i = i || {};
        this._opts.width = (i.width * 1) ? i.width : 100;
        this._opts.id = i.id ? i.id : "";
        this._text = T + "";
        this._callback = je;
        this._map = null;
        this._type = "menuitem";
        this._contextmenu = null;
        this._container = null;
        this._enabled = true;
        var e = this;
        gn.load("menu", function() {
            e._draw()
        })
    }
    hd.inherits(cM, "MenuItem");
    ev.extend(hd.prototype, {
        initialize: function(e, i) {
            this._map = e;
            this._contextmenu = i
        },
        remove: function() {
            this._contextmenu = null;
            this._map = null
        },
        setText: function(e) {
            if (!e) {
                return
            }
            this._text = e + ""
        },
        getDom: function() {
            return this._container
        },
        enable: function() {
            this._enabled = true
        },
        disable: function() {
            this._enabled = false
        }
    });
    function hf(e, i) {
        this.setSouthWest(e);
        this.setNorthEast(i)
    }
    ev.extend(hf.prototype, {
        isEmpty: function() {
            return this.sw === null && this.ne === null
        },
        equals: function(e) {
            if (!e || e.isEmpty() || this.isEmpty()) {
                return false
            }
            return this.sw.equals(e.sw) && this.ne.equals(e.ne)
        },
        containsBounds: function(e) {
            if (!e || e.isEmpty() || this.isEmpty()) {
                return false
            }
            return (e.sw.lng > this.sw.lng && e.ne.lng < this.ne.lng && e.sw.lat > this.sw.lat && e.ne.lat < this.ne.lat)
        },
        getCenter: function() {
            if (this.isEmpty()) {
                return null
            }
            return new cf((this.sw.lng + this.ne.lng) / 2,(this.sw.lat + this.ne.lat) / 2)
        },
        intersects: function(T) {
            if (!T || T.isEmpty() || this.isEmpty()) {
                return null
            }
            if (Math.max(T.sw.lng, T.ne.lng) < Math.min(this.sw.lng, this.ne.lng) || Math.min(T.sw.lng, T.ne.lng) > Math.max(this.sw.lng, this.ne.lng) || Math.max(T.sw.lat, T.ne.lat) < Math.min(this.sw.lat, this.ne.lat) || Math.min(T.sw.lat, T.ne.lat) > Math.max(this.sw.lat, this.ne.lat)) {
                return null
            }
            var jf = Math.max(this.sw.lng, T.sw.lng);
            var i = Math.min(this.ne.lng, T.ne.lng);
            var je = Math.max(this.sw.lat, T.sw.lat);
            var e = Math.min(this.ne.lat, T.ne.lat);
            return new hf(new cf(jf,je),new cf(i,e))
        },
        setMinMax: function() {
            this.minX = this.sw ? this.sw.lng : null;
            this.minY = this.sw ? this.sw.lat : null;
            this.maxX = this.ne ? this.ne.lng : null;
            this.maxY = this.ne ? this.ne.lat : null
        },
        containsPoint: function(e) {
            if (!e) {
                return
            }
            return (e.lng >= this.sw.lng && e.lng <= this.ne.lng && e.lat >= this.sw.lat && e.lat <= this.ne.lat)
        },
        extend: function(e) {
            if (!e) {
                return
            }
            var i = e.lng;
            var T = e.lat;
            if (!this.sw) {
                this.sw = e.clone()
            }
            if (!this.ne) {
                this.ne = e.clone()
            }
            if (this.sw.lng > i) {
                this.sw.lng = i
            }
            if (this.ne.lng < i) {
                this.ne.lng = i
            }
            if (this.sw.lat > T) {
                this.sw.lat = T
            }
            if (this.ne.lat < T) {
                this.ne.lat = T
            }
        },
        getMin: function() {
            return this.sw
        },
        getMax: function() {
            return this.ne
        },
        getSouthWest: function() {
            return this.sw
        },
        getNorthEast: function() {
            return this.ne
        },
        setSouthWest: function(e) {
            this.sw = e ? e.clone() : null
        },
        setNorthEast: function(e) {
            this.ne = e ? e.clone() : null
        },
        clone: function() {
            return new hf(this.sw,this.ne)
        },
        toSpan: function() {
            if (this.isEmpty()) {
                return new h8(0,0)
            }
            return new h8(Math.abs(this.ne.lng - this.sw.lng),Math.abs(this.ne.lat - this.sw.lat))
        },
        div: function(e) {
            if (!e || e.isEmpty() || this.isEmpty()) {
                return 0
            }
            return ((this.ne.lng - this.sw.lng) * (this.ne.lat - this.sw.lat)) / ((e.ne.lng - e.sw.lng) * (e.ne.lat - e.sw.lat))
        },
        makeNormalizedPoint: function(e) {
            this.normalizedTopLeft = this.pointTopLeft.clone();
            this.normalizedTopRight = this.pointTopRight.clone();
            this.normalizedBottomRight = this.pointBottomRight.clone();
            this.normalizedBottomLeft = this.pointBottomLeft.clone();
            while (e < 0) {
                e += 360
            }
            e = e % 360;
            if (e >= 0 && e < 90 || e >= 270 && e < 360) {
                if (this.normalizedTopRight.lng < this.normalizedTopLeft.lng) {
                    this.normalizedTopRight.lng += g0.WORLD_SIZE_MC
                }
                if (this.normalizedBottomRight.lng < this.normalizedBottomLeft.lng) {
                    this.normalizedBottomRight.lng += g0.WORLD_SIZE_MC
                }
            } else {
                if (this.normalizedTopLeft.lng < this.normalizedTopRight.lng) {
                    this.normalizedTopLeft.lng += g0.WORLD_SIZE_MC
                }
                if (this.normalizedBottomLeft.lng < this.normalizedBottomRight.lng) {
                    this.normalizedBottomLeft.lng += g0.WORLD_SIZE_MC
                }
            }
        },
        toString: function() {
            return "Bounds"
        }
    });
    function cf(e, i) {
        if (isNaN(e)) {
            e = cY(e);
            e = isNaN(e) ? 0 : e
        }
        if (typeof e === "string") {
            e = parseFloat(e)
        }
        if (isNaN(i)) {
            i = cY(i);
            i = isNaN(i) ? 0 : i
        }
        if (typeof i === "string") {
            i = parseFloat(i)
        }
        this.lng = e;
        this.lat = i
    }
    cf.prototype.equals = function(i) {
        if (!i) {
            return false
        }
        var je = Math.abs(this.lat - i.lat);
        var T = Math.abs(this.lng - i.lng);
        var e = 1e-8;
        if (je < e && T < e) {
            return true
        }
        return false
    }
    ;
    cf.prototype.clone = function() {
        return new cf(this.lng,this.lat)
    }
    ;
    cf.prototype.add = function(e) {
        return new cf(this.lng + e.lng,this.lat + e.lat)
    }
    ;
    cf.prototype.sub = function(e) {
        return new cf(this.lng - e.lng,this.lat - e.lat)
    }
    ;
    cf.prototype.mult = function(e) {
        return new cf(this.lng * e,this.lat * e)
    }
    ;
    cf.prototype.div = function(e) {
        return new cf(this.lng / e,this.lat / e)
    }
    ;
    cf.prototype.mag = function() {
        return Math.sqrt(this.lng * this.lng + this.lat * this.lat)
    }
    ;
    cf.prototype.toString = function() {
        return "Point"
    }
    ;
    function ig() {}
    ev.extend(ig, {
        EARTHRADIUS: 6370996.81,
        MCBAND: [12890594.86, 8362377.87, 5591021, 3481989.83, 1678043.12, 0],
        LLBAND: [86, 60, 45, 30, 15, 0],
        MC2LL: [[1.410526172116255e-8, 0.00000898305509648872, -1.9939833816331, 200.9824383106796, -187.2403703815547, 91.6087516669843, -23.38765649603339, 2.57121317296198, -0.03801003308653, 17337981.2], [-7.435856389565537e-9, 0.000008983055097726239, -0.78625201886289, 96.32687599759846, -1.85204757529826, -59.36935905485877, 47.40033549296737, -16.50741931063887, 2.28786674699375, 10260144.86], [-3.030883460898826e-8, 0.00000898305509983578, 0.30071316287616, 59.74293618442277, 7.357984074871, -25.38371002664745, 13.45380521110908, -3.29883767235584, 0.32710905363475, 6856817.37], [-1.981981304930552e-8, 0.000008983055099779535, 0.03278182852591, 40.31678527705744, 0.65659298677277, -4.44255534477492, 0.85341911805263, 0.12923347998204, -0.04625736007561, 4482777.06], [3.09191371068437e-9, 0.000008983055096812155, 0.00006995724062, 23.10934304144901, -0.00023663490511, -0.6321817810242, -0.00663494467273, 0.03430082397953, -0.00466043876332, 2555164.4], [2.890871144776878e-9, 0.000008983055095805407, -3.068298e-8, 7.47137025468032, -0.00000353937994, -0.02145144861037, -0.00001234426596, 0.00010322952773, -0.00000323890364, 826088.5]],
        LL2MC: [[-0.0015702102444, 111320.7020616939, 1704480524535203, -10338987376042340, 26112667856603880, -35149669176653700, 26595700718403920, -10725012454188240, 1800819912950474, 82.5], [0.0008277824516172526, 111320.7020463578, 647795574.6671607, -4082003173.641316, 10774905663.51142, -15171875531.51559, 12053065338.62167, -5124939663.577472, 913311935.9512032, 67.5], [0.00337398766765, 111320.7020202162, 4481351.045890365, -23393751.19931662, 79682215.47186455, -115964993.2797253, 97236711.15602145, -43661946.33752821, 8477230.501135234, 52.5], [0.00220636496208, 111320.7020209128, 51751.86112841131, 3796837.749470245, 992013.7397791013, -1221952.21711287, 1340652.697009075, -620943.6990984312, 144416.9293806241, 37.5], [-0.0003441963504368392, 111320.7020576856, 278.2353980772752, 2485758.690035394, 6070.750963243378, 54821.18345352118, 9540.606633304236, -2710.55326746645, 1405.483844121726, 22.5], [-0.0003218135878613132, 111320.7020701615, 0.00369383431289, 823725.6402795718, 0.46104986909093, 2351.343141331292, 1.58060784298199, 8.77738589078284, 0.37238884252424, 7.45]],
        getDistanceByMC: function(jg, je) {
            if (!jg || !je) {
                return 0
            }
            var i;
            var jf;
            var e;
            var T;
            jg = this.convertMC2LL(jg);
            if (!jg) {
                return 0
            }
            i = hM(jg.lng);
            jf = hM(jg.lat);
            je = this.convertMC2LL(je);
            if (!je) {
                return 0
            }
            e = hM(je.lng);
            T = hM(je.lat);
            return this.getDistance(i, e, jf, T)
        },
        getDistanceByLL: function(jg, je) {
            if (!jg || !je) {
                return 0
            }
            jg.lng = this.getLoop(jg.lng, -180, 180);
            jg.lat = this.getRange(jg.lat, -80, 84);
            je.lng = this.getLoop(je.lng, -180, 180);
            je.lat = this.getRange(je.lat, -80, 84);
            var i;
            var e;
            var jf;
            var T;
            i = hM(jg.lng);
            jf = hM(jg.lat);
            e = hM(je.lng);
            T = hM(je.lat);
            return this.getDistance(i, e, jf, T)
        },
        proximityCovertMC2LL: function(e) {
            if (e === null) {
                return e
            }
            if (e.lng < 180 && e.lng > -180 && e.lat < 90 && e.lat > -90) {
                return e
            }
            return this.convertMC2LL(e)
        },
        convertMC2LL: function(e) {
            if (e === null) {
                return e
            }
            if (!e) {
                return new cf(0,0)
            }
            var T;
            var jf;
            T = new cf(Math.abs(e.lng),Math.abs(e.lat));
            for (var je = 0; je < this.MCBAND.length; je++) {
                if (T.lat >= this.MCBAND[je]) {
                    jf = this.MC2LL[je];
                    break
                }
            }
            var jg = this.convertor(e, jf);
            return new b9(jg.lat,jg.lng)
        },
        convertLL2MC: function(jh) {
            if (!jh) {
                return new cf(0,0)
            }
            var jj = jh.lat;
            var je = jh.lng;
            je = this.getLoop(jh.lng, -180, 180);
            jj = bW(jj, -85, 85);
            var jg;
            for (var jf = 0; jf < this.LLBAND.length; jf++) {
                if (jj >= this.LLBAND[jf]) {
                    jg = this.LL2MC[jf];
                    break
                }
            }
            if (!jg) {
                for (jf = 0; jf < this.LLBAND.length; jf++) {
                    if (jj <= -this.LLBAND[jf]) {
                        jg = this.LL2MC[jf];
                        break
                    }
                }
            }
            var T = new cf(je,jj);
            var ji = this.convertor(T, jg);
            var e = new cf(ji.lng,ji.lat);
            e.latLng = new b9(jh.lat,jh.lng);
            return e
        },
        convertor: function(T, je) {
            if (!T || !je) {
                return
            }
            var e = je[0] + je[1] * Math.abs(T.lng);
            var i = Math.abs(T.lat) / je[9];
            var jf = je[2] + je[3] * i + je[4] * i * i + je[5] * i * i * i + je[6] * i * i * i * i + je[7] * i * i * i * i * i + je[8] * i * i * i * i * i * i;
            e *= (T.lng < 0 ? -1 : 1);
            jf *= (T.lat < 0 ? -1 : 1);
            return new cf(e,jf)
        },
        getDistance: function(i, e, je, T) {
            return this.EARTHRADIUS * Math.acos((Math.sin(je) * Math.sin(T) + Math.cos(je) * Math.cos(T) * Math.cos(e - i)))
        },
        getRange: function(T, i, e) {
            if (i != null) {
                T = Math.max(T, i)
            }
            if (e != null) {
                T = Math.min(T, e)
            }
            return T
        },
        getLoop: function(T, i, e) {
            while (T > e) {
                T -= e - i
            }
            while (T < i) {
                T += e - i
            }
            return T
        },
        tileToBoundRange: function(T) {
            var i = T.col;
            var jl = T.row;
            var jk = T.baseTileSize;
            var ji = Math.pow(2, (18 - T.zoom));
            var jg = {
                lbx: i * jk,
                lby: jl * jk,
                rtx: (i + 1) * jk,
                rty: (jl + 1) * jk
            };
            var e = {
                lbx: jg.lbx * ji,
                lby: jg.lby * ji,
                rtx: jg.rtx * ji,
                rty: jg.rty * ji
            };
            var jj = new cf(e.lbx,e.lby);
            var jf = new cf(e.rtx,e.rty);
            var je = this.convertMC2LL(jj);
            var jh = this.convertMC2LL(jf);
            return {
                MC: new hf(jj,jf),
                LL: new hf(je,jh)
            }
        }
    });
    ev.extend(ig.prototype, {
        lnglatToMercator: function(e) {
            return ig.convertLL2MC(e)
        },
        lngLatToPoint: function(e) {
            var i = ig.convertLL2MC(e);
            return new eO(i.lng,i.lat)
        },
        mercatorToLnglat: function(e) {
            return ig.convertMC2LL(e)
        },
        pointToLngLat: function(i) {
            var e = new cf(i.x,i.y);
            var T = ig.convertMC2LL(e);
            return new b9(T.lat,T.lng)
        },
        pointToPixel: function(i, jg, jf, je) {
            if (!i) {
                return
            }
            i = this.lnglatToMercator(i);
            var T = this.getZoomUnits(jg);
            var e = Math.round((i.lng - jf.lng) / T + je.width / 2);
            var jh = Math.round((jf.lat - i.lat) / T + je.height / 2);
            return new eO(e,jh)
        },
        mercatorToPixel: function(jg, jf, je, T) {
            if (!jg) {
                return
            }
            var i = this.getZoomUnits(jf);
            var e = Math.round((jg.lng - je.lng) / i + T.width / 2);
            var jh = Math.round((je.lat - jg.lat) / i + T.height / 2);
            return new eO(e,jh)
        },
        pixelToPoint: function(je, jh, jg, jf) {
            if (!je) {
                return
            }
            var i = this.getZoomUnits(jh);
            var T = jg.lng + i * (je.x - jf.width / 2);
            var ji = jg.lat - i * (je.y - jf.height / 2);
            var e = new cf(T,ji);
            return this.mercatorToLnglat(e)
        },
        tileToBound: function(je, ji) {
            var i = je.col;
            var jl = je.row;
            var jk = je.baseTileSize;
            var jj = this.getZoomUnits(je.zoom);
            var T = {
                x: Math.round(ji.lng / jj),
                y: Math.round(ji.lat / jj)
            };
            var jg = {
                lbx: i * jk,
                lby: jl * jk,
                rtx: (i + 1) * jk,
                rty: (jl + 1) * jk
            };
            var e = {
                lbx: ji.lng + (jg.lbx - T.x) * jj,
                lby: ji.lat + (jg.lby - T.y) * jj,
                rtx: ji.lng + (jg.rtx - T.x) * jj,
                rty: ji.lat + (jg.rty - T.y) * jj
            };
            var jf = ig.convertMC2LL(new cf(e.lbx,e.lby));
            var jh = ig.convertMC2LL(new cf(e.rtx,e.rty));
            return {
                MC: new hf(new cf(e.lbx,e.lby),new cf(e.rtx,e.rty)),
                LL: new hf(jf,jh)
            }
        },
        getZoomUnits: function(e) {
            return Math.pow(2, (18 - e))
        },
        setCoordType: function(e) {
            this.coordsType = e
        }
    });
    function dd() {}
    ev.extend(dd, {
        RADIUS: 6378137,
        EXTENT4326: [-180, -90, 180, 90],
        WORLD_EXTENT: [-180, -85, 180, 85],
        HALF_SIZE: 20037508.342789244,
        METERS_PER_UNIT: 111319.49079327358,
        EXTENT3857: [-20037508.342789244, -20037508.342789244, 20037508.342789244, 20037508.342789244],
        MAX_SAFE_Y: 238107693.26496765,
        origin: [-20037508.342789244, 20037508.342789244],
        size: 156543.03392804097,
        gridSize: [256, 256],
        resolutions: [156543.03392804097, 78271.51696402048, 39135.75848201024, 19567.87924100512, 9783.93962050256, 4891.96981025128, 2445.98490512564, 1222.99245256282, 611.49622628141, 305.748113140705, 152.8740565703525, 76.43702828517625, 38.21851414258813, 19.109257071294063, 9.554628535647032, 4.777314267823516, 2.388657133911758, 1.194328566955879, 0.5971642834779395, 0.29858214173896974, 0.14929107086948487, 0.07464553543474244, 0.03732276771737122],
        gridScaleFrom3857ToBDMC: 0.5971642834779395,
        gridScaleFromBDMCTo3857: 1.674581061974954,
        calcResolutions: function(i) {
            if (this.resolutions.length - 1 < i) {
                this.resolutions = [];
                for (var e = 0; e < i; ++e) {
                    this.resolutions.push(this.size / Math.pow(2, e))
                }
            }
            return this.resolutions
        },
        forEachTileCoord: function(jl, jk, T, jh) {
            var e = this.getTileRangeForExtentFactory(jl, jk, T);
            for (var jf = e.minX, ji = e.maxX; jf <= ji; ++jf) {
                for (var je = e.minY, jg = e.maxY; je <= jg; ++je) {
                    jh([jk, jf, je])
                }
            }
        },
        getTileRangeForExtentFactory: function(T, jf, i, je) {
            var e;
            switch (i.source) {
            case "BD09MC":
                if (i.target === "EPSG3857") {
                    e = this.getBDTileRangeForExtentAndZ(T, jf, je)
                } else {
                    e = this.getTileRangeForExtentAndZ(T, jf, je)
                }
                break;
            case "EPSG3857":
                e = this.getTileRangeForExtentAndZ(T, jf, je);
                break;
            default:
                e = this.getTileRangeForExtentAndZ(T, jf, je);
                break
            }
            return e
        },
        getBDTileRangeForExtentAndZ: function(T, jf, je) {
            var i = [0, 0, 0];
            this.getBDTileCoordForXYAndZ_(T[0], T[1], jf, false, i);
            var e = i[1];
            var jg = i[2];
            this.getBDTileCoordForXYAndZ_(T[2], T[3], jf, true, i);
            return this.createOrUpdateTileRange(e, i[1], jg, i[2], je)
        },
        getTileRangeForExtentAndZ: function(T, jf, je) {
            var i = [0, 0, 0];
            this.getTileCoordForXYAndZ_(T[0], T[3], jf, false, i);
            var e = i[1];
            var jg = i[2];
            this.getTileCoordForXYAndZ_(T[2], T[1], jf, true, i);
            return this.createOrUpdateTileRange(e, i[1], jg, i[2], je)
        },
        getBDTileCoordForXYAndZ_: function(e, ji, jg, jf, je) {
            var jh = 256 * Math.pow(2, (18 - jg));
            var T = e / jh;
            var i = ji / jh;
            if (jf) {
                T = Math.ceil(T) - 1;
                i = Math.ceil(i) - 1
            } else {
                T = Math.floor(T);
                i = Math.floor(i)
            }
            return this.createOrUpdateTileCoord(jg, T, i, je)
        },
        getTileCoordForXYAndZ_: function(jl, jk, ji, jj, e) {
            var jm = this.origin;
            var i = (this.resolutions.length === 0 ? this.calcResolutions(21)[ji] : this.resolutions[ji]);
            var jo = this.gridSize;
            var je = jj ? 0.5 : 0;
            var T = jj ? 0.5 : 0;
            var jn = Math.floor((jl - jm[0]) / i + je);
            var jg = Math.floor((jm[1] - jk) / i + T);
            var jh = jn / jo[0];
            var jf = jg / jo[1];
            if (jj) {
                jh = Math.ceil(jh) - 1;
                jf = Math.ceil(jf) - 1
            } else {
                jh = Math.floor(jh);
                jf = Math.floor(jf)
            }
            return this.createOrUpdateTileCoord(ji, jh, jf, e)
        },
        getTileCoordForCoordAndZ: function(T, i, e) {
            return this.getTileCoordForXYAndZ_(T[0], T[1], i, false, e)
        },
        getTileRangeExtent: function(T, jh) {
            var ji = this.origin;
            if (this.resolutions.length === 0) {
                this.calcResolutions(23)
            }
            var jf = this.resolutions[T[0]];
            var jj = this.gridSize;
            var jg = ji[0] + T[1] * jj[0] * jf;
            var je = ji[1] - (T[2] + 1) * jj[1] * jf;
            var i = jg + jj[0] * jf;
            var e = je + jj[1] * jf;
            return this.createOrUpdateTileRange(jg, i, je, e, jh)
        },
        getTileLeftBottomMCPoint: function(jf, T) {
            var i = this.origin;
            if (this.resolutions.length === 0) {
                this.calcResolutions(23)
            }
            var je = this.resolutions[jf[0]];
            var jh = this.gridSize;
            var e = i[0] + jf[1] * jh[0] * je;
            var ji = i[1] - (jf[2] + 1) * jh[1] * je;
            var jg = gcoord.transform([e, ji], gcoord.EPSG3857, gcoord.BD09MC);
            return jg
        },
        getRangeExtent: function(i, jm, ji, jo, je) {
            var jj = this.calPiexlResolution(jo, je);
            var jh = jm / 2 * jj;
            var jk = ji / 2 * jj;
            var jg = i[0] - jh;
            var T = i[0] + jh;
            var jf = i[1] - jk;
            var e = i[1] + jk;
            var jl = gcoord.transform([jg, jf], gcoord[je.target], gcoord[je.source]);
            var jn = gcoord.transform([T, e], gcoord[je.target], gcoord[je.source]);
            return this.createOrUpdateTileRange(jl[0], jn[0], jl[1], jn[1])
        },
        getMousePoint: function(jh, jg, i, jf, T) {
            var je = ja(jh, jg);
            return this.calLngLatByMapViewPixelInverse(je.clientPos, i, jg.width, jg.height, jf, T)
        },
        calLngLatByMapViewPixelInverse: function(je, e, i, jl, jm, T) {
            var jh = this.calPiexlResolution(jm, T);
            var jg = je.x - i / 2;
            var jf = je.y - jl / 2;
            var jj = e[0] + jg * jh;
            var ji = e[1] - jf * jh;
            var jk = gcoord.transform([jj, ji], gcoord[T.target], gcoord[T.source]);
            return jk
        },
        calPiexlResolution: function(T, i) {
            var e;
            switch (i.target) {
            case "BD09MC":
                e = Math.pow(2, (18 - T));
                break;
            case "EPSG3857":
                e = this.resolutions[Math.floor(T)];
                break;
            default:
                e = Math.pow(2, (18 - T));
                break
            }
            return e
        },
        getXYZCellPixelCoor: function(jh, jf, je, i) {
            var jj = this.gridSize;
            var ji;
            var jg;
            switch (i.source) {
            case "GCJ02":
            case "EPSG3857":
                var T = Math.pow(2, je - 1) - (jf + 1);
                var e = jh - Math.pow(2, je - 1);
                ji = e * jj[0];
                jg = T * jj[1];
                break;
            case "BD09MC":
                if (i.target === "EPSG3857") {
                    ji = jh * jj[0];
                    jg = jf * jj[1]
                } else {
                    var T = Math.pow(2, je - 1) - (jf + 1);
                    var e = jh - Math.pow(2, je - 1);
                    ji = e * jj[0];
                    jg = T * jj[1]
                }
            default:
                break
            }
            return {
                x: ji,
                y: jg
            }
        },
        mcToPixel: function(i) {
            var T = this.resolutions[Math.floor(zoom)];
            var e = i.lng / T;
            var je = i.lat / T;
            return [e, je]
        },
        getBaiduCellPixelCoor: function(e, je, T) {
            var i = 256;
            return {
                x: e * i,
                y: je * i
            }
        },
        getRelativePixelCoor: function(jg, je) {
            var i = this.origin;
            var jf = jg[0];
            var T = this.resolutions[Math.floor(jf)];
            var jh = this.gridSize;
            var e = i[0] / T + jg[1] * jh[0];
            var ji = i[1] / T - (jg[2] + 1) * jh[1];
            return [je[0] - e, je[1] - ji]
        },
        getPointPixelCoor: function(e, jj, i) {
            var jh;
            var jg;
            var T = Math.pow(2, (18 - jj));
            var je = this.resolutions[Math.floor(jj)];
            var jf = ig.convertMC2LL(e);
            switch (i.source) {
            case "GCJ02":
                var ji = gcoord.transform([jf.lng, jf.lat], gcoord.BD09LL, gcoord.GCJ02);
                ji = gcoord.transform(ji, gcoord.WGS84, gcoord.EPSG3857);
                jh = ji[0] / je;
                jg = ji[1] / je;
                break;
            case "BD09LL":
            case "EPSG3857":
                var ji = gcoord.transform([jf.lng, jf.lat], gcoord.BD09LL, gcoord.EPSG3857);
                jh = ji[0] / je;
                jg = ji[1] / je;
                break;
            case "BD09MC":
                jh = e.lng / T;
                jg = e.lat / T;
                if (i.target === "BD09MC") {
                    jh *= dd.gridScaleFromBDMCTo3857;
                    jg *= dd.gridScaleFromBDMCTo3857
                }
            default:
                break
            }
            return [jh, jg]
        },
        getResolutionScale: function(i, e) {
            var T;
            switch (e.target) {
            case "BD09MC":
                T = this.gridScaleFrom3857ToBDMC;
                break;
            case "EPSG3857":
                T = this.gridScaleFromBDMCTo3857;
                break;
            default:
                T = this.gridScaleFrom3857ToBDMC;
                break
            }
            return T
        },
        getBaiduResolutionScale: function(T) {
            var i = this.resolutions[Math.floor(T)];
            var e = Math.pow(2, (18 - T));
            var je = e / i;
            return je
        },
        getTileCoordCenter: function(T) {
            var e = this.origin;
            if (this.resolutions.length === 0) {
                this.calcResolutions(23)
            }
            var i = this.resolutions[T[0]];
            var je = this.gridSize;
            return [e[0] + (T[1] + 0.5) * je[0] * i, e[1] - (T[2] + 0.5) * je[1] * i, ]
        },
        transformBDmcPoint: function(jf, i) {
            i = i || {};
            var T = i.source || "EPSG3857";
            var je = ig.convertMC2LL(new cf(jf.lng,jf.lat));
            var e;
            switch (T) {
            case "GCJ02":
                e = gcoord.transform([je.lng, je.lat], gcoord.BD09LL, gcoord.GCJ02);
                e = gcoord.transform(e, gcoord.WGS84, gcoord.EPSG3857);
                break;
            case "EPSG3857":
                e = gcoord.transform([je.lng, je.lat], gcoord.BD09LL, gcoord.EPSG3857);
                break;
            case "BD09MC":
                if (i.target === "EPSG3857") {
                    e = gcoord.transform([je.lng, je.lat], gcoord.BD09LL, gcoord.EPSG3857)
                } else {
                    e = [jf.lng, jf.lat]
                }
                break;
            default:
                e = gcoord.transform([je.lng, je.lat], gcoord.BD09LL, gcoord[T]);
                break
            }
            return e
        },
        transformPointArr: function(e, i, T) {
            return gcoord.transform(e, gcoord[i || "BD09LL"], gcoord[T || "BD09MC"])
        },
        getTilesLoop: function(T, e) {
            var i = Math.pow(2, T);
            while (e > i - 1) {
                e = e - i
            }
            while (e < 0) {
                e = e + i
            }
            return e
        },
        getLoopBox: function(e, je) {
            var i = this.HALF_SIZE * 2;
            if (e[0] > 0 && je[2] < 0) {
                je[2] = je[2] + i
            } else {
                if (e[0] < 0 && je[0] > 0) {
                    je[0] = je[0] - i
                }
            }
            return je
        },
        createOrUpdateTileCoord: function(T, e, je, i) {
            if (i !== undefined) {
                i[0] = T;
                i[1] = e;
                i[2] = je;
                return i
            } else {
                return [T, e, je]
            }
        },
        createOrUpdateTileRange: function(e, je, jf, T, i) {
            if (i !== undefined) {
                i.minX = e;
                i.maxX = je;
                i.minY = jf;
                i.maxY = T;
                return i
            } else {
                return {
                    minX: e,
                    maxX: je,
                    minY: jf,
                    maxY: T
                }
            }
        },
        fromEPSG4326: function(T, jj, jh) {
            var jf = T.length;
            var jg = jh > 1 ? jh : 2;
            var e = jj;
            if (e === undefined) {
                if (jg > 2) {
                    e = T.slice()
                } else {
                    e = new Array(jf)
                }
            }
            for (var je = 0; je < jf; je += jg) {
                e[je] = (this.HALF_SIZE * T[je]) / 180;
                var ji = this.RADIUS * Math.log(Math.tan((Math.PI * (+T[je + 1] + 90)) / 360));
                if (ji > this.MAX_SAFE_Y) {
                    ji = this.MAX_SAFE_Y
                } else {
                    if (ji < -this.MAX_SAFE_Y) {
                        ji = -this.MAX_SAFE_Y
                    }
                }
                e[je + 1] = ji
            }
            return e
        },
        toEPSG4326: function(T, ji, jh) {
            var jf = T.length;
            var jg = jh > 1 ? jh : 2;
            var e = ji;
            if (e === undefined) {
                if (jg > 2) {
                    e = T.slice()
                } else {
                    e = new Array(jf)
                }
            }
            for (var je = 0; je < jf; je += jg) {
                e[je] = (180 * T[je]) / this.HALF_SIZE;
                e[je + 1] = (360 * Math.atan(Math.exp(T[je + 1] / this.RADIUS))) / Math.PI - 90
            }
            return e
        },
        findParentGridAndPosition: function(je, jo, jn, ji, jj, jl, jh) {
            if (jn - 1 < 0) {
                return false
            }
            var jp = je;
            var jk = jo;
            var T = jn;
            for (var jg = 1; jg <= jh; jg++) {
                var e = this.findParent(jp, jk, T, jg);
                if (!e) {
                    return false
                }
                var jm = this.getTileKey(e);
                var jf = ji.getData(jm);
                if (jf && jf.status === "ready") {
                    if (jj[jm]) {
                        continue
                    }
                    jl.setData(jf, this.drawIndex, 0);
                    jj[jm] = true;
                    return true
                }
                jp = e.col;
                jk = e.row;
                T = e.zoom
            }
        },
        findParent: function(i, jf, T, je) {
            if (T - 1 < 0) {
                return null
            }
            var e = i % 2;
            var jg = jf % 2;
            return {
                col: Math.floor(i / 2),
                row: Math.floor(jf / 2),
                sonX: e,
                sonY: jg,
                thumbLB: [e * 0.5, 1 - jg * 0.5 - 0.5],
                thumbRT: [e * 0.5 + 0.5, 1 - jg * 0.5],
                radio: Math.pow(2, je),
                zoom: T - 1,
                useZoom: T - 1
            }
        },
        getTileKey: function(e, je) {
            je = je || {};
            var i = typeof je.useZoom === "number" ? je.useZoom : e.useZoom;
            var T = e.style || this.mapStyleId || "default";
            return this.mapType + "_" + T + "_" + e.col + "_" + e.row + "_" + e.zoom + "_" + i
        },
        lon2tile: function(i, e) {
            return (Math.floor((i + 180) / 360 * Math.pow(2, e)))
        },
        lat2tile: function(T, i) {
            var e = Math.tan(T * Math.PI / 180) + 1 / Math.cos(T * Math.PI / 180);
            return (Math.floor((1 - Math.log(e) / Math.PI) / 2 * Math.pow(2, i)))
        },
        tile2long: function(e, i) {
            return (e / Math.pow(2, i) * 360 - 180)
        },
        tile2lat: function(T, e) {
            var i = Math.PI - 2 * Math.PI * T / Math.pow(2, e);
            return (180 / Math.PI * Math.atan(0.5 * (Math.exp(i) - Math.exp(-i))))
        }
    });
    function b9(i, e) {
        if (i < -90) {
            i = -90
        } else {
            if (i > 90) {
                i = 90
            }
        }
        while (e < -180) {
            e += 360
        }
        while (e > 180) {
            e -= 360
        }
        e = e || 0;
        i = i || 0;
        cf.call(this, e, i)
    }
    b9.inherits(cf, "LatLng");
    ev.extend(b9.prototype, {
        equals: function(e) {
            return (this.lat === e.lat && this.lng === e.lng)
        },
        clone: function() {
            return new b9(this.lat,this.lng)
        },
        add: function(e) {
            return new b9(this.lng + e.lng,this.lat + e.lat)
        },
        sub: function(e) {
            return new b9(this.lat - e.lat,this.lng - e.lng)
        },
        mult: function(e) {
            return new b9(this.lng * e,this.lat * e)
        },
        div: function(e) {
            return new b9(this.lng / e,this.lat / e)
        },
        mag: function() {
            return Math.sqrt(this.lng * this.lng + this.lat * this.lat)
        },
        getLngSpan: function(e) {
            var i = this.lng;
            var T = Math.abs(e - i);
            if (T > 180) {
                T = 360 - T
            }
            return T
        },
        toString: function() {
            return "LatLng"
        }
    });
    function cm(e, i) {
        if (e && !i) {
            i = e
        }
        this._sw = this._ne = null;
        this._swLng = this._swLat = null;
        this._neLng = this._neLat = null;
        if (e) {
            this._sw = new b9(e.lat,e.lng);
            this._ne = new b9(i.lat,i.lng);
            this._swLng = e.lng;
            this._swLat = e.lat;
            this._neLng = i.lng;
            this._neLat = i.lat
        }
    }
    ev.extend(cm.prototype, {
        isEmpty: function() {
            return !this._sw || !this._ne
        },
        equals: function(e) {
            if (this.isEmpty()) {
                return false
            }
            return this.getSouthWest().equals(e.getSouthWest()) && this.getNorthEast().equals(e.getNorthEast())
        },
        getSouthWest: function() {
            return this._sw
        },
        getNorthEast: function() {
            return this._ne
        },
        containsBounds: function(e) {
            if (this.isEmpty() || e.isEmpty()) {
                return false
            }
            return (e._swLng > this._swLng && e._neLng < this._neLng && e._swLat > this._swLat && e._neLat < this._neLat)
        },
        getCenter: function() {
            if (this.isEmpty()) {
                return null
            }
            return new b9((this._swLat + this._neLat) / 2,(this._swLng + this._neLng) / 2)
        },
        intersects: function(T) {
            if (Math.max(T._swLng, T._neLng) < Math.min(this._swLng, this._neLng) || Math.min(T._swLng, T._neLng) > Math.max(this._swLng, this._neLng) || Math.max(T._swLat, T._neLat) < Math.min(this._swLat, this._neLat) || Math.min(T._swLat, T._neLat) > Math.max(this._swLat, this._neLat)) {
                return false
            }
            var jf = Math.max(this._swLng, T._swLng);
            var i = Math.min(this._neLng, T._neLng);
            var je = Math.max(this._swLat, T._swLat);
            var e = Math.min(this._neLat, T._neLat);
            this._sw = new b9(je,jf);
            this._ne = new b9(e,i);
            this._swLng = jf;
            this._swLat = je;
            this._neLng = i;
            this._neLat = e;
            return true
        },
        containsPoint: function(e) {
            if (this.isEmpty()) {
                return false
            }
            return (e.lng >= this._swLng && e.lng <= this._neLng && e.lat >= this._swLat && e.lat <= this._neLat)
        },
        extend: function(e) {
            var i = e.lng;
            var T = e.lat;
            if (!this._sw) {
                this._sw = new b9(0,0)
            }
            if (!this._ne) {
                this._ne = new b9(0,0)
            }
            if (!this._swLng || this._swLng > i) {
                this._sw.lng = this._swLng = i
            }
            if (!this._neLng || this._neLng < i) {
                this._ne.lng = this._neLng = i
            }
            if (!this._swLat || this._swLat > T) {
                this._sw.lat = this._swLat = T
            }
            if (!this._neLat || this._neLat < T) {
                this._ne.lat = this._neLat = T
            }
        },
        toSpan: function() {
            if (this.isEmpty()) {
                return new b9(0,0)
            }
            return new b9(Math.abs(this._neLat - this._swLat),Math.abs(this._neLng - this._swLng))
        },
        union: function(i) {
            if (i.isEmpty()) {
                return false
            }
            var e = i.getSouthWest();
            var T = i.getNorthEast();
            if (this._swLat > e.lat) {
                this._swLat = e.lat
            }
            if (this._swLng > e.lng) {
                this._swLng = e.lng
            }
            if (this._neLat < T.lat) {
                this._neLat = T.lat
            }
            if (this._neLng < T.lng) {
                this._neLng = T.lng
            }
            this._sw = new b9(this._swLat,this._swLng);
            this._ne = new b9(this._neLat,this._neLng);
            return true
        },
        toString: function() {
            return this._swLat + ", " + this._swLng + ", " + this._neLat + ", " + this._neLng
        }
    });
    window.COORDINATES_WGS84 = 1;
    window.COORDINATES_WGS84_MC = 2;
    window.COORDINATES_GCJ02 = 3;
    window.COORDINATES_GCJ02_MC = 4;
    window.COORDINATES_BD09 = 5;
    window.COORDINATES_BD09_MC = 6;
    window.COORDINATES_MAPBAR = 7;
    window.COORDINATES_51 = 8;
    function fk() {}
    fk.inherits(cM, "Convertor");
    ev.extend(fk.prototype, {
        translate: function(i, jf, je, T) {
            jf = jf || 1;
            je = je || 5;
            if (i.length > 10) {
                T && T({
                    status: 25
                });
                return
            }
            var e = w.apiHost + "/geoconv/v1/?coords=";
            ev.each(i, function(jg) {
                e += jg.lng + "," + jg.lat + ";"
            });
            e = e.replace(/;$/gi, "");
            e = e + "&from=" + jf + "&to=" + je + "&v=gl&type=webgl&ak=" + el;
            cV.request(e, function(jh) {
                if (jh.status === 0) {
                    var jg = [];
                    ev.each(jh.result, function(ji) {
                        jg.push(new cf(ji.x,ji.y))
                    });
                    delete jh.result;
                    jh.points = jg
                }
                T && T(jh)
            })
        }
    });
    var dL = {
        idle: 0,
        freeze: 1,
        zooming: 2,
        dragging: 3,
        moving: 4,
        readyToDrag: 5,
        readyToPinch: 6,
        pinching: 7,
        stdMapCtrlDrag: 8,
        KEY_LEFT: 37,
        KEY_UP: 38,
        KEY_RIGHT: 39,
        KEY_DOWN: 40,
        arrowOpCodes: {
            37: 1,
            38: 2,
            39: 4,
            40: 8
        }
    };
    var ae = {
        _map: null,
        _html: "<div class='BMap_opMask' unselectable='on'></div>",
        _maskElement: null,
        _cursor: "default",
        inUse: false,
        show: function(e) {
            if (!this._map) {
                this._map = e
            }
            this.inUse = true;
            if (!this._maskElement) {
                this._createMask(e)
            }
            this._maskElement.style.display = "block"
        },
        _createMask: function(i) {
            if (!this._map) {
                this._map = i
            }
            if (!this._map) {
                return
            }
            var e = this._maskElement = bB(this._map.container, this._html);
            ev.on(e, "mouseup", function(T) {
                if (T.button == 2) {
                    gH(T)
                }
            });
            ev.on(e, "contextmenu", gH);
            e.style.display = "none"
        },
        getDrawPoint: function(je, jh, jf) {
            je = window.event || je;
            var i = je.offsetX || je.layerX || 0;
            var jg = parseInt(je.offsetY) || parseInt(je.layerY) || 0;
            var T = je.target || je.srcElement;
            if (T != ae.getDom(this._map) && jh == true) {
                while (T && T != this._map.container) {
                    if (!(T.clientWidth == 0 && T.clientHeight == 0 && T.offsetParent && T.offsetParent.nodeName.toLowerCase() == "td")) {
                        i += T.offsetLeft;
                        jg += T.offsetTop
                    }
                    T = T.offsetParent
                }
            }
            if (T != ae.getDom(this._map) && T != this._map.container) {
                return
            }
            if (typeof i === "undefined" || typeof jg === "undefined") {
                return
            }
            if (isNaN(i) || isNaN(jg)) {
                return
            }
            if (jf) {
                i = i + jf.x;
                jg = jg + jf.y
            }
            return this._map.pixelToPointIn(new eO(i,jg))
        },
        hide: function() {
            if (!this._map) {
                return
            }
            this.inUse = false;
            if (this._maskElement) {
                this._maskElement.style.display = "none"
            }
        },
        getDom: function(e) {
            if (!this._maskElement) {
                this._createMask(e)
            }
            return this._maskElement
        },
        setCursor: function(e) {
            this._cursor = e || "default";
            if (this._maskElement) {
                this._maskElement.style.cursor = this._cursor
            }
        }
    };
    function aI() {
        this._type = "overlay"
    }
    aI.inherits(ev.BaseClass, "Overlay");
    aI.getZIndex = function(i, e) {
        i = i * 1;
        if (!i) {
            return 0
        }
        if (e) {
            i = ig.convertMC2LL(new cf(0,i)).lat
        }
        return (i * -100000) << 1
    }
    ;
    ev.extend(aI.prototype, {
        _i: function(e) {
            this._map = e;
            if (!this.domElement && bH(this.initialize)) {
                this.domElement = this.initialize(e);
                if (this.domElement) {
                    this.domElement.style.WebkitUserSelect = "none"
                }
            }
            this.draw()
        },
        initialize: function(e) {
            throw "initialize方法未实现"
        },
        draw: function() {
            throw "draw方法未实现"
        },
        remove: function() {
            if (this.domElement && this.domElement.parentNode) {
                this.domElement.parentNode.removeChild(this.domElement)
            }
            this.domElement = null;
            this.dispatchEvent(new fa("onremove"))
        },
        hide: function() {
            this._visible = false;
            ev.hide(this.domElement)
        },
        show: function() {
            this._visible = true;
            ev.show(this.domElement)
        },
        getMap: function() {
            return this._map
        },
        dispose: function() {
            ev.BaseClass.prototype.decontrol.call(this)
        }
    });
    function d9() {
        ev.BaseClass.call(this);
        aI.call(this);
        this._visible = true;
        this._visibleInternal = true;
        this.zIndex = 0;
        this.infoWindow = null;
        this._dblclickTime = 0
    }
    d9.inherits(aI, "OverlayInternal");
    ev.extend(d9.prototype, {
        initialize: function(e) {
            this.map = e;
            ev.BaseClass.call(this, this.hashCode);
            return null
        },
        draw: function() {},
        remove: function() {
            this.decontrol();
            aI.prototype.remove.call(this)
        },
        hide: function() {
            this._visible = false
        },
        show: function() {
            this._visible = true
        },
        getDom: function() {
            return this.domElement
        },
        getContainer: function() {
            return this.domElement
        },
        setClassName: function() {},
        setConfig: function(i) {
            if (!i) {
                return
            }
            for (var e in i) {
                if (i.hasOwnProperty(e)) {
                    this._config[e] = i[e]
                }
            }
        },
        getPoint: function(T, je) {
            if (!T) {
                return this.point
            } else {
                var e = je ? je.width : 0;
                var jf = je ? je.height : 0;
                if (this.map) {
                    var i = this.map.pointToPixelIn(this.point);
                    if (this._config && this._config.offset) {
                        i.x = i.x + this._config.offset.width + e;
                        i.y = i.y + this._config.offset.height + jf
                    } else {
                        i.x = i.x + e;
                        i.y = i.y + jf
                    }
                    return this.map.pixelToPointIn(i)
                }
            }
        },
        setZIndex: function(e) {
            this.zIndex = e
        },
        isVisible: function() {
            if (!this.domElement) {
                return false
            }
            return !!this._visible
        },
        enableMassClear: function() {
            this._config.enableMassClear = true
        },
        disableMassClear: function() {
            this._config.enableMassClear = false
        },
        showInternal: function() {
            this._visibleInternal = true
        },
        hideInternal: function(e) {
            this._visibleInternal = false;
            this._hideInternalReason = e
        }
    });
    function aG(e) {
        this.map = e;
        this._overlays = {};
        this._overlayArray = [];
        this._customOverlays = [];
        e._overlays = this._overlays;
        e._overlayArray = this._overlayArray;
        e._customOverlays = this._customOverlays;
        this._zoomingOrMoving = false;
        this._init()
    }
    aG.prototype._init = function() {
        if (this.map._renderType !== "webgl") {
            this._createOverlayContainers()
        } else {
            this._createWebGLOverlayContainers()
        }
        this._bind()
    }
    ;
    aG.prototype._createOverlayContainers = function() {
        var e = this.map;
        e.temp.overlayDiv = e.overlayDiv = this._createOverlayDiv(e.platform, 200);
        e.temp.overlayDivEx = e.overlayDivEx = this._createOverlayDiv(e.platform, 50);
        e._panes.floatPane = this._createOverlayDiv(e.temp.overlayDiv, 800);
        e._panes.markerMouseTarget = this._createOverlayDiv(e.temp.overlayDiv, 700);
        e._panes.floatShadow = this._createOverlayDiv(e.temp.overlayDiv, 600);
        e._panes.labelPane = this._createOverlayDiv(e.temp.overlayDiv, 500);
        e._panes.markerPane = this._createOverlayDiv(e.temp.overlayDiv, 400);
        if (e.isCanvasMap()) {
            e._panes.mapPane = this._createOverlayDiv(e.temp.overlayDivEx, 50)
        } else {
            e._panes.mapPane = this._createOverlayDiv(e.temp.overlayDiv, 200)
        }
    }
    ;
    aG.prototype._createWebGLOverlayContainers = function() {
        var e = this.map;
        e.temp.overlayDiv = e.overlayDiv = this._createOverlayDiv(e.platform, 200);
        e._panes.floatPane = this._createOverlayDiv(e.temp.overlayDiv, 800);
        e._panes.markerMouseTarget = this._createOverlayDiv(e.temp.overlayDiv, 700);
        e._panes.floatShadow = this._createOverlayDiv(e.temp.overlayDiv, 600);
        e._panes.labelPane = this._createOverlayDiv(e.temp.overlayDiv, 500);
        e._panes.markerPane = this._createOverlayDiv(e.temp.overlayDiv, 400)
    }
    ;
    aG.prototype._createOverlayDiv = function(e, je) {
        var T = bL("div");
        var i = T.style;
        i.position = "absolute";
        i.top = i.left = i.width = i.height = "0";
        i.zIndex = je;
        e.appendChild(T);
        return T
    }
    ;
    aG.prototype._bind = function() {
        var jf = this.map;
        var je = this;
        function i(jh) {
            je.draw(jh)
        }
        if (jf._renderType !== "webgl") {
            jf.addEventListener("load", i);
            jf.addEventListener("moveend", i);
            jf.addEventListener("resize", i);
            jf.addEventListener("zoomend", i);
            jf.addEventListener("zooming_inner", i)
        } else {
            jf.on("update", i)
        }
        jf.addEventListener("zoomend", function(jh) {
            if (this.mapType === "B_EARTH_MAP") {
                if (this._earth.getZoom() < this._earth.zoomForNight + 1) {
                    this.temp.overlayDiv.style.display = "none";
                    if (this.temp.overlayDivEx) {
                        this.temp.overlayDivEx.style.display = "none"
                    }
                } else {
                    if (this.temp.overlayDiv.style.display === "none") {
                        this.temp.overlayDiv.style.display = "";
                        if (this.temp.overlayDivEx) {
                            this.temp.overlayDivEx.style.display = ""
                        }
                        if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
                            this.temp.infoWin.redraw()
                        }
                    }
                }
            }
        });
        jf.addEventListener("oncenterandzoom", function(jh) {
            je.draw(jh);
            if (this.mapType === "B_EARTH_MAP") {
                if (this._earth.getZoom() < this._earth.zoomForNight + 1) {
                    this.temp.overlayDiv.style.display = "none";
                    if (this.temp.overlayDivEx) {
                        this.temp.overlayDivEx.style.display = "none"
                    }
                } else {
                    if (this.temp.overlayDiv.style.display === "none") {
                        this.temp.overlayDiv.style.display = "";
                        if (this.temp.overlayDivEx) {
                            this.temp.overlayDivEx.style.display = ""
                        }
                        if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
                            this.temp.infoWin.redraw()
                        }
                    }
                }
            }
        });
        jf.addEventListener("maptypechange", function(jh) {
            if (this.mapType === "B_EARTH_MAP") {
                if (this._panes.mapPane) {
                    this._panes.mapPane.style.display = "none"
                }
                if (this._earth.getZoom() < this._earth.zoomForNight + 1) {
                    this.temp.overlayDiv.style.display = "none";
                    if (this.temp.overlayDivEx) {
                        this.temp.overlayDivEx.style.display = "none"
                    }
                } else {
                    if (this.temp.overlayDiv.style.display === "none") {
                        this.temp.overlayDiv.style.display = "";
                        if (this.temp.overlayDivEx) {
                            this.temp.overlayDivEx.style.display = ""
                        }
                        if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
                            this.temp.infoWin.redraw()
                        }
                    }
                }
                if (this._panes.markerPane) {
                    this._panes.markerPane.style.display = "none"
                }
            } else {
                if (this._panes.mapPane) {
                    this._panes.mapPane.style.display = ""
                }
                if (this._panes.markerPane) {
                    this._panes.markerPane.style.display = ""
                }
                if (this.temp.overlayDiv.style.display === "none") {
                    this.temp.overlayDiv.style.display = "";
                    if (this.temp.overlayDivEx) {
                        this.temp.overlayDivEx.style.display = ""
                    }
                    if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
                        this.temp.infoWin.redraw()
                    }
                }
            }
            je.draw(jh)
        });
        jf.on("earthstatuschange", function jg(jh) {
            je.draw(jh)
        });
        jf.addEventListener("addoverlay", function(jl) {
            var ji = jl.target;
            if (ji instanceof d9) {
                if (!je._overlays[ji.hashCode]) {
                    je._overlays[ji.hashCode] = ji;
                    je._overlayArray.push(ji)
                }
            } else {
                var jk = false;
                for (var jj = 0, jh = je._customOverlays.length; jj < jh; jj++) {
                    if (je._customOverlays[jj] === ji) {
                        jk = true;
                        break
                    }
                }
                if (!jk) {
                    je._customOverlays.push(ji)
                }
            }
        });
        jf.addEventListener("removeoverlay", function(jk) {
            var ji = jk.target;
            if (ji instanceof d9) {
                delete je._overlays[ji.hashCode];
                for (var jj = 0; jj < je._overlayArray.length; jj++) {
                    if (je._overlayArray[jj] === ji) {
                        je._overlayArray.splice(jj, 1);
                        break
                    }
                }
            } else {
                for (var jj = 0, jh = je._customOverlays.length; jj < jh; jj++) {
                    if (je._customOverlays[jj] === ji) {
                        je._customOverlays.splice(jj, 1);
                        break
                    }
                }
            }
        });
        jf.addEventListener("clearoverlays", function(jj) {
            this.closeInfoWindow();
            this.closeSimpleInfoWindow();
            for (var ji in je._overlays) {
                if (je._overlays[ji]._config.enableMassClear) {
                    this.removeOverlay(je._overlays[ji])
                }
            }
            for (var jh = je._customOverlays.length - 1; jh > 0; jh--) {
                if (je._customOverlays[jh].enableMassClear !== false) {
                    this.removeOverlay(je._customOverlays[jh]);
                    je._customOverlays.splice(jh, 1)
                }
            }
        });
        jf.addEventListener("infowindowopen", function(ji) {
            var jh = this.infoWindow;
            if (jh) {
                ev.hide(jh.popDom);
                ev.hide(jh.shadowDom)
            }
        });
        function T() {
            if (this.getMapType() === "B_EARTH_MAP" || this._renderType === "webgl") {
                if (je._zoomingOrMoving === false) {
                    this._panes.markerMouseTarget.style.display = "none";
                    je._zoomingOrMoving = true
                }
            }
        }
        function e(jj) {
            if (this.getMapType() === "B_EARTH_MAP" || this._renderType === "webgl") {
                if (je._zoomingOrMoving === true) {
                    this._panes.markerMouseTarget.style.display = "";
                    je._zoomingOrMoving = false;
                    for (var ji = 0; ji < je._overlayArray.length; ji++) {
                        var jh = je._overlayArray[ji];
                        if (jh instanceof iU === true) {
                            jh.draw(jj)
                        }
                    }
                }
            }
        }
        jf.addEventListener("movestart", T);
        jf.addEventListener("moveend", e);
        jf.addEventListener("zoomstart", T);
        jf.addEventListener("zoomend", e);
        jf.addEventListener("animation_start", T);
        jf.addEventListener("animation_end", e);
        jf.addEventListener("displayoptions_changed", function(jh) {
            if (this._displayOptions.overlay === false) {
                this.temp.overlayDiv.style.display = "none"
            } else {
                this.temp.overlayDiv.style.display = ""
            }
        })
    }
    ;
    aG.prototype.draw = function(jh) {
        jh = jh || {};
        if (this.map.getMapType() === "B_EARTH_MAP") {
            for (var jf = 0; jf < this._overlayArray.length; jf++) {
                var T = this._overlayArray[jf];
                if (T instanceof hL === true) {
                    continue
                }
                if (this._zoomingOrMoving) {
                    if (T instanceof iU === true) {
                        continue
                    }
                }
                T.draw(jh)
            }
        } else {
            for (var jf = 0, je = this._overlayArray.length; jf < je; jf++) {
                var T = this._overlayArray[jf];
                if (this._zoomingOrMoving && T instanceof iU === true) {
                    continue
                }
                T.draw(jh)
            }
        }
        ev.each(this._customOverlays, function(e) {
            e.draw(jh)
        });
        if (this.map.temp.infoWin) {
            this.map.temp.infoWin.setPosition(jh.center, jh.zoom)
        }
        if (this.map.getMapType() !== "B_EARTH_MAP" && this.map._renderType !== "webgl") {
            if (bp.DrawerSelector) {
                var jg = bp.DrawerSelector.getDrawer(this.map);
                jg.setPalette()
            }
        }
    }
    ;
    bp.register(function(e) {
        e._overlayMgr = new aG(e)
    });
    function hL(e) {
        d9.call(this);
        this._config = {
            strokeColor: "#000",
            strokeWeight: 2,
            strokeOpacity: 1,
            strokeStyle: "solid",
            dashArray: null,
            strokeLineCap: "round",
            strokeLineJoin: "round",
            enableMassClear: true,
            getParseTolerance: null,
            getParseCacheIndex: null,
            enableParse: true,
            enableEditing: false,
            mouseOverTolerance: 5,
            geodesic: false,
            clip: true,
            texture: null,
            textureSize: null,
            textureZoomWithMap: false,
            textureRepeat: true
        };
        this.setConfig(e);
        if (this._config.strokeOpacity < 0 || this._config.strokeOpacity > 1) {
            this._config.strokeOpacity = 1
        }
        if (this._config.fillOpacity < 0 || this._config.fillOpacity > 1) {
            this._config.fillOpacity = 1
        }
        if (this._config.strokeStyle !== "solid" && this._config.strokeStyle !== "dashed" && this._config.strokeStyle !== "dotted") {
            this._config.strokeStyle = "solid"
        }
        this.domElement = null;
        this._bounds = new hf();
        this.points = [];
        this.greatCirclePoints = [];
        this._parseCache = [];
        this._holesCache = [];
        this._parseCacheGL = [];
        this._parseCacheGLRaw = [];
        this._areaCacheGL = [];
        this._strokeStyleInfoForGL = [[]];
        this._fillStyleInfoForGL = "";
        this.vertexMarkers = [];
        this._temp = {}
    }
    hL.JOININDEX = {
        miter: 0,
        round: 1,
        bevel: 2
    };
    hL.CAPINDEX = {
        round: 0,
        butt: 1,
        square: 2
    };
    hL.inherits(d9, "Graph");
    hL.getGraphPoints = function(i) {
        var e = [];
        if (!i || i.length === 0) {
            return e
        }
        if (typeof i === "string") {
            var T = i.split(";");
            ev.each(T, function(jf) {
                var je = jf.split(",");
                e.push(new cf(je[0],je[1]))
            })
        }
        if (i.constructor === Array && i.length > 0) {
            e = i
        }
        return e
    }
    ;
    hL.parseTolerance = {
        0: [0.09, 0.005, 0.0001, 0.00001],
        1: [9000, 500, 20, 1]
    };
    ev.extend(hL.prototype, {
        initialize: function(e) {
            this.map = e;
            return null
        },
        draw: function() {},
        setPoints: function(e) {
            this._clearCache();
            this.points = hL.getGraphPoints(e).slice(0);
            this._calcBounds()
        },
        setPathIn: function(e) {
            this.setPoints(e)
        },
        _calcBounds: function() {
            if (!this.points) {
                return
            }
            var e = this;
            e._bounds = new hf();
            if (!this.hasMultipleParts) {
                ev.each(this.points, function(i) {
                    e._bounds.extend(i)
                })
            } else {
                ev.each(this.points, function(i) {
                    ev.each(i, function(T) {
                        e._bounds.extend(T)
                    })
                })
            }
        },
        getPoints: function() {
            return this.points
        },
        getPathIn: function() {
            return this.points
        },
        setPointAt: function(i, e) {
            if (!e || !this.points[i]) {
                return
            }
            this._clearCache();
            this.points[i] = new cf(e.lng,e.lat);
            this._calcBounds()
        },
        setPositionAt: function(i, e) {
            if (!e || !this.points[i]) {
                return
            }
            var T = ig.convertLL2MC(e);
            this.setPointAt(i, T)
        },
        setOptions: function(i) {
            i = i || {};
            for (var e in i) {
                if (i.hasOwnProperty(e)) {
                    this._config[e] = i[e]
                }
            }
        },
        setStrokeColor: function(e) {
            this._config.strokeColor = e
        },
        getStrokeColor: function() {
            return this._config.strokeColor
        },
        setStrokeLineCap: function(e) {
            this._config.strokeLineCap = e
        },
        getStrokeLineCap: function() {
            return this._config.strokeLineCap
        },
        setStrokeLineJoin: function(e) {
            this._config.strokeLineJoin = e
        },
        getStrokeLineJoin: function() {
            return this._config.strokeLineJoin
        },
        setStrokeWeight: function(e) {
            if (e > 0) {
                this._config.strokeWeight = e
            }
        },
        getStrokeWeight: function() {
            return this._config.strokeWeight
        },
        setStrokeOpacity: function(e) {
            if (!e || e > 1 || e < 0) {
                return
            }
            this._config.strokeOpacity = e
        },
        getStrokeOpacity: function() {
            return this._config.strokeOpacity
        },
        setFillOpacity: function(e) {
            if (e > 1 || e < 0) {
                return
            }
            this._config.fillOpacity = e
        },
        getFillOpacity: function() {
            return this._config.fillOpacity
        },
        setStrokeStyle: function(e) {
            if (e !== "solid" && e !== "dashed" && e !== "dotted") {
                return
            }
            this._config.strokeStyle = e
        },
        getStrokeStyle: function() {
            return this._config.strokeStyle
        },
        setFillColor: function(e) {
            this._config.fillColor = e || ""
        },
        getFillColor: function() {
            return this._config.fillColor
        },
        getBoundsIn: function() {
            this._bounds.setMinMax();
            return this._bounds
        },
        getBounds: function() {
            var e = this.getBoundsIn();
            var i = new hf(ig.convertMC2LL(e.getSouthWest()),ig.convertMC2LL(e.getNorthEast()));
            i.setMinMax();
            return i
        },
        remove: function() {
            if (this.map) {
                this.map.removeEventListener("onmousemove", this._graphMouseEvent);
                this.map.removeEventListener("onclick", this._graphClickEvent)
            }
            d9.prototype.remove.call(this);
            this._clearCache();
            var e = new fa("onlineupdate");
            e.action = "remove";
            e.overlay = this;
            this.fire(e)
        },
        enableEditing: function() {
            if (this.points.length < 2) {
                return
            }
            this._config.enableEditing = true;
            var e = this;
            gn.load("poly", function() {
                e.addVertexs()
            }, true)
        },
        disableEditing: function() {
            this._config.enableEditing = false;
            var e = this;
            gn.load("poly", function() {
                e.clearVertexs()
            }, true)
        },
        getLength: function() {
            if (typeof this._length === "number") {
                return this._length
            }
            if (typeof this._config.totalLength === "number") {
                this._length = this._config.totalLength;
                return this._length
            }
            var T = 0;
            if (this.points.length <= 1) {
                this._length = 0;
                return T
            }
            for (var e = 0; e < this.points.length - 1; e++) {
                T += dZ(this.points[e], this.points[e + 1])
            }
            this._length = T;
            return T
        },
        getParsedPoints: function() {
            var e = this._simplification(this.points);
            if (this.hasMultipleParts) {
                return e
            }
            return [e]
        },
        _simplification: function(jj) {
            var e = this.map;
            var ji = this.getParseCacheIndex(e.getZoom());
            var jl;
            if (this._parseCache[ji]) {
                jl = this._parseCache[ji]
            } else {
                var jg = jj;
                if (this.greatCirclePoints.length > 0) {
                    jg = this.greatCirclePoints
                }
                var jf = e.config.coordType === 2 ? 1 : e.config.coordType;
                var jh = this.getParseTolerance(e.getZoom(), jf);
                if (!this.hasMultipleParts) {
                    var jk = ds(jg, jh)
                } else {
                    var jk = [];
                    for (var T = 0; T < jg.length; T++) {
                        var je = ds(jg[T], jh);
                        jk.push(je)
                    }
                }
                jl = this._parseCache[ji] = jk
            }
            return jl
        },
        _clearCache: function() {
            this._length = null;
            this._parseCache.length = 0;
            this._parseCacheGL.length = 0;
            this._parseCacheGLRaw.length = 0;
            this._areaCacheGL.length = 0
        },
        canRenderDataBeMerged: function() {
            var e = this._config;
            if (e.texture) {
                return false
            }
            return true
        }
    });
    if (ev.Browser.ie && document.namespaces && !document.namespaces.olv) {
        document.namespaces.add("olv", "urn:schemas-microsoft-com:vml")
    }
    function iy(jg, je, T) {
        if (!jg || !je) {
            return
        }
        this.imageUrl = null;
        this.imageDom = null;
        if (typeof jg === "string") {
            this.imageUrl = jg
        } else {
            this.imageDom = jg;
            if (!this.imageDom.id) {
                this.imageDom.id = bp.getGUID("icon_dom_")
            }
        }
        this.size = je;
        var jf = new h8(Math.floor(je.width / 2),Math.floor(je.height / 2));
        var i = {
            offset: jf,
            imageOffset: new h8(0,0)
        };
        T = T || {};
        for (var e in T) {
            i[e] = T[e]
        }
        if (T.anchor) {
            i.offset = T.anchor
        }
        this.anchor = this.offset = i.offset;
        this.imageOffset = i.imageOffset;
        this.infoWindowOffset = T.infoWindowOffset || this.offset;
        this.printImageUrl = T.printImageUrl || "";
        this.imageSize = T.imageSize || this.size;
        this.srcSetObject = {};
        this.setImageSrcset(T.srcset || T.srcSet)
    }
    iy.prototype.setImageUrl = function(e) {
        if (!e) {
            return
        }
        this.imageUrl = e;
        this._renderData = null
    }
    ;
    iy.prototype.getCurrentImageUrl = function() {
        if (window.devicePixelRatio > 1 && this.srcSetObject["2x"]) {
            return this.srcSetObject["2x"]
        }
        return this.imageUrl
    }
    ;
    iy.prototype.setPrintImageUrl = function(e) {
        if (!e) {
            return
        }
        this.printImageUrl = e
    }
    ;
    iy.prototype.setSize = function(e) {
        if (!e) {
            return
        }
        this.size = new h8(e.width,e.height);
        this._renderData = null
    }
    ;
    iy.prototype.setOffset = function(e) {
        if (!e) {
            return
        }
        this.anchor = this.offset = new h8(e.width,e.height);
        this._renderData = null
    }
    ;
    iy.prototype.setAnchor = function(e) {
        this.setOffset(e)
    }
    ;
    iy.prototype.setImageOffset = function(e) {
        if (!e) {
            return
        }
        this.imageOffset = new h8(e.width,e.height);
        this._renderData = null
    }
    ;
    iy.prototype.setInfoWindowOffset = function(e) {
        if (!e) {
            return
        }
        this.infoWindowOffset = new h8(e.width,e.height)
    }
    ;
    iy.prototype.setImageSize = function(e) {
        if (!e) {
            return
        }
        this.imageSize = new h8(e.width,e.height)
    }
    ;
    iy.prototype.setImageSrcset = function(T) {
        var e = "";
        if (!T) {
            return
        }
        for (var i in T) {
            if (T.hasOwnProperty(i)) {
                this.srcSetObject[i] = T[i];
                e = T[i] + " " + i + ","
            }
        }
        this.srcSet = e
    }
    ;
    iy.prototype.toString = function() {
        return "Icon"
    }
    ;
    iy.prototype.generateRenderData = function(jg) {
        var T = this.offset;
        var e = this.size;
        var ji = this.imageOffset;
        var jh = [];
        jh.push(-T.width, T.height - e.height, 0);
        jh.push(e.width - T.width, T.height - e.height, 0);
        jh.push(e.width - T.width, T.height, 0);
        jh.push(-T.width, T.height - e.height, 0);
        jh.push(e.width - T.width, T.height, 0);
        jh.push(-T.width, T.height, 0);
        if (jg !== 0) {
            for (var jf = 0; jf < jh.length; jf += 3) {
                var je = vec2.fromValues(jh[jf], jh[jf + 1]);
                vec2.rotate(je, je, [0, 0], hM(-jg));
                jh[jf] = je[0];
                jh[jf + 1] = je[1]
            }
        }
        return {
            vertex: jh
        }
    }
    ;
    iy.prototype.getRenderData = function(e) {
        this._renderData = this.generateRenderData(e);
        return this._renderData
    }
    ;
    function dC(T, i) {
        ev.BaseClass.call(this);
        this.content = T;
        this.map = null;
        this._config = {
            width: 0,
            height: 0,
            maxWidth: 600,
            offset: new h8(0,0),
            title: "",
            maxContent: "",
            enableMaximize: false,
            enableAutoPan: true,
            enableCloseOnClick: true,
            margin: [10, 10, 40, 10],
            collisions: [[10, 10], [10, 10], [10, 10], [10, 10]],
            ifMaxScene: false,
            onClosing: function() {
                return true
            }
        };
        this.setConfig(i);
        if (this._config.width !== 0) {
            if (this._config.width < 220) {
                this._config.width = 220
            }
            if (this._config.width > 730) {
                this._config.width = 730
            }
        }
        if (this._config.height !== 0) {
            if (this._config.height < 60) {
                this._config.height = 60
            }
            if (this._config.height > 650) {
                this._config.height = 650
            }
        }
        if (this._config.maxWidth !== 0) {
            if (this._config.maxWidth < 220) {
                this._config.maxWidth = 220
            }
            if (this._config.maxWidth > 730) {
                this._config.maxWidth = 730
            }
        }
        this.isWinMax = false;
        this.IMG_PATH = w.imgPath;
        this.overlay = null;
        var e = this;
        gn.load("infowindow", function() {
            e._draw()
        })
    }
    dC.inherits(ev.BaseClass, "InfoWindow");
    ev.extend(dC.prototype, {
        setWidth: function(e) {
            e = e * 1;
            if (!e && e !== 0 || isNaN(e) || e < 0) {
                return
            }
            if (e !== 0) {
                if (e < 220) {
                    e = 220
                }
                if (e > 730) {
                    e = 730
                }
            }
            this._config.width = e
        },
        setHeight: function(e) {
            e = e * 1;
            if (!e && e !== 0 || isNaN(e) || e < 0) {
                return
            }
            if (e !== 0) {
                if (e < 60) {
                    e = 60
                }
                if (e > 650) {
                    e = 650
                }
            }
            this._config.height = e
        },
        setMaxWidth: function(e) {
            e = e * 1;
            if (!e && e !== 0 || isNaN(e) || e < 0) {
                return
            }
            if (e !== 0) {
                if (e < 220) {
                    e = 220
                }
                if (e > 730) {
                    e = 730
                }
            }
            this._config.maxWidth = e
        },
        setTitle: function(e) {
            this._config.title = e || ""
        },
        setContent: function(e) {
            this.content = e || ""
        },
        getContent: function() {
            return this.content
        },
        setMaxContent: function(e) {
            this._config.maxContent = e || ""
        },
        redraw: function() {},
        enableAutoPan: function() {
            this._config.enableAutoPan = true
        },
        disableAutoPan: function() {
            this._config.enableAutoPan = false
        },
        enableCloseOnClick: function() {
            this._config.enableCloseOnClick = true
        },
        disableCloseOnClick: function() {
            this._config.enableCloseOnClick = false
        },
        enableMaximize: function() {
            this._config.enableMaximize = true
        },
        disableMaximize: function() {
            this._config.enableMaximize = false
        },
        show: function() {
            this._visible = true
        },
        hide: function() {
            this._visible = false
        },
        close: function() {
            this.hide()
        },
        dispose: function() {
            ev.BaseClass.prototype.decontrol.call(this)
        },
        maximize: function() {
            this.isWinMax = true
        },
        restore: function() {
            this.isWinMax = false
        },
        setConfig: function(i) {
            if (!i) {
                return
            }
            for (var e in i) {
                if (typeof (this._config[e]) === typeof (i[e])) {
                    this._config[e] = i[e]
                }
            }
        },
        isVisible: function() {
            return this.isOpen()
        },
        isOpen: function() {
            return false
        },
        getPointIn: function() {
            if (this.overlay && this.overlay.getPoint) {
                return this.overlay.getPoint()
            }
        },
        getTitle: function() {
            return this._config.title || ""
        },
        getPosition: function() {
            return this.latLng
        },
        getPoint: function() {
            var e = this.getPointIn();
            if (this.map.config.coordType === BMAP_COORD_GCJ02) {
                var i = ig.convertMC2LL(e);
                return ef(i)
            }
            return ig.convertMC2LL(e)
        },
        getOffset: function() {
            return this._config.offset
        },
        dispose: function() {
            ev.BaseClass.prototype.decontrol.call(this)
        },
        toString: function() {
            return "InfoWindow"
        }
    });
    g0.prototype.openInfoWindow = function(T, e) {
        T.latLng = new b9(e.lat,e.lng);
        var i = ig.convertLL2MC(e);
        this.openInfoWindowIn(T, i)
    }
    ;
    g0.prototype.closeInfoWindow = function() {
        var e = this.temp.infoWin || this.temp._infoWin;
        if (e && e.overlay) {
            e.overlay.closeInfoWindow()
        }
    }
    ;
    g0.prototype.openInfoWindowIn = function(je, e) {
        if (!je || je.toString() !== "InfoWindow" || !e || e.toString() !== "Point") {
            return
        }
        var i = this.temp;
        if (!i.marker) {
            var T = new iy(w.imgPath + "blank.gif",{
                width: 1,
                height: 1
            });
            i.marker = new iU(e,{
                icon: T,
                width: 1,
                height: 1,
                offset: new h8(0,0),
                infoWindowOffset: new h8(0,0),
                clickable: false
            });
            i.marker._fromMap = 1
        } else {
            i.marker.setPoint(e)
        }
        this.addOverlay(i.marker);
        i.marker.show();
        i.marker.openInfoWindow(je)
    }
    ;
    d9.prototype.openInfoWindow = function(e) {
        if (this.map) {
            this.map.closeInfoWindow();
            e._visible = true;
            this.map.temp._infoWin = e;
            e.overlay = this;
            ev.BaseClass.call(e, e.hashCode)
        }
    }
    ;
    d9.prototype.closeInfoWindow = function() {
        if (this.map && this.map.temp._infoWin) {
            this.map.temp._infoWin._visible = false;
            this.map.temp._infoWin.decontrol();
            this.map.temp._infoWin = null
        }
    }
    ;
    function a5(T, i) {
        d9.call(this);
        this.content = T;
        this.map = null;
        this.domElement = null;
        this._config = {
            width: 0,
            offset: new h8(0,0),
            styles: {
                backgroundColor: "#fff",
                border: "1px solid #f00",
                padding: "1px",
                whiteSpace: "nowrap",
                fontSize: "12px",
                zIndex: "80",
                MozUserSelect: "none"
            },
            point: null,
            enableMassClear: true
        };
        i = i || {};
        this.setConfig(i);
        if (this._config.width < 0) {
            this._config.width = 0
        }
        this.point = this._config.point;
        var e = this;
        gn.load("marker", function() {
            e._draw()
        })
    }
    a5.inherits(d9, "Label");
    ev.extend(a5.prototype, {
        setPoint: function(e) {
            if (e && e.toString() === "Point" && !this.getMarker()) {
                if (this.coordType === BMAP_COORD_GCJ02) {
                    var i = hF(e, 3);
                    this.point = this._config.point = new cf(i.lng,i.lat)
                } else {
                    this.point = this._config.point = new cf(e.lng,e.lat)
                }
            }
        },
        setContent: function(e) {
            this.content = e
        },
        getContent: function(e) {
            return this.content
        },
        setOpacity: function(e) {
            if (e >= 0 && e <= 1) {
                this._config.opacity = e
            }
        },
        setOffset: function(e) {
            if (!e || e.toString() !== "Size") {
                return
            }
            this._config.offset = new h8(e.width,e.height)
        },
        getOffset: function() {
            return this._config.offset
        },
        setStyle: function(e) {
            e = e || {};
            this._config.styles = ev.extend(this._config.styles, e)
        },
        setStyles: function(e) {
            this.setStyle(e)
        },
        setTitle: function(e) {
            this._config.title = e || ""
        },
        getTitle: function() {
            return this._config.title
        },
        setMarker: function(e) {
            if (this._marker && this._marker !== e) {
                this._marker._config.label = null
            }
            this._marker = e;
            if (e) {
                this.point = this._config.point = e.getPoint()
            } else {
                this.point = this._config.point = null
            }
        },
        getMarker: function() {
            return this._marker || null
        },
        getPositionIn: function() {
            return this.getPoint()
        },
    });
    function g8(T, i) {
        var je = {};
        for (var e in i) {
            if (i.hasOwnProperty(e)) {
                if (e === "position") {
                    je.point = ig.convertLL2MC(i[e]);
                    this.latLng = new b9(i[e]["lat"],i[e]["lng"])
                } else {
                    je[e] = i[e]
                }
            }
        }
        a5.call(this, T, je)
    }
    g8.inherits(a5, "LabelOut");
    ev.extend(g8.prototype, {
        toString: function() {
            return "Label"
        },
        setPosition: function(e) {
            this.latLng = new b9(e.lat,e.lng);
            var i = ig.convertLL2MC(e);
            this.setPoint(i)
        },
        getPosition: function() {
            return this.latLng
        }
    });
    window.BMAP_ANIMATION_DROP = 1;
    window.BMAP_ANIMATION_BOUNCE = 2;
    function iU(e, i) {
        d9.call(this);
        i = i || {};
        this.point = e;
        this._rotation = 0;
        this.map = null;
        this._animation = null;
        this.domElement = null;
        this.iconDom = null;
        this.infoWindowDom = null;
        this.siblingElement = null;
        this.textureCoord = null;
        this.textureCoordGLMap = null;
        this.collisionDetectionFailed = false;
        this._config = {
            offset: new h8(0,0),
            opacity: 1,
            icon: null,
            title: "",
            infoWindow: null,
            label: null,
            baseZIndex: 0,
            clickable: true,
            zIndexFixed: false,
            isTop: false,
            enableMassClear: true,
            enableDragging: false,
            raiseOnDrag: false,
            restrictDraggingArea: false,
            startAnimation: "",
            enableCollisionDetection: false,
            rank: 0,
            enableDraggingMap: false
        };
        this.setOptions(i);
        this._isDragging = false;
        var T = this;
        gn.load("marker", function() {
            T._draw()
        })
    }
    iU.TOP_ZINDEX = aI.getZIndex(-90) + 1000000;
    iU.DRAG_ZINDEX = iU.TOP_ZINDEX + 1000000;
    iU._injectMethond = function(e) {
        ev.extend(iU.prototype, e)
    }
    ;
    iU.inherits(d9, "Marker");
    ev.extend(iU.prototype, {
        toString: function() {
            return "Marker"
        },
        setOptions: function(e) {
            this.setConfig(e);
            if (!e.icon) {
                this._config.icon = new iy(w.imgPath + "marker_red.png",new h8(23,25),{
                    offset: new h8(10,25),
                    infoWindowOffset: new h8(10,0)
                })
            }
        },
        setIcon: function(e) {
            if (e) {
                this._config.icon = e;
                this.textureCoord = this.textureCoordGLMap = null
            }
        },
        getIcon: function() {
            return this._config.icon
        },
        setLabel: function(e) {
            if (!(e instanceof a5)) {
                return
            }
            this._config.label = e;
            e._config.enableMassClear = this._config.enableMassClear;
            e.setPoint(this.point)
        },
        getLabel: function() {
            return this._config.label
        },
        enableDragging: function() {
            this._config.enableDragging = true
        },
        disableDragging: function() {
            this._config.enableDragging = false
        },
        setPoint: function(e) {
            if (e) {
                if (this.map.config.coordType === BMAP_COORD_GCJ02) {
                    var i = hF(e, 3);
                    this.point = this._config.point = new cf(i.lng,i.lat);
                    this.latLng = ig.convertMC2LL(i)
                } else {
                    this.point = this._config.point = new cf(e.lng,e.lat);
                    this.latLng = ig.convertMC2LL(e)
                }
            }
        },
        setPositionIn: function(e) {
            this.setPoint(e)
        },
        getPositionIn: function() {
            return this.getPoint()
        },
        setTop: function(i, e) {
            this._config.isTop = !!i;
            if (i) {
                this._addi = e || 0
            }
        },
        setTitle: function(e) {
            this._config.title = e || ""
        },
        getTitle: function() {
            return this._config.title
        },
        setOffset: function(e) {
            if (e) {
                this._config.offset = e
            }
        },
        getOffset: function() {
            return this._config.offset
        },
        setAnimation: function(e) {
            this._animation = e
        },
        setRank: function(e) {
            this._config.rank = e
        },
        getRank: function() {
            return this._config.rank
        },
        setRotation: function(e) {
            while (e < 0) {
                e += 360
            }
            this._rotation = e % 360
        },
        getRotation: function() {
            return this._rotation
        }
    });
    function r(e, T) {
        this.latLng = new b9(e.lat,e.lng);
        var i = ig.convertLL2MC(e);
        iU.call(this, i, T)
    }
    r.inherits(iU, "MarkerOut");
    ev.extend(r.prototype, {
        toString: function() {
            return "Marker"
        },
        toGeoJSON: function() {
            var i = "Point";
            var T = [this.latLng.lng, this.latLng.lat];
            var e = {
                type: "Feature",
                geometry: {
                    type: i,
                    coordinates: T
                },
                properties: this.properties
            };
            return e
        },
        updateByGeoJSON: function(T) {
            var e = new fU();
            var jg = e.readFeaturesFromObject(T) || [];
            for (var je = 0, jf = jg.length; je < jf; ++je) {
                if (jg[je]instanceof r) {
                    this.properties = jg[je].properties;
                    this.setPosition(jg[je].getPosition());
                    break
                }
            }
        },
        setPosition: function(e) {
            this.latLng = new b9(e.lat,e.lng);
            var i = ig.convertLL2MC(e);
            this.setPositionIn(i)
        },
        getPosition: function() {
            return this.latLng
        },
    });
    window.BMAP_SHAPE_CIRCLE = 1;
    window.BMAP_SHAPE_RECT = 2;
    function dN(i, e, T) {
        d9.call(this, e, T);
        this.domElement = null;
        this.point = i;
        T = T || {};
        this._config = {};
        this._config.height = e || 0;
        this._config.size = typeof T.size === "number" ? T.size : 50;
        this._config.fillOpacity = typeof T.fillOpacity === "number" ? T.fillOpacity : 0.8;
        this._config.shape = typeof T.shape === "number" ? T.shape : 1;
        bW(this._config.fillOpacity, 0, 1);
        if (T.fillColor === "") {
            this._config.fillColor = ""
        } else {
            this._config.fillColor = T.fillColor ? T.fillColor : "#f00"
        }
        this._config.icon = T.icon instanceof iy ? T.icon : "";
        this._config.enableMassClear = T.enableMassClear || true;
        var je = this;
        gn.load("marker", function() {
            je._draw()
        })
    }
    dN.inherits(d9, "Marker3D");
    ev.extend(dN.prototype, {
        setPoint: function(e) {
            if (this.map.config.coordType === BMAP_COORD_GCJ02) {
                var T = hF(e, 3);
                this.point = this._config.point = new cf(T.lng,T.lat);
                this.latLng = ig.convertMC2LL(T)
            } else {
                this.point = this._config.point = new cf(e.lng,e.lat);
                this.latLng = ig.convertMC2LL(e)
            }
            var i = new fa("onstatus_change");
            i.overlay = this;
            i.action = "setPoint";
            this.fire(i)
        },
        setPositionIn: function(e) {
            this.setPoint(e)
        },
        getPositionIn: function() {
            return this.getPoint()
        },
        setDomAttribute: function(i, T) {
            var e = new fa("onlineupdate");
            e.overlay = this;
            this.dispatchEvent(e)
        }
    });
    function dK(i, e, je) {
        this.latLng = new b9(i.lat,i.lng);
        var T = ig.convertLL2MC(i);
        dN.call(this, T, e, je)
    }
    dK.inherits(dN, "Marker3d");
    ev.extend(dK.prototype, {
        toString: function() {
            return "Marker3D"
        },
        setHeight: function(e) {
            this._config.height = Number(e);
            this.draw();
            var i = new fa("onlineupdate");
            i.overlay = this;
            this.dispatchEvent(i)
        },
        getHeight: function() {
            return this._config.height
        },
        setFillOpacity: function(e) {
            if (e > 1 || e < 0) {
                return
            }
            this._config.fillOpacity = e;
            this.setDomAttribute("fillopacity", e)
        },
        getFillOpacity: function() {
            return this._config.fillOpacity
        },
        setFillColor: function(e) {
            this._config.fillColor = e || "";
            this.setDomAttribute("fillcolor", e)
        },
        getFillColor: function() {
            return this._config.fillColor
        },
        setIcon: function(i) {
            if (!i || !this.map) {
                return
            }
            this._config.icon = i;
            if (this._config.icon) {
                var e = this._config.icon.getCurrentImageUrl();
                var je = i.getCurrentImageUrl() !== e;
                this._config.icon = i;
                this.textureCoord = this.textureCoordGLMap = null;
                this.draw();
                var T = new fa("onstatus_change");
                T.overlay = this;
                T.action = "setIcon";
                T.imageUrlChanged = je;
                this.fire(T)
            }
        },
        getIcon: function() {
            return this._config.icon
        },
        setPosition: function(e) {
            this.latLng = new b9(e.lat,e.lng);
            var i = ig.convertLL2MC(e);
            this.setPositionIn(i)
        },
        getPosition: function() {
            var e = this.getPositionIn();
            return ig.convertMC2LL(e)
        }
    });
    function fl(T, e) {
        hL.call(this, e);
        this._normalizedBounds = new hf();
        this.setPoints(T);
        var i = this;
        gn.load("poly", function() {
            i._draw()
        })
    }
    fl.inherits(hL, "Polyline");
    ev.extend(fl.prototype, {
        getBoundsIn: function(e) {
            if (!e) {
                this._bounds.setMinMax();
                return this._bounds
            }
            this._normalizedBounds.setMinMax();
            return this._normalizedBounds
        },
        setPoints: function(T) {
            this._clearCache();
            this.points = hL.getGraphPoints(T).slice(0);
            if (this._config.geodesic === true) {
                this.greatCirclePoints.length = 0;
                for (var e = 0; e < this.points.length - 1; e++) {
                    this.calcGreatCirclePoints(this.points[e], this.points[e + 1])
                }
            }
            this._calcBounds()
        },
        _calcBounds: function() {
            if (!this.points) {
                return
            }
            var e = this;
            e._bounds.setNorthEast(null);
            e._bounds.setSouthWest(null);
            if (e.greatCirclePoints && e.greatCirclePoints.length > 0) {
                ev.each(e.greatCirclePoints, function(i) {
                    e._bounds.extend(i)
                })
            } else {
                ev.each(e.points, function(i) {
                    e._bounds.extend(i)
                })
            }
            e._normalizedBounds.setSouthWest(e._bounds.getSouthWest());
            e._normalizedBounds.setNorthEast(e._bounds.getNorthEast());
            if (e._normalizedBounds.sw.lng < -g0.WORLD_SIZE_MC_HALF || e._normalizedBounds.ne.lng > g0.WORLD_SIZE_MC_HALF) {
                e._normalizedBounds.sw.lng = -g0.WORLD_SIZE_MC_HALF;
                e._normalizedBounds.ne.lng = g0.WORLD_SIZE_MC_HALF
            }
        },
        calcGreatCirclePoints: function(je, T) {
            var jg = je.latLng;
            var jf = T.latLng;
            if (jg.equals(jf)) {
                return
            }
            var e = ig.getDistance(hM(jg.lng), hM(jg.lat), hM(jf.lng), hM(jf.lat));
            if (e < 250000) {
                return
            }
            var jk = Math.round(e / 150000);
            var jo = this.calcAngularDistance(jg, jf);
            this.greatCirclePoints.push(je);
            var jn = jg.lng;
            var jm = je;
            for (var jh = 0; jh < jk; jh++) {
                var jj = this.calcMiddlePoint(jg, jf, jh / jk, jo);
                var jl = ig.convertLL2MC(jj);
                var ji = jl.lng;
                var jp = dZ(jl, jm);
                if (jp > 30037726) {
                    if (jl.lng < jm.lng) {
                        jl.lng += g0.WORLD_SIZE_MC
                    } else {
                        jl.lng -= g0.WORLD_SIZE_MC
                    }
                }
                this.greatCirclePoints.push(jl);
                jm = jl
            }
            var jp = dZ(T, jm);
            if (jp > 30037726) {
                if (T.lng < jm.lng) {
                    T.lng += g0.WORLD_SIZE_MC
                } else {
                    T.lng -= g0.WORLD_SIZE_MC
                }
            }
            this.greatCirclePoints.push(T)
        },
        calcMiddlePoint: function(jl, jk, jm, jq) {
            var jf = jl.lat;
            var je = jk.lat;
            var jp = jl.lng;
            var jn = jk.lng;
            var jr = hM(jf);
            var jo = hM(je);
            var i = hM(jp);
            var e = hM(jn);
            var jt = Math.sin((1 - jm) * jq) / Math.sin(jq);
            var js = Math.sin(jm * jq) / Math.sin(jq);
            var ji = jt * Math.cos(jr) * Math.cos(i) + js * Math.cos(jo) * Math.cos(e);
            var jh = jt * Math.cos(jr) * Math.sin(i) + js * Math.cos(jo) * Math.sin(e);
            var jg = jt * Math.sin(jr) + js * Math.sin(jo);
            var T = Math.atan2(jg, Math.sqrt(Math.pow(ji, 2) + Math.pow(jh, 2)));
            var jj = Math.atan2(jh, ji);
            return new cf(eG(jj),eG(T))
        },
        calcAngularDistance: function(jf, i) {
            var jg = hM(jf.lat);
            var je = hM(i.lat);
            var T = hM(jf.lng);
            var e = hM(i.lng);
            return Math.acos(Math.sin(jg) * Math.sin(je) + Math.cos(jg) * Math.cos(je) * Math.cos(Math.abs(e - T)))
        }
    });
    function bd(jf, e) {
        if (!jf || jf.length === 0) {
            return
        }
        var je = [];
        for (var T = 0; T < jf.length; T++) {
            je[T] = ig.convertLL2MC(jf[T])
        }
        fl.call(this, je, e)
    }
    bd.inherits(fl, "PolylineOut");
    ev.extend(bd.prototype, {
        toString: function() {
            return "Polyline"
        },
        toGeoJSON: function() {
            var je = "LineString";
            var jf = [];
            var jg = this.getPath();
            for (var T = 0; T < jg.length; T++) {
                jf.push([jg[T].lng, jg[T].lat])
            }
            var e = {
                type: "Feature",
                geometry: {
                    type: je,
                    coordinates: jf
                },
                properties: this.properties
            };
            return e
        },
        updateByGeoJSON: function(T) {
            var e = new fU();
            var jg = e.readFeaturesFromObject(T) || [];
            for (var je = 0, jf = jg.length; je < jf; ++je) {
                if (jg[je]instanceof bd) {
                    this.properties = jg[je].properties;
                    this.setPath(jg[je].getPath());
                    break
                }
            }
        },
        setPath: function(je) {
            if (!je || je.length === 0) {
                return
            }
            var T = [];
            for (var e = 0; e < je.length; e++) {
                T[e] = ig.convertLL2MC(je[e])
            }
            this.setPathIn(T)
        },
        getPath: function() {
            var e = this.getPathIn();
            if (!e || e.length === 0) {
                return []
            }
            var je = [];
            for (var T = 0; T < e.length; T++) {
                je[T] = ig.convertMC2LL(e[T])
            }
            return je
        },
        getBounds: function(i) {
            var e = this.getBoundsIn(i);
            var T = new hf(ig.convertMC2LL(e.getSouthWest()),ig.convertMC2LL(e.getNorthEast()));
            return T
        }
    });
    function gb(T, je, e) {
        hL.call(this, e);
        this._normalizedBounds = new hf();
        this._cps = je;
        this._path = T;
        this.setPoints(T);
        var i = this;
        gn.load("poly", function() {
            i._draw()
        })
    }
    gb.inherits(fl, "BezierCurve");
    ev.extend(gb.prototype, {
        getBoundsIn: function(e) {
            if (!e) {
                this._bounds.setMinMax();
                return this._bounds
            }
            this._normalizedBounds.setMinMax();
            return this._normalizedBounds
        },
        setPoints: function(e) {
            this._clearCache();
            this.points = hL.getGraphPoints(e).slice(0);
            this.points = this.calcBezierPoints(this.points, this._cps);
            this._calcBounds()
        },
        _calcBounds: function() {
            if (!this.points) {
                return
            }
            var e = this;
            e._bounds.setNorthEast(null);
            e._bounds.setSouthWest(null);
            if (e.greatCirclePoints && e.greatCirclePoints.length > 0) {
                ev.each(e.greatCirclePoints, function(i) {
                    e._bounds.extend(i)
                })
            } else {
                ev.each(e.points, function(i) {
                    e._bounds.extend(i)
                })
            }
            e._normalizedBounds.setSouthWest(e._bounds.getSouthWest());
            e._normalizedBounds.setNorthEast(e._bounds.getNorthEast());
            if (e._normalizedBounds.sw.lng < -g0.WORLD_SIZE_MC_HALF || e._normalizedBounds.ne.lng > g0.WORLD_SIZE_MC_HALF) {
                e._normalizedBounds.sw.lng = -g0.WORLD_SIZE_MC_HALF;
                e._normalizedBounds.ne.lng = g0.WORLD_SIZE_MC_HALF
            }
        },
        getPathIn: function() {
            return this._path
        },
        setPathIn: function(e) {
            this._path = e;
            this.setPoints(e)
        },
        getCpsIn: function() {
            return this._cps
        },
        setCpsIn: function(e) {
            this._cps = e;
            this.setPoints(this._path)
        },
        calcBezierPoints: function(je, jg) {
            var T = [];
            for (var e = 0; e < je.length - 1; e++) {
                var jf = [je[e], jg[e][0], jg[e][1], je[e + 1]];
                T = T.concat((this.bezierbetweenTwoP(jf)))
            }
            return T
        },
        bezierbetweenTwoP: function(jg) {
            var T = 100;
            var jf = 1 / T;
            var e = [];
            for (var je = 0; je < T; je++) {
                e.push(this.getPointOnCubicBezier(jg, je * jf))
            }
            return e
        },
        getPointOnCubicBezier: function(jh, jl) {
            var i;
            var jg;
            var je;
            var jm;
            var jf;
            var T;
            var jk;
            var e;
            var jj;
            var ji;
            je = 3 * (jh[1].lng - jh[0].lng);
            jg = 3 * (jh[2].lng - jh[1].lng) - je;
            i = jh[3].lng - jh[0].lng - je - jg;
            T = 3 * (jh[1].lat - jh[0].lat);
            jf = 3 * (jh[2].lat - jh[1].lat) - T;
            jm = jh[3].lat - jh[0].lat - T - jf;
            jk = jl * jl;
            e = jk * jl;
            jj = (i * e) + (jg * jk) + (je * jl) + jh[0].lng;
            ji = (jm * e) + (jf * jk) + (T * jl) + jh[0].lat;
            return new cf(jj,ji)
        }
    });
    function cn(jf, jh, e) {
        if (!jf || jf.length === 0) {
            return
        }
        this.userPath = jf;
        this.userCps = jh;
        var je = [];
        for (var T = 0; T < jf.length; T++) {
            je[T] = ig.convertLL2MC(jf[T])
        }
        if (!jh || jh.length === 0) {
            return
        }
        var jg = [];
        for (var T = 0; T < jh.length; T++) {
            jg[T] = [];
            jg[T][0] = ig.convertLL2MC(jh[T][0]);
            if (jh[T][1]) {
                jg[T][1] = ig.convertLL2MC(jh[T][1])
            } else {
                jg[T][1] = ig.convertLL2MC(jh[T][0])
            }
        }
        gb.call(this, je, jg, e)
    }
    cn.inherits(gb, "BezierCurveOut");
    ev.extend(cn.prototype, {
        toString: function() {
            return "BezierCurve"
        },
        setPath: function(je) {
            if (!je || je.length === 0) {
                return
            }
            this.userPath = je;
            var T = [];
            for (var e = 0; e < je.length; e++) {
                T[e] = ig.convertLL2MC(je[e])
            }
            this.setPathIn(T)
        },
        getPath: function() {
            return this.userPath;
            var e = this.getPathIn();
            if (!e || e.length === 0) {
                return []
            }
            var je = [];
            for (var T = 0; T < e.length; T++) {
                je[T] = ig.convertMC2LL(e[T])
            }
            return je
        },
        getControlPoints: function() {
            return this.userCps;
            var e = this.getCpsIn();
            if (!e || e.length === 0) {
                return []
            }
            var je = [];
            for (var T = 0; T < e.length; T++) {
                je[T] = [];
                je[T][0] = ig.convertMC2LL(e[T][0]);
                je[T][1] = ig.convertMC2LL(e[T][1])
            }
            return je
        },
        setControlPoints: function(je) {
            if (!je || je.length === 0) {
                return
            }
            this.userCps = je;
            var T = [];
            for (var e = 0; e < je.length; e++) {
                T[e] = [];
                T[e][0] = ig.convertLL2MC(je[e][0]);
                if (je[e][1]) {
                    T[e][1] = ig.convertLL2MC(je[e][1])
                } else {
                    T[e][1] = ig.convertLL2MC(je[e][0])
                }
            }
            this.setCpsIn(T)
        },
        getBounds: function(i) {
            var e = this.getBoundsIn(i);
            var T = new hf(ig.convertMC2LL(e.getSouthWest()),ig.convertMC2LL(e.getNorthEast()));
            return T
        }
    });
    function dT(e, T) {
        hL.call(this, T);
        this._normalizedBounds = new hf();
        this.setPoints(e);
        var i = this;
        gn.load("poly", function() {
            i._draw()
        })
    }
    dT.inherits(fl, "PolylineMultipart");
    ev.extend(dT.prototype, {
        setPoints: function(e) {
            if (!e) {
                return
            }
            this._clearCache();
            this.points = this._unifyArgs(e);
            this._calcBounds()
        },
        _unifyArgs: function(T) {
            var e = [];
            var i = [];
            if (T.constructor === Array) {
                if (T[0].constructor === cf) {
                    i.push(T)
                } else {
                    i = T
                }
            } else {
                if (typeof T === "string") {
                    i.push(T)
                }
            }
            ev.each(i, function(je) {
                e.push(hL.getGraphPoints(je))
            });
            return e
        },
        setPointAt: function(i, e, T) {
            T = T || 0;
            if (!e || !this.points[T] || !this.points[T][i]) {
                return
            }
            this._clearCache();
            this.points[T][i] = new cf(e.lng,e.lat);
            this._calcBounds()
        },
        getBoundsIn: function(e) {
            if (!e) {
                this._bounds.setMinMax();
                return this._bounds
            }
            this._normalizedBounds.setMinMax();
            return this._normalizedBounds
        },
        _calcBounds: function() {
            if (!this.points) {
                return
            }
            var e = this;
            e._bounds.setNorthEast(null);
            e._bounds.setSouthWest(null);
            if (e.greatCirclePoints && e.greatCirclePoints.length > 0) {
                ev.each(e.greatCirclePoints, function(i) {
                    e._bounds.extend(i)
                })
            } else {
                ev.each(e.points, function(i) {
                    ev.each(i, function(T) {
                        e._bounds.extend(T)
                    })
                })
            }
            e._normalizedBounds.setSouthWest(e._bounds.getSouthWest());
            e._normalizedBounds.setNorthEast(e._bounds.getNorthEast());
            if (e._normalizedBounds.sw.lng < -g0.WORLD_SIZE_MC_HALF || e._normalizedBounds.ne.lng > g0.WORLD_SIZE_MC_HALF) {
                e._normalizedBounds.sw.lng = -g0.WORLD_SIZE_MC_HALF;
                e._normalizedBounds.ne.lng = g0.WORLD_SIZE_MC_HALF
            }
        }
    });
    function gB(T, e) {
        hL.call(this, e);
        e = e || {};
        if (typeof e.fillOpacity === "number") {
            this._config.fillOpacity = e.fillOpacity
        } else {
            this._config.fillOpacity = 0.6
        }
        bW(this._config.fillOpacity, 0, 1);
        if (e.fillColor === "") {
            this._config.fillColor = ""
        } else {
            this._config.fillColor = e.fillColor ? e.fillColor : "#fff"
        }
        this._parseFillCacheWebGL = [];
        this.setPoints(T, e);
        var i = this;
        gn.load("poly", function() {
            i._draw()
        })
    }
    gB.inherits(hL, "Polygon");
    ev.extend(gB.prototype, {
        setPoints: function(jg) {
            var je = [];
            if (typeof jg === "string" || jg.length === 1 || jg[0]instanceof cf || jg[0]instanceof b9 || this instanceof gi || jg.length === 0) {
                if (jg.length === 1) {
                    jg = jg[0]
                }
                var e = this._processSinglePointArray(jg);
                this._userPoints = e.userPoints;
                je = e.innerPoints;
                this.hasMultipleParts = false
            } else {
                this._userPoints = [];
                for (var jf = 0; jf < jg.length; jf++) {
                    var T = this._processSinglePointArray(jg[jf]);
                    this._userPoints.push(T.userPoints);
                    je.push(T.innerPoints)
                }
                this.hasMultipleParts = true
            }
            hL.prototype.setPoints.call(this, je)
        },
        setPathIn: function(e) {
            this.setPoints(e)
        },
        _processSinglePointArray: function(e) {
            var i = hL.getGraphPoints(e).slice(0);
            innerPoints = i.slice(0);
            if (innerPoints.length > 1 && !innerPoints[0].equals(innerPoints[innerPoints.length - 1])) {
                innerPoints.push(new cf(innerPoints[0].lng,innerPoints[0].lat))
            }
            return {
                userPoints: i,
                innerPoints: innerPoints
            }
        },
        setPointAt: function(i, e) {
            if (!this._userPoints[i]) {
                return
            }
            this._clearCache();
            this._userPoints[i] = new cf(e.lng,e.lat);
            this.points[i] = new cf(e.lng,e.lat);
            if (i === 0 && !this.points[0].equals(this.points[this.points.length - 1])) {
                this.points[this.points.length - 1] = new cf(e.lng,e.lat)
            }
            this._calcBounds()
        },
        setPositionAt: function(i, e) {
            if (!this._userPoints[i]) {
                return
            }
            var T = ig.convertLL2MC(e);
            this.setPointAt(i, T)
        },
        getPoints: function() {
            var e = this._userPoints;
            if (e.length === 0) {
                e = this.points
            }
            return e
        },
        getPathIn: function() {
            return this.getPoints()
        }
    });
    function hR(T, e) {
        if (!T || T.length === 0) {
            return
        }
        var i = this.setPath(T, true);
        gB.call(this, i, e)
    }
    hR.inherits(gB, "PolygonOut");
    ev.extend(hR.prototype, {
        toString: function() {
            return "Polygon"
        },
        toGeoJSON: function() {
            var jf = "Polygon";
            var jg = [];
            var ji = this.getPath();
            if (this.hasMultipleParts) {
                jf = "Multi" + jf;
                for (var je = 0; je < ji.length; je++) {
                    var jh = [];
                    for (var T = 0; T < ji.length; T++) {
                        jh.push([ji[je][T].lng, ji[je][T].lat])
                    }
                    jg.push(jh)
                }
            } else {
                for (var je = 0; je < ji.length; je++) {
                    jg.push([ji[je].lng, ji[je].lat])
                }
            }
            var e = {
                type: "Feature",
                geometry: {
                    type: jf,
                    coordinates: [jg]
                },
                properties: this.properties
            };
            return e
        },
        updateByGeoJSON: function(T) {
            var e = new fU();
            var jg = e.readFeaturesFromObject(T) || [];
            for (var je = 0, jf = jg.length; je < jf; ++je) {
                if (jg[je]instanceof hR) {
                    this.properties = jg[je].properties;
                    this.setPath(jg[je].getPath());
                    break
                }
            }
        },
        setPath: function(jj, T) {
            if (!jj || jj.length === 0) {
                return
            }
            var ji = [];
            if (typeof jj === "string" || jj[0]instanceof cf || jj[0]instanceof b9) {
                var e = this._processSinglePointArray(jj);
                for (var jh = 0; jh < e.innerPoints.length; jh++) {
                    ji[jh] = ig.convertLL2MC(e.innerPoints[jh])
                }
            } else {
                for (var jh = 0; jh < jj.length; jh++) {
                    var je = this._processSinglePointArray(jj[jh]);
                    var jg = [];
                    for (var jf = 0; jf < je.innerPoints.length; jf++) {
                        jg[jf] = ig.convertLL2MC(je.innerPoints[jf])
                    }
                    ji.push(jg)
                }
            }
            if (T) {
                return ji
            }
            this.setPathIn(ji)
        },
        getPath: function() {
            var e = this.getPathIn();
            if (!e || e.length === 0) {
                return []
            }
            var jg = [];
            if (this.hasMultipleParts) {
                for (var je = 0; je < e.length; je++) {
                    var jf = [];
                    for (var T = 0; T < e[je].length; T++) {
                        jf[T] = ig.convertMC2LL(e[je][T])
                    }
                    jg.push(jf)
                }
            } else {
                for (var je = 0; je < e.length; je++) {
                    jg[je] = ig.convertMC2LL(e[je])
                }
            }
            return jg
        }
    });
    function gi(i, e, T) {
        this.point = i;
        this.radius = Math.abs(e);
        gB.call(this, [], T)
    }
    gi.parseTolerance = {
        0: [0.01, 0.0001, 0.00001, 0.000004],
        1: [1000, 10, 1, 0.4]
    };
    gi.inherits(gB, "Circle");
    ev.extend(gi.prototype, {
        initialize: function(e) {
            this.map = e;
            this.points = this._getPerimeterPoints(this.point, this.radius);
            this._calcBounds();
            return null
        },
        getPoint: function() {
            return this.point
        },
        setPoint: function(e) {
            if (!e) {
                return
            }
            this.point = e;
            this.latLng = ig.convertMC2LL(e)
        },
        setCenterIn: function(e) {
            var i = arguments[1];
            this.setPoint(e, i)
        },
        setRadius: function(e) {
            this.radius = Math.abs(e)
        },
        getCenterIn: function() {
            return this.point
        },
        getRadius: function() {
            return this.radius
        },
        _getPerimeterPoints: function(e, jl) {
            if (!e || !jl || !this.map) {
                return []
            }
            var T = this.map;
            var ji = e.lng;
            var jg = e.lat;
            var jr = ig.convertMC2LL(e);
            ji = jr.lng;
            jg = jr.lat;
            var js = [];
            var jn = jl / ig.EARTHRADIUS;
            var jk = (Math.PI / 180) * jg;
            var jq = (Math.PI / 180) * ji;
            for (var jj = 0; jj < 360; jj += 9) {
                var jh = (Math.PI / 180) * jj;
                var jo = Math.asin(Math.sin(jk) * Math.cos(jn) + Math.cos(jk) * Math.sin(jn) * Math.cos(jh));
                var jm = Math.atan2(Math.sin(jh) * Math.sin(jn) * Math.cos(jk), Math.cos(jn) - Math.sin(jk) * Math.sin(jo));
                var jp = ((jq - jm + Math.PI) % (2 * Math.PI)) - Math.PI;
                var jf = new b9(jo * (180 / Math.PI),jp * (180 / Math.PI));
                js.push(ig.convertLL2MC(jf))
            }
            var je = js[0];
            js.push(new cf(je.lng,je.lat));
            if (je) {
                this._radiusMercator = Math.sqrt(Math.pow(je.lng - this.point.lng, 2) + Math.pow(je.lat - this.point.lat, 2))
            } else {
                this._radiusMercator = this.radius
            }
            return js
        }
    });
    function aL(i, e, je) {
        this.latLng = new b9(i.lat,i.lng);
        var T = ig.convertLL2MC(i);
        gi.call(this, T, e, je)
    }
    aL.inherits(gi, "CircleOut");
    ev.extend(aL.prototype, {
        toString: function() {
            return "Circle"
        },
        setCenter: function(e) {
            this.latLng = new b9(e.lat,e.lng);
            var i = ig.convertLL2MC(e);
            this.setCenterIn(i)
        },
        getCenter: function() {
            return this.latLng
        },
        getPath: function() {
            var e = this.getPathIn();
            if (!e || e.length === 0) {
                return []
            }
            var je = [];
            for (var T = 0; T < e.length; T++) {
                je[T] = ig.convertMC2LL(e[T])
            }
            return je
        }
    });
    function i5(je, e, i) {
        hL.call(this, i);
        i = i || {};
        if (typeof i.topFillOpacity === "number") {
            this._config.topFillOpacity = i.topFillOpacity
        } else {
            this._config.topFillOpacity = 0.6
        }
        if (typeof i.sideFillOpacity === "number") {
            this._config.sideFillOpacity = i.sideFillOpacity
        } else {
            this._config.sideFillOpacity = 0.8
        }
        bW(this._config.sideFillOpacity, 0, 1);
        if (i.topFillColor === "") {
            this._config.topFillColor = ""
        } else {
            this._config.topFillColor = i.topFillColor ? i.topFillColor : "#fff"
        }
        if (i.sideFillColor === "") {
            this._config.sideFillColor = ""
        } else {
            this._config.sideFillColor = i.sideFillColor ? i.sideFillColor : "#fff"
        }
        this._parseFillCacheWebGL = [];
        this.setPoints(je, i);
        this._config.altitude = e || 0;
        var T = this;
        gn.load("poly", function() {
            T._draw()
        })
    }
    i5.inherits(hL, "Prism");
    ev.extend(i5.prototype, {
        setPoints: function(jg) {
            var je = [];
            if (typeof jg === "string" || jg[0]instanceof cf || jg[0]instanceof b9 || this instanceof gi || jg.length === 0) {
                var e = this._processSinglePointArray(jg);
                this._userPoints = e.userPoints;
                je = e.innerPoints;
                this.hasMultipleParts = false
            } else {
                this._userPoints = [];
                for (var jf = 0; jf < jg.length; jf++) {
                    var T = this._processSinglePointArray(jg[jf]);
                    this._userPoints.push(T.userPoints);
                    je.push(T.innerPoints)
                }
                this.hasMultipleParts = true
            }
            hL.prototype.setPoints.call(this, je)
        },
        setPathIn: function(e) {
            this.setPoints(e)
        },
        _processSinglePointArray: function(e) {
            var i = hL.getGraphPoints(e).slice(0);
            innerPoints = i.slice(0);
            if (innerPoints.length > 1 && !innerPoints[0].equals(innerPoints[innerPoints.length - 1])) {
                innerPoints.push(new cf(innerPoints[0].lng,innerPoints[0].lat))
            }
            return {
                userPoints: i,
                innerPoints: innerPoints
            }
        },
        setPointAt: function(i, e) {
            if (!this._userPoints[i]) {
                return
            }
            this._clearCache();
            this._userPoints[i] = new cf(e.lng,e.lat);
            this.points[i] = new cf(e.lng,e.lat);
            if (i === 0 && !this.points[0].equals(this.points[this.points.length - 1])) {
                this.points[this.points.length - 1] = new cf(e.lng,e.lat)
            }
            this._calcBounds()
        },
        getPoints: function() {
            var e = this._userPoints;
            if (e.length === 0) {
                e = this.points
            }
            return e
        },
        getPathIn: function() {
            return this.getPoints()
        },
        setTopFillOpacity: function(e) {
            if (e > 1 || e < 0) {
                return
            }
            this._config.topFillOpacity = e;
            this._setDomAttribute("topfillopacity", e)
        },
        getTopFillOpacity: function() {
            return this._config.topFillOpacity
        },
        setSideFillOpacity: function(e) {
            if (e > 1 || e < 0) {
                return
            }
            this._config.sideFillOpacity = e;
            this._setDomAttribute("sidefillopacity", e)
        },
        getSideFillOpacity: function() {
            return this._config.sideFillOpacity
        },
        setTopFillColor: function(e) {
            this._config.topFillColor = e || "";
            this._setDomAttribute("topfillcolor", e)
        },
        getTopFillColor: function() {
            return this._config.topFillColor
        },
        setSideFillColor: function(e) {
            this._config.sideFillColor = e || "";
            this._setDomAttribute("sidefillcolor", e)
        },
        getSideFillColor: function() {
            return this._config.sideFillColor
        },
        setAltitude: function(e) {
            this._config.altitude = Number(e);
            this.draw();
            var i = new fa("onlineupdate");
            i.overlay = this;
            this.dispatchEvent(i)
        },
        getAltitude: function() {
            return this._config.altitude
        }
    });
    function bj(ji, jg, jj) {
        if (!ji || ji.length === 0) {
            return
        }
        this.userPath = ji;
        var e = [];
        if (typeof ji === "string" || ji[0]instanceof cf || ji[0]instanceof b9) {
            var jk = this._processSinglePointArray(ji);
            for (var jf = 0; jf < jk.innerPoints.length; jf++) {
                e[jf] = ig.convertLL2MC(jk.innerPoints[jf])
            }
        } else {
            for (var jf = 0; jf < ji.length; jf++) {
                var jh = this._processSinglePointArray(ji[jf]);
                var T = [];
                for (var je = 0; je < jh.innerPoints.length; je++) {
                    T[je] = ig.convertLL2MC(jh.innerPoints[je])
                }
                e.push(T)
            }
        }
        i5.call(this, e, jg, jj)
    }
    bj.inherits(i5, "PrismOut");
    ev.extend(bj.prototype, {
        toString: function() {
            return "Prism"
        },
        setPath: function(je) {
            if (!je || je.length === 0) {
                return
            }
            this.userPath = je;
            var T = [];
            for (var e = 0; e < je.length; e++) {
                T[e] = ig.convertLL2MC(je[e])
            }
            this.setPathIn(T)
        },
        getPath: function() {
            return this.userPath;
            var e = this.getPathIn();
            if (!e || e.length === 0) {
                return []
            }
            var je = [];
            for (var T = 0; T < e.length; T++) {
                je[T] = ig.convertMC2LL(e[T])
            }
            return je
        }
    });
    function bM(jf, i) {
        hL.call(this, i);
        i = i || {};
        this._config.type = i.type || "image";
        this._config.url = i.url || "";
        this._config.opacity = typeof i.opacity === "number" ? i.opacity : 1;
        bW(this._config.opacity, 0, 1);
        if (i.type === "image" && i.isPixelMap) {
            this._config.isPixelMap = i.isPixelMap || false;
            var T = i.pixelMap || {};
            this._config.colors = T.colors || ["#F9F871", "#FFC75F", "#FF9671", "#FF6F91", "#D65DB1", "#845EC2"];
            this._config.positions = T.positions || [0, 0.2, 0.4, 0.6, 0.8, 1];
            this._config.domain = T.domain || [0, 255];
            this._config.clamp = T.clamp || this._config.domain;
            this._config.noData = (T.noData !== undefined) ? T.noData : -99999;
            this._config.fomularC = T.fomularC || "float generateValue(vec4 pixel){return pixel.r * 255.;}";
            this._config.fomularJS = T.fomularJS || function(jg) {
                return jg.r
            }
            ;
            this._config.maskPng = T.maskPng || null;
            this._config.maskData = T.maskData || -1;
            this._config.maskCoord = T.maskCoord || null;
            this.fHashcode = l({
                str: this._config.fomularC
            });
            var e = this.canPixelMap();
            if (e) {
                this.isPixelMap = true;
                this.setPixelMap()
            }
        }
        this._parseFillCacheWebGL = [];
        this.setPoints(jf, i);
        var je = this;
        gn.load("poly", function() {
            je._draw()
        })
    }
    bM.inherits(hL, "GroundOverlay");
    ev.extend(bM.prototype, {
        setPoints: function(i) {
            var e = hL.getGraphPoints(i).slice(0);
            this.hasMultipleParts = false;
            hL.prototype.setPoints.call(this, e)
        },
        setPathIn: function(e) {
            this.setPoints(e)
        },
        getPoints: function() {
            return this.points
        },
        getPathIn: function() {
            return this.getPoints()
        },
        canPixelMap: function() {
            if (this._config.colors && this._config.positions) {
                return true
            }
            return false
        },
        setPixelMap: function() {
            if (!this._config.isPixelMap || !this.canPixelMap()) {
                return
            }
            var i = this._config.colors;
            var e = this._config.positions;
            this.pHashcode = l({
                colors: i,
                positions: e
            });
            this.pixelColorMap = gR.generateColorRamp(i, e)
        },
        setDomain: function(e) {
            if (e instanceof Array && e.length === 2) {
                this._config.domain = e;
                this.doOnceDraw()
            }
        },
        setClamp: function(e) {
            if (e instanceof Array && e.length === 2) {
                this._config.clamp = e;
                this.doOnceDraw()
            }
        },
        setMaskPng: function(i) {
            this._config.maskPng = i;
            if (this.map) {
                var e = new fa("hide");
                e.overlay = this;
                this.dispatchEvent(e);
                var e = new fa("show");
                e.overlay = this;
                this.dispatchEvent(e)
            }
            this.doOnceDraw()
        },
        setMaskData: function(e) {
            this._config.maskData = e;
            this.doOnceDraw()
        },
        setMaskCoord: function(e) {
            this._config.maskCoord = e;
            this.maskUV = null;
            this.doOnceDraw()
        },
        setNoData: function(e) {
            this._config.noData = e;
            this.doOnceDraw()
        },
        setPositions: function(e) {
            this._config.positions = e;
            this.setPixelMap();
            this.doOnceDraw()
        },
        setColors: function(e) {
            this._config.colors = e;
            this.setPixelMap();
            this.doOnceDraw()
        },
        setFomular: function(e, i) {
            if (e && i) {
                this._config.fomularJS = e;
                this._config.fomularC = i;
                this.fHashcode = l({
                    str: this._config.fomularC
                });
                this.doOnceDraw()
            }
        },
        setIsPixelMap: function(e) {
            this.isPixelMap = e;
            this.doOnceDraw()
        },
        getImagePixel: function(je) {
            if (!this._config.isPixelMap || !this.canPixelMap()) {
                return null
            }
            if (!this.getImageMaskPixel(je)) {
                return null
            }
            if (this.imageObject) {
                var T = Math.floor((je.lng - this.points[3].lng) / this.lngMC);
                var e = Math.floor((-je.lat + this.points[3].lat) / this.latMC);
                var i = Math.floor((e * this.imageObject.width + T) * 4);
                if (T > this.imageObject.width || T < 0) {
                    return null
                }
                if (e > this.imageObject.height || e < 0) {
                    return null
                }
                if (i + 3 > this.imageObject.data.data.length) {
                    return null
                }
                return [this.imageObject.data.data[i], this.imageObject.data.data[i + 1], this.imageObject.data.data[i + 2], this.imageObject.data.data[i + 3], ]
            }
            return null
        },
        getValue: function(i) {
            if (this._config.isPixelMap && i && this._config.fomularJS) {
                if (!(i instanceof Array)) {
                    i = this.getImagePixel(i.point)
                }
                var e = this._config.fomularJS({
                    r: i[0],
                    g: i[1],
                    b: i[2],
                    a: i[3]
                });
                if (e >= this._config.clamp[0] && e <= this._config.clamp[1]) {
                    return e
                }
            }
            return null
        },
        setImageObject: function(T) {
            var e = document.createElement("canvas");
            e.width = T.width;
            e.height = T.height;
            var i = e.getContext("2d");
            i.drawImage(T, 0, 0, T.width, T.height);
            this.imageObject = {
                width: T.width,
                height: T.height,
                data: i.getImageData(0, 0, T.width, T.height)
            };
            this.updatePixelMc();
            i = null;
            e = null
        },
        updatePixelMc: function() {
            if (this.imageObject) {
                var e = Math.abs(this.points[2].lng - this.points[0].lng);
                var i = Math.abs(this.points[2].lat - this.points[0].lat);
                this.lngMC = e / this.imageObject.width;
                this.latMC = i / this.imageObject.height
            }
        },
        setMaskImageObject: function(T) {
            var e = document.createElement("canvas");
            e.width = T.width;
            e.height = T.height;
            var i = e.getContext("2d");
            i.drawImage(T, 0, 0, T.width, T.height);
            this.imageMaskObject = {
                width: T.width,
                height: T.height,
                data: i.getImageData(0, 0, T.width, T.height)
            };
            i = null;
            e = null
        },
        getImageMaskPixel: function(e) {
            if (!this.imageMaskObject) {
                return true
            }
            var je = this._toOverlayPixelsGL([e]);
            var jj = this.maskOverlayPixels;
            var jg = jj[1][0] - jj[0][0];
            var jf = jj[1][1] - jj[0][1];
            var T = Math.floor((je[0][0] - jj[0][0]) / jg * this.imageMaskObject.width);
            var i = Math.floor((-je[0][1] + jj[1][1]) / jf * this.imageMaskObject.height);
            var ji = Math.floor((i * this.imageMaskObject.width + T) * 4);
            if (T > this.imageMaskObject.width || T < 0) {
                return null
            }
            if (i > this.imageMaskObject.height || i < 0) {
                return null
            }
            var jh = this.imageMaskObject.data.data;
            if (ji + 3 > jh.length) {
                return false
            }
            if (jh[ji + 3] > 0) {
                if (this._config.maskData > -1 && this._config.maskData !== jh[ji]) {
                    return false
                }
                return true
            }
            return false
        },
        doOnceDraw: function() {
            var e = new fa("onlineupdate");
            e.overlay = this;
            this.dispatchEvent(e)
        }
    });
    function fq(jf, T) {
        if (!jf) {
            return
        }
        T = T || {};
        var jh = [new cf(jf.sw.lng,jf.ne.lat), new cf(jf.ne.lng,jf.ne.lat), new cf(jf.ne.lng,jf.sw.lat), new cf(jf.sw.lng,jf.sw.lat)];
        var e = hL.getGraphPoints(jh).slice(0);
        var jg = [];
        for (var je = 0; je < e.length; je++) {
            jg[je] = ig.convertLL2MC(e[je])
        }
        bM.call(this, jg, T)
    }
    fq.inherits(bM, "GroundOverlayOut");
    ev.extend(fq.prototype, {
        toString: function() {
            return "GroundOverlay"
        }
    });
    var ao = {};
    function hi(T, i) {
        ev.BaseClass.call(this);
        this.content = T;
        this.map = null;
        this._config = {
            width: 0,
            height: 0,
            maxWidth: 600,
            offset: new h8(0,0),
            title: "",
            maxContent: "",
            enableMaximize: false,
            enableAutoPan: true,
            enableCloseOnClick: true,
            margin: [10, 10, 40, 10],
            collisions: [[10, 10], [10, 10], [10, 10], [10, 10]],
            ifMaxScene: false,
            onClosing: function() {
                return true
            }
        };
        this.setConfig(i);
        if (this._config.width < 50) {
            this._config.width = 50
        }
        if (this._config.width > 730) {
            this._config.width = 730
        }
        if (this._config.height != 0) {
            if (this._config.height < 50) {
                this._config.height = 50
            }
            if (this._config.height > 650) {
                this._config.height = 650
            }
        }
        if (this._config.maxWidth !== 0) {
            if (this._config.maxWidth < 50) {
                this._config.maxWidth = 50
            }
            if (this._config.maxWidth > 730) {
                this._config.maxWidth = 730
            }
        }
        this.isWinMax = false;
        this.IMG_PATH = w.imgPath;
        this.overlay = null;
        var e = this;
        gn.load("simpleInfowindow", function() {
            e._draw()
        })
    }
    hi.inherits(ev.BaseClass, "SimpleInfoWindow");
    ev.extend(hi.prototype, {
        setWidth: function(e) {
            e = e * 1;
            if (!e && e != 0 || isNaN(e) || e < 0) {
                return
            }
            if (e != 0) {
                if (e < 50) {
                    e = 50
                }
                if (e > 730) {
                    e = 730
                }
            }
            this._config.width = e
        },
        setHeight: function(e) {
            e = e * 1;
            e -= 10;
            if (!e && e != 0 || isNaN(e) || e < 0) {
                return
            }
            if (e != 0) {
                if (e < 50) {
                    e = 50
                }
                if (e > 650) {
                    e = 650
                }
            }
            this._config.height = e
        },
        setMaxWidth: function(e) {
            e = e * 1;
            if (!e && e != 0 || isNaN(e) || e < 0) {
                return
            }
            if (e != 0) {
                if (e < 50) {
                    e = 50
                }
                if (e > 730) {
                    e = 730
                }
            }
            this._config.maxWidth = e
        },
        setTitle: function(e) {
            this._config.title = e || ""
        },
        setContent: function(e) {
            this.content = e || ""
        },
        setMaxContent: function(e) {
            this._config.maxContent = e || ""
        },
        redraw: function() {},
        enableAutoPan: function() {
            this._config.enableAutoPan = true
        },
        disableAutoPan: function() {
            this._config.enableAutoPan = false
        },
        enableCloseOnClick: function() {
            this._config.enableCloseOnClick = true
        },
        disableCloseOnClick: function() {
            this._config.enableCloseOnClick = false
        },
        enableMaximize: function() {
            this._config.enableMaximize = true
        },
        disableMaximize: function() {
            this._config.enableMaximize = false
        },
        show: function() {
            this._visible = true
        },
        hide: function() {
            this._visible = false
        },
        close: function() {
            this.hide()
        },
        dispose: function() {
            ev.BaseClass.prototype.decontrol.call(this)
        },
        maximize: function() {
            this.isWinMax = true
        },
        restore: function() {
            this.isWinMax = false
        },
        setConfig: function(i) {
            if (!i) {
                return
            }
            for (var e in i) {
                if (typeof (this._config[e]) == typeof (i[e])) {
                    this._config[e] = i[e]
                }
            }
        },
        isVisible: function() {
            return this.isOpen()
        },
        isOpen: function() {
            return false
        },
        getPoint: function() {
            if (this.overlay && this.overlay.getPoint) {
                return this.overlay.getPoint()
            }
        },
        getOffset: function() {
            return this._config.offset
        },
        dispose: function() {
            ev.BaseClass.prototype.decontrol.call(this)
        },
        toString: function() {
            return "SimpleInfoWindow"
        }
    });
    g0.prototype.openSimpleInfoWindow = function(je, e) {
        if (!je || je.toString() != "SimpleInfoWindow" || !e || e.toString() != "Point") {
            return
        }
        var i = this.temp;
        if (!i.marker) {
            var T = new iy(w.imgPath + "blank.gif",{
                width: 1,
                height: 1
            });
            i.marker = new iU(e,{
                icon: T,
                width: 1,
                height: 1,
                offset: new h8(0,0),
                infoWindowOffset: new h8(0,0),
                clickable: false
            });
            i.marker._fromMap = 1
        } else {
            i.marker.setPoint(e)
        }
        this.addOverlay(i.marker);
        i.marker.show();
        i.marker.openSimpleInfoWindow(je)
    }
    ;
    g0.prototype.closeSimpleInfoWindow = function() {
        var e = this.temp.infoWin || this.temp._infoWin;
        if (e && e.overlay) {
            e.overlay.closeSimpleInfoWindow()
        }
    }
    ;
    d9.prototype.openSimpleInfoWindow = function(e) {
        if (this.map) {
            this.map.closeSimpleInfoWindow();
            e._visible = true;
            this.map.temp._infoWin = e;
            e.overlay = this;
            ev.BaseClass.call(e, e.hashCode)
        }
    }
    ;
    d9.prototype.closeSimpleInfoWindow = function() {
        if (this.map && this.map.temp._infoWin) {
            this.map.temp._infoWin._visible = false;
            this.map.temp._infoWin.decontrol();
            this.map.temp._infoWin = null
        }
    }
    ;
    function b3(T, e) {
        hL.call(this, e);
        e = e || {};
        this._config.showRegion = e.showRegion || "inside";
        this._config.isBuildingMask = e.isBuildingMask && true;
        this._config.isPoiMask = e.isPoiMask && true;
        this._config.isMapMask = e.isMapMask && true;
        this._config.path = T;
        this._parseFillCacheWebGL = [];
        this.setPoints(T, e);
        var i = this;
        gn.load("poly", function() {
            i._draw()
        })
    }
    b3.inherits(hL, "MapMask");
    ev.extend(b3.prototype, {
        setPoints: function(i) {
            var e = hL.getGraphPoints(i).slice(0);
            this.hasMultipleParts = false;
            hL.prototype.setPoints.call(this, e)
        },
        setPathIn: function(e) {
            this.setPoints(e)
        },
        _processSinglePointArray: function(e) {
            var i = hL.getGraphPoints(e).slice(0);
            innerPoints = i.slice(0);
            if (innerPoints.length > 1 && !innerPoints[0].equals(innerPoints[innerPoints.length - 1])) {
                innerPoints.push(new cf(innerPoints[0].lng,innerPoints[0].lat))
            }
            return {
                userPoints: i,
                innerPoints: innerPoints
            }
        },
        getPoints: function() {
            var e = this._userPoints;
            if (e.length === 0) {
                e = this.points
            }
            return e
        },
        getPathIn: function() {
            return this.getPoints()
        }
    });
    function i2(jg, T) {
        if (!jg || jg.length === 0) {
            return
        }
        var jf = [];
        if (jg[0]instanceof cf) {
            var e = this._processSinglePointArray(jg);
            for (var je = 0; je < e.innerPoints.length; je++) {
                jf[je] = ig.convertLL2MC(e.innerPoints[je])
            }
        }
        b3.call(this, jf, T)
    }
    i2.inherits(b3, "MapMaskOut");
    ev.extend(i2.prototype, {
        toString: function() {
            return "MapMask"
        }
    });
    function eO(e, i) {
        e = isNaN(e) ? 0 : e;
        i = isNaN(i) ? 0 : i;
        this.x = e;
        this.y = i
    }
    eO.prototype.equals = function(e) {
        if (!e) {
            return false
        }
        return e.x === this.x && e.y === this.y
    }
    ;
    eO.prototype.clone = function() {
        return new eO(this.x,this.y)
    }
    ;
    eO.prototype.toString = function() {
        return "Pixel"
    }
    ;
    function h8(i, e) {
        if (typeof i !== "number") {
            this.width = parseFloat(i)
        } else {
            this.width = i
        }
        if (typeof e !== "number") {
            this.height = parseFloat(e)
        } else {
            this.height = e
        }
    }
    h8.prototype.equals = function(e) {
        return !!(e && this.width === e.width && this.height === e.height)
    }
    ;
    h8.prototype.toString = function() {
        return "Size"
    }
    ;
    var i7 = {
        B_NORMAL_MAP: {
            tileUrls: db(w.tileDomain, w.rasterTilePath),
            vectorTileUrls: db(w.tileDomain, w.vectorTilePath),
            tileSize: 256,
            baseUnits: 256,
            zoomLevelMin: 3,
            zoomLevelMax: 19,
            minDataZoom: 3,
            maxDataZoom: 19,
            minZoom: 3,
            maxZoom: 19,
            webgl: {
                minZoom: 3,
                maxZoom: 25
            },
            zoomLevelBase: 18,
            errorUrl: w.imgPath + "bg.png",
            bounds: new hf(new cf(-21364736,-11708041.66),new cf(23855104,12474104.17)),
            imgExtend: "png"
        },
        B_SATELLITE_MAP: {
            tileUrls: ["//maponline0.bdimg.com/starpic/?qt=satepc&", "//maponline1.bdimg.com/starpic/?qt=satepc&", "//maponline2.bdimg.com/starpic/?qt=satepc&", "//maponline3.bdimg.com/starpic/?qt=satepc&"],
            tileSize: 256,
            baseUnits: 256,
            zoomLevelMin: 3,
            zoomLevelMax: 19,
            minDataZoom: 3,
            maxDataZoom: 19,
            minZoom: 3,
            maxZoom: 19,
            zoomLevelBase: 18,
            errorUrl: w.imgPath + "bg.png",
            bounds: new hf(new cf(-21364736,-10616832),new cf(23855104,15859712)),
            imgExtend: "png"
        },
        B_STREET_MAP: {
            tileUrls: db(w.tileDomain, w.rasterTilePath),
            tileSize: 256,
            baseUnits: 256,
            zoomLevelMin: 3,
            zoomLevelMax: 19,
            minDataZoom: 3,
            maxDataZoom: 19,
            minZoom: 3,
            maxZoom: 19,
            zoomLevelBase: 18,
            errorUrl: w.imgPath + "bg.png",
            bounds: new hf(new cf(-21364736,-10616832),new cf(23855104,15859712)),
            imgExtend: "png"
        },
        BMAP_CUSTOM_LAYER: {
            tileUrls: [""],
            tileSize: 256,
            baseUnits: 256,
            zoomLevelMin: 1,
            zoomLevelMax: 19,
            minDataZoom: 3,
            maxDataZoom: 19,
            minZoom: 3,
            maxZoom: 19,
            zoomLevelBase: 18,
            errorUrl: w.imgPath + "blank.gif",
            bounds: new hf(new cf(-21364736,-10616832),new cf(23855104,15859712)),
            imgExtend: "png"
        },
        B_EARTH_MAP: {
            tileUrls: [""],
            tileSize: 256,
            baseUnits: 256,
            zoomLevelMin: 3,
            zoomLevelMax: 19,
            minDataZoom: 3,
            maxDataZoom: 19,
            minZoom: 3,
            maxZoom: 19,
            webgl: {
                minZoom: 3,
                maxZoom: 21
            },
            zoomLevelBase: 18,
            errorUrl: w.imgPath + "blank.gif",
            bounds: new hf(new cf(-21364736,-10616832),new cf(23855104,15859712)),
            imgExtend: "png"
        },
        B_NONE_MAP: {
            tileUrls: "",
            tileSize: 256,
            baseUnits: 256,
            zoomLevelMin: 3,
            zoomLevelMax: 19,
            minDataZoom: 3,
            maxDataZoom: 19,
            minZoom: 3,
            maxZoom: 19,
            zoomLevelBase: 18,
            errorUrl: w.imgPath + "bg.png",
            bounds: new hf(new cf(-21364736,-11708041.66),new cf(23855104,12474104.17)),
            imgExtend: "png"
        }
    };
    var dR = i7;
    function cr(jh, ji, T, e, jg) {
        if (jg && dR[jg]) {
            this.mapTypeName = jg
        } else {
            this.mapTypeName = BMAP_NORMAL_MAP
        }
        if (jh && jh instanceof Array) {
            var jf = true;
            for (var je = 0; je < jh.length; je++) {
                if (jh[je]instanceof hf) {
                    continue
                } else {
                    jf = false;
                    break
                }
            }
            jf && (this.bounds = jh)
        }
        if (typeof ji === "number" && ji >= dR[this.mapTypeName].webgl.minZoom) {
            if (dR[this.mapTypeName].webgl) {
                if (ji >= dR[this.mapTypeName].webgl.minZoom) {
                    this.minZoom = ji
                } else {
                    this.minZoom = dR[this.mapTypeName].webgl.minZoom
                }
            } else {
                if (ji >= dR[this.mapTypeName].minZoom) {
                    this.minZoom = ji
                } else {
                    this.minZoom = dR[this.mapTypeName].minZoom
                }
            }
        }
        if (typeof T === "number") {
            if (dR[this.mapTypeName].webgl) {
                if (T <= dR[this.mapTypeName].webgl.maxZoom) {
                    this.maxZoom = T
                } else {
                    this.maxZoom = dR[this.mapTypeName].webgl.maxZoom
                }
            } else {
                if (T <= dR[this.mapTypeName].maxZoom) {
                    this.maxZoom = T
                } else {
                    this.maxZoom = dR[this.mapTypeName].maxZoom
                }
            }
        }
        if (this.maxZoom < this.minZoom) {
            this.maxZoom = null
        }
        if (e && typeof e === "function") {
            this.tileUrlFunction = e
        }
    }
    ev.extend(cr.prototype, {
        addBoundary: function(e) {
            if (e instanceof hf) {
                if (this.bounds) {
                    this.bounds.push(e)
                } else {
                    this.bounds = [e]
                }
            }
        },
        setTileUrlFunction: function(e) {
            if (e && typeof e === "function") {
                this.tileUrlFunction = e
            }
        },
        crossPoint: function(e, je, jf) {
            if (jf < this.minZoom || jf > this.maxZoom) {
                return false
            }
            var jg = this.containsPoint(e, jf);
            if (jg) {
                return jg
            }
            for (var T = 0; T < this.bounds.length; T++) {
                if (this.bounds[T].intersects(je)) {
                    jg = true;
                    break
                }
            }
            return jg
        },
        containsPoint: function(e, je) {
            if (!e || !(e instanceof cf) || !this.isValid()) {
                return false
            }
            var jf = false;
            if (je < this.minZoom || je > this.maxZoom) {
                return jf
            }
            for (var T = 0; T < this.bounds.length; T++) {
                if (this.bounds[T].containsPoint(e)) {
                    jf = true;
                    break
                }
            }
            return jf
        },
        isValid: function() {
            return this.bounds && this.minZoom && this.maxZoom && this.tileUrlFunction
        },
        toString: function() {
            return "PrivateRegionDataModel"
        }
    });
    function gZ(jj, i, jf, T, je) {
        this.mgr = jj;
        this.position = jf;
        this._cbks = [];
        this.name = jj.getTileName(T, je, jj.map.config.style);
        this.info = T;
        this._transparentPng = je.isTransparentPng();
        var jk = bL("img");
        hh(jk);
        jk.galleryImg = false;
        var ji = jk.style;
        ji.position = "absolute";
        ji.width = jj.tileSize + "px";
        ji.height = jj.tileSize + "px";
        ji.left = jf[0] + "px";
        ji.top = jf[1] + "px";
        this.img = jk;
        this.src = i;
        if (ea && jf._offsetX === 0) {
            ji.opacity = 0;
            ji.willChange = "opacity"
        }
        var jh = this;
        this.img.onload = function(js) {
            if (!jh.mgr) {
                return
            }
            var jn = jh.mgr;
            var jl = jn.bufferTiles;
            if (jn.bufferNumber > 0) {
                jl[jh.name] = jh;
                jl.push(jh.name)
            }
            var jp = jl.length - jn.bufferNumber;
            for (var jq = 0; jp > 0 && jq < jl.length; jq++) {
                var jr = jl[jq];
                if (!jn.mapTiles[jr]) {
                    if (jl[jr]) {
                        jl[jr].mgr = null;
                        var jo = jl[jr].img;
                        if (jo.parentNode) {
                            hz(jo);
                            jo.parentNode.removeChild(jo)
                        }
                        jo = null;
                        jl[jr].img = null;
                        jl[jr] = null;
                        delete jl[jr]
                    }
                    jl.splice(jq, 1);
                    jq--;
                    jp--
                }
            }
            jh.loaded = true;
            jn.imgNumber++;
            if (!aJ(jh.img)) {
                if (je.tilesDiv) {
                    je.tilesDiv.appendChild(jh.img)
                }
            }
            var js = new fa("onimagechange");
            js.action = "show";
            js.tile = jh.name;
            jn.map.dispatchEvent(js);
            if (ea && jf._offsetX === 0) {
                var jm = new e3({
                    fps: 10,
                    duration: 300,
                    render: function(e) {
                        if (jh.img && jh.img.style) {
                            jh.img.style.opacity = e * 1
                        }
                    },
                    finish: function() {
                        if (jh.img && jh.img.style) {
                            delete jh.img.style.opacity;
                            jh.img.style.willChange = "auto"
                        }
                    }
                })
            }
            jh._callCbks()
        }
        ;
        this.img.onerror = function(jn) {
            jh.error = true;
            jh._callCbks();
            if (!jh.mgr) {
                return
            }
            var jl = jh.mgr;
            var jm = dR[je.mapType];
            if (jm.errorUrl) {
                jh.img.src = jm.errorUrl
            }
            if (!aJ(jh.img)) {
                if (je.tilesDiv) {
                    je.tilesDiv.appendChild(jh.img)
                }
            }
        }
        ;
        jk = null;
        var jg = new fa("onimagebefore");
        jg.tile = jh.name;
        jj.map.dispatchEvent(jg)
    }
    gZ.prototype._addLoadCbk = function(e) {
        this._cbks.push(e)
    }
    ;
    gZ.prototype._load = function() {
        if (FeBrowser.ie <= 6 && FeBrowser.ie > 0 && this._transparentPng) {
            this.img.src = w.imgPath + "blank.gif"
        } else {
            this.img.src = this.src
        }
    }
    ;
    gZ.prototype._callCbks = function() {
        var T = this;
        for (var e = 0; e < T._cbks.length; e++) {
            T._cbks[e]()
        }
        T._cbks.length = 0
    }
    ;
    var ea = (!ev.Browser.ie || ev.Browser.ie > 8);
    function ip(e) {
        this.tileLayers = [];
        this.map = e;
        this.bufferNumber = 300;
        this.mapTiles = [];
        this.bufferTiles = [];
        this.config = dR[this.map.mapType];
        this.errorUrl = this.config.errorUrl;
        this.tileSize = this.config.tileSize;
        this.baseUnits = this.config.baseUnits;
        this.baseZoomLevel = this.config.zoomLevelBase;
        this.tileURLs = this.config.tileUrls;
        this.imgNumber = 0;
        this.numLoading = 0;
        this.temp = {}
    }
    bp.register(function(i) {
        if (i._renderType === "webgl") {
            return
        }
        var e = i.tileMgr = new ip(i);
        i.addEventListener("mousewheel", function(T) {
            e.mouseWheel(T)
        });
        i.addEventListener("dblclick", function(T) {
            e.dblClick(T)
        });
        i.addEventListener("rightdblclick", function(T) {
            e.dblClick(T)
        });
        i.addEventListener("minuspress", function(T) {
            e.keypress(T)
        });
        i.addEventListener("pluspress", function(T) {
            e.keypress(T)
        });
        i.addEventListener("load", function(T) {
            if (this.mapType === BMAP_EARTH_MAP) {
                return
            }
            e.loadTiles()
        });
        i.addEventListener("zoomstartcode", function(T) {
            if (this.mapType === BMAP_EARTH_MAP) {
                return
            }
            e._zoom(T)
        });
        i.addEventListener("moving", function(T) {
            if (this.mapType === BMAP_EARTH_MAP) {
                return
            }
            e.moveGridTiles()
        });
        i.addEventListener("resize", function(T) {
            if (this.mapType === BMAP_EARTH_MAP) {
                return
            }
            e.resizeMap(T)
        });
        i.addEventListener("addtilelayer", function(T) {
            e.addTileLayer(T)
        });
        i.addEventListener("removetilelayer", function(T) {
            e.removeTileLayer(T)
        })
    });
    ev.extend(ip.prototype, {
        addTileLayer: function(je) {
            var T = this;
            var i = je.target;
            T.tileLayers.push(i);
            if (T.map.loaded) {
                T.moveGridTiles()
            }
        },
        removeTileLayer: function(jl) {
            var jm = this;
            var jj = jl.target;
            var jh = jj.mapType;
            var jg = jm.mapTiles;
            var jo = jm.bufferTiles;
            for (var T in jo) {
                var je = T.split("-")[1];
                if (je == jh) {
                    delete jo[T]
                }
            }
            for (var T in jg) {
                var je = T.split("-")[1];
                if (je == jh) {
                    delete jg[T]
                }
            }
            if (jm.zoomsDiv && jm.zoomsDiv.parentNode) {
                jm.zoomsDiv.parentNode.removeChild(jm.zoomsDiv);
                jm.zoomsDiv.innerHTML = ""
            }
            var jf = jm.map;
            if (jf.deepZoom) {
                var jn = jf.deepZoom.preDeepZoomDiv;
                if (jn && jn.parentNode) {
                    jn.parentNode.removeChild(jn)
                }
            }
            for (var jk = 0, ji = jm.tileLayers.length; jk < ji; jk++) {
                if (jj == jm.tileLayers[jk]) {
                    jm.tileLayers.splice(jk, 1)
                }
            }
            jm.moveGridTiles()
        },
        hideDeepZoomDiv: function() {
            var i = this
              , T = i.map;
            if (T.deepZoom) {
                var e = T.deepZoom.preDeepZoomDiv;
                if (e && e.style.display != "none") {
                    e.style.display = "none"
                }
            }
        },
        getTileLayer: function(jf) {
            var je = this;
            for (var T = 0, e = je.tileLayers.length; T < e; T++) {
                tilelayer = je.tileLayers[T];
                if (tilelayer.mapType == jf) {
                    return tilelayer
                }
            }
            return null
        },
        _zoom: function(T) {
            var i = this;
            if (i.zoomsDiv && i.zoomsDiv.style.display != "none") {
                i.zoomsDiv.style.display = "none"
            }
            i.hideDeepZoomDiv();
            i.moveGridTiles()
        },
        resizeMap: function(i) {
            this.loaded = false;
            this.moveGridTiles()
        },
        _checkTilesLoaded: function() {
            this.numLoading--;
            var e = this;
            if (this.numLoading == 0) {
                if (this._checkLoadedTimer) {
                    clearTimeout(this._checkLoadedTimer);
                    this._checkLoadedTimer = null
                }
                this._checkLoadedTimer = setTimeout(function() {
                    if (e.numLoading == 0) {
                        e.map.dispatchEvent(new fa("ontilesloaded"))
                    }
                    e._checkLoadedTimer = null
                }, 80)
            }
        },
        getTileName: function(e, T, i) {
            var jf = T.mapType;
            var je = "TILE-" + jf + "-" + i + "-" + e[0] + "-" + e[1] + "-" + e[2];
            return je
        },
        hideTile: function(je, T) {
            var i = je.img;
            if (aJ(i)) {
                if (je.loaded) {
                    this.imgNumber--
                }
                if (i.parentNode) {
                    hz(i);
                    i.parentNode.removeChild(i)
                }
            }
            var jf = new fa("onimagechange");
            jf.tile = this.getTileName(je.info, T, this.map.config.style);
            jf.action = "hide";
            delete this.mapTiles[je.name];
            if (!je.loaded) {
                hz(i);
                je._callCbks();
                i = null;
                je.img = null;
                je.mgr = null
            }
            this.map.dispatchEvent(jf)
        },
        loadTiles: function() {
            var i = this;
            if (ev.Browser.ie) {
                try {
                    document.execCommand("BackgroundImageCache", false, true)
                } catch (T) {}
            }
            if (this.zoomsDiv && this.zoomsDiv.style.display != "none") {
                this.zoomsDiv.style.display = "none"
            }
            i.hideDeepZoomDiv();
            i.moveGridTiles()
        },
        getCell: function(jf, je) {
            var e = this.baseUnits * Math.pow(2, (this.baseZoomLevel - je));
            var T = parseInt(jf.lng / e);
            var i = parseInt(jf.lat / e);
            return [T, i, e * (T + 0.5), e * (i + 0.5)]
        },
        moveGridTiles: function() {
            var js = this.map
              , jB = js.getMapType()
              , jz = this.tileLayers.length;
            var jx = js.centerPoint;
            if (jB !== BMAP_SATELLITE_MAP) {
                jx = ey.calcLoopCenterPoint(jx)
            }
            var jj = js.width;
            var jN = js.getZoomUnits();
            var jy = jN * jj;
            var jD = jx.lng - jy / 2;
            var jo = jx.lng + jy / 2;
            var jr = ey.isAddWidth(jD, jo);
            for (var jF = 0; jF < jz; jF++) {
                var jf = this.tileLayers[jF];
                if (jf.baseLayer || jz == 1) {
                    this.tilesDiv = jf.tilesDiv
                }
                var jt = dR[jf.mapType];
                var je = js.zoomLevel;
                var jI = js.getZoomUnits(js.zoomLevel);
                var jn = jt.baseUnits * Math.pow(2, (jt.zoomLevelBase - je));
                var jl = Math.floor(jx.lng / jn);
                var jE = Math.floor(jx.lat / jn);
                var jq = jt.tileSize;
                var ju = [jl, jE, (jx.lng - jl * jn) / jn * jq, (jx.lat - jE * jn) / jn * jq];
                var jm = jr ? js.width / 2 * 1.5 : js.width / 2;
                var jp = ju[0] - Math.ceil((jm - ju[2]) / jq);
                var jM = ju[1] - Math.ceil((js.height / 2 - ju[3]) / jq);
                var jG = ju[0] + Math.ceil((jm + ju[2]) / jq);
                var jv = ju[1] + Math.ceil((js.height / 2 + ju[3]) / jq);
                var jk = [];
                for (var jK = jp; jK < jG; jK++) {
                    for (var jJ = jM; jJ < jv; jJ++) {
                        jk.push([jK, jJ]);
                        var jA = "id_" + jK + "_" + jJ + "_" + je;
                        jk[jA] = true
                    }
                }
                if (jf.mapType !== BMAP_SATELLITE_MAP) {
                    jk = ey.calcLoopTiles(jk, je)
                }
                jk.sort((function(i) {
                    return function(jP, jQ) {
                        return ((0.4 * Math.abs(jP[0] - i[0]) + 0.6 * Math.abs(jP[1] - i[1])) - (0.4 * Math.abs(jQ[0] - i[0]) + 0.6 * Math.abs(jQ[1] - i[1])))
                    }
                }
                )([ju[0], ju[1]]));
                var T = this.mapTiles;
                var e = -jx.lng / jI;
                var jO = jx.lat / jI;
                var jC = [e, jO];
                for (var jw in T) {
                    var jh = T[jw];
                    var jL = jh.info;
                    if (!jL) {
                        continue
                    }
                    var jA = "id_" + jL[0] + "_" + jL[1] + "_" + jL[2];
                    if (!jk[jA]) {
                        this.hideTile(jh, jf)
                    }
                }
                var jg = -js.offsetX + js.width / 2;
                var ji = -js.offsetY + js.height / 2;
                jf.tilesDiv.style.left = Math.round(e + jg) - jC[0] + "px";
                jf.tilesDiv.style.top = Math.round(jO + ji) - jC[1] + "px";
                this.numLoading += jk.length;
                for (var jK = 0, jH = jk.length; jK < jH; jK++) {
                    this.showTile([jk[jK][0], jk[jK][1], js.zoomLevel], jC, jf, jK, js.config.style)
                }
            }
        },
        showTile: function(jh, jg, jk, jp) {
            this.centerPos = jg;
            var ji = dR[jk.mapType];
            var jl = this.map.config.style;
            var je = this.getTileName(jh, jk, jl);
            var jf = (jh[0] * ji.tileSize) + jg[0];
            var T = (-1 - jh[1]) * ji.tileSize + jg[1];
            var jo = [jf, T];
            var jj = null;
            if (jk.mapType !== BMAP_SATELLITE_MAP) {
                jj = ey.calcLoopParam(jh[0], jh[2]);
                var jn = jj.offsetX;
                jo[0] += jn;
                jo._offsetX = jn
            }
            var js = this;
            var jr = this.mapTiles[je];
            if (jr) {
                jr.img.style.left = jo[0] + "px";
                jr.img.style.top = jo[1] + "px";
                if (jr.loaded) {
                    this._checkTilesLoaded()
                } else {
                    jr._addLoadCbk(function() {
                        js._checkTilesLoaded()
                    })
                }
                return
            }
            jr = this.bufferTiles[je];
            if (jr) {
                this.imgNumber++;
                jk.tilesDiv.insertBefore(jr.img, jk.tilesDiv.lastChild);
                this.mapTiles[je] = jr;
                jr.img.style.left = jo[0] + "px";
                jr.img.style.top = jo[1] + "px";
                if (jr.loaded) {
                    this._checkTilesLoaded()
                } else {
                    jr._addLoadCbk(function() {
                        js._checkTilesLoaded()
                    })
                }
                var jq = new fa("onimagechange");
                jq.action = "cache";
                jq.tile = this.getTileName(jh, jk, jl);
                this.map.dispatchEvent(jq)
            } else {
                var jm = new eO(jh[0],jh[1]);
                if (jj) {
                    jm.x = jj.col
                }
                var i = jk.getTilesUrl(jm, jh[2]);
                jr = new gZ(this,i,jo,jh,jk);
                jr._addLoadCbk(function() {
                    js._checkTilesLoaded()
                });
                jr._load();
                this.mapTiles[je] = jr;
                gA(this.map)
            }
        },
        mouseWheel: function(ji) {
            var jh = this.map;
            if (!jh.config.enableWheelZoom) {
                return
            }
            var jj = jh.zoomLevel + (ji.trend === true ? 1 : -1);
            var jf = jh._getProperZoom(jj);
            if (jf.exceeded) {
                var T = new fa("onzoomexceeded");
                T.targetZoom = jj;
                jh.dispatchEvent(T);
                return
            }
            jh.dispatchEvent(new fa("onzoomstart"));
            jh.lastLevel = jh.zoomLevel;
            jh.zoomLevel = jf.zoom;
            var i = ji.pixel;
            var je = jh.pixelToPointIn(i, {
                zoom: jh.lastLevel
            });
            var jg = jh.getZoomUnits(jh.zoomLevel);
            jh.centerPoint = new cf(je.lng + jg * (jh.width / 2 - i.x),je.lat - jg * (jh.height / 2 - i.y));
            this.zoom(i)
        },
        dblClick: function(T) {
            var i = this.map;
            if (!i.config.enableDblclickZoom) {
                return
            }
            if (i.mapType === "B_EARTH_MAP") {
                return
            }
            if (i.currentOperation === dL.dragging) {
                return
            }
            if (T.type == "onrightdblclick") {
                i.zoomOut(T.point)
            } else {
                i.zoomIn(T.point)
            }
        },
        keypress: function(T) {
            var i = this.map;
            if (i.getMapType() === BMAP_EARTH_MAP) {
                return
            }
            T.type == "onpluspress" ? i.zoomIn() : i.zoomOut()
        }
    });
    function gN(je) {
        this.opts = je || {};
        this.copyright = this.opts.copyright || {};
        this.transparentPng = this.opts.transparentPng || false;
        this.png8 = this.opts.png8 || false;
        this.baseLayer = this.opts.baseLayer || false;
        this.dataType = this.opts.dataType || 1;
        this.transform = this.opts.transform || 0;
        this.spanLevel = this.opts.spanLevel || 0;
        this.isFlat = !this.opts.isFlat ? false : true;
        this.showLabel = this.opts.showLabel === false ? false : true;
        var e = this.opts.tileTypeName || "web";
        this.tileType = hg.getInstance(e);
        this.clipTile = this.opts.clipTile || false;
        this._type = "tilelayer";
        var i = bK() ? 128 : 256;
        this.cacheSize = this.opts.cacheSize || i;
        var T = this;
        this.tileCache = new at(this.cacheSize,{
            clearCallback: function(jf) {
                if (jf.label) {
                    if (jf.label.textImageBitmap) {
                        jf.label.textImageBitmap.close()
                    }
                    if (jf.label.indoorTextImageBitmap) {
                        jf.label.indoorTextImageBitmap.close()
                    }
                }
                T._removeIndoorData(jf)
            }
        });
        this.scaler = fD() >= 1.5 ? 2 : 1;
        this.normalUdt = iT("ditu", "normal").udt;
        this.numLoading = 0;
        this.useThumbData = false;
        this.useThumbData = this.opts.useThumbData || false;
        if (this.baseLayer) {
            this.useThumbData = true
        }
        if (typeof this.opts.customLayer === "boolean") {
            this.customLayer = this.opts.customLayer
        } else {
            this.customLayer = true
        }
    }
    gN.inherits(cM, "TileLayer");
    ev.extend(gN.prototype, {
        isTransparentPng: function() {
            return this.transparentPng
        },
        getTilesUrl: function(jl, e) {
            var T = dR[this.mapType];
            if (typeof T !== "object") {
                return null
            }
            var je = jl.x;
            var jm = jl.y;
            if (this.mapType !== BMAP_SATELLITE_MAP) {
                var jm = ey.calcLoopParam(jm, e).col
            }
            var i = "";
            if (this.opts.tileUrlTemplate) {
                i = this.opts.tileUrlTemplate;
                i = i.replace(/\{X\}/, jm);
                i = i.replace(/\{Y\}/, je);
                i = i.replace(/\{Z\}/, e)
            } else {
                if (this.mapType === BMAPGL_NORMAL_MAP) {
                    var jk = this.isCanvasMap ? 0 : 1;
                    var jg = T.tileUrls[Math.abs(jm + je) % T.tileUrls.length];
                    if (window.offLineIPAddress) {
                        jg = window.offLineIPAddress + "tile5/"
                    }
                    var jf = this.map.config.style;
                    i = jg + "?qt=vtile&x=" + je + "&y=" + jm + "&z=" + e + (jf === "default" ? "" : ("&styleId=1")) + "&styles=pl&udt=" + this.normalUdt + "&scaler=" + this.scaler + "&showtext=" + jk;
                    i = i.replace(/-(\d+)/gi, "M$1")
                }
                if (this.mapType === BMAP_SATELLITE_MAP) {
                    var jh = iT("ditu", "satellite");
                    var jj = jh.ver;
                    var ji = jh.udt;
                    i = T.tileUrls[Math.abs(jm + je) % T.tileUrls.length] + "u=x=" + je + ";y=" + jm + ";z=" + e + ";v=" + jj + ";type=sate&fm=46&udt=" + ji;
                    i = i.replace(/-(\d+)/gi, "M$1")
                }
            }
            return i
        },
        initialize: function(jg) {
            this.map = jg;
            if (jg._renderType === "webgl") {
                var jf = null;
                if (this.customLayer !== false) {
                    jf = this.getTilesUrl
                }
                ev.extend(this, eK);
                this.labelProcessor = new ii(this);
                this.callbackDataQueue = [];
                if (jf) {
                    this.getTilesUrl = jf
                }
                var i = this;
                jg.on("indoor_data_refresh", function(jh) {
                    if (!i.baseLayer) {
                        return
                    }
                    i._refreshIndoorData(jh.uid, jh.floor)
                });
                jg.on("custom_labels_ready", function(jh) {
                    if (!i.baseLayer) {
                        return
                    }
                    i._doWorkAfterLabelImageLoad(jh.virtualTile, jh.labelCanvas, null, jh.imgKey)
                });
                jg.on("glmoduleloaded", function() {
                    if (!i.baseLayer) {
                        return
                    }
                    i.updateAllIconsTextureCoords()
                });
                jg.on("layer_update", function(ji) {
                    if (ji.name === i.tileType.getName() && jg.customLoaded) {
                        i.tileCache.clear();
                        jg._featureMgr.clearData(i.drawIndex);
                        jg._featureMgr.setLabelData([]);
                        jg._featureMgr.clearLabelOverlayData();
                        i.labelProcessor.iconCache = {};
                        var jh = new fa("onlayer_clear");
                        jg.fire(jh)
                    }
                });
                if (this.ontology && this.ontology._initEvent) {
                    this.ontology._initEvent(jg)
                }
            }
            if (!jg.temp.layerZIndex) {
                jg.temp.layerZIndex = 0
            }
            this.zIndex = this.zIndex || 0;
            if (this.baseLayer) {
                this.zIndex = 0
            }
            this.adjustZIndex();
            if (!jg.temp.layid) {
                jg.temp.layid = 0
            }
            if (!this.opts.mapType) {
                this.mapType = "BMAP_CUSTOM_LAYER_" + jg.temp.layid;
                jg.temp.layid++
            } else {
                this.mapType = this.opts.mapType
            }
            var T = dR[this.mapType];
            if (!T) {
                dR[this.mapType] = {
                    tileUrls: [],
                    tileSize: 256,
                    baseUnits: 256,
                    zoomLevelMin: 1,
                    zoomLevelMax: 19,
                    minZoom: 3,
                    maxZoom: 19,
                    minDataZoom: 3,
                    maxDataZoom: 19,
                    zoomLevelBase: 18,
                    errorUrl: w.imgPath + "/blank.gif",
                    bounds: new hf(new cf(-21364736,-10616832),new cf(23855104,15859712)),
                    imgExtend: "png"
                }
            }
            if (jg._renderType !== "webgl") {
                var je = bB(jg.platform, '<div style="position:absolute;z-index:' + this.zIndex + '"></div>');
                je.style.display = "";
                je.style.left = Math.ceil(-jg.offsetX + jg.width / 2) + "px";
                je.style.top = Math.ceil(-jg.offsetY + jg.height / 2) + "px";
                this.tilesDiv = je
            }
            this.isCanvasMap = jg.isCanvasMap();
            this.lastZoom = jg.getZoom();
            var e = this;
            this.addEventListener("initDrawData", function(jh) {
                if (e.opts.boundary) {
                    e.addBoundary(e.opts.boundary)
                }
            })
        },
        remove: function() {
            if (this.tilesDiv && this.tilesDiv.parentNode) {
                this.tilesDiv.innerHTML = "";
                this.tilesDiv.parentNode.removeChild(this.tilesDiv)
            }
            delete this.tilesDiv
        },
        getCopyright: function() {
            return this.copyright
        },
        getMapType: function() {
            return this.mapType
        },
        adjustZIndex: function() {
            if (this.map && this.map._featureMgr) {
                var e = this.map._featureMgr.result.bkData;
                while (e[this.zIndex]) {
                    this.zIndex += 1
                }
            }
        },
        setZIndex: function(e) {
            this.setTargetZIndex(e)
        },
        setTargetZIndex: function(e) {
            this.zIndex = e;
            this.drawIndex = e;
            if (this.tilesDiv) {
                this.tilesDiv.style.zIndex = e
            }
        },
        calcLoopParam: function(e, i) {
            return ey.calcLoopParam(e, i)
        },
        addBoundary: function(jg) {
            if (!jg || !this.map) {
                return
            }
            if (typeof jg === "string") {
                jg = [jg]
            }
            for (var je = 0; je < jg.length; je++) {
                var T = new BMapGL.Polygon(jg[je]);
                if (T && bH(T._i)) {
                    var jf = new fa("onbeforeaddoverlay",T);
                    jf.overlay = T;
                    jf.isLayerMask = true;
                    this.map.dispatchEvent(jf);
                    T._i(this.map);
                    if (this.boundary) {
                        this.boundary.push(T)
                    } else {
                        this.boundary = [T]
                    }
                }
            }
            this.updateBoundary()
        },
        clearBoundary: function() {
            this.boundary = false;
            this.updateBoundary()
        },
        updateBoundary: function() {
            if (this.boundary === undefined || !this.map) {
                return
            }
            var i = this.map._featureMgr.result.bkData;
            if (i[this.zIndex]) {
                i[this.zIndex].boundary = this.boundary;
                this.map.dispatchEvent(new fa("onrefresh"));
                if (this.boundary === false) {
                    var T = new fa("onremoveLayerMask");
                    T.hasLayerBoundary = this.map._featureMgr.hasLayerBoundary();
                    this.map.dispatchEvent(T)
                }
            }
        }
    });
    function h(i, e, T) {
        this.bounds = i;
        this.content = e;
        this.mapType = T
    }
    h.inherits(cM, "Copyright");
    var dW = {
        get: function(e) {
            if (!dW.singleton) {
                dW.singleton = new fu(e)
            }
            return dW.singleton
        }
    };
    function fu(i) {
        this._map = i;
        this._tileMgr = i.tileMgr;
        this._animationDiv = null;
        this._preAnimationDiv = null;
        this._animation = null;
        this._baseLayerDiv = null;
        this._transformStyleName = cK.ifSupportCSS3("transform", true);
        this._transformOriginStyleName = cK.ifSupportCSS3("transformOrigin", true);
        this._preZoomTimes = 1;
        this._preRenderTick = 1;
        this._enableCanvas2dMap = !!(i.getRenderType() === "canvas");
        this._isIE9 = !!(ev.Browser.ie === 9);
        var e = this;
        i.addEventListener("maptypechange", function() {
            e.hide()
        });
        i.addEventListener("load", function() {
            e.hide()
        })
    }
    ev.extend(fu.prototype, {
        prepareLayer: function() {
            var je = this._map;
            var e = this._tileMgr;
            this._canvas2dMapMgr = je.canvas2dMapMgr;
            var T = this._baseLayerDiv = e.tilesDiv;
            if (!this._animationDiv) {
                var i = this._preAnimationDiv;
                if (i) {
                    i.parentNode && i.parentNode.removeChild(i);
                    this._preAnimationDiv = null
                }
                this._preAnimationDiv = this._animationDiv = T.cloneNode(true);
                je.platform.insertBefore(this._animationDiv, je.platform.firstChild)
            }
            this.show()
        },
        prepareAniParam: function() {
            var je = this._animationDiv;
            if (!je) {
                return
            }
            var e = je.children.length;
            var T;
            this._zoomAniInfo = [];
            for (var jf = e - 1; jf > -1; jf--) {
                var jg = {};
                T = je.children[jf].style;
                jg.top = parseInt(T.top, 10);
                jg.left = parseInt(T.left, 10);
                this._zoomAniInfo[jf] = jg
            }
        },
        prepareLabelLayer: function() {
            var jf = this._map;
            if (this._enableCanvas2dMap && jf.canvas2dMapMgr) {
                if (this.touchZoomLabelCanvas) {
                    this.touchZoomLabelCanvas.parentNode.removeChild(this.touchZoomLabelCanvas)
                }
                var i = jf.canvas2dMapMgr._labelCanvas;
                this.touchZoomLabelCanvas = i.cloneNode(false);
                var e = this.touchZoomLabelCanvas.getContext("2d");
                e.drawImage(i, 0, 0);
                jf.platform.insertBefore(this.touchZoomLabelCanvas, jf.platform.firstChild);
                var je = parseInt(i.style.left, 10);
                var T = parseInt(i.style.top, 10);
                this.touchZoomLabelCanvas.style.zIndex = 9;
                this.touchZoomLabelCanvas.style[this._transformOriginStyleName] = (this._fixPosition.x - (jf.offsetX + je)) + "px " + (this._fixPosition.y - (jf.offsetY + T)) + "px";
                i.style.visibility = "hidden"
            }
        },
        show: function() {
            if (this._animationDiv) {
                this._animationDiv.style.visibility = ""
            }
        },
        showLabel: function() {
            var i = this._map;
            if (this._enableCanvas2dMap && i.canvas2dMapMgr) {
                var e = i.canvas2dMapMgr._labelCanvas;
                if (e) {
                    e.style.visibility = ""
                }
                if (this.touchZoomLabelCanvas) {
                    this.touchZoomLabelCanvas.style.zIndex = -2;
                    this.touchZoomLabelCanvas.style.visibility = "hidden"
                }
            }
        },
        hide: function() {
            if (this._animationDiv) {
                this._animationDiv.style.visibility = "hidden"
            }
            if (this._preAnimationDiv) {
                this._preAnimationDiv.style.visibility = "hidden"
            }
        },
        hideNonAnimationLayers: function() {
            var je = this._map;
            if (je.getRenderType() === "dom") {
                if (je.overlayDiv) {
                    je.overlayDiv.style.visibility = "hidden"
                }
                if (je.overlayDivEx) {
                    je.overlayDivEx.style.visibility = "hidden"
                }
            }
            var jg = je.tileMgr.tileLayers;
            var jf;
            for (var T = 0, e = jg.length; T < e; T++) {
                jf = jg[T];
                jf.tilesDiv.style.visibility = "hidden"
            }
        },
        showNonAnimationLayers: function() {
            var je = this._map;
            if (je.getRenderType() === "dom") {
                if (je.overlayDiv) {
                    je.overlayDiv.style.visibility = ""
                }
                if (je.overlayDivEx) {
                    je.overlayDivEx.style.visibility = ""
                }
            }
            var jg = je.tileMgr.tileLayers;
            var jf;
            for (var T = 0, e = jg.length; T < e; T++) {
                jf = jg[T];
                jf.tilesDiv.style.visibility = ""
            }
        },
        setFixPosition: function(e) {
            this._fixPosition = e
        },
        setZoom: function(e, jk) {
            var jh = this._fixPosition;
            var jq = this._map;
            var jr = this._baseLayerDiv;
            var ji = {
                x: jh.x - parseInt(jr.style.left, 10) - jq.offsetX,
                y: jh.y - parseInt(jr.style.top, 10) - jq.offsetY
            };
            var je = this._animationDiv;
            if (!je) {
                return
            }
            var jo = je.children.length;
            var jm;
            var jp = this._transformStyleName;
            var jg = this._transformOriginStyleName;
            var js = this;
            var ju;
            var jj;
            for (var jn = jo - 1; jn > -1; jn--) {
                var jl = this._zoomAniInfo[jn];
                jm = je.children[jn].style;
                var jf = jl.left - ji.x;
                var T = jl.top - ji.y;
                jl.dx = jf * e - jf;
                jl.dy = T * e - T;
                jl.preDx = jf - jf;
                jl.preDy = T - T;
                ju = jl.preDx + (jl.dx - jl.preDx);
                jj = jl.preDy + (jl.dy - jl.preDy) + jk;
                jm.left = jl.left + ju + "px";
                jm.top = jl.top + jj + "px";
                jm.width = jm.height = 256 * e + "px"
            }
            if (this._enableCanvas2dMap) {
                var jt = !js._isIE9 ? "translate3d(0px, " + jk + "px, 0) scale(" + e + ")" : "translate(0px, " + jk + "px) scale(" + e + ")";
                this.touchZoomLabelCanvas.style[jp] = jt
            }
        },
        setZoomFinish: function() {
            this._animationDiv = null
        },
        startAnimation: function(jh) {
            this.prepareLayer();
            this.hideNonAnimationLayers();
            var jA = this._map;
            if (this.touchZoomLabelCanvas) {
                this.touchZoomLabelCanvas.style.display = "none"
            }
            jh = jh || {};
            var jy = jh.zoomCount || 0;
            var jm = jh.fixPosition;
            var jw = jh.fixMCPosition;
            var jk = jh.pixOffset;
            this._zoomCount = jy;
            var je = jA.getZoom();
            var jz = je + jy;
            var e = jA.config.enableContinuousZoom;
            var jq = 0.5;
            var jl = 5;
            var T = Math.pow(2, jy);
            var jC = this._baseLayerDiv;
            var jn = {
                x: jm.x - parseInt(jC.style.left, 10) - jA.offsetX,
                y: jm.y - parseInt(jC.style.top, 10) - jA.offsetY
            };
            var ji = this._animationDiv;
            var ju = ji.children.length;
            var jE = this._preZoomTimes;
            var jx = [];
            var jv = this._transformStyleName;
            var jj = this._transformOriginStyleName;
            for (var jt = ju - 1; jt > -1; jt--) {
                var jr = {};
                var js = ji.children[jt].style;
                jr.top = parseInt(js.top, 10);
                jr.left = parseInt(js.left, 10);
                var jg = jr.left - jn.x;
                var jf = jr.top - jn.y;
                jr.dx = jg * T - jg;
                jr.dy = jf * T - jf;
                jr.preDx = jg * jE - jg;
                jr.preDy = jf * jE - jf;
                jx[jt] = jr
            }
            var jB = this;
            var jp;
            var jD;
            var jo;
            this._zoomAni = new e3({
                fps: 60,
                duration: e ? 500 : 1,
                transition: function(i) {
                    i = i * jl / (2 * jq);
                    return jl * i - jq * i * i
                },
                render: function(jN) {
                    jN = jN * (4 * jq) / (jl * jl);
                    jp = jE + jN * (T - jE);
                    var jG = je + m(jp);
                    var jL = null;
                    var jK = 0;
                    var jO = 0;
                    if (jh.onAnimationBeforeLooping) {
                        var jP = jh.onAnimationBeforeLooping(jN, jG);
                        jL = jP.loopingCenter;
                        jK = jP.yDiff;
                        jO = jP.totalYDiff
                    }
                    for (var jH = jx.length - 1; jH > -1; jH--) {
                        var jI = jx[jH];
                        if (ji.children[jH]) {
                            var jM = ji.children[jH].style;
                            jD = jI.preDx + (jI.dx - jI.preDx) * jN - jk.width * jN;
                            jo = jI.preDy + (jI.dy - jI.preDy) * jN - jk.height * jN + jK;
                            jM.left = jI.left + jD + "px";
                            jM.top = jI.top + jo + "px";
                            jM.height = jM.width = 256 * jp + "px"
                        }
                    }
                    var jF = jk.width * jN;
                    var jJ = jk.height * jN;
                    if (jA.isRestrict) {
                        jB._enableCanvas2dMap && jB._canvas2dMapMgr.clearLabel()
                    } else {
                        jB._enableCanvas2dMap && jB._canvas2dMapMgr.drawLabel(jp, jm, je, jz, jy, jN, jF, jJ, jO, jK)
                    }
                    jB._preZoomTimes = jp;
                    jB._preRenderTick = jN;
                    jh.onAnimationLooping && jh.onAnimationLooping(jN, jG, jL)
                },
                finish: function() {
                    jB._preZoomTimes = 1;
                    jB._zoomAni = null;
                    jB._animationDiv = null;
                    jh.onAnimationFinish && jh.onAnimationFinish();
                    jB.showNonAnimationLayers()
                }
            });
            return this._zoomAni
        },
        stopAnimation: function() {
            if (this._zoomAni) {
                this._zoomAni.stop();
                this._zoomAni = null
            }
        }
    });
    function jb(e) {
        this._initVars(e);
        this._initColorCanvas();
        this._bindEvent(e)
    }
    ev.extend(jb.prototype, {
        _initVars: function(e) {
            this._map = e._map;
            this._canvas2dMapMgr = e;
            this._labelCtx = e._labelCtx;
            this.ratio = this._map.config.ratio;
            this.sizeRatio = this.ratio > 1 ? 2 : 1;
            this.RANK1 = 1000000;
            this.RANK2 = 2000000;
            this.RANK3 = 3000000;
            this.RANK4 = 4000000;
            this.RANK5 = 5000000
        },
        _initColorCanvas: function() {
            var i = 256
              , T = bL("canvas")
              , e = T.style;
            e.width = i + "px";
            e.height = i + "px";
            T.width = i;
            T.height = i;
            this._colorCvsSize = i;
            this._colorCvs = T;
            this._colorCtx = T.getContext("2d")
        },
        getLabelImageData: function(jr) {
            var jq = jr.textImg;
            var T = jr.textPos;
            var jo = this.ratio;
            var jm = this.sizeRatio / jo;
            var jf = this._colorCtx;
            var jj = this._colorCvsSize;
            jf.clearRect(0, 0, jj, jj);
            var jl = 0;
            var e = 0;
            var ji = 0;
            for (var jk = 0; jk < T.length; jk++) {
                if (T[jk].width > jl) {
                    jl = T[jk].width;
                    e = jk;
                    ji = T[jk].drawX
                }
            }
            jl /= jm;
            var jn = 0;
            for (var jk = 0, jh = T.length; jk < jh; jk++) {
                var jp = T[jk];
                var js;
                if (jk === e) {
                    js = 0
                } else {
                    js = jp.drawX - ji
                }
                jf.drawImage(jq, jp.srcX, jp.srcY, jp.width, jp.height, js, jn, jp.width / jm, jp.height / jm);
                if (jp.width / jm > jl) {
                    jl = jp.width / jm
                }
                jn += jp.height / jm + 2 * jo
            }
            var je = jf.getImageData(0, 0, jl, jn);
            var jg = jf.getImageData(0, 0, jl, jn);
            return [je, jg]
        },
        _bindEvent: function(i) {
            var e = this
              , T = i._map;
            T.addEventListener("onspotmouseover", function(jh) {
                if (!this.isCanvasMap() || !this.temp.isPermitSpotOver) {
                    return
                }
                if (jh.spots.length > 0) {
                    var jg = jh.spots[0].userdata.uid;
                    var jf = jh.spots[0].userdata.name;
                    var je = e.findLabelByUid(jg, jf);
                    je && e._toHighLightColor(je)
                }
            });
            T.addEventListener("onspotmouseout", function(jh) {
                if (!this.isCanvasMap() || !this.temp.isPermitSpotOver) {
                    return
                }
                if (jh.spots.length > 0) {
                    var jg = jh.spots[0].userdata.uid;
                    var jf = jh.spots[0].userdata.name;
                    var je = e.findLabelByUid(jg, jf);
                    je && e._toDefaultColor(je)
                }
            });
            T.addEventListener("onspotclick", function(jh) {
                if (!this.isCanvasMap() || !this.temp.isPermitSpotOver) {
                    return
                }
                if (jh.spots && jh.spots.length > 0) {
                    var jg = jh.spots[0].userdata.uid;
                    var jf = jh.spots[0].userdata.name;
                    var je = e.findLabelByUid(jg, jf);
                    je && e._changeBaseMapState(je)
                } else {
                    e._recoverNormalState()
                }
            });
            T.on("spot_status_reset", function() {
                e._recoverNormalState()
            });
            T.on("spot_highlight", function(jf) {
                var je = e.findLabelByUid(jf.uid);
                je && e._changeBaseMapState(je)
            })
        },
        _getTextBound: function(jp) {
            if (!jp.textPos) {
                return null
            }
            var jn = this.ratio;
            var jl = this.sizeRatio / jn;
            var T = jp.textPos;
            var jo = jp.baseDrawX;
            var jm = jp.baseDrawY;
            var jj = jo * jn + (T[0].drawX - jo) / jl;
            var jh = jm * jn + (T[0].drawY - jm) / jl;
            var jf = jj + T[0].width / jl;
            var e = jh + T[0].height / jl;
            for (var jk = 0, ji = T.length; jk < ji; jk++) {
                var jq = T[jk];
                var jg = jo * jn + (jq.drawX - jo) / jl;
                if (jg < jj) {
                    jj = jg
                }
                var je = jm * jn + (jq.drawY - jm) / jl;
                if (je < jh) {
                    jh = je
                }
                if (jg + jq.width > jf) {
                    jf = jg + jq.width
                }
                if (je + jq.height > e) {
                    e = je + jq.height
                }
            }
            return [jj, jh, jf, e]
        },
        _toHighLightColor: function(T) {
            if (T._tempRank && T._tempRank == this.RANK5) {
                return
            }
            var ji = this._getTextBound(T);
            if (!ji) {
                return
            }
            var je = Math.round(ji[0]);
            var i = Math.round(ji[1]);
            var e = this.getLabelImageData(T);
            var jg = e[0];
            var jf = e[1];
            var jh = this._canvas2dMapMgr.getFilterImageData(jg, this.RANK5);
            T._oldImgData = jf;
            this._labelCtx.putImageData(jh, je, i)
        },
        _toDefaultColor: function(e) {
            if (e._tempRank && e._tempRank == this.RANK5) {
                return
            }
            if (e._oldImgData) {
                var i = this.sizeRatio;
                var T = this._getTextBound(e);
                if (!T) {
                    return
                }
                this._labelCtx.putImageData(e._oldImgData, Math.round(T[0]), Math.round(T[1]));
                e._oldImgData = null
            }
        },
        _changeBaseMapState: function(je) {
            var T = this._canvas2dMapMgr;
            var i = je.guid;
            var e = je.guidExt;
            var jf = {
                guid: i,
                name: je.name,
                guidExt: e
            };
            T._labelStrategy.setStrategyInfo(jf);
            T._loadData()
        },
        _recoverNormalState: function() {
            var e = this._canvas2dMapMgr;
            e._labelStrategy.setStrategyInfo(null);
            e._loadData()
        },
        findLabelByUid: function(jg, je) {
            var ji = this._canvas2dMapMgr
              , e = ji._computedLabel;
            for (var jf = 0, T = e.length; jf < T; jf++) {
                var jh = e[jf];
                if (!ji.isClickableLabel(jh)) {
                    continue
                }
                if (jg && jh.guid === jg) {
                    return jh
                }
                if (je && jh.name === je) {
                    return jh
                }
            }
            return null
        }
    });
    function z(e) {
        this._initVars(e)
    }
    ev.extend(z.prototype, {
        _initVars: function(e) {
            this._map = e._map;
            this._canvas2dMapMgr = e;
            this.ratio = this._map.config.ratio;
            this._strategyInfo = null;
            this.RANK1 = 1000000;
            this.RANK2 = 2000000;
            this.RANK3 = 3000000;
            this.RANK4 = 4000000;
            this.RANK5 = 5000000
        },
        setStrategyInfo: function(e) {
            this._strategyInfo = e
        },
        preComputeLabel: function(jk, kb, jU, jw, j5, kp) {
            var jO = []
              , js = jk._centerX
              , jq = jk._centerY
              , kq = jw * j5;
            var j0 = this.ratio;
            var jj = this._map.getZoom();
            var jJ = 0;
            if (jj === 5) {
                jJ = 4
            }
            if (jj === 8) {
                jJ = -6
            }
            jk.sort(function(kr, i) {
                if (kr.x * kr.y < i.x * i.y) {
                    return -1
                } else {
                    return 1
                }
            });
            for (var jL = 0, jH = jk.length; jL < jH; jL++) {
                var kg = jk[jL]
                  , jC = kg.x
                  , jz = kg.y
                  , jx = kg.z;
                var jE = ey.calcLoopParam(jC, jx).offsetX;
                var jY = jC * kq
                  , jX = (jz + 1) * kq
                  , je = (jY - js) / jw + kb / 2 + jE
                  , T = (jq - jX) / jw + jU / 2;
                for (var jI = 0, kk = kg.length; jI < kk; jI++) {
                    var jm = kg[jI]
                      , jt = undefined
                      , jr = undefined
                      , ki = undefined
                      , kh = undefined;
                    var j7 = jm.baseDrawX = je + jm.baseX;
                    var j6 = jm.baseDrawY = T + jm.baseY;
                    if (jm.type == "fixed") {
                        var jS = jm.iconPos
                          , jv = jm.textPos
                          , km = jm.textImg;
                        if (jS) {
                            jS.drawX = je + jS.destX;
                            jS.drawY = T + jS.destY;
                            jt = jS.drawX;
                            jr = jS.drawY;
                            ki = jS.drawX + jS.width;
                            kh = jS.drawY + jS.height
                        }
                        if (jv && km) {
                            for (var j8 = 0; j8 < jv.length; j8++) {
                                var kl = jv[j8];
                                kl.drawX = je + kl.destX;
                                kl.drawY = T + kl.destY;
                                if (!jt) {
                                    jt = kl.drawX;
                                    jr = kl.drawY;
                                    ki = kl.drawX + kl.width;
                                    kh = kl.drawY + kl.height
                                } else {
                                    if (kl.drawX < jt) {
                                        jt = kl.drawX
                                    }
                                    if (kl.drawY < jr) {
                                        jr = kl.drawY
                                    }
                                    if (kl.drawX + kl.width > ki) {
                                        ki = kl.drawX + kl.width
                                    }
                                    if (kl.drawY + kl.height > kh) {
                                        kh = kl.drawY + kl.height
                                    }
                                }
                            }
                        }
                    } else {
                        jm.tileX = je;
                        jm.tileY = T;
                        jt = je + jm.minXOriginal;
                        jr = T + jm.minYOriginal;
                        ki = je + jm.maxXOriginal;
                        kh = T + jm.maxYOriginal
                    }
                    if (jt != undefined) {
                        var ka = j7 + (jt - j7) / j0;
                        var j9 = j6 + (jr - j6) / j0;
                        var jM = j7 + (ki - j7) / j0;
                        var jK = j6 + (kh - j6) / j0;
                        jm.minX = ka;
                        jm.minY = j9;
                        jm.maxX = jM;
                        jm.maxY = jK;
                        var ke = (ka + jM) / 2
                          , kd = (j9 + jK) / 2
                          , jV = js + (ke - kb / 2) * jw
                          , jT = jq + (jU / 2 - kd) * jw;
                        jm.geoX = jV;
                        jm.geoY = jT;
                        jO.push(jm)
                    }
                }
            }
            if (kp) {
                for (var jL = 0, jH = kp.length; jL < jH; jL++) {
                    var jG = kp[jL];
                    var j3 = jG[0];
                    var jn = jG[1];
                    var jS = j3.iconPos;
                    var jh = jS.geoX;
                    var jf = jS.geoY;
                    var j7 = (jh - js) / jw + kb / 2;
                    var j6 = (jq - jf) / jw + jU / 2;
                    var jt = j7 + jS.destX;
                    var jr = j6 + jS.destY;
                    var ki = jt + jS.width;
                    var kh = jr + jS.height;
                    j3.textPos = j3.textPos || j3._textPos;
                    var jv = j3.textPos;
                    var kc = jv[0];
                    var jB = j7 + kc.destX;
                    var jp = j6 + kc.destY;
                    if (jp < jr) {
                        jr = jp
                    }
                    if (jB + kc.width > ki) {
                        ki = jB + kc.width
                    }
                    if (jp + kc.height > kh) {
                        kh = jp + kc.height
                    }
                    if (jv.length === 2) {
                        var jA = jv[1];
                        var jy = j7 + jA.destX;
                        var jo = j6 + jA.destY;
                        if (jo < jr) {
                            jr = jo
                        }
                        if (jy + jA.width > ki) {
                            ki = jy + jA.width
                        }
                        if (jo + jA.height > kh) {
                            kh = jo + jA.height
                        }
                    }
                    j3._tempBounds = [jt, jr, ki, kh];
                    var jS = jn.iconPos;
                    var jh = jS.geoX;
                    var jf = jS.geoY;
                    var j7 = (jh - js) / jw + kb / 2;
                    var j6 = (jq - jf) / jw + jU / 2;
                    var jt = j7 + jS.destX;
                    var jr = j6 + jS.destY;
                    var ki = jt + jS.width;
                    var kh = jr + jS.height;
                    jn.textPos = jn.textPos || jn._textPos;
                    var jv = jn.textPos;
                    var kc = jv[0];
                    var jB = j7 + kc.destX;
                    var jp = j6 + kc.destY;
                    if (jB < jt) {
                        jt = jB
                    }
                    if (jp < jr) {
                        jr = jp
                    }
                    if (jp + kc.height > kh) {
                        kh = jp + kc.height
                    }
                    if (jv.length === 2) {
                        var jA = jv[1];
                        var jy = j7 + jA.destX;
                        var jo = j6 + jA.destY;
                        if (jy < jt) {
                            jt = jy
                        }
                        if (jo < jr) {
                            jr = jo
                        }
                        if (jo + jA.height > kh) {
                            kh = jo + jA.height
                        }
                    }
                    jn._tempBounds = [jt, jr, ki, kh]
                }
                for (var jL = 0, jH = kp.length; jL < jH; jL++) {
                    var jG = kp[jL];
                    var j3 = jG[0];
                    var jn = jG[1];
                    if (jL === 0 && jn.textPos) {
                        jn._textPos = jn.textPos;
                        delete jn.textPos
                    }
                    var kf = j3;
                    if (!j3.textPos && jn.textPos) {
                        kf = jn
                    }
                    var kj = kf._tempBounds;
                    for (jI = jL + 1; jI < jH; jI++) {
                        var jF = kp[jI];
                        var jP = jF[0];
                        var ko = jF[1];
                        var ju = 0;
                        var kn = jP._tempBounds;
                        if (!(kj[2] < kn[0] || kj[0] > kn[2] || kj[3] < kn[1] || kj[1] > kn[3])) {
                            ju++;
                            if (jP.textPos) {
                                jP._textPos = jP.textPos;
                                delete jP.textPos
                            }
                        }
                        var kn = ko._tempBounds;
                        if (!(kj[2] < kn[0] || kj[0] > kn[2] || kj[3] < kn[1] || kj[1] > kn[3])) {
                            ju++;
                            if (ko.textPos) {
                                ko._textPos = ko.textPos;
                                delete ko.textPos
                            }
                        }
                        if (ju >= 2) {
                            if (kf.textPos) {
                                kf._textPos = kf.textPos;
                                delete kf.textPos
                            }
                        }
                    }
                }
                for (var jL = 0, jH = kp.length; jL < jH; jL++) {
                    var jG = kp[jL];
                    var j3 = jG[0];
                    var jn = jG[1];
                    var jQ = j3;
                    if (!j3.textPos && jn.textPos) {
                        jQ = jn
                    }
                    var jS = jQ.iconPos;
                    var jh = jS.geoX;
                    var jf = jS.geoY;
                    var j7 = jQ.baseDrawX = (jh - js) / jw + kb / 2;
                    var j6 = jQ.baseDrawY = (jq - jf) / jw + jU / 2;
                    jS.drawX = j7 + jS.destX;
                    jS.drawY = j6 + jS.destY;
                    var jt = jS.drawX;
                    var jr = jS.drawY;
                    var ki = jS.drawX + jS.width;
                    var kh = jS.drawY + jS.height;
                    var jv = jQ.textPos;
                    if (jv) {
                        var kc = jv[0];
                        kc.drawX = j7 + kc.destX;
                        kc.drawY = j6 + kc.destY;
                        if (kc.drawX < jt) {
                            jt = kc.drawX
                        }
                        if (kc.drawY < jr) {
                            jr = kc.drawY
                        }
                        if (kc.drawX + kc.width > ki) {
                            ki = kc.drawX + kc.width
                        }
                        if (kc.drawY + kc.height > kh) {
                            kh = kc.drawY + kc.height
                        }
                        if (jv.length === 2) {
                            var jA = jv[1];
                            jA.drawX = j7 + jA.destX;
                            jA.drawY = j6 + jA.destY;
                            if (jA.drawX < jt) {
                                jt = jA.drawX
                            }
                            if (jA.drawY < jr) {
                                jr = jA.drawY
                            }
                            if (jA.drawX + jA.width > ki) {
                                ki = jA.drawX + jA.width
                            }
                            if (jA.drawY + jA.height > kh) {
                                kh = jA.drawY + jA.height
                            }
                        }
                    }
                    var ka = j7 + (jt - j7) / j0;
                    var j9 = j6 + (jr - j6) / j0;
                    var jM = j7 + (ki - j7) / j0;
                    var jK = j6 + (kh - j6) / j0;
                    jQ.minX = ka;
                    jQ.minY = j9;
                    jQ.maxX = jM;
                    jQ.maxY = jK;
                    var j2 = (ka + jM) / 2;
                    var j1 = (j9 + jK) / 2;
                    var ji = js + (j2 - kb / 2) * jw;
                    var jg = jq + (jU / 2 - j1) * jw;
                    jQ.geoX = ji;
                    jQ.geoY = jg;
                    jO.push(jQ)
                }
            }
            var j4 = this._strategyInfo;
            if (j4) {
                var jN = j4.guid;
                var jW = j4.name;
                var jD = j4.guidExt;
                for (var jL = 0, jH = jO.length; jL < jH; jL++) {
                    var jl = jO[jL];
                    delete jl._tempRank;
                    if (!this._canvas2dMapMgr.isClickableLabel(jl) || (jD === 1 && !jl.guidExt)) {
                        continue
                    }
                    if ((jN && jN === jl.guid) || (jW && jW === jl.name)) {
                        jl._tempRank = this.RANK5
                    }
                }
            } else {
                for (var jL = 0, jH = jO.length; jL < jH; jL++) {
                    var jl = jO[jL];
                    if (jl.type == "line" || !jl.iconPos) {
                        continue
                    }
                    delete jl._tempRank
                }
            }
            jO.sort(function(ks, kr) {
                var kt = ks._tempRank ? ks._tempRank : ks.rank
                  , i = kr._tempRank ? kr._tempRank : kr.rank;
                if (kt === i) {
                    return ks.baseX - kr.baseX
                }
                return i - kt
            });
            for (var jL = 0, jH = jO.length; jL < jH; jL++) {
                var kf = jO[jL];
                kf.isDel = false;
                kf.isFadeout = false;
                kf._schedule = 0;
                kf._isIgnore = false;
                kf.arrIntersectIndex = [];
                for (jI = jL + 1; jI < jH; jI++) {
                    var jR = jO[jI];
                    if (!(kf.maxX - jJ < jR.minX || kf.minX > jR.maxX - jJ || kf.maxY - jJ < jR.minY || kf.minY > jR.maxY - jJ)) {
                        kf.arrIntersectIndex.push(jI)
                    }
                }
            }
            for (var jL = 0, jH = jO.length; jL < jH; jL++) {
                var jl = jO[jL];
                if (jl.isDel == false) {
                    var e = jl.arrIntersectIndex;
                    for (var jI = 0, kk = e.length; jI < kk; jI++) {
                        var jZ = jO[e[jI]];
                        jZ.isDel = true;
                        if (jZ.guidExt === 1) {
                            jZ.isDel = false
                        }
                    }
                }
            }
            return jO
        }
    });
    function S(e) {
        this._map = e;
        this._initCanvas();
        this._initVars();
        this._bindEvent();
        this._tileType = hg.getInstance("na")
    }
    bp.register(function(i) {
        if (i.getRenderType() === "canvas") {
            var e = i.config.style;
            if (bp["FeatureStyle" + e]) {
                i.canvas2dMapMgr = new S(i)
            } else {
                i.loadMapStyleFiles(function() {
                    i.canvas2dMapMgr = new S(i);
                    i.canvas2dMapMgr._loadData()
                })
            }
        }
    });
    ev.extend(S.prototype, {
        _initCanvas: function() {
            var jh = this._map
              , jf = jh.getSize()
              , je = jf.width
              , i = jf.height
              , e = jh.platform
              , ji = bL("canvas")
              , jg = ji.style;
            var T = this.ratio = jh.config.ratio;
            this._width = je;
            this._height = i;
            jg.cssText = "position: absolute;left:0;top:0;width:" + je + "px;height:" + i + "px;z-index:100;";
            ji.width = je * T;
            ji.height = i * T;
            this._labelCanvas = ji;
            this._labelCtx = ji.getContext("2d");
            e.appendChild(ji)
        },
        _initVars: function() {
            var e = iT("ditu", "normal");
            this._udt = e.udt;
            this._version = e.ver;
            this._labelDataUrls = dR.B_NORMAL_MAP.vectorTileUrls;
            this._style = bp["FeatureStyle" + this._map.config.style];
            this._labelCount = 0;
            this._vectorDrawLib = new gm(this);
            this._cache = {
                maxNum: 500,
                delNum: 50,
                arrCache: []
            };
            this._computedLabel = null;
            this._spotData = null;
            this._labelStrategy = new z(this);
            this._labelClick = new jb(this);
            this._biz = new dY(this);
            this._map.temp.isPermitSpotOver = true;
            this.labelStyleParam = "pl";
            if (this._map.getMapType() === BMAP_SATELLITE_MAP) {
                this.labelStyleParam = "sl"
            }
            this.statRequestCount = 0;
            this.statResponseCount = 0
        },
        _resizeHandler: function(jg) {
            var ji = this
              , i = ji._map
              , jf = i.getSize()
              , T = jf.width
              , jk = jf.height;
            var jh = this.ratio;
            var jl = this._labelCanvas
              , je = jl.style;
            je.width = T + "px";
            je.height = jk + "px";
            jl.width = T * jh;
            jl.height = jk * jh;
            ji._width = T;
            ji._height = jk;
            var jj = true;
            ji._loadData(jj)
        },
        _bindEvent: function() {
            var e = this
              , i = e._map;
            i.addEventListener("load", function(T) {
                e.clearLabel();
                e._loadData()
            });
            i.addEventListener("zoomend", function(T) {
                if (!T.notClearLabel) {
                    e.clearLabel()
                }
                e._loadData()
            });
            i.addEventListener("moveend", function(T) {
                e._loadData()
            });
            i.addEventListener("resize", function(T) {
                e._resizeHandler(T)
            });
            i.addEventListener("maptypechange", function(T) {
                if (T.mapType === BMAP_EARTH_MAP) {
                    e.hideLabelCanvas()
                } else {
                    e.showLabelCanvas();
                    if (T.mapType === BMAPGL_NORMAL_MAP) {
                        e.labelStyleParam = "pl"
                    } else {
                        if (T.mapType === BMAP_SATELLITE_MAP) {
                            e.labelStyleParam = "sl"
                        }
                    }
                    e._loadData()
                }
            });
            i.addEventListener("streetlayer_show", function(T) {
                if (this.isCanvasMap()) {
                    e.showLabelCanvas()
                }
            });
            i.addEventListener("streetlayer_hide", function(T) {
                if (this.isCanvasMap()) {
                    e.hideLabelCanvas()
                }
            });
            i.addEventListener("loadbizdata", function(je) {
                var T = je.data;
                e._biz.proecessBizData(T, function() {
                    e.updateLabel()
                })
            });
            i.addEventListener("unloadbizdata", function(T) {
                e._biz.clearBizData();
                e.updateLabel()
            });
            e.isDrawText = false;
            setTimeout(function() {
                if (!e.isDrawText) {
                    i.dispatchEvent(new fa("onmapwhitescreen"))
                }
            }, 10000)
        },
        getStyle: function() {
            return this._style
        },
        _getZoomUnits: function(e) {
            return Math.pow(2, 18 - e)
        },
        _createCacheForm: function(T, ji, jh, i) {
            var jg = this;
            var e = jg._cache;
            var je = e.arrCache;
            var jj = this._getLabelId(T, ji, jh, i);
            var jf = {
                id: jj,
                updateLabelCounter: 0
            };
            je.push(jf);
            je[jj] = jf;
            return jf
        },
        _getLabelId: function(i, je, T, e) {
            return "_" + i + "_" + je + "_" + T + "_" + e + "_" + this.labelStyleParam
        },
        _getCache: function(i, je, T, e) {
            return this._cache.arrCache[this._getLabelId(i, je, T, e)]
        },
        _setCacheValue: function(jf, js, jq, je, jl) {
            var jn = this;
            var e = jn._cache;
            var jh = e.arrCache;
            var jj = e.maxNum;
            var jg = e.delNum;
            var jr = this._getLabelId(jf, js, jq, je);
            var jm = jh[jr];
            if (jl) {
                jm.lb = jl
            }
            if (jh.length > jj) {
                var T = jh.splice(0, jg);
                for (var jk = 0, ji = T.length; jk < ji; jk++) {
                    var jo = T[jk]
                      , jp = jo.id;
                    if (jh[jp].lb) {
                        jh[jp].lb = null
                    }
                    jh[jp] = null;
                    delete jh[jp]
                }
                T = null
            }
        },
        _loadData: function(jq) {
            var jJ = this._map;
            if (!jJ.isCanvasMap()) {
                return
            }
            var jj = jJ.getCenterIn();
            var jI = ey.calcLoopCenterPoint(jj);
            var ji = this._tileType;
            var jl = this._width / 2;
            var jx = this._height;
            var jy = jJ.getZoom();
            var ju = ji.getDataZoom(jy);
            var jn = jJ.getZoomUnits(jy);
            var jt = jn * jl;
            var jH = jI.lng - jt;
            var jG = jI.lng + jt;
            var jr = ey.isAddWidth(jH, jG);
            jl = jr ? jl * 1.5 : jl;
            var js = ji.getTileSize(jy);
            var jf = ji.getMercatorSize(jy, ju);
            var jm = Math.floor(jI.lng / jf);
            var jo = Math.floor(jI.lat / jf);
            var jg = [jm, jo, (jI.lng - jm * jf) / jf * js, (jI.lat - jo * jf) / jf * js];
            var jA = jg[0] - Math.ceil((jl - jg[2]) / js);
            var jE = jg[1] - Math.ceil((jx / 2 - jg[3]) / js);
            var jw = jg[0] + Math.ceil((jl + jg[2]) / js);
            var jB = jg[1] + Math.ceil((jx / 2 + jg[3]) / js);
            jJ.temp.isPermitSpotOver = false;
            var e = [];
            for (var jD = jA; jD < jw; jD++) {
                for (var jC = jE; jC < jB; jC++) {
                    e.push([jD, jC, ju]);
                    var jv = "id_" + jD + "_" + jC + "_" + jy;
                    e[jv] = true
                }
            }
            e._zoom = ju;
            e = ey.calcLoopTiles(e, jy);
            e.sort((function(i) {
                return function(jL, jM) {
                    return ((0.4 * Math.abs(jL[0] - i[0]) + 0.6 * Math.abs(jL[1] - i[1])) - (0.4 * Math.abs(jM[0] - i[0]) + 0.6 * Math.abs(jM[1] - i[1])))
                }
            }
            )([jg[0], jg[1]]));
            var jp = this._cache.arrCache;
            this._curViewLabels = [];
            var je = "viewKey_" + Math.floor(jj.lng) + "_" + Math.floor(jj.lat) + "_" + jy;
            this.statRequestCount = 0;
            this.statResponseCount = 0;
            this._labelCount += e.length;
            var jk = jy;
            for (var jD = 0, jz = e.length; jD < jz; jD++) {
                var jm = e[jD][0];
                var jo = e[jD][1];
                var T = e[jD][2];
                var jh = this._getLabelId(jm, jo, T, jk);
                var jF = jp[jh];
                if (!jF) {
                    jF = this._createCacheForm(jm, jo, T, jk)
                }
                if (typeof jF.lb === "undefined") {
                    jF.lb = null;
                    this._loadLabelData(jm, jo, T, jk, js, je);
                    this.statRequestCount++
                } else {
                    if (jF.lb) {
                        this._curViewLabels.push(jF.lb);
                        this._labelCount--
                    } else {
                        if (jq) {
                            this._loadLabelData(jm, jo, T, jk, js, je)
                        }
                        jF.updateLabelCounter++
                    }
                }
            }
            if (this._labelCount === 0) {
                this.updateLabel()
            }
            var jK = this;
            if (jK.errorTimer) {
                clearTimeout(jK.errorTimer)
            }
            jK.errorTimer = setTimeout(function() {
                if (jK._labelCount !== 0) {
                    jK._labelCount = 0;
                    jK.updateLabel()
                }
                var jM = new fa("onloaddatatimeout");
                var jN = 0;
                var jL = 0;
                var jO = 0;
                var i = 0;
                if (jK.statRequestCount === jK.statResponseCount) {
                    jN = 1
                } else {
                    jL = 1
                }
                if (jL === 1) {
                    i = jK.statRequestCount - jK.statResponseCount;
                    jO = jK.statResponseCount
                }
                jM.noTimeoutCount = jN;
                jM.timeoutCount = jL;
                jM.timeoutNoLoaded = i;
                jM.timeoutLoaded = jO;
                jK._map.dispatchEvent(jM)
            }, 500)
        },
        clearLabel: function() {
            var e = this._width;
            var T = this._height;
            var i = this.ratio;
            this._labelCtx.clearRect(0, 0, e * i, T * i)
        },
        updateLabel: function() {
            var i = this._map;
            var e = i.getCenterIn();
            var je = this._width;
            var jh = this._height;
            var jk = i.getZoom();
            var jj = this._tileType.getTileSize(jk);
            var ji = this._getZoomUnits(jk);
            var T = this._labelCtx;
            this._labelCanvas.style.left = -i.offsetX + "px";
            this._labelCanvas.style.top = -i.offsetY + "px";
            var jg = this._curViewLabels;
            jg._centerX = e.lng;
            jg._centerY = e.lat;
            var jf = this._biz.bizLabels;
            this._computedLabel = this._labelStrategy.preComputeLabel(jg, je, jh, ji, jj, jf);
            this._computedLabel._zoom = jk;
            this.clearLabel();
            this._vectorDrawLib.drawIconAndText(T, this._computedLabel, jk);
            this._addSpotData();
            i.temp.isPermitSpotOver = true;
            if (jg.length > 0) {
                this.isDrawText = true
            }
        },
        _loadLabelData: function(jn, jm, jl, T, jo, e) {
            var jg = jn.toString();
            var je = jm.toString();
            var ji = "cbk_" + jg.replace("-", "_") + "_" + je.replace("-", "__") + "_" + Math.floor(jl);
            var js = eY + "." + ji;
            var jr = this._labelDataUrls;
            var jk = Math.abs(jn + jm) % jr.length;
            var jx = jr[jk];
            if (window.offLineIPAddress) {
                jx = window.offLineIPAddress + "pvd/"
            }
            var i = this.labelStyleParam;
            var jq = "?qt=vtile";
            var jt = "";
            if (this._map.config.style !== "default") {
                jt = "&styleId=1"
            }
            var jp = "x={x}&y={y}&z={z}&udt={udt}&v={v}&styles={styles}" + jt + "&textonly=1&textimg=1&scaler={scaler}&fn=" + encodeURIComponent(js);
            var ju = ey.calcLoopParam(jn, jl).col;
            var jj = this.ratio > 1 ? 2 : 1;
            var jh = jp.replace(/{x}/, ju).replace(/{y}/, jm).replace(/{z}/, Math.floor(jl)).replace(/{styles}/, i).replace(/{udt}/, this._udt).replace(/{v}/, this._version).replace(/{scaler}/, jj);
            var jf = jx + jq + "&param=" + window.encodeURIComponent(er(jh));
            var jw = this;
            var jv = jw._map;
            bp[ji] = function(jy) {
                jw._vectorDrawLib.parseLabelData(jy, jn, jm, jl, T, jo, function(jD) {
                    var jA = jv.getCenterIn();
                    var jE = jv.getZoom();
                    var jG = "viewKey_" + Math.floor(jA.lng) + "_" + Math.floor(jA.lat) + "_" + jE;
                    jw._labelCount--;
                    var jH = jw._getCache(jn, jm, jl, T).updateLabelCounter;
                    jw._labelCount -= jH;
                    var jB = jw._curViewLabels;
                    if (jG === e || (jw._labelCount < 0 && jE === jl)) {
                        jB.push(jD)
                    }
                    if (jG === e) {
                        jw.statResponseCount++
                    }
                    if (jw._labelCount <= 0) {
                        var jz = (new Date()).getTime();
                        jw.updateLabel();
                        var jC = (new Date()).getTime();
                        var jF = new fa("oncanvasmaploaded");
                        jF.drawTime = jC - jz;
                        if (jw.statResponseCount === jw.statRequestCount) {
                            jF.isAllLoadedDrawing = true
                        }
                        jv.dispatchEvent(jF)
                    }
                    jw._setCacheValue(jn, jm, jl, T, jD);
                    delete bp[ji]
                })
            }
            ;
            ga.load(jf)
        },
        drawLabel: function(T, je, jl, i, jj, jf, e, jg, jk, jh) {
            var ji = this;
            if (!ji._computedLabel) {
                return
            }
            if (ji._computedLabel._zoom !== jl) {
                ji.clearLabel();
                return
            }
            ji._map.temp.isPermitSpotOver = false;
            ji.clearLabel();
            ji._vectorDrawLib.zoomingIconAndText(this._labelCtx, ji._computedLabel, T, je, i, jj, jf, e, jg, jk, jh)
        },
        _addSpotData: function() {
            this._spotData = [];
            var jl = this._map.getZoom();
            for (var jg = 0, jf = this._computedLabel.length; jg < jf; jg++) {
                var ji = this._computedLabel[jg];
                if (!this.isClickableLabel(ji) || (ji.guidExt === 1 && ji.startScale > jl)) {
                    continue
                }
                var jh = [];
                jh[0] = (ji.minX - ji.maxX) / 2;
                jh[1] = (ji.minY - ji.maxY) / 2;
                jh[2] = (ji.maxX - ji.minX) / 2;
                jh[3] = (ji.maxY - ji.minY) / 2;
                var je = null;
                if (ji.iconPos) {
                    je = new cf(ji.iconPos.geoX,ji.iconPos.geoY)
                }
                var T = ji.name ? ji.name.replace("\\\\", "<br>") : "";
                if (ji.iconPos && ji.iconPos.iconType.indexOf("ditie") > -1 && this._map.getZoom() > 14) {
                    T = ""
                }
                var jk = {
                    n: T,
                    pt: new cf(ji.geoX,ji.geoY),
                    userdata: {
                        iconPoint: je,
                        uid: ji.guid,
                        name: T,
                        type: ji.iconPos ? ji.iconPos.iconType : "",
                        iconImg: ji.iconImg,
                        mapPoi: true,
                        adver_log: ji.adver_log || ""
                    },
                    bd: jh,
                    tag: "MAP_SPOT_INFO"
                };
                this._spotData.push(jk)
            }
            var jj = new fa("onspotsdataready");
            jj.spots = this._spotData;
            this._map._spotDataOnCanvas = this._spotData;
            this._map.dispatchEvent(jj)
        },
        isClickableLabel: function(e) {
            if (e.isDel || (!e.guid && !e.name)) {
                return false
            }
            return true
        },
        getFilterImageData: function(T, jh) {
            var ji = T.data
              , jg = this._labelStrategy
              , jh = parseInt(jh);
            for (var jj = 0, jf = ji.length; jj < jf; jj += 4) {
                var e = ji[jj]
                  , jk = ji[jj + 1]
                  , jl = ji[jj + 2]
                  , jm = ji[jj + 3];
                if (jm === 0) {
                    continue
                }
                var je = Math.round((e + jk + jl) / 3);
                var jn = je - 90;
                jn = jn < 0 ? 0 : jn;
                if (jh === jg.RANK5) {
                    ji[jj] = 51 + jn * 1.3;
                    ji[jj + 1] = 133 + jn * 0.8;
                    ji[jj + 2] = 255
                }
            }
            return T
        },
        showLabelCanvas: function() {
            this._labelCanvas.style.visibility = ""
        },
        hideLabelCanvas: function() {
            this._labelCanvas.style.visibility = "hidden"
        }
    });
    var aK = 5;
    var ic = 4;
    var fW = 3;
    var H = 2;
    var dX = 1;
    var gM = 0;
    var jc = 3;
    var hA = 5;
    var eN = {
        3: {
            start: 3,
            base: 3
        },
        4: {
            start: 4,
            base: 5
        },
        5: {
            start: 4,
            base: 5
        },
        6: {
            start: 6,
            base: 7
        },
        7: {
            start: 6,
            base: 7
        },
        8: {
            start: 8,
            base: 9
        },
        9: {
            start: 8,
            base: 9
        },
        10: {
            start: 10,
            base: 10
        },
        11: {
            start: 11,
            base: 12
        },
        12: {
            start: 11,
            base: 12
        },
        13: {
            start: 11,
            base: 12
        },
        14: {
            start: 14,
            base: 15
        },
        15: {
            start: 14,
            base: 15
        },
        16: {
            start: 16,
            base: 17
        },
        17: {
            start: 16,
            base: 17
        },
        18: {
            start: 18,
            base: 19
        },
        19: {
            start: 18,
            base: 19
        },
        20: {
            start: 18,
            base: 19
        },
        21: {
            start: 18,
            base: 19
        }
    };
    function gm(je) {
        this._canvas2dMapMgr = je;
        var i = this.ratio = je._map.config.ratio;
        this._featureStyle = null;
        this._map = je._map;
        var T = bq();
        var e = "udt=" + T.udt + "&v=" + T.ver;
        this.sizeRatio = this.ratio > 1 ? 2 : 1;
        this._binaryCache = {};
        this._iconCache = {};
        this._initColorCanvas()
    }
    ev.extend(gm.prototype, {
        _initColorCanvas: function() {
            var i = 256
              , T = bL("canvas")
              , e = T.style;
            e.width = i + "px";
            e.height = i + "px";
            T.width = i;
            T.height = i;
            this._colorCvs = T;
            this._colorCtx = T.getContext("2d")
        },
        parseLabelData: function(i, jg, jf, je, e, jj, ji) {
            if (!this._featureStyle) {
                this._featureStyle = this._canvas2dMapMgr.getStyle()
            }
            if (!i || !i[0]) {
                ji([]);
                return
            }
            var jh = this._map.getZoomUnits();
            var T = this;
            this.loadTextPng(i, jj, jg, jf, je, e, jh, ji)
        },
        loadTextPng: function(jv, jm, jk, jj, jh, i, jf, je) {
            var ju = this;
            var e = jv[5];
            var jt = this._map;
            var jq = jt.getZoom();
            var T = jt.getSize();
            var jr = T.width;
            var jp = T.height;
            var js = jt.getCenterIn();
            var ji = js.lng;
            var jg = js.lat;
            var jo = jk * jm * jf;
            var jn = (jj + 1) * jm * jf;
            if (e) {
                var jl = new Image();
                jl.onload = function() {
                    ju.calcIconAndTextInfo(jv, jl, jm, jk, jj, jh, i, jf, jo, jn, je);
                    delete this.onload
                }
                ;
                jl.src = e
            } else {
                setTimeout(function() {
                    ju.calcIconAndTextInfo(jv, null, jm, jk, jj, jh, i, jf, jo, jn, je)
                }, 1)
            }
        },
        calcIconAndTextInfo: function(jx, jo, jp, jn, jk, ji, je, jg, jr, jq, jf) {
            var jw = this;
            var jv = jw._featureStyle;
            var jl = [];
            jl.x = jn;
            jl.y = jk;
            jl.z = ji;
            var jm = jw._canvas2dMapMgr
              , T = jn * jg * jp
              , ju = (jk + 1) * jg * jp
              , jh = {
                tileLeft: T,
                tileTop: ju,
                zoomUnits: jg
            };
            var e = [];
            if (jx[0]) {
                for (var js = 0; js < jx[0].length; js++) {
                    if (jx[0][js][0] === jc) {
                        e.push(jx[0][js])
                    }
                }
            }
            var jj = jx[2] || [];
            for (var js = 0; js < e.length; js++) {
                this._getFixedLabelInfo(e[js], jo, je, jg, jp, jr, jq, jl)
            }
            var jt = Math.pow(2, je - ji);
            for (js = 0; js < jj.length; js++) {
                this._getLineLabelInfo(jj[js], jo, ji, je, jg, jp, jr, jq, jt, jl)
            }
            jf(jl)
        },
        _getFixedLabelInfo: function(jo, js, jf, jj, jt, jw, jv, jy) {
            var jn = jo[1];
            if (!jn) {
                return
            }
            var jA = this._map.getZoom();
            var jI = this._map.config.style;
            var jJ = this._featureStyle;
            var jk = jf;
            if (jk === 9) {
                jk = 8
            }
            for (var jF = 0; jF < jn.length; jF++) {
                var jK = jn[jF];
                var e = jK[0];
                var je = aP.getStyleFromCache(jI, e, "point", jk, jJ);
                var jE = aP.getStyleFromCache(jI, e, "pointText", jk, jJ);
                if ((!jE || jE.length === 0) && (!je || je.length === 0)) {
                    if (jk === 5) {
                        var ji = jK[1];
                        if (!ji) {
                            continue
                        }
                        for (var jB = 0; jB < ji.length; jB++) {
                            var jz = ji[jB][4];
                            if (jz && jz[7] === "北京") {
                                je = aP.getStyleFromCache(jI, e, "point", 6, jJ);
                                jE = aP.getStyleFromCache(jI, e, "pointText", 6, jJ);
                                break
                            } else {
                                continue
                            }
                        }
                    } else {
                        continue
                    }
                }
                var ji = jK[1];
                if (!ji) {
                    continue
                }
                var jG = null;
                var jl = 1;
                var T = 0;
                var jr = 0;
                if (je && je[0]) {
                    je = je[0];
                    jG = je.icon;
                    jl = je.zoom ? je.zoom / 100 : 1
                } else {
                    je = null
                }
                for (var jB = 0; jB < ji.length; jB++) {
                    var jz = ji[jB][4];
                    if (!jz) {
                        continue
                    }
                    var jD = jz[2];
                    if (!this._isVisible(jD, jA)) {
                        continue
                    }
                    var jm = jz[12];
                    if (jE && jE.length > 0 && !jm) {
                        continue
                    }
                    var jq = Math.round(jz[0] / 100);
                    var jp = Math.round(jz[1] / 100);
                    var jC = {
                        lng: jw + jq,
                        lat: jv - (jt * jj - jp)
                    };
                    var jh = jq / jj;
                    var jg = jt - jp / jj;
                    var ju = jz[7] || "";
                    var jH = jz[5];
                    var jx = {
                        type: "fixed",
                        name: ju,
                        textImg: js,
                        rank: jz[4],
                        baseX: jh,
                        baseY: jg,
                        iconPos: null,
                        textPos: null,
                        guid: jz[3] || "",
                        tracer: jD,
                        direction: jH,
                        startScale: 3
                    };
                    if ((jH !== ic && jm || !jm) && jG !== null) {
                        jx.iconPos = this._getIconPosition(jG, jl, jh, jg, jC);
                        if (jx.iconPos) {
                            T = jx.iconPos.width;
                            jr = jx.iconPos.height
                        }
                    }
                    if (T === 0) {
                        jx.direction = ic
                    }
                    if (jm) {
                        jx.textPos = this._getTextDrawData(jz, jh, jg, T, jr)
                    }
                    if (jx.textPos || jx.iconPos) {
                        jy.push(jx)
                    }
                }
            }
        },
        _isVisible: function(e, i) {
            var je;
            if (!this._binaryCache[e]) {
                je = e.toString(2);
                if (je.length < 8) {
                    je = new Array(8 - je.length + 1).join("0") + je
                }
                this._binaryCache[e] = je
            }
            je = this._binaryCache[e];
            var T = eN[i].start;
            return je[i - T] === "1"
        },
        _getIconPosition: function(ji, jg, T, i, e) {
            var je = this._map.config.style;
            var jj = bp["iconSetInfo" + je][ji];
            if (!jj) {
                if (ji.charCodeAt(0) >= 48 && ji.charCodeAt(0) <= 57) {
                    jj = bp["iconSetInfo" + je]["_" + ji]
                }
            }
            if (!jj) {
                return null
            }
            var jf = jj[0];
            var jh = jj[1];
            jf = jf * jg;
            jh = jh * jg;
            return {
                srcX: 0,
                srcY: 0,
                destX: T - jf / 2,
                destY: i - jh / 2,
                width: jf,
                height: jh,
                geoX: e.lng,
                geoY: e.lat,
                mcPt: e,
                iconType: ji
            }
        },
        _getTextDrawData: function(jp, jo, jn, je, jl) {
            var ju = jp[5];
            if (typeof ju !== "number") {
                ju = 0
            }
            var jj = this.ratio;
            var ji = jj / 2;
            je *= ji;
            jl *= ji;
            var jk = jp[12];
            var jf = jk.length;
            var jx = 0;
            var jw = 0;
            var jt = [];
            var js = 0;
            var jv = 0;
            for (var jr = 0; jr < jf; jr++) {
                jv += Math.round(jk[jr][3])
            }
            for (var jr = 0; jr < jf; jr++) {
                var jh = jk[jr];
                var jg = jh[0];
                var i = jh[1];
                var T = jh[2];
                var e = jh[3];
                var jy = 2 * jj;
                var jq = 0;
                if (je !== 0) {
                    jq = 2 * jj
                }
                if (je === 0) {
                    ju = ic
                }
                switch (ju) {
                case fW:
                    var jm = jn - jv / 2 - jy * (jf - 1) / 2;
                    jx = jo - T - je / 2 - jq;
                    jw = jm + js + jy * jr;
                    break;
                case dX:
                    var jm = jn - jv / 2 - jy * (jf - 1) / 2;
                    jx = jo + je / 2 + jq;
                    jw = jm + js + jy * jr;
                    break;
                case H:
                    var jm = jn - jl / 2 - jv - jy * (jf - 1) - jy;
                    jx = jo - T / 2;
                    jw = jm + js + jy * jr;
                    break;
                case gM:
                    var jm = jn + jl / 2 + jy / 2;
                    jx = jo - T / 2;
                    jw = jm + js + jy * jr;
                    break;
                case ic:
                    var jm = jn - e / 2 - jy * (jf - 1) / 2;
                    jx = jo - T / 2;
                    jw = jm + js + jy * jr;
                    break
                }
                js += e;
                if (T > 0 && e > 0) {
                    jt.push({
                        srcX: jg,
                        srcY: i,
                        destX: jx,
                        destY: jw,
                        width: T,
                        height: e
                    })
                }
            }
            if (jt.length > 0) {
                return jt
            }
            return null
        },
        _getLineLabelInfo: function(jm, je, jf, jB, jO, jt, jz, jy, jA, js) {
            if (jm.length !== 10) {
                return
            }
            var jD = this.ratio;
            var T = this.ratio;
            var jK = jm[7].length;
            var ju = jm[1];
            var jM = jm[3];
            var jS = jm[8];
            var ji = jm[4];
            var e = 2;
            var jg = ji.slice(0, e);
            for (var jP = e; jP < ji.length; jP += e) {
                jg[jP] = jg[jP - e] + ji[jP];
                jg[jP + 1] = jg[jP - (e - 1)] + ji[jP + 1]
            }
            for (var jP = e; jP < ji.length; jP += e) {
                if (jP % (jM * e) === 0 || jP % (jM * e) === 1) {
                    continue
                }
                jg[jP] = jg[jP - e] + ji[jP] / jA;
                jg[jP + 1] = jg[jP - (e - 1)] + ji[jP + 1] / jA
            }
            for (var jR = 0; jR < jK; jR++) {
                var jN = jm[7][jR];
                if (!this._isVisible(jN, jB)) {
                    continue
                }
                var jF = jm[6][jR];
                var jr = jR * jM * e;
                ji = jg.slice(jr, jr + jM * e);
                var jv = [];
                var jE = undefined;
                var jC = undefined;
                var jq = undefined;
                var jp = undefined;
                var jS = jm[9].slice(0);
                if (jF) {
                    jS.reverse()
                }
                var jI;
                var jG;
                for (var jQ = 0; jQ < jM; jQ++) {
                    var jo = jm[5][jM * jR + jQ];
                    var jJ = ji[jQ * e] / 100;
                    var jH = ji[jQ * e + 1] / 100;
                    var jn = jS[jQ];
                    var jj = jn[0];
                    var jl = jn[1];
                    var jh = jn[2];
                    var jk = jn[3];
                    var jx;
                    var jw;
                    var jU;
                    var jT;
                    if (jQ === 0) {
                        jI = jU = jJ / jO;
                        jG = jt - jH / jO;
                        jT = jH / jO
                    } else {
                        jU = jJ / jO;
                        jT = jH / jO
                    }
                    var jW = jI + (jU - jI) * T - jh / 2;
                    var jV = jG + (jt - jT - jG) * T - jk / 2;
                    if (jE === undefined) {
                        jE = jI - jh / 2;
                        jC = jG - jk / 2;
                        jq = jE + jh;
                        jp = jC + jk
                    } else {
                        if (jW < jE) {
                            jE = jW
                        }
                        if (jV < jC) {
                            jC = jV
                        }
                        if (jW + jh > jq) {
                            jq = jW + jh
                        }
                        if (jV + jk > jp) {
                            jp = jV + jk
                        }
                    }
                    jv.push({
                        angle: jo,
                        srcX: jj,
                        srcY: jl,
                        destX: jW,
                        destY: jV,
                        width: jh,
                        height: jk
                    })
                }
                var jL = {
                    type: "line",
                    textImg: je,
                    rank: ju,
                    baseX: jI,
                    baseY: jG,
                    arrWordPos: jv,
                    minXOriginal: jE,
                    minYOriginal: jC,
                    maxXOriginal: jq,
                    maxYOriginal: jp,
                    text: ""
                };
                js.push(jL)
            }
        },
        alterColor: function(jh, e, jg) {
            var T = this._colorCtx
              , i = this._canvas2dMapMgr;
            T.clearRect(0, 0, jh.width, jh.height);
            T.drawImage(e, jh.srcX, jh.srcY, jh.width, jh.height, 0, 0, jh.width, jh.height);
            var jf = T.getImageData(0, 0, jh.width, jh.height)
              , je = i.getFilterImageData(jf, jg);
            T.putImageData(je, 0, 0)
        },
        drawIconAndText: function(jt, js, e) {
            var jk = this.ratio;
            var ji = this.sizeRatio / jk;
            var jm = 2 / jk;
            var jE = this;
            for (var jw = 0, ju = js.length; jw < ju; jw++) {
                var jl = js[jw];
                if (jl.isDel == false) {
                    var jf = jl.baseDrawX;
                    var je = jl.baseDrawY;
                    if (jl.type == "fixed") {
                        var jh = jl.iconPos
                          , jx = jl.textPos
                          , jq = jl.textImg
                          , jA = jl.startScale;
                        if (jh && jA <= e) {
                            var T = this._iconCache[jh.iconType];
                            if (T) {
                                if (T.img) {
                                    jt.drawImage(T.img, 0, 0, T.img.width, T.img.height, Math.round(jf * jk + (jh.drawX - jf) / jm), Math.round(je * jk + (jh.drawY - je) / jm), jh.width / jm, jh.height / jm)
                                } else {
                                    T.drawLabels.push(jl)
                                }
                            } else {
                                if (!T) {
                                    this._iconCache[jh.iconType] = {
                                        img: null,
                                        drawLabels: [jl]
                                    };
                                    var jG = new Image();
                                    jG._iconName = jh.iconType;
                                    jG.onload = function() {
                                        var jM = jE._iconCache[this._iconName];
                                        jM.img = this;
                                        this.onload = null;
                                        for (var jI = 0; jI < jM.drawLabels.length; jI++) {
                                            var jK = jM.drawLabels[jI];
                                            var jJ = jK.baseDrawX;
                                            var jH = jK.baseDrawY;
                                            var jL = jK.iconPos;
                                            jt.drawImage(this, 0, 0, this.width, this.height, Math.round(jJ * jk + (jL.drawX - jJ) / jm), Math.round(jH * jk + (jL.drawY - jH) / jm), jL.width / jm, jL.height / jm)
                                        }
                                        jM.drawPos = []
                                    }
                                    ;
                                    jG.src = w.getIconSetPath(jE._map.config.style) + jh.iconType + ".png"
                                }
                            }
                        }
                        if (jx && jq && jA <= e) {
                            for (var jj = 0; jj < jx.length; jj++) {
                                var jr = jx[jj];
                                if (!jl._tempRank) {
                                    jt.drawImage(jq, jr.srcX, jr.srcY, jr.width, jr.height, Math.round(jf * jk + (jr.drawX - jf) / ji), Math.round(je * jk + (jr.drawY - je) / ji), jr.width / ji, jr.height / ji)
                                } else {
                                    this.alterColor(jr, jq, jl._tempRank);
                                    jt.drawImage(this._colorCvs, 0, 0, jr.width, jr.height, Math.round(jf * jk + (jr.drawX - jf) / ji), Math.round(je * jk + (jr.drawY - je) / ji), jr.width / ji, jr.height / ji)
                                }
                            }
                        }
                    } else {
                        var jg = jl.arrWordPos
                          , jq = jl.textImg
                          , jp = jl.tileX
                          , jn = jl.tileY;
                        for (var jv = 0, jo = jg.length; jv < jo; jv++) {
                            var jy = jg[jv];
                            var jF = Math.round(jp + jy.destX);
                            var jD = Math.round(jn + jy.destY);
                            var jz = jy.angle;
                            jF = jf * jk + jF - jf;
                            jD = je * jk + jD - je;
                            if (jz > 10 && jz < 350) {
                                jt.save();
                                var jC = Math.round(jF + jy.width / 2);
                                var jB = Math.round(jD + jy.height / 2);
                                jt.translate(jC, jB);
                                jt.rotate(-jz / 180 * Math.PI);
                                jt.drawImage(jq, jy.srcX, jy.srcY, jy.width, jy.height, -Math.round(jy.width / 2), -Math.round(jy.height / 2), jy.width / ji, jy.height / ji);
                                jt.restore()
                            } else {
                                jt.drawImage(jq, jy.srcX, jy.srcY, jy.width, jy.height, jF, jD, jy.width / ji, jy.height / ji)
                            }
                        }
                    }
                }
            }
        },
        isCollide: function(jg, jp, jo, e, ji, T, jk) {
            for (var jf = 0, je = T.length; jf < je; jf++) {
                var jj = T[jf]
                  , jh = 1 / Math.pow(2, jk + 1)
                  , jn = jh * jj[3] / 2
                  , jm = jh * jj[4] / 2
                  , jl = jj[0];
                if (jl != jg) {
                    if (!(jp + e < jj[1] - jn || jp > jj[1] + jj[3] + jn || jo + ji < jj[2] - jm || jo > jj[2] + jj[4] + jm)) {
                        return true
                    }
                }
            }
            return false
        },
        zoomingIconAndText: function(jE, jy, je, jC, jD, j5, jL, jm, jR, jK, jv) {
            var j6 = this.ratio;
            var jn = this.sizeRatio / j6;
            var j7 = 2 / j6;
            var kh = j6 / 2;
            var j1 = jC.x;
            var j0 = jC.y;
            var jF = 2 * j6;
            if (jv !== 0) {
                j0 += jK
            }
            var jq = undefined
              , jj = undefined
              , jg = undefined
              , jl = undefined
              , ju = undefined;
            var jQ = j5 > 0 ? true : false;
            if (!jQ) {
                jq = [];
                var jU = 1 - jL
            }
            for (var kd = 0, kb = jy.length; kd < kb; kd++) {
                var j8 = jy[kd];
                if (j8.isDel == false) {
                    var ki = j8.baseDrawX;
                    var kf = j8.baseDrawY;
                    jE.save();
                    jE.translate(-jm * j6, -jR * j6);
                    if (j8.isFadeout) {
                        if (!jQ && j8._schedule <= jL && !j8._isIgnore) {
                            jE.globalAlpha = jU;
                            j8._schedule = jL
                        } else {
                            j8._isIgnore = true;
                            continue
                        }
                    }
                    if (j8.type == "fixed") {
                        var jG = j8.iconPos
                          , jN = j8.textPos
                          , jh = j8.textImg
                          , jH = j8.startScale;
                        var T;
                        var jY = 0;
                        if (jG) {
                            jY = jF
                        }
                        if (jG && !j8.iconImg && this._iconCache[jG.iconType]) {
                            T = this._iconCache[jG.iconType].img
                        }
                        if (jG && jH <= jD && T) {
                            jl = jG.width;
                            ju = jG.height;
                            jj = (j1 + (ki - j1) * je) * j6 - jl / 2 / j7;
                            jg = (j0 + (kf - j0) * je) * j6 - ju / 2 / j7 + jv;
                            if (!jQ && this.isCollide(kd, jj, jg, jl, ju, jq, j5)) {
                                j8.isFadeout = true
                            }
                            jE.drawImage(T, jG.srcX, jG.srcY, T.width, T.height, Math.round(jj), Math.round(jg), jl / j7, ju / j7);
                            !jQ && jq.push([kd, jj, jg, jl, ju])
                        }
                        if (jN && jh && jH <= jD) {
                            var jM;
                            var jO;
                            var jx = 0;
                            var jJ = 0;
                            if (jG) {
                                jx = jG.width;
                                jJ = jG.height
                            }
                            var jZ = jN.length;
                            var jp = 0;
                            var jP = 0;
                            for (var jz = 0; jz < jZ; jz++) {
                                var ka = jN[jz];
                                jP += ka.height;
                                if (jp < ka.width) {
                                    jp = ka.width
                                }
                            }
                            jP += (jz - 1) * jF;
                            if (!jQ && this.isCollide(kd, jj, jg, jp, jP, jq, j5)) {
                                j8.isFadeout = true
                            }
                            var j9 = 0;
                            for (var jz = 0; jz < jZ; jz++) {
                                var ka = jN[jz];
                                switch (j8.direction) {
                                case fW:
                                    jM = -(jx / 2 / j7 + ka.width + jY);
                                    jO = -jP / 2 + j9 + jF * jz;
                                    break;
                                case dX:
                                    jM = jx / 2 / j7 + jY;
                                    jO = -jP / 2 + j9 + jF * jz;
                                    break;
                                case H:
                                    jM = -ka.width / 2;
                                    jO = -jJ / 2 / j7 - jP + j9 - jF * (jz + 1);
                                    break;
                                case gM:
                                    jM = -ka.width / 2;
                                    jO = jJ / 2 / j7 + j9 + jF * (jz + 1);
                                    break;
                                case ic:
                                    jM = -ka.width / 2;
                                    jO = -jP / 2 + j9 + jF * jz;
                                    break
                                }
                                j9 += ka.height;
                                jj = (j1 + (ki - j1) * je) * j6 + jM / jn;
                                jg = (j0 + (kf - j0) * je) * j6 + jO / jn;
                                +jv;
                                jl = ka.width;
                                ju = ka.height;
                                if (!j8._tempRank) {
                                    jE.drawImage(jh, ka.srcX, ka.srcY, jl, ju, Math.round(jj), Math.round(jg), jl / jn, ju / jn)
                                } else {
                                    this.alterColor(ka, jh, j8._tempRank);
                                    jE.drawImage(this._colorCvs, 0, 0, jl, ju, Math.round(jj), Math.round(jg), jl / jn, ju / jn)
                                }
                                !jQ && jq.push([kd, jj, jg, jl, ju])
                            }
                        }
                    } else {
                        var jw = j8.arrWordPos
                          , jh = j8.textImg
                          , kg = j8.tileX
                          , ke = j8.tileY;
                        var jo = jw[0];
                        var jk = Math.round(kg + jo.destX);
                        var ji = Math.round(ke + jo.destY);
                        for (var kc = 0, jX = jw.length; kc < jX; kc++) {
                            var j4 = jw[kc];
                            var kk = Math.round(kg + j4.destX);
                            var kj = Math.round(ke + j4.destY);
                            var jB = j4.angle;
                            var jW = Math.round((j1 + (ki - j1) * je) * j6 - jo.width / 2 + kk - jk);
                            var jV = Math.round((j0 + (kf - j0) * je) * j6 - jo.height / 2 + kj - ji);
                            jj = jW;
                            jg = jV;
                            jl = j4.width;
                            ju = j4.height;
                            if (!jQ && this.isCollide(kd, jj, jg, jl, ju, jq, j5)) {
                                j8.isFadeout = true
                            }
                            if (jB > 10 && jB < 350) {
                                var j3 = jW + j4.width / 2;
                                var j2 = jV + j4.height / 2;
                                var jf = jB / 180 * Math.PI;
                                var jI = Math.cos(jf);
                                var jr = Math.sin(jf);
                                var jT = jI;
                                var js = jI;
                                var jS = jr;
                                var jt = -jr;
                                var jA = j3 - j3 * jI - j2 * jr;
                                var e = j2 + j3 * jr - j2 * jI;
                                jE.save();
                                jE.transform(jT, jt, jS, js, jA, e);
                                jE.drawImage(jh, j4.srcX, j4.srcY, jl, ju, jj, jg, jl / jn, ju / jn);
                                jE.restore()
                            } else {
                                jE.drawImage(jh, j4.srcX, j4.srcY, jl, ju, jj, jg, jl / jn, ju / jn)
                            }
                            !jQ && jq.push([kd, jj, jg, jl, ju])
                        }
                    }
                    jE.restore()
                }
            }
        }
    });
    function dY(e) {
        this.initVars(e)
    }
    ev.extend(dY.prototype, {
        initVars: function(e) {
            this._map = e._map;
            this._canvas2dMapMgr = e;
            this.base64Prefix = "data:image/png;base64,";
            this.bizData = null;
            this.objTextsPng = null;
            this.arrIconsPng = null;
            this.bizLabels = null
        },
        proecessBizData: function(jg, jk) {
            var ji = this;
            this.bizData = jg;
            this.objTextsPng = null;
            this.arrIconsPng = null;
            var T = jg.textsPng;
            var jm = jg.iconsPng;
            if (!T || !jm) {
                return
            }
            var jj = new Image();
            jj.onload = function() {
                ji.objTextsPng = this;
                ji.calcIconAndTextInfo(jk);
                this.onload = null
            }
            ;
            jj.src = this.base64Prefix + T;
            var jl = jm.length;
            var e = [];
            for (var jf = 0; jf < jl; jf++) {
                var jh = jm[jf];
                var je = new Image();
                (function(i) {
                    je.onload = function() {
                        jl--;
                        e[i] = this;
                        if (jl === 0) {
                            ji.arrIconsPng = e;
                            ji.calcIconAndTextInfo(jk)
                        }
                        this.onload = null
                    }
                }
                )(jf);
                je.src = this.base64Prefix + jh
            }
        },
        calcIconAndTextInfo: function(jn) {
            if (this.objTextsPng && this.arrIconsPng) {
                var jj = this.bizData;
                var jh = jj.pois;
                var e = [];
                for (var jk = 0, jg = jh.length; jk < jg; jk++) {
                    var je = jh[jk];
                    var ji = this.arrIconsPng[je.iconPng];
                    var jf = ji.height / 2;
                    var jm = {
                        type: "fixed",
                        name: "",
                        textImg: this.objTextsPng,
                        iconImg: ji,
                        rank: je.rank,
                        iconPos: {
                            srcX: 0,
                            srcY: 0,
                            destX: -ji.width / 2,
                            destY: -jf / 2,
                            width: ji.width,
                            height: jf,
                            geoX: je.x,
                            geoY: je.y,
                            iconType: "vectorCustom"
                        },
                        textPos: this.calcTextPos(je.pos, ji),
                        startScale: je.from < 12 ? 12 : je.from,
                        guid: je.guid,
                        guidExt: 1,
                        adver_log: je.adver_log || ""
                    };
                    var T = {
                        type: "fixed",
                        textDirLeft: "left",
                        name: "",
                        textImg: this.objTextsPng,
                        iconImg: ji,
                        rank: je.rank,
                        iconPos: {
                            srcX: 0,
                            srcY: 0,
                            destX: -ji.width / 2,
                            destY: -jf / 2,
                            width: ji.width,
                            height: jf,
                            geoX: je.x,
                            geoY: je.y,
                            iconType: "vectorCustom"
                        },
                        textPos: this.calcTextPosLeft(je.pos, ji),
                        startScale: je.from < 12 ? 12 : je.from,
                        guid: je.guid,
                        guidExt: 1,
                        adver_log: je.adver_log || ""
                    };
                    var jl = [jm, T];
                    e.push(jl)
                }
                this.bizLabels = e;
                jn && jn()
            }
        },
        calcTextPos: function(jh, T) {
            var i = [];
            var jg = jh.length / 4;
            var jf = T.width / 2;
            if (jg === 1) {
                var je = {
                    srcX: jh[0],
                    srcY: jh[1],
                    destX: jf,
                    destY: -jh[3] / 2,
                    width: jh[2],
                    height: jh[3]
                };
                i.push(je)
            } else {
                var je = {
                    srcX: jh[0],
                    srcY: jh[1],
                    destX: jf,
                    destY: -jh[3],
                    width: jh[2],
                    height: jh[3]
                };
                var e = {
                    srcX: jh[4],
                    srcY: jh[5],
                    destX: jf,
                    destY: 0,
                    width: jh[6],
                    height: jh[7]
                };
                i.push(je);
                i.push(e)
            }
            return i
        },
        calcTextPosLeft: function(jh, T) {
            var i = [];
            var jg = jh.length / 4;
            var jf = T.width / 2;
            if (jg === 1) {
                var je = {
                    srcX: jh[0],
                    srcY: jh[1],
                    destX: -jf - jh[2],
                    destY: -jh[3] / 2,
                    width: jh[2],
                    height: jh[3]
                };
                i.push(je)
            } else {
                var je = {
                    srcX: jh[0],
                    srcY: jh[1],
                    destX: -jf - jh[2],
                    destY: -jh[3],
                    width: jh[2],
                    height: jh[3]
                };
                var e = {
                    srcX: jh[4],
                    srcY: jh[5],
                    destX: -jf - jh[2],
                    destY: 0,
                    width: jh[6],
                    height: jh[7]
                };
                i.push(je);
                i.push(e)
            }
            return i
        },
        clearBizData: function() {
            this.bizData = null;
            this.bizLabels = null
        }
    });
    function x() {}
    ev.extend(x.prototype, {
        centerAndZoomIn: function(T, jk, jl) {
            jl = jl || {};
            if (!this.loaded) {
                this.firstTileLoad = false
            }
            jk = this._getProperZoom(jk).zoom;
            if (jl.noAnimation !== true && this.loaded) {
                var jg = this._ifUseAnimation(T, jk);
                if (jg) {
                    this.flyToIn(T, jk, jl);
                    return
                }
            }
            var ji = this;
            if (!T && !jk) {
                return
            }
            this._stopAllAnimations();
            if (T && !T.equals(this.centerPoint)) {
                this.fire(new fa("oncenter_changed"))
            }
            if (jk && jk !== this.zoomLevel) {
                this.fire(new fa("onzoom_changed"))
            }
            T = T || this.centerPoint;
            jk = jk || this.zoomLevel;
            jk = this._getProperZoom(jk).zoom;
            if (this.mapType === BMAP_EARTH_MAP) {
                if (!this._earth) {
                    this.mapType = BMAPGL_NORMAL_MAP;
                    this.temp.originMapType = BMAP_EARTH_MAP;
                    function jj() {
                        ji._earth = new bp.Earth(ji,{
                            showRealSunlight: ji.config.showRealSunlight,
                            showMilkyway: ji.config.showMilkyway,
                            earthBackground: ji.config.earthBackground
                        });
                        ji._proxyEarthEvents();
                        ji._changeEarthMapType(BMAP_EARTH_MAP);
                        ev.extend(ji, bp.EarthView.prototype);
                        delete ji.temp.originMapType
                    }
                    gn.load("earth", function() {
                        if (bp["FeatureStyle" + ji.config.style]) {
                            jj()
                        } else {
                            ji.loadMapStyleFiles(function() {
                                jj()
                            })
                        }
                    })
                }
            }
            this.lastLevel = this.zoomLevel || jk;
            this.zoomLevel = jk;
            var jh = new fa("onload");
            jh.point = T;
            jh.zoom = jk;
            this.centerPoint = new cf(T.lng,T.lat);
            this.defaultZoomLevel = this.defaultZoomLevel || this.zoomLevel;
            this.defaultCenter = this.defaultCenter || this.centerPoint;
            if (this.mapType !== BMAP_EARTH_MAP) {
                this.centerPoint = this.restrictCenter(this.centerPoint)
            }
            if (!this.loaded && !(this.temp.originMapType === BMAP_EARTH_MAP)) {
                var i = this.config.defaultMaxBounds;
                var jf = new h(i,"baidu",this.mapType);
                if (this.mapType !== BMAP_NONE_MAP) {
                    var je = new gN({
                        mapType: this.mapType,
                        copyright: jf,
                        dataType: this.mapType === BMAP_SATELLITE_MAP ? f3 : gY,
                        customLayer: this.mapType === BMAP_SATELLITE_MAP,
                        baseLayer: true,
                        transparentPng: true,
                        tileTypeName: this.mapType === BMAP_SATELLITE_MAP ? "web" : "na"
                    });
                    je._isInnerLayer = true;
                    this.addTileLayer(je);
                    this.baseLayerAdded = true
                }
                if (this.mapType === BMAP_SATELLITE_MAP && this._isHybridShow === true) {
                    this._addHybirdMap()
                }
                this.on("zoom_changed", function() {
                    if (this._heading === 0) {
                        return
                    }
                    if (this.getZoom() < 7 && this.config.restrictCenter === true) {
                        ji.resetHeading()
                    }
                })
            }
            this.loaded = true;
            this.dispatchEvent(jh);
            jl.callback && jl.callback()
        },
        _ifUseAnimation: function(je, jj) {
            var ji = this.getSize();
            var T = {
                zoom: this.zoomLevel
            };
            var jl = {
                zoom: jj
            };
            var jk = this.pointToPixelIn(this.centerPoint);
            var jf = this.pointToPixelIn(je, T);
            var jh = this.pointToPixelIn(this.centerPoint, jl);
            var jn = this.pointToPixelIn(je, jl);
            var jg = Math.abs(jk.x - jf.x);
            var i = Math.abs(jk.y - jf.y);
            var e = Math.abs(jh.x - jn.x);
            var jm = Math.abs(jh.y - jn.y);
            if ((jg > ji.width || i > ji.height) && (e > ji.width || jm > ji.height)) {
                return false
            }
            return true
        },
        _setPlatformPosition: function(jl, jk, jn) {
            jn = jn || {};
            if (jl === 0 && jk === 0 && !jn.point) {
                return
            }
            if (isNaN(jn.initMapOffsetX)) {
                jn.initMapOffsetX = this.offsetX
            }
            if (isNaN(jn.initMapOffsetY)) {
                jn.initMapOffsetY = this.offsetY
            }
            var jh = hM(this._heading);
            if (this._tilt > 0) {
                jk = jk / Math.cos(hM(this._tilt))
            }
            var jm = jl * Math.cos(jh) + jk * Math.sin(jh);
            var jj = -jl * Math.sin(jh) + jk * Math.cos(jh);
            jm = jm + jn.initMapOffsetX;
            jj = jj + jn.initMapOffsetY;
            if (jn.point) {
                var i = this.restrictCenter(jn.point);
                if (!i.equals(this.centerPoint)) {
                    this.centerPoint = i.clone();
                    this.fire(new fa("oncenter_changed"))
                }
            } else {
                var je = this.offsetX - jm;
                var e = this.offsetY - jj;
                var ji = this.centerPoint.lng;
                var jg = this.centerPoint.lat;
                var jf = new cf(ji,jg);
                var T = this.getZoomUnits();
                this.centerPoint = this.restrictCenter(new cf(jf.lng + je * T,jf.lat - e * T), T);
                this.fire(new fa("oncenter_changed"))
            }
            this.offsetX = jm;
            this.offsetY = jj;
            this.dispatchEvent(new fa("onmoving"))
        },
        restrictCenter: function(jm, e) {
            if (this.config.restrictCenter === false) {
                return jm
            }
            e = e || this.getZoomUnits();
            var jk = this.pixelToPointIn(new eO(this.width,0), {
                center: jm
            });
            var jh = this.pixelToPointIn(new eO(0,this.height), {
                center: jm
            });
            var jn = jm.lng;
            var js = jm.lat;
            if (this.config.restrictBounds !== null && !this.config.restrictBounds.isEmpty()) {
                var jr = this.config.restrictBounds;
                var T = jr.getSouthWest();
                var jp = jr.getNorthEast();
                var jl = ig.convertLL2MC(T);
                var jf = ig.convertLL2MC(jp);
                var ji = this.calcNewZoomByRestriction(jn, js, jh, jk, jl.lng, jf.lng, jl.lat, jf.lat);
                if (ji > this.zoomLevel) {
                    this.zoomLevel = ji;
                    return jm
                }
                jm.lng = this.calcNewLngByBounds(jn, jh, jk, jl.lng, jf.lng, e);
                jm.lat = this.calcNewLatByBounds(js, jh, jk, jl.lat, jf.lat, e);
                return jm
            }
            var jj = this.pixelToPointIn(new eO(0,0), {
                center: jm
            });
            var je = this.pixelToPointIn(new eO(0,this.height), {
                center: jm
            });
            if (this.zoomLevel < 5) {
                if (jj.lat > g0.MAX_LAT && je.lat < g0.MIN_LAT) {
                    var i = g0.MAX_LAT - jm.lat;
                    var jg = jm.lat - g0.MIN_LAT;
                    var jq;
                    if (i < jg) {
                        jq = i / (this.height / 2)
                    } else {
                        jq = jg / (this.height / 2)
                    }
                    var jo = 18 - m(jq);
                    this.zoomLevel = jo;
                    return jm
                }
            }
            if (jj.lat > g0.MAX_LAT) {
                jm.lat = g0.MAX_LAT - this.height / 2 * e
            } else {
                if (je.lat < g0.MIN_LAT) {
                    jm.lat = g0.MIN_LAT + this.height / 2 * e
                }
            }
            return jm
        },
        calcNewZoomByRestriction: function(jl, jk, e, jj, jf, jh, je, jg) {
            var jo = 0;
            var jp = 0;
            if (typeof je === "number" && typeof jg === "number" && jj.lat > jg && e.lat < je) {
                var T = jg - jk;
                var i = jk - je;
                var ji;
                if (T < i) {
                    ji = T / (this.height / 2)
                } else {
                    ji = i / (this.height / 2)
                }
                jo = 18 - m(ji)
            }
            if (typeof jf === "number" && typeof jh === "number" && jj.lng > jh && e.lng < jf) {
                var jn = jh - jl;
                var jm = jl - jf;
                var ji;
                if (jn < jm) {
                    ji = jn / (this.width / 2)
                } else {
                    ji = jm / (this.width / 2)
                }
                jp = 18 - m(ji)
            }
            return Math.max(jo, jp) || this.zoomLevel
        },
        calcNewLatByBounds: function(i, je, T, jh, jg, e) {
            var jf = i;
            if (T.lat > jg) {
                jf = jg - this.height / 2 * e
            } else {
                if (je.lat < jh) {
                    jf = jh + this.height / 2 * e
                }
            }
            return jf
        },
        calcNewLngByBounds: function(jh, jg, je, jf, T, e) {
            var i = jh;
            if (je.lng > T) {
                i = T - this.width / 2 * e
            } else {
                if (jg.lng < jf) {
                    i = jf + this.width / 2 * e
                }
            }
            return i
        },
        zoomTo: function(e, jp, jq) {
            var jl = dR[this.mapType];
            if (!jl) {
                return
            }
            var jk = this._getProperZoom(e);
            e = jk.zoom;
            if (this.zoomLevel === e) {
                jq && jq.callback && jq.callback();
                return
            }
            var jg = e;
            this.lastLevel = this.zoomLevel;
            jq = jq || {};
            if (this.zoomEventStatus === "idle") {
                this.fire(new fa("onzoomstart"));
                this.zoomEventStatus = "zooming"
            }
            if (!jp && (this.getInfoWindow() && this.temp.infoWin && this.temp.infoWin.isOpen())) {
                jp = ig.convertLL2MC(this.getInfoWindow().getPoint())
            }
            var T = null;
            if (jq.fixPixel) {
                T = jq.fixPixel
            } else {
                if (jp) {
                    T = this.pointToPixelIn(jp, {
                        useRound: false
                    })
                }
            }
            var jh = this.pixelToPointIn(T);
            var ji = this.centerPoint.clone();
            this.fixPoint = jp;
            this.fixPixel = T;
            this.fixCenter = ji;
            this.mousePosMCPoint = jh;
            if (jq.noAnimation) {
                e = jk.zoom;
                this.zoomLevel = e;
                this.fire(new fa("onzoom_changed"));
                var jf = this.getCurrentMaxTilt();
                if (this._tilt > jf) {
                    this._tilt = jf
                }
                if (jp) {
                    if (this._heading % 360 !== 0 || this._tilt > 0) {
                        var i = this._webglMapCamera.fromScreenPixelToMC(T.x, T.y, {
                            center: ji,
                            zoom: this.zoomLevel
                        });
                        if (i) {
                            var jm = i.sub(jh);
                            var je = ji.sub(jm);
                            this.centerPoint = this.restrictCenter(je)
                        }
                    } else {
                        var jj = this.getZoomUnits();
                        var je = new cf(jp.lng - jj * (T.x - this.width / 2),jp.lat + jj * (T.y - this.height / 2));
                        this.centerPoint = this.restrictCenter(je, jj)
                    }
                    this.fire(new fa("oncenter_changed"))
                }
                this._checkFireZoomend();
                jq.callback && jq.callback();
                return
            }
            this._animationInfo.zoom = {
                current: this.zoomLevel,
                diff: e - this.zoomLevel,
                target: e
            };
            var jn = this;
            jn._checkFireZoomend();
            var jo = this._tilt;
            if (this.fixPoint || jo > g0.MAX_DRAG_TILT_L2) {
                jq.renderCallback = function() {
                    var ju = jn.getCurrentMaxTilt();
                    if (jn._tilt > ju) {
                        jn._tilt = ju
                    }
                    var jv = jn.fixPixel;
                    if (!jn.fixPixel || !jn.fixPoint) {
                        return
                    }
                    var jr = jn.fixPixel;
                    var jB = jn.fixPoint;
                    var jy = jn.fixCenter;
                    var jw = jn.mousePosMCPoint;
                    if (jn._heading % 360 !== 0 || jn._tilt > 0) {
                        var js = jn._webglMapCamera.fromScreenPixelToMC(jr.x, jr.y, {
                            center: jy,
                            zoom: jn.zoomLevel,
                            tilt: jn._tilt
                        });
                        if (js) {
                            var jA = js.sub(jw);
                            var jt = jy.sub(jA);
                            jn.centerPoint = jn.restrictCenter(jt)
                        }
                    } else {
                        var jx = jr;
                        var jz = jn.getZoomUnits();
                        var jt = new cf(jB.lng - jz * (jx.x - jn.width / 2),jB.lat + jz * (jx.y - jn.height / 2));
                        jn.centerPoint = jn.restrictCenter(jt, jz)
                    }
                    jn.fire(new fa("oncenter_changed"))
                }
            }
            if (jq.fromMouseWheel === true) {
                this._startInfiniteZoomAnimation(jq);
                jq.callback && jq.callback();
                return
            }
            this._startAnimation(jq)
        },
        _checkFireZoomend: function() {
            var e = this;
            if (e.fireZoomendTimer) {
                clearTimeout(e.fireZoomendTimer)
            }
            e.fireZoomendTimer = setTimeout(function() {
                if (e.zoomEventStatus === "zooming") {
                    e.fire(new fa("onzoomend"));
                    e.zoomEventStatus = "idle"
                }
                e.fireZoomendTimer = null
            }, 150)
        },
        deepZoomMedia: function(e) {
            var i = this;
            if (!i.temp.isStdCtrlBusy) {
                i.temp.isStdCtrlBusy = true;
                i.deepZoomTo(i.zoomLevel + e);
                setTimeout(function() {
                    i.temp.isStdCtrlBusy = false
                }, 400)
            }
        },
        deepZoomTo: function(e) {
            this.zoomTo(e)
        },
        flyToIn: function(T, jI, jt) {
            jt = jt || {};
            var jf = this._getProperZoom(jI);
            jI = jf.zoom;
            if (this.centerPoint.equals(T) && this.zoomLevel === jI && typeof jt.heading !== "number" && typeof jt.tilt !== "number") {
                return
            }
            var e = this.getHeading() % 360;
            var jl = this.getTilt();
            var jr = 0;
            var jv = 0;
            var jo = this.getBounds().containsPoint(T);
            if (typeof jt.heading === "number") {
                jr = jt.heading
            } else {
                if (jo) {
                    jr = e
                }
            }
            if (typeof jt.tilt === "number") {
                jv = jt.tilt
            } else {
                if (jo) {
                    jv = jl
                }
            }
            this._heading = e;
            var jF = jr - e;
            var jB = jv - jl;
            var jp = this;
            var jh = this.zoomLevel;
            var ji = 1.42;
            var jx = this.zoomScale(jI - jh);
            var jK = this.getZoomUnits();
            var jn = this.centerPoint.div(jK);
            var jL = T.div(jK);
            var jE = this.worldSize();
            var jA = ji;
            var jz = Math.max(this.width, this.height);
            var jy = jz / jx;
            var jm = jL.sub(jn).mag();
            var i = jA * jA;
            function jH(jN) {
                var jM = (jy * jy - jz * jz + (jN ? -1 : 1) * i * i * jm * jm) / (2 * (jN ? jy : jz) * i * jm);
                return Math.log(Math.sqrt(jM * jM + 1) - jM)
            }
            function je(jM) {
                return (Math.exp(jM) - Math.exp(-jM)) / 2
            }
            function jj(jM) {
                return (Math.exp(jM) + Math.exp(-jM)) / 2
            }
            function js(jM) {
                return je(jM) / jj(jM)
            }
            var jk = jH(0);
            var jC = function(jM) {
                return (jj(jk) / jj(jk + jA * jM))
            };
            var jD = function(jM) {
                return jz * ((jj(jk) * js(jk + jA * jM) - je(jk)) / i) / jm
            };
            var jg = (jH(1) - jk) / jA;
            if (Math.abs(jm) < 0.000001 || jg === Infinity || isNaN(jg)) {
                if (Math.abs(jz - jy) < 0.000001) {
                    this._animationInfo.zoom = {
                        current: this.zoomLevel,
                        diff: jI - this.zoomLevel
                    };
                    this._animationInfo.center = {
                        current: this.centerPoint,
                        diff: T.sub(this.centerPoint)
                    };
                    this._animationInfo.heading = {
                        current: e,
                        diff: jr - e
                    };
                    this._animationInfo.tilt = {
                        current: jl,
                        diff: jv - jl
                    };
                    this.setLock(true);
                    this._startAnimation({
                        callback: function(jM) {
                            jp.setLock(false);
                            if (jt.callback) {
                                jt.callback(jM)
                            }
                        },
                        duration: jt.duration
                    });
                    return
                }
                var jJ = jy < jz ? -1 : 1;
                jg = Math.abs(Math.log(jy / jz)) / jA;
                jD = function() {
                    return 0
                }
                ;
                jC = function(jM) {
                    return Math.exp(jJ * jA * jM)
                }
            }
            var jG = 1.7;
            if (jg < 0.3) {
                jG = 0.8
            } else {
                if (jg > 5) {
                    jG = (jg - 5) / 2 + jG
                }
            }
            var ju = jt.duration || 1000 * jg / jG;
            if (isNaN(ju)) {
                var jw = {};
                for (var jq in jt) {
                    jw[jq] = jt[jq];
                    jw.noAnimation = true
                }
                this.centerAndZoomIn(T, jI, jw);
                return
            }
            this.fire(new fa("onmovestart"));
            this.fire(new fa("onzoomstart"));
            this.setLock(true);
            this._startAnimation({
                duration: ju,
                renderCallback: function(jM, jN) {
                    var jO = jM * jg;
                    var jR = jD(jO);
                    var jQ = jh + jp.scaleZoom(1 / jC(jO));
                    if (jQ < jp.getMinZoom()) {
                        jQ = jp.getMinZoom()
                    }
                    if (jQ > jp.getMaxZoom()) {
                        jQ = jp.getMaxZoom()
                    }
                    if (jQ !== jp.zoomLevel) {
                        jp.zoomLevel = jQ;
                        jp.fire(new fa("onzoom_changed"))
                    }
                    jp.centerPoint = jn.add(jL.sub(jn).mult(jR)).mult(jK);
                    jp.fire(new fa("oncenter_changed"));
                    if (typeof jr === "number") {
                        var jP = jM / 0.7;
                        if (jP > 1) {
                            jP = 1
                        }
                        jp.setHeading(e + jF * jM, {
                            noAnimation: true
                        })
                    }
                    if (typeof jv === "number") {
                        jp.setTilt(jl + jB * jM, {
                            noAnimation: true
                        })
                    }
                },
                callback: function(jM, jN) {
                    jp.setLock(false);
                    if (jN && jN.stop === true) {
                        jp.fire(new fa("onmoveend"));
                        jp.fire(new fa("onzoomend"));
                        jt.callback && jt.callback(jM);
                        return
                    }
                    if (jI !== jp.zoomLevel) {
                        jp.zoomLevel = jI;
                        jp.fire(new fa("onzoom_changed"))
                    }
                    jp.fire(new fa("onmoveend"));
                    jp.fire(new fa("onzoomend"));
                    jt.callback && jt.callback(jM)
                }
            })
        },
        zoomScale: function(e) {
            return Math.pow(2, e)
        },
        scaleZoom: function(e) {
            return Math.log(e) / Math.LN2
        },
        panToIn: function(i, T) {
            T = T || {};
            if (!i || i.equals(this.centerPoint)) {
                T.callback && T.callback();
                return
            }
            var je = this.pointToPixelIn(i);
            var e = Math.round(this.width / 2);
            var jg = Math.round(this.height / 2);
            var jf = this._ifUseAnimation(i, this.zoomLevel);
            if (T.noAnimation === true || jf === false) {
                this._stopAllAnimations();
                this._panToIn(e - je.x, jg - je.y, i);
                T.callback && T.callback();
                return
            }
            this.flyToIn(i, this.zoomLevel, T)
        },
        _panToIn: function(i, e, je) {
            var T = this.temp;
            if (T.operating === true) {
                return
            }
            if (T.dragAni) {
                T.dragAni.stop(false, {
                    readyToMove: true
                });
                T.dragAni = null
            }
            this.dispatchEvent(new fa("onmovestart"));
            this._setPlatformPosition(i, e, {
                point: je
            });
            this.dispatchEvent(new fa("onmoveend"))
        },
        _stopAllAnimations: function(e) {
            e = e || {};
            if (this._ani) {
                this._ani.stop(!!e.goToEnd, {
                    stopCurrentAnimation: e.stopCurrentAnimation
                });
                this._ani = null
            }
            if (this._infiniteAni) {
                this._infiniteAni.stop();
                this._infiniteAni = null
            }
        },
        panBy: function(i, e, T) {
            i = Math.round(i) || 0;
            e = Math.round(e) || 0;
            T = T || {};
            if (Math.abs(i) <= this.width && Math.abs(e) <= this.height && T.noAnimation !== true) {
                this._panBy(i, e, T)
            } else {
                this._panToIn(i, e, T.point);
                T.callback && T.callback()
            }
        },
        _panBy: function(i, e, jf) {
            if (this.temp.operating === true) {
                return
            }
            jf = jf || {};
            this.dispatchEvent(new fa("onmovestart"));
            var je = this;
            var T = je.temp;
            T.pl = je.offsetX;
            T.pt = je.offsetY;
            if (T.tlPan) {
                T.tlPan.cancel()
            }
            if (T.dragAni) {
                T.dragAni.stop(false, {
                    readyToMove: true
                });
                T.dragAni = null
            }
            T.tlPan = new e3({
                fps: jf.fps || je.config.fps,
                duration: jf.duration || je.config.actionDuration,
                transition: jf.transition || fY.easeInOutQuad,
                render: function(jg) {
                    this.terminative = je.temp.operating;
                    if (je.temp.operating) {
                        return
                    }
                    je._setPlatformPosition(i * jg, e * jg, {
                        initMapOffsetX: T.pl,
                        initMapOffsetY: T.pt
                    })
                },
                finish: function(jg) {
                    je.dispatchEvent(new fa("onmoveend"));
                    je.temp.tlPan = false;
                    if (je.temp.stopArrow === true) {
                        je.temp.stopArrow = false;
                        if (je.temp.arrow !== 0) {
                            je._arrow()
                        }
                    }
                }
            })
        },
        _startAnimation: function(i) {
            var jf = this._animationInfo;
            var T = this;
            i = i || {};
            if (T._ani) {
                T._ani.stop(!!i.goToEnd, {
                    stopCurrentAnimation: i.stopCurrentAnimation
                })
            }
            if (T._infiniteAni) {
                T._infiniteAni.stop();
                T._infiniteAni = null
            }
            var jg = i.duration || 500;
            var jh = i.transition || fY.ease;
            var e = new fa("onanimation_start");
            this.fire(e);
            if (i.unstopable) {
                jf = this._animationInfoUnstopable
            }
            var je = new e3({
                duration: jg,
                transition: jh,
                render: function(jk, jj) {
                    for (var ji in jf) {
                        if (!jf.hasOwnProperty(ji)) {
                            continue
                        }
                        var jm = jf[ji].current;
                        var jl = jf[ji].diff;
                        T._setValueTick(ji, jm, jl, jk)
                    }
                    if (i.renderCallback) {
                        i.renderCallback(jk, jj)
                    }
                },
                finish: function(ji) {
                    T.fire(new fa("onanimation_end"));
                    if (i.unstopable) {
                        T._animationInfoUnstopable = {};
                        T._unstopableAni = null
                    } else {
                        T._ani = null;
                        T._animationInfo = {}
                    }
                    if (i.mapNeedCbk) {
                        i.mapNeedCbk()
                    }
                    if (i.callback) {
                        i.callback(ji)
                    }
                },
                onStop: function(ji) {
                    ji = ji || {};
                    T.fire(new fa("onanimation_end"));
                    if (ji.stopCurrentAnimation) {
                        T._animationInfo = {}
                    }
                    T._ani = null;
                    if (i.mapNeedCbk) {
                        i.mapNeedCbk()
                    }
                    if (i.callback) {
                        i.callback(null, {
                            stop: true
                        })
                    }
                }
            });
            if (i.unstopable) {
                T._unstopableAni = je
            } else {
                T._ani = je
            }
        },
        _startInfiniteZoomAnimation: function(e) {
            var i = this;
            if (i._ani) {
                i._ani.stop(!!e.goToEnd, {
                    stopCurrentAnimation: e.stopCurrentAnimation
                })
            }
            if (i._infiniteAni) {
                return
            }
            this.fire(new fa("onanimation_start"));
            i._infiniteAni = new e3({
                duration: 10000,
                transition: fY.linear,
                render: function() {
                    var T = i._animationInfo.zoom;
                    if (Math.abs(T.current - T.target) < 0.001) {
                        i._setValue("zoom", T.target);
                        i._infiniteAni.stop();
                        return
                    }
                    T.current += (T.target - T.current) * 0.35;
                    i._setValue("zoom", T.current);
                    if (e.renderCallback) {
                        e.renderCallback()
                    }
                },
                finish: function() {
                    i._infiniteAni = null;
                    i._animationInfo = {};
                    i.fire(new fa("onanimation_end"));
                    if (e.callback) {
                        e.callback()
                    }
                },
                onStop: function() {
                    i._infiniteAni = null;
                    i._animationInfo = {};
                    i.fire(new fa("onanimation_end"));
                    if (e.callback) {
                        e.callback()
                    }
                }
            })
        },
        _setValue: function(e, T) {
            if (e === "zoom") {
                this._preZoomLevel = this.zoomLevel;
                var i = this._getProperZoom(T);
                T = i.zoom;
                if (T !== this.zoomLevel) {
                    this.zoomLevel = T;
                    if (T < 5) {
                        this.restrictCenter(this.centerPoint)
                    }
                    this.fire(new fa("on" + e + "_changed"))
                }
                return
            } else {
                if (e === "center") {
                    this.centerPoint = T
                }
            }
            this["_" + e] = T;
            this.fire(new fa("on" + e + "_changed"))
        },
        _setValueTick: function(e, jf, je, i) {
            if (e === "center") {
                var T = new cf(jf.lng + je.lng * i,jf.lat + je.lat * i);
                this._setValue(e, T);
                return
            }
            if (e === "zoom") {
                this._setValue(e, Math.pow(jf, 1 - i) * Math.pow(jf + je, i));
                return
            }
            this._setValue(e, jf + je * i)
        },
        setHeading: function(je, i) {
            i = i || {};
            if (je === this._heading) {
                i.callback && i.callback();
                return
            }
            var T = dM(this._heading, 360);
            var e = dM(je, 360);
            if (e === T) {
                this._heading = je;
                i.callback && i.callback();
                return
            }
            if (i.noAnimation) {
                this._setValue("heading", je);
                i.callback && i.callback();
                return
            }
            if (i.unstopable) {
                this._animationInfoUnstopable.heading = {
                    current: this._heading,
                    diff: je - this._heading
                }
            } else {
                this._animationInfo.heading = {
                    current: this._heading,
                    diff: je - this._heading
                }
            }
            this._startAnimation(i)
        },
        resetHeading: function(e) {
            var i = this._heading;
            while (i < 0) {
                i += 360
            }
            i = i % 360;
            if (i > 180) {
                i -= 360
            }
            this._heading = i;
            e = e || {};
            e.unstopable = true;
            this.setHeading(0, e)
        },
        getHeading: function() {
            return this._heading
        },
        setTilt: function(e, i) {
            i = i || {};
            if (e === this._tilt) {
                i.callback && i.callback();
                return
            }
            if (e > g0.MAX_TILT) {
                e = g0.MAX_TILT
            }
            if (e < g0.MIN_TILT) {
                e = g0.MIN_TILT
            }
            if (i && i.noAnimation) {
                this._setValue("tilt", e);
                i.callback && i.callback();
                return
            }
            this._animationInfo.tilt = {
                current: this._tilt,
                diff: e - this._tilt
            };
            this._startAnimation(i)
        },
        getTilt: function() {
            return this._tilt
        },
        getCenterIn: function() {
            return this.centerPoint
        },
        getZoom: function() {
            return this.zoomLevel
        },
        getCameraPosition: function(T) {
            T = T || {};
            var e = T.center || this.centerPoint;
            var je = T.zoom || this.zoomLevel;
            var jh = typeof T.heading === "number" ? T.heading : this._heading;
            var i = typeof T.tilt === "number" ? T.tilt : this._tilt;
            var jg = this._webglMapCamera.generateMVMatrix(e, je, jh, i);
            var jf = mat4.create(Float32Array);
            mat4.invert(jf, jg);
            return this._webglMapCamera.getPosition(jf)
        }
    });
    function bb(i) {
        this._jobQueue = [];
        this._idleOnlyJobQueue = [];
        var e = this;
        this.isIdle = true;
        i.on("updateframe", function(je) {
            var T = 12 - je.frameTime;
            T = T < 1 ? 1 : T;
            e.isIdle = false;
            if (e.idleWorkTimer) {
                clearInterval(e.idleWorkTimer);
                e.idleWorkTimer = null
            }
            e.runJobs(T)
        });
        this._idleWorkerTicker = (function(T) {
            return function() {
                if (T.isIdle) {
                    T.runJobs();
                    T.runIdleOnlyJobs()
                }
            }
        }
        )(this);
        i.on("mapglidle", function() {
            e.isIdle = true;
            e.runJobs();
            e.runIdleOnlyJobs();
            e.idleWorkTimer = setInterval(e._idleWorkerTicker, bb.MAX_IDLE_TIME)
        })
    }
    bb.MAX_IDLE_TIME = 50;
    bb.MAX_FRAME_TIME = 6;
    bb.prototype.runJobs = function(i) {
        if (this._jobQueue.length === 0) {
            return
        }
        var je = hq();
        var e = 0;
        i = i || bb.MAX_FRAME_TIME;
        while (this._jobQueue.length && e < i) {
            var T = this._jobQueue.shift();
            if (T.state !== "invalid") {
                T.call()
            }
            e = hq() - je
        }
    }
    ;
    bb.prototype.runIdleOnlyJobs = function() {
        if (this._idleOnlyJobQueue.length === 0) {
            return
        }
        var T = hq();
        var e = 0;
        while (this._idleOnlyJobQueue.length && e < bb.MAX_IDLE_TIME) {
            var i = this._idleOnlyJobQueue.shift();
            if (i.state !== "invalid") {
                i.call()
            }
            e = hq() - T
        }
    }
    ;
    bb.prototype.checkIdleRunning = function() {
        if (this.isIdle && !this.idleWorkTimer) {
            this.runJobs();
            this.runIdleOnlyJobs();
            this.idleWorkTimer = setInterval(this._idleWorkerTicker, 50)
        }
    }
    ;
    bb.prototype.addJob = function(e) {
        this._jobQueue.push(e);
        this.checkIdleRunning()
    }
    ;
    bb.prototype.clearJobs = function() {
        this._jobQueue.length = 0;
        this._idleOnlyJobQueue.length = 0
    }
    ;
    bb.prototype.addIdleOnlyJob = function(e) {
        this._idleOnlyJobQueue.push(e);
        this.checkIdleRunning()
    }
    ;
    var dt = {};
    (function(jh) {
        if (!jl) {
            var jl = 0.000001
        }
        if (!i) {
            var i = (typeof Float32Array !== "undefined") ? Float32Array : Array
        }
        if (!jf) {
            var jf = Math.random
        }
        var T = {};
        var jg = Math.PI / 180;
        T.toRadian = function(jm) {
            return jm * jg
        }
        ;
        var jk = {};
        jk.create = function(jn) {
            jn = jn || i;
            var jm = new jn(2);
            jm[0] = 0;
            jm[1] = 0;
            return jm
        }
        ;
        jk.clone = function(jm, jo) {
            jo = jo || i;
            var jn = new jo(2);
            jn[0] = jm[0];
            jn[1] = jm[1];
            return jn
        }
        ;
        jk.fromValues = function(jm, jp, jo) {
            jo = jo || i;
            var jn = new jo(2);
            jn[0] = jm;
            jn[1] = jp;
            return jn
        }
        ;
        jk.copy = function(jn, jm) {
            jn[0] = jm[0];
            jn[1] = jm[1];
            return jn
        }
        ;
        jk.set = function(jn, jm, jo) {
            jn[0] = jm;
            jn[1] = jo;
            return jn
        }
        ;
        jk.add = function(jo, jn, jm) {
            jo[0] = jn[0] + jm[0];
            jo[1] = jn[1] + jm[1];
            return jo
        }
        ;
        jk.subtract = function(jo, jn, jm) {
            jo[0] = jn[0] - jm[0];
            jo[1] = jn[1] - jm[1];
            return jo
        }
        ;
        jk.sub = jk.subtract;
        jk.multiply = function(jo, jn, jm) {
            jo[0] = jn[0] * jm[0];
            jo[1] = jn[1] * jm[1];
            return jo
        }
        ;
        jk.mul = jk.multiply;
        jk.divide = function(jo, jn, jm) {
            jo[0] = jn[0] / jm[0];
            jo[1] = jn[1] / jm[1];
            return jo
        }
        ;
        jk.div = jk.divide;
        jk.min = function(jo, jn, jm) {
            jo[0] = Math.min(jn[0], jm[0]);
            jo[1] = Math.min(jn[1], jm[1]);
            return jo
        }
        ;
        jk.max = function(jo, jn, jm) {
            jo[0] = Math.max(jn[0], jm[0]);
            jo[1] = Math.max(jn[1], jm[1]);
            return jo
        }
        ;
        jk.scale = function(jo, jn, jm) {
            jo[0] = jn[0] * jm;
            jo[1] = jn[1] * jm;
            return jo
        }
        ;
        jk.scaleAndAdd = function(jo, jn, jm, jp) {
            jo[0] = jn[0] + (jm[0] * jp);
            jo[1] = jn[1] + (jm[1] * jp);
            return jo
        }
        ;
        jk.distance = function(jo, jn) {
            var jm = jn[0] - jo[0]
              , jp = jn[1] - jo[1];
            return Math.sqrt(jm * jm + jp * jp)
        }
        ;
        jk.dist = jk.distance;
        jk.squaredDistance = function(jo, jn) {
            var jm = jn[0] - jo[0]
              , jp = jn[1] - jo[1];
            return jm * jm + jp * jp
        }
        ;
        jk.sqrDist = jk.squaredDistance;
        jk.length = function(jn) {
            var jm = jn[0]
              , jo = jn[1];
            return Math.sqrt(jm * jm + jo * jo)
        }
        ;
        jk.len = jk.length;
        jk.squaredLength = function(jn) {
            var jm = jn[0]
              , jo = jn[1];
            return jm * jm + jo * jo
        }
        ;
        jk.sqrLen = jk.squaredLength;
        jk.negate = function(jn, jm) {
            jn[0] = -jm[0];
            jn[1] = -jm[1];
            return jn
        }
        ;
        jk.normalize = function(jp, jo) {
            var jn = jo[0]
              , jq = jo[1];
            var jm = jn * jn + jq * jq;
            if (jm > 0) {
                jm = 1 / Math.sqrt(jm);
                jp[0] = jo[0] * jm;
                jp[1] = jo[1] * jm
            }
            return jp
        }
        ;
        jk.dot = function(jn, jm) {
            return jn[0] * jm[0] + jn[1] * jm[1]
        }
        ;
        jk.cross = function(jo, jn, jm) {
            var jp = jn[0] * jm[1] - jn[1] * jm[0];
            jo[0] = jo[1] = 0;
            jo[2] = jp;
            return jo
        }
        ;
        jk.lerp = function(jo, jn, jm, jp) {
            var jr = jn[0]
              , jq = jn[1];
            jo[0] = jr + jp * (jm[0] - jr);
            jo[1] = jq + jp * (jm[1] - jq);
            return jo
        }
        ;
        jk.random = function(jm, jo) {
            jo = jo || 1;
            var jn = jf() * 2 * Math.PI;
            jm[0] = Math.cos(jn) * jo;
            jm[1] = Math.sin(jn) * jo;
            return jm
        }
        ;
        jk.transformMat2 = function(jp, jo, jn) {
            var jm = jo[0]
              , jq = jo[1];
            jp[0] = jn[0] * jm + jn[2] * jq;
            jp[1] = jn[1] * jm + jn[3] * jq;
            return jp
        }
        ;
        jk.transformMat2d = function(jp, jo, jn) {
            var jm = jo[0]
              , jq = jo[1];
            jp[0] = jn[0] * jm + jn[2] * jq + jn[4];
            jp[1] = jn[1] * jm + jn[3] * jq + jn[5];
            return jp
        }
        ;
        jk.transformMat3 = function(jp, jo, jn) {
            var jm = jo[0]
              , jq = jo[1];
            jp[0] = jn[0] * jm + jn[3] * jq + jn[6];
            jp[1] = jn[1] * jm + jn[4] * jq + jn[7];
            return jp
        }
        ;
        jk.transformMat4 = function(jp, jo, jn) {
            var jm = jo[0]
              , jq = jo[1];
            jp[0] = jn[0] * jm + jn[4] * jq + jn[12];
            jp[1] = jn[1] * jm + jn[5] * jq + jn[13];
            return jp
        }
        ;
        jk.rotate = function(jp, jn, jm, jt) {
            var js = jn[0] - jm[0];
            var jr = jn[1] - jm[1];
            var jo = Math.sin(jt);
            var jq = Math.cos(jt);
            jp[0] = js * jq - jr * jo + jm[0];
            jp[1] = js * jo + jr * jq + jm[1];
            return jp
        }
        ;
        jk.forEach = (function() {
            var jm = jk.create();
            return function(jp, jt, ju, js, jr, jn) {
                var jq, jo;
                if (!jt) {
                    jt = 2
                }
                if (!ju) {
                    ju = 0
                }
                if (js) {
                    jo = Math.min((js * jt) + ju, jp.length)
                } else {
                    jo = jp.length
                }
                for (jq = ju; jq < jo; jq += jt) {
                    jm[0] = jp[jq];
                    jm[1] = jp[jq + 1];
                    jr(jm, jm, jn);
                    jp[jq] = jm[0];
                    jp[jq + 1] = jm[1]
                }
                return jp
            }
        }
        )();
        jk.str = function(jm) {
            return "vec2(" + jm[0] + ", " + jm[1] + ")"
        }
        ;
        jh.vec2 = jk;
        var jj = {};
        jj.create = function(jn) {
            jn = jn || i;
            var jm = new jn(3);
            jm[0] = 0;
            jm[1] = 0;
            jm[2] = 0;
            return jm
        }
        ;
        jj.clone = function(jm, jo) {
            jo = jo || i;
            var jn = new jo(3);
            jn[0] = jm[0];
            jn[1] = jm[1];
            jn[2] = jm[2];
            return jn
        }
        ;
        jj.fromValues = function(jm, jq, jo, jp) {
            jp = jp || i;
            var jn = new jp(3);
            jn[0] = jm;
            jn[1] = jq;
            jn[2] = jo;
            return jn
        }
        ;
        jj.copy = function(jn, jm) {
            jn[0] = jm[0];
            jn[1] = jm[1];
            jn[2] = jm[2];
            return jn
        }
        ;
        jj.set = function(jn, jm, jp, jo) {
            jn[0] = jm;
            jn[1] = jp;
            jn[2] = jo;
            return jn
        }
        ;
        jj.add = function(jo, jn, jm) {
            jo[0] = jn[0] + jm[0];
            jo[1] = jn[1] + jm[1];
            jo[2] = jn[2] + jm[2];
            return jo
        }
        ;
        jj.subtract = function(jo, jn, jm) {
            jo[0] = jn[0] - jm[0];
            jo[1] = jn[1] - jm[1];
            jo[2] = jn[2] - jm[2];
            return jo
        }
        ;
        jj.sub = jj.subtract;
        jj.multiply = function(jo, jn, jm) {
            jo[0] = jn[0] * jm[0];
            jo[1] = jn[1] * jm[1];
            jo[2] = jn[2] * jm[2];
            return jo
        }
        ;
        jj.mul = jj.multiply;
        jj.divide = function(jo, jn, jm) {
            jo[0] = jn[0] / jm[0];
            jo[1] = jn[1] / jm[1];
            jo[2] = jn[2] / jm[2];
            return jo
        }
        ;
        jj.div = jj.divide;
        jj.min = function(jo, jn, jm) {
            jo[0] = Math.min(jn[0], jm[0]);
            jo[1] = Math.min(jn[1], jm[1]);
            jo[2] = Math.min(jn[2], jm[2]);
            return jo
        }
        ;
        jj.max = function(jo, jn, jm) {
            jo[0] = Math.max(jn[0], jm[0]);
            jo[1] = Math.max(jn[1], jm[1]);
            jo[2] = Math.max(jn[2], jm[2]);
            return jo
        }
        ;
        jj.scale = function(jo, jn, jm) {
            jo[0] = jn[0] * jm;
            jo[1] = jn[1] * jm;
            jo[2] = jn[2] * jm;
            return jo
        }
        ;
        jj.scaleAndAdd = function(jo, jn, jm, jp) {
            jo[0] = jn[0] + (jm[0] * jp);
            jo[1] = jn[1] + (jm[1] * jp);
            jo[2] = jn[2] + (jm[2] * jp);
            return jo
        }
        ;
        jj.distance = function(jo, jn) {
            var jm = jn[0] - jo[0]
              , jq = jn[1] - jo[1]
              , jp = jn[2] - jo[2];
            return Math.sqrt(jm * jm + jq * jq + jp * jp)
        }
        ;
        jj.dist = jj.distance;
        jj.squaredDistance = function(jo, jn) {
            var jm = jn[0] - jo[0]
              , jq = jn[1] - jo[1]
              , jp = jn[2] - jo[2];
            return jm * jm + jq * jq + jp * jp
        }
        ;
        jj.sqrDist = jj.squaredDistance;
        jj.length = function(jn) {
            var jm = jn[0]
              , jp = jn[1]
              , jo = jn[2];
            return Math.sqrt(jm * jm + jp * jp + jo * jo)
        }
        ;
        jj.len = jj.length;
        jj.squaredLength = function(jn) {
            var jm = jn[0]
              , jp = jn[1]
              , jo = jn[2];
            return jm * jm + jp * jp + jo * jo
        }
        ;
        jj.sqrLen = jj.squaredLength;
        jj.negate = function(jn, jm) {
            jn[0] = -jm[0];
            jn[1] = -jm[1];
            jn[2] = -jm[2];
            return jn
        }
        ;
        jj.normalize = function(jp, jo) {
            var jn = jo[0]
              , jr = jo[1]
              , jq = jo[2];
            var jm = jn * jn + jr * jr + jq * jq;
            if (jm > 0) {
                jm = 1 / Math.sqrt(jm);
                jp[0] = jo[0] * jm;
                jp[1] = jo[1] * jm;
                jp[2] = jo[2] * jm
            }
            return jp
        }
        ;
        jj.dot = function(jn, jm) {
            return jn[0] * jm[0] + jn[1] * jm[1] + jn[2] * jm[2]
        }
        ;
        jj.cross = function(jn, js, jr) {
            var jm = js[0]
              , ju = js[1]
              , jt = js[2]
              , jq = jr[0]
              , jp = jr[1]
              , jo = jr[2];
            jn[0] = ju * jo - jt * jp;
            jn[1] = jt * jq - jm * jo;
            jn[2] = jm * jp - ju * jq;
            return jn
        }
        ;
        jj.lerp = function(jo, jn, jm, jp) {
            var js = jn[0]
              , jr = jn[1]
              , jq = jn[2];
            jo[0] = js + jp * (jm[0] - js);
            jo[1] = jr + jp * (jm[1] - jr);
            jo[2] = jq + jp * (jm[2] - jq);
            return jo
        }
        ;
        jj.random = function(jm, jq) {
            jq = jq || 1;
            var jo = jf() * 2 * Math.PI;
            var jp = (jf() * 2) - 1;
            var jn = Math.sqrt(1 - jp * jp) * jq;
            jm[0] = Math.cos(jo) * jn;
            jm[1] = Math.sin(jo) * jn;
            jm[2] = jp * jq;
            return jm
        }
        ;
        jj.transformMat4 = function(jp, jo, jn) {
            var jm = jo[0]
              , jr = jo[1]
              , jq = jo[2];
            jp[0] = jn[0] * jm + jn[4] * jr + jn[8] * jq + jn[12];
            jp[1] = jn[1] * jm + jn[5] * jr + jn[9] * jq + jn[13];
            jp[2] = jn[2] * jm + jn[6] * jr + jn[10] * jq + jn[14];
            return jp
        }
        ;
        jj.transformMat3 = function(jp, jo, jn) {
            var jm = jo[0]
              , jr = jo[1]
              , jq = jo[2];
            jp[0] = jm * jn[0] + jr * jn[3] + jq * jn[6];
            jp[1] = jm * jn[1] + jr * jn[4] + jq * jn[7];
            jp[2] = jm * jn[2] + jr * jn[5] + jq * jn[8];
            return jp
        }
        ;
        jj.transformQuat = function(js, jy, jm) {
            var jz = jy[0]
              , jx = jy[1]
              , jw = jy[2]
              , ju = jm[0]
              , jt = jm[1]
              , jr = jm[2]
              , jv = jm[3]
              , jp = jv * jz + jt * jw - jr * jx
              , jo = jv * jx + jr * jz - ju * jw
              , jn = jv * jw + ju * jx - jt * jz
              , jq = -ju * jz - jt * jx - jr * jw;
            js[0] = jp * jv + jq * -ju + jo * -jr - jn * -jt;
            js[1] = jo * jv + jq * -jt + jn * -ju - jp * -jr;
            js[2] = jn * jv + jq * -jr + jp * -jt - jo * -ju;
            return js
        }
        ;
        jj.rotateX = function(jo, jn, jm, jr) {
            var jq = []
              , jp = [];
            jq[0] = jn[0] - jm[0];
            jq[1] = jn[1] - jm[1];
            jq[2] = jn[2] - jm[2];
            jp[0] = jq[0];
            jp[1] = jq[1] * Math.cos(jr) - jq[2] * Math.sin(jr);
            jp[2] = jq[1] * Math.sin(jr) + jq[2] * Math.cos(jr);
            jo[0] = jp[0] + jm[0];
            jo[1] = jp[1] + jm[1];
            jo[2] = jp[2] + jm[2];
            return jo
        }
        ;
        jj.rotateY = function(jo, jn, jm, jr) {
            var jq = []
              , jp = [];
            jq[0] = jn[0] - jm[0];
            jq[1] = jn[1] - jm[1];
            jq[2] = jn[2] - jm[2];
            jp[0] = jq[2] * Math.sin(jr) + jq[0] * Math.cos(jr);
            jp[1] = jq[1];
            jp[2] = jq[2] * Math.cos(jr) - jq[0] * Math.sin(jr);
            jo[0] = jp[0] + jm[0];
            jo[1] = jp[1] + jm[1];
            jo[2] = jp[2] + jm[2];
            return jo
        }
        ;
        jj.rotateZ = function(jo, jn, jm, jr) {
            var jq = []
              , jp = [];
            jq[0] = jn[0] - jm[0];
            jq[1] = jn[1] - jm[1];
            jq[2] = jn[2] - jm[2];
            jp[0] = jq[0] * Math.cos(jr) - jq[1] * Math.sin(jr);
            jp[1] = jq[0] * Math.sin(jr) + jq[1] * Math.cos(jr);
            jp[2] = jq[2];
            jo[0] = jp[0] + jm[0];
            jo[1] = jp[1] + jm[1];
            jo[2] = jp[2] + jm[2];
            return jo
        }
        ;
        jj.forEach = (function() {
            var jm = jj.create();
            return function(jp, jt, ju, js, jr, jn) {
                var jq, jo;
                if (!jt) {
                    jt = 3
                }
                if (!ju) {
                    ju = 0
                }
                if (js) {
                    jo = Math.min((js * jt) + ju, jp.length)
                } else {
                    jo = jp.length
                }
                for (jq = ju; jq < jo; jq += jt) {
                    jm[0] = jp[jq];
                    jm[1] = jp[jq + 1];
                    jm[2] = jp[jq + 2];
                    jr(jm, jm, jn);
                    jp[jq] = jm[0];
                    jp[jq + 1] = jm[1];
                    jp[jq + 2] = jm[2]
                }
                return jp
            }
        }
        )();
        jj.str = function(jm) {
            return "vec3(" + jm[0] + ", " + jm[1] + ", " + jm[2] + ")"
        }
        ;
        jh.vec3 = jj;
        var ji = {};
        ji.create = function(jn) {
            jn = jn || i;
            var jm = new jn(4);
            jm[0] = 0;
            jm[1] = 0;
            jm[2] = 0;
            jm[3] = 0;
            return jm
        }
        ;
        ji.clone = function(jm, jo) {
            jo = jo || i;
            var jn = new jo(4);
            jn[0] = jm[0];
            jn[1] = jm[1];
            jn[2] = jm[2];
            jn[3] = jm[3];
            return jn
        }
        ;
        ji.fromValues = function(jm, jr, jp, jn, jq) {
            jq = jq || i;
            var jo = new jq(4);
            jo[0] = jm;
            jo[1] = jr;
            jo[2] = jp;
            jo[3] = jn;
            return jo
        }
        ;
        ji.copy = function(jn, jm) {
            jn[0] = jm[0];
            jn[1] = jm[1];
            jn[2] = jm[2];
            jn[3] = jm[3];
            return jn
        }
        ;
        ji.set = function(jo, jm, jq, jp, jn) {
            jo[0] = jm;
            jo[1] = jq;
            jo[2] = jp;
            jo[3] = jn;
            return jo
        }
        ;
        ji.add = function(jo, jn, jm) {
            jo[0] = jn[0] + jm[0];
            jo[1] = jn[1] + jm[1];
            jo[2] = jn[2] + jm[2];
            jo[3] = jn[3] + jm[3];
            return jo
        }
        ;
        ji.subtract = function(jo, jn, jm) {
            jo[0] = jn[0] - jm[0];
            jo[1] = jn[1] - jm[1];
            jo[2] = jn[2] - jm[2];
            jo[3] = jn[3] - jm[3];
            return jo
        }
        ;
        ji.sub = ji.subtract;
        ji.multiply = function(jo, jn, jm) {
            jo[0] = jn[0] * jm[0];
            jo[1] = jn[1] * jm[1];
            jo[2] = jn[2] * jm[2];
            jo[3] = jn[3] * jm[3];
            return jo
        }
        ;
        ji.mul = ji.multiply;
        ji.divide = function(jo, jn, jm) {
            jo[0] = jn[0] / jm[0];
            jo[1] = jn[1] / jm[1];
            jo[2] = jn[2] / jm[2];
            jo[3] = jn[3] / jm[3];
            return jo
        }
        ;
        ji.div = ji.divide;
        ji.min = function(jo, jn, jm) {
            jo[0] = Math.min(jn[0], jm[0]);
            jo[1] = Math.min(jn[1], jm[1]);
            jo[2] = Math.min(jn[2], jm[2]);
            jo[3] = Math.min(jn[3], jm[3]);
            return jo
        }
        ;
        ji.max = function(jo, jn, jm) {
            jo[0] = Math.max(jn[0], jm[0]);
            jo[1] = Math.max(jn[1], jm[1]);
            jo[2] = Math.max(jn[2], jm[2]);
            jo[3] = Math.max(jn[3], jm[3]);
            return jo
        }
        ;
        ji.scale = function(jo, jn, jm) {
            jo[0] = jn[0] * jm;
            jo[1] = jn[1] * jm;
            jo[2] = jn[2] * jm;
            jo[3] = jn[3] * jm;
            return jo
        }
        ;
        ji.scaleAndAdd = function(jo, jn, jm, jp) {
            jo[0] = jn[0] + (jm[0] * jp);
            jo[1] = jn[1] + (jm[1] * jp);
            jo[2] = jn[2] + (jm[2] * jp);
            jo[3] = jn[3] + (jm[3] * jp);
            return jo
        }
        ;
        ji.distance = function(jp, jn) {
            var jm = jn[0] - jp[0]
              , jr = jn[1] - jp[1]
              , jq = jn[2] - jp[2]
              , jo = jn[3] - jp[3];
            return Math.sqrt(jm * jm + jr * jr + jq * jq + jo * jo)
        }
        ;
        ji.dist = ji.distance;
        ji.squaredDistance = function(jp, jn) {
            var jm = jn[0] - jp[0]
              , jr = jn[1] - jp[1]
              , jq = jn[2] - jp[2]
              , jo = jn[3] - jp[3];
            return jm * jm + jr * jr + jq * jq + jo * jo
        }
        ;
        ji.sqrDist = ji.squaredDistance;
        ji.length = function(jo) {
            var jm = jo[0]
              , jq = jo[1]
              , jp = jo[2]
              , jn = jo[3];
            return Math.sqrt(jm * jm + jq * jq + jp * jp + jn * jn)
        }
        ;
        ji.len = ji.length;
        ji.squaredLength = function(jo) {
            var jm = jo[0]
              , jq = jo[1]
              , jp = jo[2]
              , jn = jo[3];
            return jm * jm + jq * jq + jp * jp + jn * jn
        }
        ;
        ji.sqrLen = ji.squaredLength;
        ji.negate = function(jn, jm) {
            jn[0] = -jm[0];
            jn[1] = -jm[1];
            jn[2] = -jm[2];
            jn[3] = -jm[3];
            return jn
        }
        ;
        ji.normalize = function(jq, jp) {
            var jn = jp[0]
              , js = jp[1]
              , jr = jp[2]
              , jo = jp[3];
            var jm = jn * jn + js * js + jr * jr + jo * jo;
            if (jm > 0) {
                jm = 1 / Math.sqrt(jm);
                jq[0] = jp[0] * jm;
                jq[1] = jp[1] * jm;
                jq[2] = jp[2] * jm;
                jq[3] = jp[3] * jm
            }
            return jq
        }
        ;
        ji.dot = function(jn, jm) {
            return jn[0] * jm[0] + jn[1] * jm[1] + jn[2] * jm[2] + jn[3] * jm[3]
        }
        ;
        ji.lerp = function(jo, jn, jm, jp) {
            var js = jn[0]
              , jr = jn[1]
              , jq = jn[2]
              , jt = jn[3];
            jo[0] = js + jp * (jm[0] - js);
            jo[1] = jr + jp * (jm[1] - jr);
            jo[2] = jq + jp * (jm[2] - jq);
            jo[3] = jt + jp * (jm[3] - jt);
            return jo
        }
        ;
        ji.random = function(jm, jn) {
            jn = jn || 1;
            jm[0] = jf();
            jm[1] = jf();
            jm[2] = jf();
            jm[3] = jf();
            ji.normalize(jm, jm);
            ji.scale(jm, jm, jn);
            return jm
        }
        ;
        ji.transformMat4 = function(jq, jp, jn) {
            var jm = jp[0]
              , js = jp[1]
              , jr = jp[2]
              , jo = jp[3];
            jq[0] = jn[0] * jm + jn[4] * js + jn[8] * jr + jn[12] * jo;
            jq[1] = jn[1] * jm + jn[5] * js + jn[9] * jr + jn[13] * jo;
            jq[2] = jn[2] * jm + jn[6] * js + jn[10] * jr + jn[14] * jo;
            jq[3] = jn[3] * jm + jn[7] * js + jn[11] * jr + jn[15] * jo;
            return jq
        }
        ;
        ji.transformQuat = function(js, jy, jm) {
            var jz = jy[0]
              , jx = jy[1]
              , jw = jy[2]
              , ju = jm[0]
              , jt = jm[1]
              , jr = jm[2]
              , jv = jm[3]
              , jp = jv * jz + jt * jw - jr * jx
              , jo = jv * jx + jr * jz - ju * jw
              , jn = jv * jw + ju * jx - jt * jz
              , jq = -ju * jz - jt * jx - jr * jw;
            js[0] = jp * jv + jq * -ju + jo * -jr - jn * -jt;
            js[1] = jo * jv + jq * -jt + jn * -ju - jp * -jr;
            js[2] = jn * jv + jq * -jr + jp * -jt - jo * -ju;
            return js
        }
        ;
        ji.forEach = (function() {
            var jm = ji.create();
            return function(jp, jt, ju, js, jr, jn) {
                var jq, jo;
                if (!jt) {
                    jt = 4
                }
                if (!ju) {
                    ju = 0
                }
                if (js) {
                    jo = Math.min((js * jt) + ju, jp.length)
                } else {
                    jo = jp.length
                }
                for (jq = ju; jq < jo; jq += jt) {
                    jm[0] = jp[jq];
                    jm[1] = jp[jq + 1];
                    jm[2] = jp[jq + 2];
                    jm[3] = jp[jq + 3];
                    jr(jm, jm, jn);
                    jp[jq] = jm[0];
                    jp[jq + 1] = jm[1];
                    jp[jq + 2] = jm[2];
                    jp[jq + 3] = jm[3]
                }
                return jp
            }
        }
        )();
        ji.str = function(jm) {
            return "vec4(" + jm[0] + ", " + jm[1] + ", " + jm[2] + ", " + jm[3] + ")"
        }
        ;
        jh.vec4 = ji;
        var je = {};
        je.create = function(jn) {
            jn = jn || i;
            var jm = new jn(4);
            jm[0] = 1;
            jm[1] = 0;
            jm[2] = 0;
            jm[3] = 1;
            return jm
        }
        ;
        je.clone = function(jm, jo) {
            jo = jo || i;
            var jn = new jo(4);
            jn[0] = jm[0];
            jn[1] = jm[1];
            jn[2] = jm[2];
            jn[3] = jm[3];
            return jn
        }
        ;
        je.copy = function(jn, jm) {
            jn[0] = jm[0];
            jn[1] = jm[1];
            jn[2] = jm[2];
            jn[3] = jm[3];
            return jn
        }
        ;
        je.identity = function(jm) {
            jm[0] = 1;
            jm[1] = 0;
            jm[2] = 0;
            jm[3] = 1;
            return jm
        }
        ;
        je.transpose = function(jo, jn) {
            if (jo === jn) {
                var jm = jn[1];
                jo[1] = jn[2];
                jo[2] = jm
            } else {
                jo[0] = jn[0];
                jo[1] = jn[2];
                jo[2] = jn[1];
                jo[3] = jn[3]
            }
            return jo
        }
        ;
        je.invert = function(jq, jo) {
            var jp = jo[0]
              , jn = jo[1]
              , jm = jo[2]
              , js = jo[3]
              , jr = jp * js - jm * jn;
            if (!jr) {
                return null
            }
            jr = 1 / jr;
            jq[0] = js * jr;
            jq[1] = -jn * jr;
            jq[2] = -jm * jr;
            jq[3] = jp * jr;
            return jq
        }
        ;
        je.adjoint = function(jo, jm) {
            var jn = jm[0];
            jo[0] = jm[3];
            jo[1] = -jm[1];
            jo[2] = -jm[2];
            jo[3] = jn;
            return jo
        }
        ;
        je.determinant = function(jm) {
            return jm[0] * jm[3] - jm[2] * jm[1]
        }
        ;
        je.multiply = function(jq, jv, jt) {
            var jp = jv[0]
              , jo = jv[1]
              , jn = jv[2]
              , jm = jv[3];
            var jw = jt[0]
              , ju = jt[1]
              , js = jt[2]
              , jr = jt[3];
            jq[0] = jp * jw + jn * ju;
            jq[1] = jo * jw + jm * ju;
            jq[2] = jp * js + jn * jr;
            jq[3] = jo * js + jm * jr;
            return jq
        }
        ;
        je.mul = je.multiply;
        je.rotate = function(jq, jt, js) {
            var jp = jt[0]
              , jo = jt[1]
              , jn = jt[2]
              , jm = jt[3]
              , ju = Math.sin(js)
              , jr = Math.cos(js);
            jq[0] = jp * jr + jn * ju;
            jq[1] = jo * jr + jm * ju;
            jq[2] = jp * -ju + jn * jr;
            jq[3] = jo * -ju + jm * jr;
            return jq
        }
        ;
        je.scale = function(jq, jr, jt) {
            var jp = jr[0]
              , jo = jr[1]
              , jn = jr[2]
              , jm = jr[3]
              , ju = jt[0]
              , js = jt[1];
            jq[0] = jp * ju;
            jq[1] = jo * ju;
            jq[2] = jn * js;
            jq[3] = jm * js;
            return jq
        }
        ;
        je.str = function(jm) {
            return "mat2(" + jm[0] + ", " + jm[1] + ", " + jm[2] + ", " + jm[3] + ")"
        }
        ;
        je.frob = function(jm) {
            return (Math.sqrt(Math.pow(jm[0], 2) + Math.pow(jm[1], 2) + Math.pow(jm[2], 2) + Math.pow(jm[3], 2)))
        }
        ;
        je.LDU = function(jm, jp, jo, jn) {
            jm[2] = jn[2] / jn[0];
            jo[0] = jn[0];
            jo[1] = jn[1];
            jo[3] = jn[3] - jm[2] * jo[1];
            return [jm, jp, jo]
        }
        ;
        jh.mat2 = je;
        var e = {};
        e.create = function(jn) {
            jn = jn || i;
            var jm = new jn(16);
            jm[0] = 1;
            jm[1] = 0;
            jm[2] = 0;
            jm[3] = 0;
            jm[4] = 0;
            jm[5] = 1;
            jm[6] = 0;
            jm[7] = 0;
            jm[8] = 0;
            jm[9] = 0;
            jm[10] = 1;
            jm[11] = 0;
            jm[12] = 0;
            jm[13] = 0;
            jm[14] = 0;
            jm[15] = 1;
            return jm
        }
        ;
        e.clone = function(jm) {
            var jn = new i(16);
            jn[0] = jm[0];
            jn[1] = jm[1];
            jn[2] = jm[2];
            jn[3] = jm[3];
            jn[4] = jm[4];
            jn[5] = jm[5];
            jn[6] = jm[6];
            jn[7] = jm[7];
            jn[8] = jm[8];
            jn[9] = jm[9];
            jn[10] = jm[10];
            jn[11] = jm[11];
            jn[12] = jm[12];
            jn[13] = jm[13];
            jn[14] = jm[14];
            jn[15] = jm[15];
            return jn
        }
        ;
        e.copy = function(jn, jm) {
            jn[0] = jm[0];
            jn[1] = jm[1];
            jn[2] = jm[2];
            jn[3] = jm[3];
            jn[4] = jm[4];
            jn[5] = jm[5];
            jn[6] = jm[6];
            jn[7] = jm[7];
            jn[8] = jm[8];
            jn[9] = jm[9];
            jn[10] = jm[10];
            jn[11] = jm[11];
            jn[12] = jm[12];
            jn[13] = jm[13];
            jn[14] = jm[14];
            jn[15] = jm[15];
            return jn
        }
        ;
        e.identity = function(jm) {
            jm[0] = 1;
            jm[1] = 0;
            jm[2] = 0;
            jm[3] = 0;
            jm[4] = 0;
            jm[5] = 1;
            jm[6] = 0;
            jm[7] = 0;
            jm[8] = 0;
            jm[9] = 0;
            jm[10] = 1;
            jm[11] = 0;
            jm[12] = 0;
            jm[13] = 0;
            jm[14] = 0;
            jm[15] = 1;
            return jm
        }
        ;
        e.transpose = function(jp, jo) {
            if (jp === jo) {
                var jt = jo[1]
                  , jr = jo[2]
                  , jq = jo[3]
                  , jm = jo[6]
                  , js = jo[7]
                  , jn = jo[11];
                jp[1] = jo[4];
                jp[2] = jo[8];
                jp[3] = jo[12];
                jp[4] = jt;
                jp[6] = jo[9];
                jp[7] = jo[13];
                jp[8] = jr;
                jp[9] = jm;
                jp[11] = jo[14];
                jp[12] = jq;
                jp[13] = js;
                jp[14] = jn
            } else {
                jp[0] = jo[0];
                jp[1] = jo[4];
                jp[2] = jo[8];
                jp[3] = jo[12];
                jp[4] = jo[1];
                jp[5] = jo[5];
                jp[6] = jo[9];
                jp[7] = jo[13];
                jp[8] = jo[2];
                jp[9] = jo[6];
                jp[10] = jo[10];
                jp[11] = jo[14];
                jp[12] = jo[3];
                jp[13] = jo[7];
                jp[14] = jo[11];
                jp[15] = jo[15]
            }
            return jp
        }
        ;
        e.invert = function(jF, jK) {
            var jO = jK[0]
              , jM = jK[1]
              , jL = jK[2]
              , jI = jK[3]
              , jq = jK[4]
              , jp = jK[5]
              , jo = jK[6]
              , jn = jK[7]
              , jE = jK[8]
              , jD = jK[9]
              , jC = jK[10]
              , jB = jK[11]
              , jQ = jK[12]
              , jP = jK[13]
              , jN = jK[14]
              , jJ = jK[15]
              , jA = jO * jp - jM * jq
              , jz = jO * jo - jL * jq
              , jy = jO * jn - jI * jq
              , jx = jM * jo - jL * jp
              , jw = jM * jn - jI * jp
              , jv = jL * jn - jI * jo
              , ju = jE * jP - jD * jQ
              , jt = jE * jN - jC * jQ
              , js = jE * jJ - jB * jQ
              , jr = jD * jN - jC * jP
              , jH = jD * jJ - jB * jP
              , jG = jC * jJ - jB * jN
              , jm = jA * jG - jz * jH + jy * jr + jx * js - jw * jt + jv * ju;
            if (!jm) {
                return null
            }
            jm = 1 / jm;
            jF[0] = (jp * jG - jo * jH + jn * jr) * jm;
            jF[1] = (jL * jH - jM * jG - jI * jr) * jm;
            jF[2] = (jP * jv - jN * jw + jJ * jx) * jm;
            jF[3] = (jC * jw - jD * jv - jB * jx) * jm;
            jF[4] = (jo * js - jq * jG - jn * jt) * jm;
            jF[5] = (jO * jG - jL * js + jI * jt) * jm;
            jF[6] = (jN * jy - jQ * jv - jJ * jz) * jm;
            jF[7] = (jE * jv - jC * jy + jB * jz) * jm;
            jF[8] = (jq * jH - jp * js + jn * ju) * jm;
            jF[9] = (jM * js - jO * jH - jI * ju) * jm;
            jF[10] = (jQ * jw - jP * jy + jJ * jA) * jm;
            jF[11] = (jD * jy - jE * jw - jB * jA) * jm;
            jF[12] = (jp * jt - jq * jr - jo * ju) * jm;
            jF[13] = (jO * jr - jM * jt + jL * ju) * jm;
            jF[14] = (jP * jz - jQ * jx - jN * jA) * jm;
            jF[15] = (jE * jx - jD * jz + jC * jA) * jm;
            return jF
        }
        ;
        e.adjoint = function(ju, jx) {
            var jB = jx[0]
              , jz = jx[1]
              , jy = jx[2]
              , jv = jx[3]
              , jp = jx[4]
              , jo = jx[5]
              , jn = jx[6]
              , jm = jx[7]
              , jt = jx[8]
              , js = jx[9]
              , jr = jx[10]
              , jq = jx[11]
              , jD = jx[12]
              , jC = jx[13]
              , jA = jx[14]
              , jw = jx[15];
            ju[0] = (jo * (jr * jw - jq * jA) - js * (jn * jw - jm * jA) + jC * (jn * jq - jm * jr));
            ju[1] = -(jz * (jr * jw - jq * jA) - js * (jy * jw - jv * jA) + jC * (jy * jq - jv * jr));
            ju[2] = (jz * (jn * jw - jm * jA) - jo * (jy * jw - jv * jA) + jC * (jy * jm - jv * jn));
            ju[3] = -(jz * (jn * jq - jm * jr) - jo * (jy * jq - jv * jr) + js * (jy * jm - jv * jn));
            ju[4] = -(jp * (jr * jw - jq * jA) - jt * (jn * jw - jm * jA) + jD * (jn * jq - jm * jr));
            ju[5] = (jB * (jr * jw - jq * jA) - jt * (jy * jw - jv * jA) + jD * (jy * jq - jv * jr));
            ju[6] = -(jB * (jn * jw - jm * jA) - jp * (jy * jw - jv * jA) + jD * (jy * jm - jv * jn));
            ju[7] = (jB * (jn * jq - jm * jr) - jp * (jy * jq - jv * jr) + jt * (jy * jm - jv * jn));
            ju[8] = (jp * (js * jw - jq * jC) - jt * (jo * jw - jm * jC) + jD * (jo * jq - jm * js));
            ju[9] = -(jB * (js * jw - jq * jC) - jt * (jz * jw - jv * jC) + jD * (jz * jq - jv * js));
            ju[10] = (jB * (jo * jw - jm * jC) - jp * (jz * jw - jv * jC) + jD * (jz * jm - jv * jo));
            ju[11] = -(jB * (jo * jq - jm * js) - jp * (jz * jq - jv * js) + jt * (jz * jm - jv * jo));
            ju[12] = -(jp * (js * jA - jr * jC) - jt * (jo * jA - jn * jC) + jD * (jo * jr - jn * js));
            ju[13] = (jB * (js * jA - jr * jC) - jt * (jz * jA - jy * jC) + jD * (jz * jr - jy * js));
            ju[14] = -(jB * (jo * jA - jn * jC) - jp * (jz * jA - jy * jC) + jD * (jz * jn - jy * jo));
            ju[15] = (jB * (jo * jr - jn * js) - jp * (jz * jr - jy * js) + jt * (jz * jn - jy * jo));
            return ju
        }
        ;
        e.determinant = function(jH) {
            var jM = jH[0]
              , jK = jH[1]
              , jI = jH[2]
              , jG = jH[3]
              , jp = jH[4]
              , jo = jH[5]
              , jn = jH[6]
              , jm = jH[7]
              , jD = jH[8]
              , jC = jH[9]
              , jB = jH[10]
              , jA = jH[11]
              , jO = jH[12]
              , jN = jH[13]
              , jL = jH[14]
              , jJ = jH[15]
              , jz = jM * jo - jK * jp
              , jy = jM * jn - jI * jp
              , jx = jM * jm - jG * jp
              , jw = jK * jn - jI * jo
              , jv = jK * jm - jG * jo
              , ju = jI * jm - jG * jn
              , jt = jD * jN - jC * jO
              , js = jD * jL - jB * jO
              , jr = jD * jJ - jA * jO
              , jq = jC * jL - jB * jN
              , jF = jC * jJ - jA * jN
              , jE = jB * jJ - jA * jL;
            return jz * jE - jy * jF + jx * jq + jw * jr - jv * js + ju * jt
        }
        ;
        e.multiply = function(jy, jC, jz) {
            var jG = jC[0]
              , jF = jC[1]
              , jD = jC[2]
              , jA = jC[3]
              , js = jC[4]
              , jq = jC[5]
              , jo = jC[6]
              , jm = jC[7]
              , jx = jC[8]
              , jw = jC[9]
              , jv = jC[10]
              , ju = jC[11]
              , jI = jC[12]
              , jH = jC[13]
              , jE = jC[14]
              , jB = jC[15];
            var jt = jz[0]
              , jr = jz[1]
              , jp = jz[2]
              , jn = jz[3];
            jy[0] = jt * jG + jr * js + jp * jx + jn * jI;
            jy[1] = jt * jF + jr * jq + jp * jw + jn * jH;
            jy[2] = jt * jD + jr * jo + jp * jv + jn * jE;
            jy[3] = jt * jA + jr * jm + jp * ju + jn * jB;
            jt = jz[4];
            jr = jz[5];
            jp = jz[6];
            jn = jz[7];
            jy[4] = jt * jG + jr * js + jp * jx + jn * jI;
            jy[5] = jt * jF + jr * jq + jp * jw + jn * jH;
            jy[6] = jt * jD + jr * jo + jp * jv + jn * jE;
            jy[7] = jt * jA + jr * jm + jp * ju + jn * jB;
            jt = jz[8];
            jr = jz[9];
            jp = jz[10];
            jn = jz[11];
            jy[8] = jt * jG + jr * js + jp * jx + jn * jI;
            jy[9] = jt * jF + jr * jq + jp * jw + jn * jH;
            jy[10] = jt * jD + jr * jo + jp * jv + jn * jE;
            jy[11] = jt * jA + jr * jm + jp * ju + jn * jB;
            jt = jz[12];
            jr = jz[13];
            jp = jz[14];
            jn = jz[15];
            jy[12] = jt * jG + jr * js + jp * jx + jn * jI;
            jy[13] = jt * jF + jr * jq + jp * jw + jn * jH;
            jy[14] = jt * jD + jr * jo + jp * jv + jn * jE;
            jy[15] = jt * jA + jr * jm + jp * ju + jn * jB;
            return jy
        }
        ;
        e.mul = e.multiply;
        e.translate = function(jy, jA, jt) {
            var js = jt[0], jr = jt[1], jq = jt[2], jD, jC, jB, jz, jp, jo, jn, jm, jx, jw, jv, ju;
            if (jA === jy) {
                jy[12] = jA[0] * js + jA[4] * jr + jA[8] * jq + jA[12];
                jy[13] = jA[1] * js + jA[5] * jr + jA[9] * jq + jA[13];
                jy[14] = jA[2] * js + jA[6] * jr + jA[10] * jq + jA[14];
                jy[15] = jA[3] * js + jA[7] * jr + jA[11] * jq + jA[15]
            } else {
                jD = jA[0];
                jC = jA[1];
                jB = jA[2];
                jz = jA[3];
                jp = jA[4];
                jo = jA[5];
                jn = jA[6];
                jm = jA[7];
                jx = jA[8];
                jw = jA[9];
                jv = jA[10];
                ju = jA[11];
                jy[0] = jD;
                jy[1] = jC;
                jy[2] = jB;
                jy[3] = jz;
                jy[4] = jp;
                jy[5] = jo;
                jy[6] = jn;
                jy[7] = jm;
                jy[8] = jx;
                jy[9] = jw;
                jy[10] = jv;
                jy[11] = ju;
                jy[12] = jD * js + jp * jr + jx * jq + jA[12];
                jy[13] = jC * js + jo * jr + jw * jq + jA[13];
                jy[14] = jB * js + jn * jr + jv * jq + jA[14];
                jy[15] = jz * js + jm * jr + ju * jq + jA[15]
            }
            return jy
        }
        ;
        e.scale = function(jp, jn, jo) {
            var jm = jo[0]
              , jr = jo[1]
              , jq = jo[2];
            jp[0] = jn[0] * jm;
            jp[1] = jn[1] * jm;
            jp[2] = jn[2] * jm;
            jp[3] = jn[3] * jm;
            jp[4] = jn[4] * jr;
            jp[5] = jn[5] * jr;
            jp[6] = jn[6] * jr;
            jp[7] = jn[7] * jr;
            jp[8] = jn[8] * jq;
            jp[9] = jn[9] * jq;
            jp[10] = jn[10] * jq;
            jp[11] = jn[11] * jq;
            jp[12] = jn[12];
            jp[13] = jn[13];
            jp[14] = jn[14];
            jp[15] = jn[15];
            return jp
        }
        ;
        e.rotate = function(jG, jN, jP, jm) {
            var jw = jm[0], jv = jm[1], ju = jm[2], jH = Math.sqrt(jw * jw + jv * jv + ju * ju), jB, jL, jA, jR, jQ, jO, jM, jt, js, jr, jq, jF, jE, jD, jC, jz, jy, jx, jK, jJ, jI, jp, jo, jn;
            if (Math.abs(jH) < jl) {
                return null
            }
            jH = 1 / jH;
            jw *= jH;
            jv *= jH;
            ju *= jH;
            jB = Math.sin(jP);
            jL = Math.cos(jP);
            jA = 1 - jL;
            jR = jN[0];
            jQ = jN[1];
            jO = jN[2];
            jM = jN[3];
            jt = jN[4];
            js = jN[5];
            jr = jN[6];
            jq = jN[7];
            jF = jN[8];
            jE = jN[9];
            jD = jN[10];
            jC = jN[11];
            jz = jw * jw * jA + jL;
            jy = jv * jw * jA + ju * jB;
            jx = ju * jw * jA - jv * jB;
            jK = jw * jv * jA - ju * jB;
            jJ = jv * jv * jA + jL;
            jI = ju * jv * jA + jw * jB;
            jp = jw * ju * jA + jv * jB;
            jo = jv * ju * jA - jw * jB;
            jn = ju * ju * jA + jL;
            jG[0] = jR * jz + jt * jy + jF * jx;
            jG[1] = jQ * jz + js * jy + jE * jx;
            jG[2] = jO * jz + jr * jy + jD * jx;
            jG[3] = jM * jz + jq * jy + jC * jx;
            jG[4] = jR * jK + jt * jJ + jF * jI;
            jG[5] = jQ * jK + js * jJ + jE * jI;
            jG[6] = jO * jK + jr * jJ + jD * jI;
            jG[7] = jM * jK + jq * jJ + jC * jI;
            jG[8] = jR * jp + jt * jo + jF * jn;
            jG[9] = jQ * jp + js * jo + jE * jn;
            jG[10] = jO * jp + jr * jo + jD * jn;
            jG[11] = jM * jp + jq * jo + jC * jn;
            if (jN !== jG) {
                jG[12] = jN[12];
                jG[13] = jN[13];
                jG[14] = jN[14];
                jG[15] = jN[15]
            }
            return jG
        }
        ;
        e.rotateX = function(jm, jt, js) {
            var jy = Math.sin(js)
              , jr = Math.cos(js)
              , jx = jt[4]
              , jw = jt[5]
              , jv = jt[6]
              , ju = jt[7]
              , jq = jt[8]
              , jp = jt[9]
              , jo = jt[10]
              , jn = jt[11];
            if (jt !== jm) {
                jm[0] = jt[0];
                jm[1] = jt[1];
                jm[2] = jt[2];
                jm[3] = jt[3];
                jm[12] = jt[12];
                jm[13] = jt[13];
                jm[14] = jt[14];
                jm[15] = jt[15]
            }
            jm[4] = jx * jr + jq * jy;
            jm[5] = jw * jr + jp * jy;
            jm[6] = jv * jr + jo * jy;
            jm[7] = ju * jr + jn * jy;
            jm[8] = jq * jr - jx * jy;
            jm[9] = jp * jr - jw * jy;
            jm[10] = jo * jr - jv * jy;
            jm[11] = jn * jr - ju * jy;
            return jm
        }
        ;
        e.rotateY = function(jq, jx, jw) {
            var jy = Math.sin(jw)
              , jv = Math.cos(jw)
              , jp = jx[0]
              , jo = jx[1]
              , jn = jx[2]
              , jm = jx[3]
              , ju = jx[8]
              , jt = jx[9]
              , js = jx[10]
              , jr = jx[11];
            if (jx !== jq) {
                jq[4] = jx[4];
                jq[5] = jx[5];
                jq[6] = jx[6];
                jq[7] = jx[7];
                jq[12] = jx[12];
                jq[13] = jx[13];
                jq[14] = jx[14];
                jq[15] = jx[15]
            }
            jq[0] = jp * jv - ju * jy;
            jq[1] = jo * jv - jt * jy;
            jq[2] = jn * jv - js * jy;
            jq[3] = jm * jv - jr * jy;
            jq[8] = jp * jy + ju * jv;
            jq[9] = jo * jy + jt * jv;
            jq[10] = jn * jy + js * jv;
            jq[11] = jm * jy + jr * jv;
            return jq
        }
        ;
        e.rotateZ = function(jq, jt, js) {
            var jy = Math.sin(js)
              , jr = Math.cos(js)
              , jp = jt[0]
              , jo = jt[1]
              , jn = jt[2]
              , jm = jt[3]
              , jx = jt[4]
              , jw = jt[5]
              , jv = jt[6]
              , ju = jt[7];
            if (jt !== jq) {
                jq[8] = jt[8];
                jq[9] = jt[9];
                jq[10] = jt[10];
                jq[11] = jt[11];
                jq[12] = jt[12];
                jq[13] = jt[13];
                jq[14] = jt[14];
                jq[15] = jt[15]
            }
            jq[0] = jp * jr + jx * jy;
            jq[1] = jo * jr + jw * jy;
            jq[2] = jn * jr + jv * jy;
            jq[3] = jm * jr + ju * jy;
            jq[4] = jx * jr - jp * jy;
            jq[5] = jw * jr - jo * jy;
            jq[6] = jv * jr - jn * jy;
            jq[7] = ju * jr - jm * jy;
            return jq
        }
        ;
        e.fromRotationTranslation = function(jz, jx, jv) {
            var js = jx[0]
              , jr = jx[1]
              , jq = jx[2]
              , jt = jx[3]
              , jA = js + js
              , jm = jr + jr
              , ju = jq + jq
              , jp = js * jA
              , jo = js * jm
              , jn = js * ju
              , jy = jr * jm
              , jw = jr * ju
              , jD = jq * ju
              , jE = jt * jA
              , jC = jt * jm
              , jB = jt * ju;
            jz[0] = 1 - (jy + jD);
            jz[1] = jo + jB;
            jz[2] = jn - jC;
            jz[3] = 0;
            jz[4] = jo - jB;
            jz[5] = 1 - (jp + jD);
            jz[6] = jw + jE;
            jz[7] = 0;
            jz[8] = jn + jC;
            jz[9] = jw - jE;
            jz[10] = 1 - (jp + jy);
            jz[11] = 0;
            jz[12] = jv[0];
            jz[13] = jv[1];
            jz[14] = jv[2];
            jz[15] = 1;
            return jz
        }
        ;
        e.fromQuat = function(jw, jt) {
            var jq = jt[0]
              , jp = jt[1]
              , jo = jt[2]
              , jr = jt[3]
              , jx = jq + jq
              , jm = jp + jp
              , js = jo + jo
              , jn = jq * jx
              , jv = jp * jx
              , ju = jp * jm
              , jD = jo * jx
              , jC = jo * jm
              , jA = jo * js
              , jB = jr * jx
              , jz = jr * jm
              , jy = jr * js;
            jw[0] = 1 - ju - jA;
            jw[1] = jv + jy;
            jw[2] = jD - jz;
            jw[3] = 0;
            jw[4] = jv - jy;
            jw[5] = 1 - jn - jA;
            jw[6] = jC + jB;
            jw[7] = 0;
            jw[8] = jD + jz;
            jw[9] = jC - jB;
            jw[10] = 1 - jn - ju;
            jw[11] = 0;
            jw[12] = 0;
            jw[13] = 0;
            jw[14] = 0;
            jw[15] = 1;
            return jw
        }
        ;
        e.frustum = function(jq, jn, jv, jm, ju, js, jr) {
            var jt = 1 / (jv - jn)
              , jp = 1 / (ju - jm)
              , jo = 1 / (js - jr);
            jq[0] = (js * 2) * jt;
            jq[1] = 0;
            jq[2] = 0;
            jq[3] = 0;
            jq[4] = 0;
            jq[5] = (js * 2) * jp;
            jq[6] = 0;
            jq[7] = 0;
            jq[8] = (jv + jn) * jt;
            jq[9] = (ju + jm) * jp;
            jq[10] = (jr + js) * jo;
            jq[11] = -1;
            jq[12] = 0;
            jq[13] = 0;
            jq[14] = (jr * js * 2) * jo;
            jq[15] = 0;
            return jq
        }
        ;
        e.perspective = function(jp, jo, jn, jq, jm) {
            var js = 1 / Math.tan(jo / 2)
              , jr = 1 / (jq - jm);
            jp[0] = js / jn;
            jp[1] = 0;
            jp[2] = 0;
            jp[3] = 0;
            jp[4] = 0;
            jp[5] = js;
            jp[6] = 0;
            jp[7] = 0;
            jp[8] = 0;
            jp[9] = 0;
            jp[10] = (jm + jq) * jr;
            jp[11] = -1;
            jp[12] = 0;
            jp[13] = 0;
            jp[14] = (2 * jm * jq) * jr;
            jp[15] = 0;
            return jp
        }
        ;
        e.ortho = function(jp, jn, jv, jm, jt, js, jr) {
            var jq = 1 / (jn - jv)
              , ju = 1 / (jm - jt)
              , jo = 1 / (js - jr);
            jp[0] = -2 * jq;
            jp[1] = 0;
            jp[2] = 0;
            jp[3] = 0;
            jp[4] = 0;
            jp[5] = -2 * ju;
            jp[6] = 0;
            jp[7] = 0;
            jp[8] = 0;
            jp[9] = 0;
            jp[10] = 2 * jo;
            jp[11] = 0;
            jp[12] = (jn + jv) * jq;
            jp[13] = (jt + jm) * ju;
            jp[14] = (jr + js) * jo;
            jp[15] = 1;
            return jp
        }
        ;
        e.lookAt = function(jA, jH, jI, js) {
            var jG, jF, jD, jo, jn, jm, jv, ju, jt, jB, jE = jH[0], jC = jH[1], jz = jH[2], jr = js[0], jq = js[1], jp = js[2], jy = jI[0], jx = jI[1], jw = jI[2];
            if (Math.abs(jE - jy) < jl && Math.abs(jC - jx) < jl && Math.abs(jz - jw) < jl) {
                return e.identity(jA)
            }
            jv = jE - jy;
            ju = jC - jx;
            jt = jz - jw;
            jB = 1 / Math.sqrt(jv * jv + ju * ju + jt * jt);
            jv *= jB;
            ju *= jB;
            jt *= jB;
            jG = jq * jt - jp * ju;
            jF = jp * jv - jr * jt;
            jD = jr * ju - jq * jv;
            jB = Math.sqrt(jG * jG + jF * jF + jD * jD);
            if (!jB) {
                jG = 0;
                jF = 0;
                jD = 0
            } else {
                jB = 1 / jB;
                jG *= jB;
                jF *= jB;
                jD *= jB
            }
            jo = ju * jD - jt * jF;
            jn = jt * jG - jv * jD;
            jm = jv * jF - ju * jG;
            jB = Math.sqrt(jo * jo + jn * jn + jm * jm);
            if (!jB) {
                jo = 0;
                jn = 0;
                jm = 0
            } else {
                jB = 1 / jB;
                jo *= jB;
                jn *= jB;
                jm *= jB
            }
            jA[0] = jG;
            jA[1] = jo;
            jA[2] = jv;
            jA[3] = 0;
            jA[4] = jF;
            jA[5] = jn;
            jA[6] = ju;
            jA[7] = 0;
            jA[8] = jD;
            jA[9] = jm;
            jA[10] = jt;
            jA[11] = 0;
            jA[12] = -(jG * jE + jF * jC + jD * jz);
            jA[13] = -(jo * jE + jn * jC + jm * jz);
            jA[14] = -(jv * jE + ju * jC + jt * jz);
            jA[15] = 1;
            return jA
        }
        ;
        e.str = function(jm) {
            return "mat4(" + jm[0] + ", " + jm[1] + ", " + jm[2] + ", " + jm[3] + ", " + jm[4] + ", " + jm[5] + ", " + jm[6] + ", " + jm[7] + ", " + jm[8] + ", " + jm[9] + ", " + jm[10] + ", " + jm[11] + ", " + jm[12] + ", " + jm[13] + ", " + jm[14] + ", " + jm[15] + ")"
        }
        ;
        e.frob = function(jm) {
            return (Math.sqrt(Math.pow(jm[0], 2) + Math.pow(jm[1], 2) + Math.pow(jm[2], 2) + Math.pow(jm[3], 2) + Math.pow(jm[4], 2) + Math.pow(jm[5], 2) + Math.pow(jm[6], 2) + Math.pow(jm[6], 2) + Math.pow(jm[7], 2) + Math.pow(jm[8], 2) + Math.pow(jm[9], 2) + Math.pow(jm[10], 2) + Math.pow(jm[11], 2) + Math.pow(jm[12], 2) + Math.pow(jm[13], 2) + Math.pow(jm[14], 2) + Math.pow(jm[15], 2)))
        }
        ;
        jh.mat4 = e
    }
    )(window);
    function bY() {
        this.result = {
            bkData: [],
            eleData: [[], [], [], [], [], [], [], [], [], []],
            tileLabels: []
        }
    }
    ev.extend(bY.prototype, {
        createLayer: function(T, i) {
            var e = this.result.bkData;
            i = i || {};
            if (!e[T]) {
                e[T] = [[], [], []]
            }
            e[T].tileTypeName = i.tileTypeName || "na";
            e[T].dataType = i.dataType || 2;
            e[T].png8 = i.png8 || false;
            e[T].clipTile = i.clipTile || false;
            e[T].boundary = i.boundary || false;
            if (i.ontology) {
                e[T].ontology = i.ontology
            }
        },
        removeLayer: function(i) {
            var e = this.result.bkData;
            e[i] = null
        },
        hasLayerBoundary: function() {
            var e = this.result.bkData;
            var T = false;
            for (var je = 0; je < e.length; je++) {
                if (e[je] && e[je].boundary) {
                    T = true;
                    break
                }
            }
            return T
        },
        getResult: function() {
            return this.result
        },
        setData: function(jg, jf, jh) {
            var e = this.result.bkData;
            var T = e[jf] ? e[jf][jh] : null;
            if (!T) {
                return
            }
            for (var je = 0; je < T.length; je++) {
                if (T[je].key && T[je].key === jg.key) {
                    T[je] = jg;
                    return
                }
            }
            T.push(jg)
        },
        setLabelData: function(e) {
            this.result.tileLabels = e
        },
        getLabelData: function() {
            return this.result.tileLabels
        },
        setOverlayData: function(i, e) {
            if (!this.result.eleData[e]) {
                return
            }
            if (e === 0 || e === 5 || e === 6) {
                i.sort(function(je, T) {
                    return je.overlay.zIndex - T.overlay.zIndex
                })
            }
            this.result.eleData[e] = i
        },
        clearLabelOverlayData: function() {
            this.result.eleData[2] = [];
            this.result.eleData[3] = [];
            this.result.eleData[4] = []
        },
        clearData: function(je) {
            var e = this.result.bkData;
            if (typeof je === "number") {
                if (e[je]) {
                    e[je][0] = [];
                    e[je][1] = [];
                    e[je][2] = []
                }
                return
            }
            for (var T = 0; T < e.length; T++) {
                if (!e[T]) {
                    continue
                }
                e[T][0] = [];
                e[T][1] = [];
                e[T][2] = []
            }
        },
        sortThumbData: function(i) {
            var e = this.result.bkData;
            var T = e[i];
            if (!T) {
                return
            }
            if (T[0] && T[0].length > 0) {
                T[0].sort(function(jf, je) {
                    return jf.tileInfo.useZoom - je.tileInfo.useZoom
                })
            }
        }
    });
    var fL = (function() {
        var jo = new Int8Array(4);
        var T = new Int32Array(jo.buffer,0,1);
        var jj = new Float32Array(jo.buffer,0,1);
        function jq(jx) {
            T[0] = jx;
            return jj[0]
        }
        function i(jx) {
            jj[0] = jx;
            return T[0]
        }
        function jk(jx) {
            var jz = (jx[3] << 24 | jx[2] << 16 | jx[1] << 8 | jx[0]);
            var jy = jq(jz & 4278190079);
            return jy
        }
        var jf = 0;
        var ji = 1;
        var jm = 2;
        var ju = 0;
        var jr = 1;
        var jp = 2;
        var jg = 9;
        function jn(jx, jy) {
            var jz;
            if (jy % 2 === 0) {
                jz = [-jx[1], jx[0]]
            } else {
                jz = [jx[1], -jx[0]]
            }
            return jz
        }
        function e(jx, jy, jz) {
            var jA = jn(jx, jy);
            var jB;
            if (jz === ji) {
                return jA
            } else {
                if (jy === 4 || jy === 5) {
                    jB = [jA[0] - jx[0], jA[1] - jx[1]]
                } else {
                    jB = [jA[0] + jx[0], jA[1] + jx[1]]
                }
                if (jz === jf) {
                    vec2.normalize(jB, jB)
                }
                return jB
            }
        }
        function jt(jy, jx) {
            return Math.sqrt(Math.pow(jy[0] - jx[0], 2) + Math.pow(jy[1] - jx[1], 2))
        }
        function je(jB, jA, jz, jx) {
            var jy = vec2.dot(jB, jA);
            if (jz === jp || jz === jr) {
                if ((jx === 0 || jx === 1) && jy > 0) {
                    return true
                } else {
                    if ((jx === 2 || jx === 3) && jy < 0) {
                        return true
                    }
                }
            }
            if ((jx === 0 || jx === 1) && jy < 0) {
                return true
            } else {
                if ((jx === 2 || jx === 3) && jy > 0) {
                    return true
                }
            }
            return false
        }
        function jl(jy, jD, jF) {
            var jE = jn(jy, jD);
            var jA;
            var jC = jy;
            var jB = jF;
            var jH = [];
            vec2.normalize(jH, [jC[0] + jB[0], jC[1] + jB[1]]);
            var jG = vec2.dot(jE, [-jH[1], jH[0]]);
            if (Math.abs(jG) < 0.1) {
                jG = 1
            }
            var jz = 1 / jG;
            jA = [-jH[1] * jz, jH[0] * jz];
            var jx = vec2.dot(jy, jA);
            if (jx < 0) {
                vec2.negate(jA, jA)
            }
            return {
                cos2: jx,
                offset: jA
            }
        }
        function jw(jy, jD, jF, jx) {
            var jE = jn(jy, jD);
            var jC;
            var jB;
            var jA;
            if (jD === 0 || jD === 1) {
                jC = jF;
                jB = jy
            } else {
                jC = jy;
                jB = jF
            }
            if (!jC || !jB) {
                return jE
            }
            var jH = [jC[0] + jB[0], jC[1] + jB[1]];
            if (jH[0] === 0 && jH[1] === 0) {
                vec2.normalize(jH, jB)
            } else {
                vec2.normalize(jH, jH)
            }
            var jI = je(jH, jE, jx, jD);
            if (jI) {
                return jE
            }
            var jG = vec2.dot(jE, [-jH[1], jH[0]]);
            if (Math.abs(jG) < 0.1) {
                jG = 1
            }
            var jz = 1 / jG;
            jA = [-jH[1] * jz, jH[0] * jz];
            return jA
        }
        function jv(jI, jJ, jC, jB, jK, jH, jA, jD, jz, jG) {
            var jF;
            var jy = 0;
            var jx = false;
            jF = jH.length / jg - 1;
            jh(jJ[0], jI[0], jC[0], jK, jB, 4, jD, jz, undefined, jH, jG);
            jF++;
            jy++;
            jh(jJ[0], jI[0], jC[0], jK, jB, 5, jD, jz, undefined, jH, jG);
            jF++;
            jy++;
            for (var jE = 0; jE < jI.length; jE++) {
                jh(jJ[jE], jI[jE], jC[jE], jK, jB, 0, jD, jz, jI[jE - 1], jH, jG);
                js(jA, ++jF, ++jy, jx);
                jh(jJ[jE], jI[jE], jC[jE], jK, jB, 1, jD, jz, jI[jE - 1], jH, jG);
                js(jA, ++jF, ++jy, jx);
                jh(jJ[jE + 1], jI[jE], jC[jE + 1], jK, jB, 2, jD, jz, jI[jE + 1], jH, jG);
                js(jA, ++jF, ++jy, jx);
                jh(jJ[jE + 1], jI[jE], jC[jE + 1], jK, jB, 3, jD, jz, jI[jE + 1], jH, jG);
                js(jA, ++jF, ++jy, jx);
                if (jB === jr && jE !== jI.length - 1) {
                    jh(jJ[jE + 1], jI[jE], jC[jE + 1], jK, jB, 8, jD, jz, jI[jE + 1], jH, jG);
                    js(jA, ++jF, ++jy, jx);
                    jx = jx ? false : true
                }
            }
            jh(jJ[jJ.length - 1], jI[jI.length - 1], jC[jJ.length - 1], jK, jB, 6, jD, jz, undefined, jH, jG);
            js(jA, ++jF, ++jy, jx);
            jh(jJ[jJ.length - 1], jI[jI.length - 1], jC[jJ.length - 1], jK, jB, 7, jD, jz, undefined, jH, jG);
            js(jA, ++jF, ++jy, jx)
        }
        function jh(jK, jA, jE, jL, jz, jF, jC, jy, jI, jH, jG) {
            var jJ = jF % 2 === 0 ? 1 : -1;
            var jD;
            if (jF === 4 || jF === 5 || jF === 6 || jF === 7) {
                jD = e(jA, jF, jL)
            } else {
                if (jF === 0 || jF === 1 || jF === 2 || jF === 3) {
                    jD = jw(jA, jF, jI, jz)
                } else {
                    if (jF === 8) {
                        var jB = jl(jA, jF, jI);
                        jD = jB.offset;
                        vec2.normalize(jD, jD);
                        var jx = jB.cos2;
                        if (jx < 0) {
                            jJ = -jJ
                        }
                    }
                }
            }
            jH[jH.length] = jK[0] * 10;
            jH[jH.length] = jK[1] * 10;
            jH[jH.length] = jD[0] * jy * 10;
            jH[jH.length] = jD[1] * jy * 10;
            jH[jH.length] = jC;
            jH[jH.length] = jJ;
            jH[jH.length] = 0;
            jH[jH.length] = jG || 0;
            jH[jH.length] = jE
        }
        function js(jB, jz, jx, jA) {
            var jy;
            if (jx % 2 === 0) {
                if (jA) {
                    jB[jB.length] = jz - 2;
                    jB[jB.length] = jz - 1;
                    jB[jB.length] = jz
                } else {
                    jB[jB.length] = jz - 1;
                    jB[jB.length] = jz - 2;
                    jB[jB.length] = jz
                }
            } else {
                if (jA) {
                    jB[jB.length] = jz - 1;
                    jB[jB.length] = jz - 2;
                    jB[jB.length] = jz
                } else {
                    jB[jB.length] = jz - 2;
                    jB[jB.length] = jz - 1;
                    jB[jB.length] = jz
                }
            }
        }
        return {
            getVertexCount: function(jy, jx) {
                if (jx === jr) {
                    return jy * 5 - 2
                } else {
                    return jy * 4
                }
            },
            buildData: function(jI, jz, jJ, jF, jx, jC, jy, jG) {
                var jH = [];
                var jE = 0;
                var jB = [0];
                for (var jD = 0; jD < jI.length; jD++) {
                    if (jD > 0) {
                        jE += jt(jI[jD], jI[jD - 1]);
                        jB.push(jE * 10)
                    }
                    if (jD !== jI.length - 1) {
                        var jA = [jI[jD + 1][0] - jI[jD][0], jI[jD + 1][1] - jI[jD][1]];
                        var jK = [];
                        if (jA[0] === 0 && jA[1] === 0) {
                            jK = [0, 0]
                        } else {
                            vec2.normalize(jK, jA)
                        }
                        jH[jH.length] = [jK[0], jK[1]]
                    }
                }
                return jv(jH, jI, jB, jz, jJ, jF, jx, jk(jC), jy, jG)
            },
            toTileSolidLineVertices: function(jB, jy) {
                var jz = new Float32Array(jB.length / jg * 5);
                var jx = new Int16Array(jz.buffer);
                var jD = 0;
                var jA = 0;
                for (var jC = 0; jC < jB.length; jC += jg) {
                    jx[jD] = ~~jB[jC];
                    jx[jD + 1] = ~~jB[jC + 1];
                    jx[jD + 2] = ~~jB[jC + 2];
                    jx[jD + 3] = ~~jB[jC + 3];
                    jz[jA + 2] = jB[jC + 4];
                    jx[jD + 6] = jB[jC + 5];
                    jx[jD + 7] = jy ? jy : 0;
                    jx[jD + 8] = jB[jC + 7];
                    jx[jD + 9] = 0;
                    jD += 10;
                    jA += 5
                }
                return jz
            }
        }
    }
    )();
    var f3 = 1;
    var gY = 2;
    var eK = {
        drawIndex: 0,
        devicePixelRatio: fD(),
        zoomState: 1,
        curViewTilesInfo: null,
        iconSetImg: null,
        LAST_CALC_ZOOM: -1,
        LAST_LOAD_VECTOR_ZOOM_CHANGE: false,
        lastCollisionTestTime: 0,
        remove: function() {
            this.tileCache.clear()
        },
        initDrawData: function() {
            this.drawIndex = this.zIndex;
            var e = {
                tileTypeName: this.tileType.getName(),
                dataType: this.dataType,
                png8: this.png8,
                clipTile: this.clipTile,
                boundary: this.boundary
            };
            if (this.ontology) {
                e.ontology = this.ontology
            }
            this.map._featureMgr.createLayer(this.drawIndex, e);
            this.dispatchEvent(new fa("oninitDrawData"))
        },
        destroyDrawData: function() {
            this.map._featureMgr.removeLayer(this.drawIndex);
            var i = new fa("onremoveLayerMask");
            i.hasLayerBoundary = this.map._featureMgr.hasLayerBoundary();
            this.map.dispatchEvent(i)
        },
        setZIndex: function(ji) {
            ji = Math.abs(Math.floor(ji)) || 1;
            if (!ji || ji === this.zIndex) {
                return
            }
            var i = this.map._featureMgr.result.bkData;
            var je = this.map.tileMgr.tileLayers;
            function T(jl) {
                var jk = null;
                for (var jj = 0; jj < je.length; jj++) {
                    if (je[jj].zIndex === jl) {
                        jk = je[jj];
                        break
                    }
                }
                return jk
            }
            var e = [];
            var jh = [];
            var jg = this.zIndex;
            if (i[ji]) {
                e.push(T(ji));
                jh.push(i[ji]);
                this.setTargetZIndex(ji);
                i[ji] = i[jg];
                i[jg] = null
            } else {
                this.setTargetZIndex(ji);
                i[ji] = i[jg];
                i[jg] = null;
                this.map.dispatchEvent(new fa("onrefresh"));
                return
            }
            var jf = ji + 1;
            while (jf) {
                if (i[jf]) {
                    e.push(T(jf));
                    jh.push(i[jf]);
                    e.shift().setTargetZIndex(jf);
                    i[jf] = jh.shift();
                    jf += 1
                } else {
                    e.shift().setTargetZIndex(jf);
                    i[jf] = jh.shift();
                    jf = 0
                }
            }
            this.map.dispatchEvent(new fa("onrefresh"))
        },
        setZIndexTop: function() {
            var e = this.map._featureMgr.result.bkData;
            e[e.length] = e[this.zIndex];
            e[this.zIndex] = null;
            this.setTargetZIndex(e.length - 1);
            this.map.dispatchEvent(new fa("onrefresh"))
        },
        getTileKey: function(e, je) {
            je = je || {};
            var i = typeof je.useZoom === "number" ? je.useZoom : e.useZoom;
            var T = e.style || this.mapStyleId || "default";
            return this.mapType + "_" + T + "_" + e.col + "_" + e.row + "_" + e.zoom + "_" + i
        },
        getTileRenderDataKey: function(i) {
            var T = i.col;
            var je = i.zoom;
            var e = i.baseTileSize;
            T = ey.calcLoopParam(T, je, e).col;
            return this.mapType + "_" + T + "_" + i.row + "_" + je + "_" + i.useZoom
        },
        getTileUnits: function(e) {
            var je = this.map;
            var T = dR[je.getMapType()];
            var i = T.baseUnits * Math.pow(2, T.zoomLevelBase - e);
            return i
        },
        getTilesUrl: function(jf, jo, jp) {
            var i = jf.x;
            var jq = jf.y;
            var jl = iT("ditu", "normal");
            var jh = jl.ver;
            var ji = jl.udt;
            i = ey.calcLoopParam(i, jo, jp).col;
            var jn = dR.B_NORMAL_MAP.vectorTileUrls;
            var jg = Math.abs(i + jq) % jn.length;
            var jm = jn[jg];
            if (window.offLineIPAddress) {
                jn = [window.offLineIPAddress + "/pvd/"];
                jm = jn[0]
            }
            var T = "x=" + i + "&y=" + jq + "&z=" + Math.floor(jo);
            var jk = this.devicePixelRatio > 1 ? "&scaler=2" : "";
            var jj = "&textimg=1";
            if (this.map.config.textRenderType === "canvas") {
                jj = "&textimg=0"
            }
            var je = this.map.config.style;
            if (typeof je === "string" && je !== "default") {
                T += "&styleId=" + w.mapStyleNameIdPair[je]
            }
            T += "&styles=pl" + jj + jk + "&v=" + jh + "&udt=" + ji + "&json=0";
            var e = jm + "?qt=vtile&param=" + window.encodeURIComponent(er(T));
			
			
			
			//改动的，上面的未动，动33552，33553行
			var tiles_dir = bmapcfg.tiles_v_dir.length > 0 ? bmapcfg.tiles_v_dir : bmapcfg.home + "/tiles_v";
			
			if(bmapcfg.debug==true){
				console.log( " %c\n 原webGL地图加载:https://maponline0.bdimg.com/pvd/?qt=vtile&param="+window.encodeURIComponent(er(T)) + "\n%c ➡️ \n" + "%c现webGL地图加载:"+tiles_dir + "/" + Math.floor(jo) + "/" + i + "/" + jq, 'color: #fadfa3; background: #030307;', 'color: red;', 'color: #fadfa3; background: #030307;');
			}
			
			e = tiles_dir + "/" + Math.floor(jo) + "/" + i + "/" + jq;
            return e
        },
        getRasterTilesUrl: function(T, jg, je) {
            var jf = dR[this.map.mapType];
            var i = this.map.config.style;
            var e = jf.tileUrls[Math.abs(jg + T) % jf.tileUrls.length] + "?qt=tile&x=" + T + "&y=" + jg + "&z=" + je + ((i === "default" || typeof i !== "string") ? "" : ("&styleId=" + w.mapStyleNameIdPair[i])) + "&styles=pl&udt=" + this.normalUdt + "&scaler=" + this.scaler + "&p=1";
            e = e.replace(/-(\d+)/gi, "M$1");
            return e
        },
        getZoomState: function() {
            var T = this.map;
            var i = T.getZoom();
            var e = i - this.lastZoom;
            if (e > 0) {
                this.zoomState = 1
            } else {
                if (e < 0) {
                    this.zoomState = -1
                }
            }
            this.lastZoom = i;
            return this.zoomState
        },
        releaseOutViewTileData: function(e) {
            var jf = this.map._workerMgr.releasePendingData(e);
            for (var je = 0, T = jf.length; je < T; je++) {
                var jg = this.getTileKey(jf[je]);
                this.tileCache.removeData(jg)
            }
        },
        loadLayerData: function(e, je, i) {
            this.hasZoomChange = i;
            this.curViewTilesInfo = e;
            this.mapStyleId = this.map.getMapStyleId();
            this.releaseOutViewTileData(e);
            var T = this.getZoomState();
            if (this.dataType === gY) {
                if (je) {
                    this.getVectorLayerDataFromCache(e, T)
                } else {
                    this.loadVectorLayerData(e)
                }
            } else {
                this.loadRasterLayerData(e, je)
            }
        },
        getVectorLayerDataFromCache: function(jj, jt) {
            this.map.temp.isPermitSpotOver = false;
            this.tileLabels = [];
            if (this.baseLayer === true) {
                var jn = this.map._customLabelMgr.virtualTile;
                if (jn && jn.label) {
                    this.tileLabels.push(jn.label)
                }
            }
            this.thumbCache = {};
            var ju = -1;
            for (var jq = 0, jo = jj.length; jq < jo; jq++) {
                var jr = jj[jq];
                var jf = jr.col;
                var jg = jr.row;
                var T = jr.zoom;
                var jp = this._getTileTexImgKey(jr);
                var je = jr.useZoom;
                ju = T;
                var jh = this.getTileKey(jr);
                var jw = this.tileCache.getData(jh);
                if (jw && jw.status === "ready") {
                    var jx = jw;
                    this.map._featureMgr.setData(jw, this.drawIndex, 2);
                    if (jw.label) {
                        if (jw.label.status === "ready") {
                            jw.label.tileInfo = jw.tileInfo;
                            this.tileLabels.push(jw.label);
                            if (jw.label.textureSources && jw.label.textureSources[je] && this.map._webglMapScene) {
                                var jv = this.map._webglMapScene._painter;
                                if (!jv._labelTextureAtlasOffset[jp]) {
                                    jv._addToAsyncJob(jw.label.textureSources[je])
                                }
                            }
                        } else {
                            if (jw.label.status !== "processing") {
                                this.processLabelData(jw)
                            }
                        }
                    }
                } else {
                    var js = {
                        tileInfo: jr,
                        dataType: gY,
                        key: jh
                    };
                    this.map._featureMgr.setData(js, this.drawIndex, 2);
                    if (this.useThumbData) {
                        this.setThumbData(jf, jg, T, je, jt)
                    }
                }
            }
            this.tileLabels.labelZoom = ju;
            this.updateLabels(jt);
            var jk = this.map.getZoom();
            var ji = Math.floor(jk);
            var jm = jk - ji;
            var jl = Math.floor(this.LAST_CALC_ZOOM);
            var e = this.LAST_CALC_ZOOM - jl;
            var jy = false;
            if (this.hasZoomChange) {
                if (Math.abs(jk - this.LAST_CALC_ZOOM) >= 0.5) {
                    jy = true
                } else {
                    if (jm < 0.5 && e >= 0.5) {
                        jy = true
                    } else {
                        if (jm >= 0.5 && e < 0.5) {
                            jy = true
                        }
                    }
                }
                if (jy) {
                    this.cacheDataCollideLabels(0)
                }
                this.LAST_CALC_ZOOM = jk
            } else {
                if (this.tileLabels.length > 0) {
                    this.cacheDataCollideLabels(ev.Browser.ie ? 50 : 30)
                }
            }
        },
        loadVectorLayerData: function(jk) {
            this.map.temp.isPermitSpotOver = false;
            var jj = this;
            function ji(i, jl) {
                var jn = jj.tileCache.getData(jl);
                if (!jn) {
                    return
                }
                if (!i || i.error) {
                    i.event && bp.fetchDebug && bp.fetchDebug.sendError({
                        title: i.event.title,
                        msg: i.event.msg,
                        category: bp.fetchDebug.category.AJAX,
                        level: bp.fetchDebug.levels.ERROR,
                        url: i.event.title
                    });
                    var jm = new fa("ontileloaderror");
                    i = i || {};
                    jm.error = i.error || "";
                    jm.message = i.message || "";
                    jj.map.fire(jm);
                    jn.status = "init";
                    jn.reloadTimer = setTimeout(function() {
                        if (jn.retry < 3) {
                            jn.retry++;
                            jn.status = "loading";
                            jj.loadVectorTileData(i.tileInfo, ji)
                        } else {
                            jj.tileCache.removeData(jl)
                        }
                    }, 4000);
                    jj.map._featureMgr.clearData(jj.drawIndex);
                    jj._checkTilesLoaded();
                    jj.getVectorLayerDataFromCache(jj.curViewTilesInfo, jj.getZoomState());
                    return
                }
                if (jn.reloadTimer) {
                    clearTimeout(jn.reloadTimer);
                    jn.reloadTimer = null
                }
                jj.callbackDataQueue.push([i, jl]);
                if (jj.processDataTimer) {
                    return
                }
                jj.processDataTimer = setTimeout(function() {
                    while (jj.callbackDataQueue.length > 0) {
                        var jp = jj.callbackDataQueue.shift();
                        jj.vectorTileDataCbk(jp[0], jp[1]);
                        jj._checkTilesLoaded()
                    }
                    jj.map._featureMgr.clearData(jj.drawIndex);
                    jj.getVectorLayerDataFromCache(jj.curViewTilesInfo, jj.getZoomState());
                    var jo = new fa("onrefresh");
                    jo.source = "webgllayer";
                    jj.map.dispatchEvent(jo);
                    jj.processDataTimer = null
                }, 200)
            }
            for (var jh = 0, jf = jk.length; jh < jf; jh++) {
                var T = jk[jh];
                var jg = this.getTileKey(T);
                var e = this.tileCache.getData(jg);
                if (!e) {
                    e = {
                        status: "init",
                        tileInfo: T,
                        dataType: gY,
                        key: jg,
                        retry: 0
                    }
                }
                if (e.status !== "ready" && e.status !== "loading") {
                    this.numLoading++;
                    e.status = "loading";
                    this.tileCache.setData(jg, e);
                    var je = this.getProcessedLabelZoom(T);
                    if (je) {
                        T.processedLabelZooms = je
                    }
                    this.loadVectorTileData(T, ji)
                }
            }
        },
        setThumbData: function(i, jf, je, e, T) {
            if (T === 1) {
                if (this._findParentZoomTile(i, jf, je, e, 8) === false) {
                    this._findChildZoomTile(i, jf, je, e, 3)
                }
            } else {
                if (T === -1) {
                    if (this._findChildZoomTile(i, jf, je, e, 3) === false) {
                        this._findParentZoomTile(i, jf, je, e, 8)
                    }
                }
            }
            this.map._featureMgr.sortThumbData(this.drawIndex)
        },
        _findParentZoomTile: function(jh, jq, jp, jf, jk) {
            var jg = dR[this.getMapType()];
            var T = jg.minDataZoom;
            var e = jh;
            var jn = jq;
            var jl = jp;
            var jm = jf;
            for (var jj = 1; jj <= jk; jj++) {
                var je = this.tileType.getParentTile(e, jn, jl, jm, T);
                if (je === null) {
                    continue
                }
                var jo = this.getTileKey(je);
                var ji = this.tileCache.getData(jo);
                if (ji && ji.status === "ready") {
                    if (this.thumbCache[jo]) {
                        continue
                    }
                    this.map._featureMgr.setData(ji, this.drawIndex, 0);
                    this.thumbCache[jo] = true;
                    return true
                }
                e = je.col;
                jn = je.row;
                jl = je.zoom;
                jm = je.useZoom
            }
            return false
        },
        _findChildZoomTile: function(ji, jk, e, jf, jt) {
            var jr = dR[this.getMapType()];
            var jn = jr.maxDataZoom;
            var jh = ji;
            var jj = jk;
            var jl = e;
            var je = jf;
            var jg = true;
            for (var jq = 1; jq <= jt; jq++) {
                var jo = false;
                var T = this.tileType.getChildTiles(jh, jj, jl, je, jn, jq);
                if (!T) {
                    continue
                }
                for (var jp = 0; jp < T.length; jp++) {
                    var jm = this.getTileKey(T[jp]);
                    var js = this.tileCache.getData(jm);
                    if (js && js.status === "ready") {
                        if (!this.thumbCache[jm]) {
                            this.map._featureMgr.setData(js, this.drawIndex, 1);
                            this.thumbCache[jm] = true
                        }
                        jo = true
                    } else {
                        jg = false
                    }
                }
                if (jo) {
                    break
                }
            }
            return jg
        },
        loadVectorTileData: function(jq, jr) {
            var jf = jq.col;
            var jg = jq.row;
            var e = jq.zoom;
            var jo = jq.baseTileSize;
            var je = this.getTilesUrl(new eO(jf,jg), e, jo);
            var jh = this.map.getPrivateRegions();
            if (!this.processData && this.map.getPrivateStatus() && jh) {
                var jm = jq.useZoom;
                var jl = this.tileType.getMercatorSize(jm);
                var jk = jf * jl;
                var jj = jg * jl;
                var jn = new cf(jk + jl / 2,jj + jl / 2);
                var ji = new hf(new cf(jk,jj),new cf(jk + jl,jj + jl));
                for (var jp = 0; jp < jh.length; jp++) {
                    if (jh[jp]instanceof cr) {
                        if (jh[jp].crossPoint(jn, ji, jm)) {
                            var js = {
                                x: jf,
                                y: jg,
                                z: e,
                                mapZoom: jm
                            };
                            var T = jh[jp].tileUrlFunction(je, js);
                            if (T && T.url) {
                                je = T.url;
                                T.header && (jq.header = T.header)
                            }
                            break
                        }
                    }
                }
            }
            if (!je) {
                return
            }
            var ju = this.getTileKey(jq);
            gA(this.map);
            if (!this.processData) {
                this.map._workerMgr.loadTileData(je, jq, ju, jr);
                return
            }
            var jr = "cbk" + ju.replace(/-/g, "_");
            var jt = this;
            bp[jr] = function(i) {
                var jv = (function(jw) {
                    return function() {
                        jw.tileInfo = jq;
                        var jC = jt.processData(jw);
                        if (!jC.road) {
                            return
                        }
                        var jz = {
                            tileInfo: jq,
                            renderData: {
                                base: []
                            },
                            status: "ready",
                            key: ju,
                            mapType: jt.mapType
                        };
                        var jF = [];
                        var jI = [];
                        for (var jB = 0; jB < jC.road.length; jB++) {
                            var jE = jC.road[jB];
                            var jD = -1;
                            for (var jA = 0; jA < jE.length; jA++) {
                                var jG = jE[jA];
                                var jH = [];
                                if (jF.length / 7 + jG[0].length / 2 > 65536) {
                                    jz.renderData.base.push({
                                        type: "line",
                                        data: [fL.toTileSolidLineVertices(jF, 4000), new Uint16Array(jI)]
                                    });
                                    jF = [];
                                    jI = []
                                }
                                for (var jy = 0; jy < jG[0].length; jy += 2) {
                                    jH[jH.length] = [jG[0][jy], jG[0][jy + 1]]
                                }
                                var jx = jG[3];
                                fL.buildData(jH, jG[1], jG[2], jF, jI, jx, jG[4], jB + 20, false)
                            }
                            jz.renderData.base.push({
                                type: "line",
                                data: [fL.toTileSolidLineVertices(jF, 4000), new Uint16Array(jI)]
                            })
                        }
                        jt.tileCache.setData(ju, jz);
                        jt.map._featureMgr.clearData(jt.drawIndex);
                        jt.getVectorLayerDataFromCache(jt.curViewTilesInfo, jt.getZoomState());
                        jt.map.dispatchEvent(new fa("onrefresh"))
                    }
                }
                )(i);
                jt.map.jobScheduler.addJob(jv);
                delete bp[jr]
            }
            ;
            je += "&fn=" + encodeURIComponent(eY + "." + jr);
            ga.load(je)
        },
        vectorTileDataCbk: function(je, jf) {
            var jj = new fa("ontileloaded");
            jj.perfStat = je.perfStat || [];
            var e = this.map;
            e.fire(jj);
            var i = je.tileInfo;
            var T = i.col;
            var jn = i.row;
            var jm = i.zoom;
            var jl = i.baseTileSize;
            var jh = this.tileCache.getData(jf);
            if (!jh) {
                return
            }
            if (!this.showLabel) {
                je.label = null
            }
            jh.renderData = je;
            jh.tileInfo = i;
            var jg = ey.calcLoopParam(T, jm, jl);
            var jk = jg.geoOffsetX;
            jh.tileInfo.loopOffsetX = jk;
            jh.status = "ready";
            jh.mapType = this.mapType;
            this.tileCache.setData(jf, jh);
            jh.label = je.label;
            je.label = null;
            if (je.indoorData && e._indoorMgr) {
                e._indoorMgr.setData(je.indoorData)
            }
            var ji = "id_" + T + "_" + jn + "_" + jm;
            if (!this.curViewTilesInfo[ji]) {
                e.fire(new fa("ontilenotinview"));
                return
            }
            this.processLabelData(jh);
            if (je.indoorData && e._indoorMgr && e._indoorMgr.currentUid) {
                this._refreshIndoorData(e._indoorMgr.currentUid, e._indoorMgr.currentFloor)
            }
        },
        _refreshIndoorData: function(jm, jl) {
            var jo = this.map._indoorMgr.getIndoorData(jm);
            var jr = jo.tileKeys;
            var jp = Math.floor(this.map.getZoom());
            for (var jj = 0; jj < jr.length; jj++) {
                var jg = jr[jj];
                var ji = this.tileCache.getData(jg);
                if (!ji) {
                    continue
                }
                var jq = ji.renderData;
                jq.indoorBase = [];
                jq.indoorBaseContour = [];
                jq.indoorBorder3D = [];
                jq.indoorArea3D = [];
                ji.label.indoorLabel = [];
                this.labelProcessor.clearCollisionCache(ji.label);
                for (var jk in jq.indoorData) {
                    if (jk === "tileInfo") {
                        continue
                    }
                    var e = jq.indoorData[jk];
                    var jf = e.defaultFloor;
                    if (jk === jm) {
                        jf = jl;
                        e.currentFloor = jl
                    }
                    if (e.floors[jf]) {
                        if (e.floors[jf].base) {
                            for (var jh = 0; jh < e.floors[jf].base.length; jh++) {
                                jq.indoorBase.push(e.floors[jf].base[jh])
                            }
                        }
                        if (e.floors[jf].contour) {
                            for (var jh = 0; jh < e.floors[jf].contour.length; jh++) {
                                jq.indoorBaseContour.push(e.floors[jf].contour[jh])
                            }
                        }
                        if (e.floors[jf].indoorBorder3D) {
                            jq.indoorBorder3D.push(e.floors[jf].indoorBorder3D)
                        }
                        if (e.floors[jf].area3D) {
                            jq.indoorArea3D.push(e.floors[jf].area3D)
                        }
                        if (e.floors[jf].pois) {
                            ji.label.indoorLabel = ji.label.indoorLabel.concat(e.floors[jf].pois)
                        }
                    }
                }
                this.updateAllIconsTextureCoords(ji);
                var jn = this;
                this.labelProcessor.loadIconImages(ji, function(i) {
                    jn.updateAllIconsTextureCoords(i)
                }, "indoor");
                var je = jg.split("_");
                var T = parseInt(je[je.length - 1], 10);
                if (T !== jp) {
                    continue
                }
                jn.map._featureMgr.setData(ji, this.drawIndex, 2)
            }
            this.dataBackCollideLabels();
            this.map.dispatchEvent(new fa("onrefresh"))
        },
        _removeIndoorData: function(i) {
            if (!i.indoorData) {
                return
            }
            for (var e in i.indoorData) {
                if (e === "tileInfo") {
                    continue
                }
                this.map._indoorMgr.removeData(e, i.key)
            }
        },
        getProcessedLabelZoom: function(je) {
            var jf = i9.baseZoomInfo[je.zoom];
            if (!jf) {
                return false
            }
            var T = [];
            for (var jg = 0; jg < jf.length; jg++) {
                var jh = this.getTileKey(je, {
                    useZoom: jf[jg]
                });
                var e = this.tileCache.getData(jh);
                if (e && e.status === "ready" && e.label && e.label.status === "ready") {
                    T.push(jf[jg])
                }
            }
            if (T.length) {
                return T
            } else {
                return false
            }
        },
        getSameZoomDataFromCache: function(T) {
            var je = i9.baseZoomInfo[T.zoom];
            for (var jf = 0; jf < je.length; jf++) {
                var jg = this.getTileKey(T, {
                    useZoom: je[jf]
                });
                if (T.useZoom === je[jf]) {
                    continue
                }
                var e = this.tileCache.getData(jg);
                if (e && e.status === "ready" && e.label && e.label.status === "ready") {
                    return e
                }
            }
            return false
        },
        hasSameLabelData: function(je, T) {
            for (var e = 0; e < T.length; e++) {
                if (T[e].key === je) {
                    return true
                }
            }
            return false
        },
        getDataByFloorName: function(T, je) {
            for (var e = 0; e < T.length; e++) {
                if (T[e].floorName === je) {
                    return T[e]
                }
            }
            return null
        },
        mergeIndoorLabelData: function(jj, e) {
            for (var jh in jj) {
                if (jh === "tileInfo") {
                    continue
                }
                if (e[jh]) {
                    var T = jj[jh].floors;
                    var jk = e[jh].floors;
                    for (var jf = 0; jf < T.length; jf++) {
                        var je = T[jf];
                        var ji = je.floorName;
                        var jg = this.getDataByFloorName(jk, ji);
                        if (jg) {
                            if (jg.pois) {
                                jg.pois = jg.pois.concat(je.pois);
                                je.pois = jg.pois
                            } else {
                                jg.pois = je.pois
                            }
                        }
                    }
                }
            }
        },
        mergeSameZoomLabelData: function(jh) {
            var jf = jh.label;
            if (!jf) {
                return
            }
            var e = jh.tileInfo;
            var jg = this.getSameZoomDataFromCache(e);
            if (!jg) {
                return
            }
            var je = jg.label;
            if (!je) {
                return
            }
            for (var T = 0; T < jf.fixedLabel.length; T++) {
                if (!this.hasSameLabelData(jf.fixedLabel[T].key, je.fixedLabel)) {
                    je.hasNewData = true;
                    je.fixedLabel.push(jf.fixedLabel[T])
                }
            }
            for (var T = 0; T < jf.lineLabel.length; T++) {
                if (!this.hasSameLabelData(jf.lineLabel[T].key, je.lineLabel)) {
                    je.hasNewData = true;
                    je.lineLabel.push(jf.lineLabel[T])
                }
            }
            for (var T = 0; T < jf.indoorLabel.length; T++) {
                if (!this.hasSameLabelData(jf.indoorLabel[T].key, je.indoorLabel)) {
                    je.hasNewData = true;
                    je.indoorLabel.push(jf.indoorLabel[T])
                }
            }
            jh.label = je;
            if (jg.renderData.indoorData && jh.renderData.indoorData) {
                this.mergeIndoorLabelData(jh.renderData.indoorData, jg.renderData.indoorData)
            }
        },
        processLabelData: function(jg) {
            if (!jg.label) {
                return
            }
            if (jg.label.status === "processing") {
                return
            }
            jg.label.status = "processing";
            var je = this;
            je.updateAllIconsTextureCoords(jg);
            this.labelProcessor.loadIconImages(jg, function(jh) {
                je.updateAllIconsTextureCoords(jh)
            });
            if (this.map.config.textRenderType === "canvas") {
                var e = this.labelProcessor.drawLabelsOnCanvas(jg, function(jj, jl) {
                    var ji = jg.tileInfo;
                    var jk = je.map.config.mapStyleId;
                    if (!bp["customStyleInfo_" + jk]) {
                        je.mergeSameZoomLabelData(jg)
                    }
                    if (jj) {
                        if (!jg.label.textureHeights) {
                            jg.label.textureHeights = []
                        }
                        jg.label.textureHeights[ji.useZoom] = jj.height
                    }
                    if (jl) {
                        if (!jg.label.indoorTextureHeights) {
                            jg.label.indoorTextureHeights = []
                        }
                        jg.label.indoorTextureHeights[ji.useZoom] = jl.height
                    }
                    var jh = je._getTileTexImgKey(ji);
                    je._doWorkAfterLabelImageLoad(jg, jj, jl, jh)
                });
                return
            }
            var T = jg.label.textImageBitmap || jg.label.textImgStr;
            var jf = jg.label.indoorTextImageBitmap || jg.label.indoorTextImgStr;
            this.labelProcessor.loadImgByStr(T, jf, function i(jm, jk) {
                var jj = jg.label.textureHeight;
                var jn = jg.label.indoorTextureHeight;
                jg.label.textureHeight = undefined;
                jg.label.indoorTextureHeight = undefined;
                var ji = jg.tileInfo;
                je.mergeSameZoomLabelData(jg);
                var jl = jg.label;
                jl.textImgStr = "";
                jl.indoorTextImgStr && (jl.indoorTextImgStr = "");
                if (!jl.textureHeights) {
                    jl.textureHeights = []
                }
                jl.textureHeights[ji.useZoom] = jj;
                if (!jl.indoorTextureHeights) {
                    jl.indoorTextureHeights = []
                }
                jl.indoorTextureHeights[ji.useZoom] = jn;
                var jh = je._getTileTexImgKey(ji);
                je._doWorkAfterLabelImageLoad(jg, jm, jk, jh)
            })
        },
        _getTileTexImgKey: function(i) {
            var T = i.style || this.mapStyleId || "default";
            var e = T + "_" + i.col + "_" + i.row + "_" + i.zoom;
            if (this.map.config.textRenderType === "canvas") {
                e += "_" + i.useZoom
            }
            return e
        },
        _doWorkAfterLabelImageLoad: function(ji, jg, je, i) {
            var jh = this;
            var jf = ji.label;
            jf.tileInfo = ji.tileInfo;
            jf.status = "ready";
            if (jg || je) {
                var e = jf.tileInfo;
                if (jg) {
                    jg.id = i;
                    if (!jf.textureSources) {
                        jf.textureSources = []
                    }
                    jf.textureSources[e.useZoom] = jg
                }
                if (je) {
                    je.id = i + "_indoor";
                    if (!jf.indoorTextureSources) {
                        jf.indoorTextureSources = []
                    }
                    jf.indoorTextureSources[e.useZoom] = je
                }
                if (jh.map._webglMapScene) {
                    var T = jh.map._webglMapScene._painter;
                    if (jg) {
                        T._addToAsyncJob(jf.textureSources[e.useZoom])
                    }
                }
            }
            if (ji.custom !== true) {
                jh.tileLabels.push(jf)
            }
            if (jh.collisionTimer) {
                return
            }
            jh.collisionTimer = setTimeout(function() {
                jh.dataBackCollideLabels();
                jh.collisionTimer = null
            }, 300)
        },
        _updateIconTextureCoords: function(ji, T) {
            if (!ji) {
                return
            }
            var jh = this.map;
            for (var je = 0; je < ji.length; je++) {
                var jg = ji[je];
                if (!jg.iconPos) {
                    continue
                }
                if (jh._webglMapScene) {
                    var e = jh._webglMapScene._painter;
                    var jf = T + "_" + jg.iconPos.iconType;
                    jg.iconPos.texcoord = e._iconTextureAtlasCoords[jf] || null
                }
            }
        },
        updateAllIconsTextureCoords: function(jf) {
            if (this.map.viewAnimationTime) {
                return
            }
            if (jf) {
                if (jf.label) {
                    var i = jf.tileInfo.style;
                    this._updateIconTextureCoords(jf.label.fixedLabel, i);
                    this._updateIconTextureCoords(jf.label.indoorLabel, i)
                }
            } else {
                var je = this.tileCache.getAllData();
                for (var T in je) {
                    var e = je[T].data;
                    if (e.status === "ready" && e.label) {
                        var i = e.tileInfo.style;
                        this._updateIconTextureCoords(e.label.fixedLabel, i);
                        this._updateIconTextureCoords(e.label.indoorLabel, i)
                    }
                }
            }
            this.updateLabels();
            this.map.dispatchEvent(new fa("onrefresh"))
        },
        cacheDataCollideLabels: function(T) {
            var jf = this;
            var i = this.map._featureMgr;
            function je() {
                jf.cacheLabelTimer = null;
                var jg;
                var jh = jf.map.getTilt();
                var jj = jf.map.getHeading() % 360;
                if (jf.tileLabels.length === 0 || (jf.tileLabels.length === 1 && jf.tileLabels[0].tileInfo.zoom === 0)) {
                    jg = i.getLabelData();
                    if (jg.length > 0) {
                        jg = jf.labelProcessor.collisionTest(jg, -1)
                    }
                } else {
                    if (jh || jj) {
                        if (this._collisionTimer) {
                            if (!jh) {
                                clearTimeout(this._collisionTimer)
                            } else {
                                if (Date.now() - jf.lastCollisionTestTime > 500) {
                                    jf.lastCollisionTestTime = Date.now()
                                } else {
                                    clearTimeout(this._collisionTimer)
                                }
                            }
                        }
                        this._collisionTimer = setTimeout(function() {
                            jg = jf.labelProcessor.collisionTest(jf.tileLabels);
                            if (jg) {
                                if (jf.map.stencil && jf.map.stencil.isPoiMask) {
                                    var jk = jf.isPoiInPolygon(jg);
                                    i.setLabelData(jk)
                                } else {
                                    i.setLabelData(jg)
                                }
                            }
                            jf.updateLabels();
                            jf.map.dispatchEvent(new fa("onrefresh"));
                            jf._collisionTimer = null
                        }, 60);
                        return
                    } else {
                        jg = jf.labelProcessor.getCachedLabels(jf.tileLabels)
                    }
                }
                if (jg) {
                    if (jf.map.stencil && jf.map.stencil.isPoiMask) {
                        var ji = jf.isPoiInPolygon(jg);
                        i.setLabelData(ji)
                    } else {
                        i.setLabelData(jg)
                    }
                }
                jf.updateLabels();
                jf.map.dispatchEvent(new fa("onrefresh"))
            }
            if (!T) {
                clearTimeout(jf.cacheLabelTimer);
                je()
            } else {
                if (jf.cacheLabelTimer) {
                    return
                }
                jf.cacheLabelTimer = setTimeout(function e() {
                    je()
                }, T)
            }
        },
        isPoiInPolygon: function(T) {
            var jx = this;
            var jn = jx.map.stencil;
            var jf = jx.map._featureMgr.result.eleData[9];
            var je = [];
            for (var js = 0; js < jf.length; js++) {
                var jo = jf[js].overlay.points;
                je = je.concat(jo)
            }
            for (var jv = 1; jv < T.length; jv++) {
                var jh = [];
                var jg = [];
                for (var jt = 0; jt < T[jv].fixedLabel.length; jt++) {
                    var jm = T[jv].fixedLabel[jt];
                    var jq = jm.pt;
                    if (jm.pt && am(jq, je)) {
                        jh.push(jm)
                    } else {
                        jg.push(jm)
                    }
                }
                if (jn.showRegion === "inside") {
                    T[jv].fixedLabel = jh
                } else {
                    if (jn.showRegion === "outside") {
                        T[jv].fixedLabel = jg
                    }
                }
                var jr = [];
                var jj = [];
                for (var js = 0; js < T[jv].lineLabel.length; js++) {
                    var ju = T[jv].lineLabel[js];
                    var e = ju.pt;
                    if (e && am(e, je)) {
                        jr.push(ju)
                    } else {
                        jj.push(ju)
                    }
                }
                if (jn.showRegion === "inside") {
                    T[jv].lineLabel = jr
                } else {
                    if (jn.showRegion === "outside") {
                        T[jv].lineLabel = jj
                    }
                }
                var jp = [];
                var jl = [];
                for (var jk = 0; jk < T[jv].indoorLabel.length; jk++) {
                    var jw = T[jv].indoorLabel[jk];
                    var ji = jw.pt;
                    if (ji && am(ji, je)) {
                        jp.push(jw)
                    } else {
                        jl.push(jw)
                    }
                }
                if (jn.showRegion === "inside") {
                    T[jv].indoorLabel = jp
                } else {
                    if (jn.showRegion === "outside") {
                        T[jv].indoorLabel = jl
                    }
                }
            }
            return T
        },
        dataBackCollideLabels: function() {
            var T = this;
            if ((T.tileLabels && T.tileLabels.length === 0)) {
                return
            }
            var e;
            T.labelProcessor.calcLabelsCollision(T.tileLabels);
            e = T.labelProcessor.getCachedLabels(T.tileLabels);
            if (e) {
                if (T.map.stencil && T.map.stencil.isPoiMask) {
                    var i = T.isPoiInPolygon(e);
                    T.map._featureMgr.setLabelData(i)
                } else {
                    T.map._featureMgr.setLabelData(e)
                }
            }
            T.updateLabels();
            T.map.dispatchEvent(new fa("onrefresh"));
            if (bK()) {
                this.labelProcessor._refreshSpotData()
            }
        },
        updateLabels: function(jf) {
            var jg = this.map;
            var i = jg._featureMgr;
            var T = i.getLabelData();
            if (T.length > 0) {
                var je = jg.getZoom();
                if (T.labelZoom - je < 3) {
                    this.labelProcessor.updateLabels(T);
                    var e = this.labelProcessor.fixDataFormat(T);
                    i.setOverlayData(e[0], 2);
                    i.setOverlayData(e[1], 3);
                    i.setOverlayData(e[2], 4)
                } else {
                    i.clearLabelOverlayData()
                }
                jg.temp.isPermitSpotOver = false;
                this.labelProcessor.curSpotAdded = false
            }
        },
        loadRasterLayerData: function(jj, je) {
            this.thumbCache = {};
            var jk = this.getZoomState();
            if (je) {
                for (var jh = 0, jf = jj.length; jh < jf; jh++) {
                    var T = jj[jh];
                    var jg = this.getTileKey(T);
                    var e = this.tileCache.getData(jg);
                    if (e && e.status === "ready") {
                        if (T.tileTypeName === "xyz") {
                            e.tileInfo = T
                        }
                        this.map._featureMgr.setData(e, this.drawIndex, 2)
                    } else {
                        if (this.useThumbData) {
                            this.setThumbData(T.col, T.row, T.zoom, T.useZoom, jk)
                        }
                    }
                }
                return
            }
            for (var jh = 0, jf = jj.length; jh < jf; jh++) {
                var T = jj[jh];
                var jg = this.getTileKey(T);
                var e = this.tileCache.getData(jg);
                if (!e) {
                    this.tileCache.setData(jg, {});
                    var ji = this;
                    this.loadRasterTileData(T, function(i, jl) {
                        ji.rasterTileDataCbk(i, jl)
                    })
                }
            }
        },
        loadRasterTileData: function(i, e) {
            var T = new Image();
            var jf = i.col;
            var ji = i.row;
            var jg = i.zoom;
            var je = this.getTilesUrl(new eO(jf,ji), jg, i);
            if (!je) {
                return
            }
            var jh = this.getTileKey(i);
            if (i.combine) {
                T = je;
                T.tileInfo = i;
                if (T) {
                    e && e(T, jh)
                } else {
                    e && e(null, jh)
                }
            } else {
                T = this.loadTileImage(je, jh, e)
            }
            T.tileInfo = i
        },
        loadTileImage: function(je, T, e) {
            var i = new Image();
            i.crossOrigin = "anonymous";
            i.onload = function() {
                e && e(this, T)
            }
            ;
            i.onerror = function() {
                bp.fetchDebug && bp.fetchDebug.sendError({
                    title: je,
                    msg: je,
                    category: bp.fetchDebug.category.RESOURCE,
                    level: bp.fetchDebug.levels.ERROR,
                    url: je
                });
                e && e(null, T)
            }
            ;
            i.src = je;
            return i
        },
        rasterTileDataCbk: function(jg, je) {
            if (!jg || typeof jg === "string") {
                this.tileCache.removeData(je);
                return
            }
            var i = jg.tileInfo;
            var T = i.col;
            var jm = i.row;
            var jl = i.zoom;
            var e = this.tileCache.getData(je);
            if (!e) {
                return
            }
            var jh = "id_" + T + "_" + jm + "_" + jl;
            var jk = this;
            e.dataType = f3;
            e.tileInfo = i;
            if (i.tileTypeName === "xyz") {
                var jj = i.tileSize;
                e.textureSource = jg;
                e.renderData = {
                    vertexAll: [0, 0, 0, 0, 0, jj, 0, 0, 1, 0, jj, jj, 0, 1, 1, 0, 0, 0, 0, 0, jj, jj, 0, 1, 1, 0, jj, 0, 0, 1]
                };
                jk.setRasterTileData(je, e, jh)
            } else {
                e.textureSource = jg;
                var jf = ey.calcLoopParam(T, jl);
                var ji = jf.geoOffsetX;
                jg.tileInfo.loopOffsetX = ji;
                e.renderData = {
                    vertexAll: [0, 0, 0, 0, 0, 256, 0, 0, 1, 0, 256, 256, 0, 1, 1, 0, 0, 0, 0, 0, 256, 256, 0, 1, 1, 0, 256, 0, 0, 1]
                };
                this.setRasterTileData(je, e, jh)
            }
        },
        setRasterTileData: function(jf, e, je) {
            e.status = "ready";
            this.tileCache.setData(jf, e);
            var T = false;
            if (this.curViewTilesInfo[je]) {
                e.dataType = f3;
                e.png8 = this.png8 || false;
                this.map._featureMgr.setData(e, this.drawIndex, 2);
                T = true
            }
            if (T) {
                var i = new fa("onrefresh");
                i.source = "webgllayer";
                this.map.dispatchEvent(i)
            }
        },
        _checkTilesLoaded: function() {
            this.numLoading--;
            if (this.map.firstTileLoad === false) {
                this.map.dispatchEvent(new fa("onfirsttilesloaded"));
                this.map.firstTileLoad = true
            }
            var e = this;
            if (this.numLoading === 0) {
                if (this._checkLoadedTimer) {
                    clearTimeout(this._checkLoadedTimer);
                    this._checkLoadedTimer = null
                }
                this._checkLoadedTimer = setTimeout(function() {
                    if (e.numLoading === 0) {
                        e.map.dispatchEvent(new fa("ontilesloaded"))
                    }
                    e._checkLoadedTimer = null
                }, 60)
            }
        },
        isClickableLabel: function(e) {
            if (e.isDel) {
                return false
            }
            if (e.zoom > 9 && !e.guid) {
                return false
            }
            if (e.zoom <= 9 && !e.name && !e.guid) {
                return false
            }
            return true
        }
    };
    var aK = 5;
    var ic = 4;
    var fW = 3;
    var H = 2;
    var dX = 1;
    var gM = 0;
    function ap(e) {
        this._ratio = fD();
        this._iconCache = {};
        this._map = e;
        this._drawingCanvasPool = [];
        this._drawingCanvasHeight = 4096
    }
    ev.extend(ap.prototype, {
        _loadIcons: function(i, ji) {
            var jg = 0;
            var jf = this;
            var T = this._map.config.style;
            for (var jh in i) {
                jg++;
                var e = new Image();
                e.id = jh;
                e.crossOrigin = "anonymous";
                e.onload = function() {
                    jf._iconCache[this.id].loaded = true;
                    jg--;
                    if (jg === 0) {
                        ji()
                    }
                    this.onload = null
                }
                ;
                e.onerror = function() {
                    jf._iconCache[this.id] = null;
                    jg--;
                    if (jg === 0) {
                        ji()
                    }
                    this.onerror = null
                }
                ;
                var je = w.getIconSetPath(T) + jh + ".png";
                e.src = je;
                this._iconCache[jh] = {
                    loaded: false,
                    image: e
                }
            }
        },
        _getEmptyDrawingCanvas: function() {
            for (var T = 0; T < this._drawingCanvasPool.length; T++) {
                if (this._drawingCanvasPool[T]._free === true) {
                    this._drawingCanvasPool[T]._free = false;
                    return this._drawingCanvasPool[T]
                }
            }
            var e = this._createNewDrawingCanvas();
            this._drawingCanvasPool.push(e);
            e._free = false;
            return e
        },
        _createNewDrawingCanvas: function() {
            var e = bL("canvas");
            e.width = 512;
            e.height = this._drawingCanvasHeight;
            e._free = true;
            e._id = bp.getGUID();
            var i = e.getContext("2d");
            i.textBaseline = "bottom";
            i.lineJoin = "round";
            return e
        },
        drawLabelsOnCanvas: function(jw, je) {
            var jm = jw.label.fixedLabel.slice(0);
            var js = jw.label.lineLabel.slice(0);
            var T = jw.label.indoorLabel.slice(0);
            if (jm.length === 0 && js.length === 0 && T.length === 0) {
                je();
                return
            }
            var jh = function(jB, i) {
                return jB.styleId - i.styleId
            };
            jm.sort(jh);
            js.sort(jh);
            T.sort(jh);
            var jv = {};
            var e = this._getEmptyDrawingCanvas();
            var jr = e.getContext("2d");
            jr.clearRect(0, 0, e.width, e.height);
            var jz = 0;
            var jn = null;
            var jg = 0;
            if (jm.length > 0) {
                while (jg < jm.length && !jm[jg].styleText[0]) {
                    jg++
                }
                if (jm[jg] && jm[jg].styleText[0]) {
                    jn = jm[jg].styleText[0].fontSize + jm[jg].styleText[0].haloSize * 2
                }
            }
            if (jn === null && T.length > 0) {
                jg = 0;
                while (jg < T.length && !T[jg].styleText[0]) {
                    jg++
                }
                if (T[jg] && T[jg].styleText[0]) {
                    jn = T[jg].styleText[0].fontSize + T[jg].styleText[0].haloSize * 2
                }
            }
            if (jn === null && js.length > 0) {
                jg = 0;
                while (jg < js.length && !js[jg].styleText[0]) {
                    jg++
                }
                if (js[jg] && js[jg].styleText[0]) {
                    jn = js[jg].styleText[0].fontSize + js[jg].styleText[0].haloSize * 2
                }
            }
            if (jn === null || isNaN(jn)) {
                je();
                return
            }
            var jj = 0;
            var ji = jn;
            var jp = {};
            var jA = 0;
            var jq = [];
            for (var ju = 0; ju < jm.length; ju++) {
                var jl = jm[ju];
                var jo = jl.name;
                var jt = jl.styleText;
                if (!jo || jt.length === 0) {
                    continue
                }
                var jf = jl.icon;
                if (jl.textOnIcon && (!this._iconCache[jf] || this._iconCache[jf].loaded === false)) {
                    jq.push(jl);
                    jA++;
                    if (!jp[jf]) {
                        jp[jf] = true
                    }
                    continue
                }
                var jx = this._drawEachText(jr, jl, jz, jj, ji, jn, jv);
                if (!jx) {
                    continue
                }
                jj = jx.curX;
                ji = jx.curY;
                jn = jx.curLineHeight;
                jz = jx.styleId
            }
            var jx = this._drawEachTypeOfLabels(jr, T, jz, jj, ji, jn, jv);
            jz = jx.curStyleId;
            jj = jx.curX;
            ji = jx.curY;
            jn = jx.curLineHeight;
            var jx = this._drawEachTypeOfLabels(jr, js, jz, jj, ji, jn, jv);
            jz = jx.curStyleId;
            jj = jx.curX;
            ji = jx.curY;
            jn = jx.curLineHeight;
            if (jA > 0) {
                var jy = this;
                this._loadIcons(jp, function() {
                    jx = jy._drawEachTypeOfLabels(jr, jq, jz, jj, ji, jn, jv);
                    jz = jx.curStyleId;
                    jj = jx.curX;
                    ji = jx.curY;
                    jn = jx.curLineHeight;
                    var i = jy._generateEachLabelCanvas(e, ji, jm, js, T, jw);
                    je(i[0], i[1])
                });
                return
            }
            var jk = this._generateEachLabelCanvas(e, ji, jm, js, T, jw);
            je(jk[0], jk[1])
        },
        drawCustomLabelsOnCanvas: function(jh, jn) {
            if (jh.length === 0) {
                jn();
                return
            }
            var T = 0;
            var e = (jh[0].style.fontSize + (jh[0].style.haloSize || 0) * 2) || 0;
            var je = e;
            var jj = this._getEmptyDrawingCanvas();
            var jo = jj.getContext("2d");
            jo.clearRect(0, 0, jj.width, jj.height);
            var jk = {};
            var jm = -1;
            for (var jf = 0; jf < jh.length; jf++) {
                if (!jh[jf].name) {
                    continue
                }
                var jl = this._drawEachText(jo, jh[jf], jm, T, e, je, jk);
                if (!jl) {
                    continue
                }
                T = jl.curX;
                e = jl.curY;
                je = jl.curLineHeight;
                jm = jl.styleId
            }
            var jg = e;
            var ji = this._copyToNewCanvas(jj, jg);
            for (var jf = 0; jf < jh.length; jf++) {
                if (!jh[jf].name && jh[jf].style.iconSize) {
                    this._addFixedLabelBounds(jh[jf]);
                    continue
                }
                if (!jh[jf].textSize) {
                    continue
                }
                this._updateFixedLabelCoords(jh[jf], jg);
                this._addFixedLabelBounds(jh[jf])
            }
            jn(ji)
        },
        _drawEachTypeOfLabels: function(jn, jh, jl, je, T, jf, jj) {
            for (var jg = 0; jg < jh.length; jg++) {
                var ji = jh[jg];
                var jm = ji.name;
                var e = ji.styleText;
                if (!jm || e.length === 0) {
                    continue
                }
                var jk = this._drawEachText(jn, ji, jl, je, T, jf, jj);
                if (!jk) {
                    continue
                }
                je = jk.curX;
                T = jk.curY;
                jf = jk.curLineHeight;
                jl = jk.styleId;
                if (jk.curY > this._drawingCanvasHeight) {
                    return {
                        curX: je,
                        curY: T,
                        curLineHeight: jf,
                        curStyleId: jl
                    }
                }
            }
            return {
                curX: je,
                curY: T,
                curLineHeight: jf,
                curStyleId: jl
            }
        },
        _drawIndoorTextLabelOnCanvas: function(jf) {
            var e = this._getEmptyDrawingCanvas();
            var jm = e.getContext("2d");
            jm.clearRect(0, 0, e.width, e.height);
            var ju = 0;
            var jl = null;
            var jk = 0;
            var ji;
            var jr = {};
            var jq = [];
            for (var jg in jf) {
                if (jg === "tileInfo") {
                    continue
                }
                var je = jf[jg];
                var jp = je.defaultFloor;
                var jj = je.floors;
                for (var jo = 0; jo < jj.length; jo++) {
                    if (jo === jp) {
                        continue
                    }
                    var js = jj[jo];
                    if (!js.pois) {
                        continue
                    }
                    var jh = js.pois;
                    for (var jn = 0; jn < jh.length; jn++) {
                        if (jl === null && jh[jn].styleText[0]) {
                            jl = jh[jn].styleText[0].fontSize + jh[jn].styleText[0].haloSize * 2;
                            ji = jl
                        }
                        jq.push(jh[jn])
                    }
                }
            }
            if (jl === null) {
                return null
            }
            jq.sort(function(jv, i) {
                return i.rank - jv.rank || jv.styleId - i.styleId
            });
            var jt = this._drawEachTypeOfLabels(jm, jq, ju, jk, ji, jl, jr);
            ju = jt.curStyleId;
            jk = jt.curX;
            ji = jt.curY;
            jl = jt.curLineHeight;
            var T = this._copyToNewCanvas(e, ji);
            return T
        },
        _updateIndoorLabelsCoords: function(jl, jm) {
            for (var jk in jl) {
                if (jk === "tileInfo") {
                    continue
                }
                var e = jl[jk];
                var jg = e.defaultFloor;
                var jh = e.floors;
                for (var ji = 0; ji < jh.length; ji++) {
                    if (ji === jg) {
                        continue
                    }
                    var T = jh[ji];
                    if (!T.pois) {
                        continue
                    }
                    var jf = T.pois;
                    for (var je = 0; je < jf.length; je++) {
                        var jj = jf[je];
                        if (jj.name && (!jj.textSize || jj.textSize.length === 0)) {
                            jf.splice(je, 1);
                            je--;
                            continue
                        }
                        this._updateFixedLabelCoords(jj, jm);
                        this._addFixedLabelBounds(jj)
                    }
                }
            }
        },
        _generateEachLabelCanvas: function(jh, jg, ji, e, jk, T) {
            jg = Math.min(jg, this._drawingCanvasHeight);
            var jj = this._copyToNewCanvas(jh, jg);
            var je = null;
            if (T.renderData.indoorData) {
                je = this._drawIndoorTextLabelOnCanvas(T.renderData.indoorData);
                if (je) {
                    this._updateIndoorLabelsCoords(T.renderData.indoorData, je.height)
                }
            }
            for (var jf = 0; jf < ji.length; jf++) {
                if (!ji[jf].textSize) {
                    continue
                }
                this._updateFixedLabelCoords(ji[jf], jg);
                this._addFixedLabelBounds(ji[jf])
            }
            for (var jf = 0; jf < jk.length; jf++) {
                if (!jk[jf].textSize) {
                    continue
                }
                this._updateFixedLabelCoords(jk[jf], jg);
                this._addFixedLabelBounds(jk[jf])
            }
            for (var jf = 0; jf < e.length; jf++) {
                this._updateLineLabelCoords(e[jf], jg)
            }
            return [jj, je]
        },
        _copyToNewCanvas: function(T, i) {
            if (i === 0) {
                return null
            }
            var je = bL("canvas");
            je.width = T.width;
            je.height = i;
            var e = je.getContext("2d");
            e.drawImage(T, 0, 0, 512, i, 0, 0, 512, i);
            je._id = T._id;
            T._free = true;
            return je
        },
        _drawEachText: function(jw, ji, T, jy, jx, jF, jf) {
            var jE = ji.name;
            var jn = ji.styleText ? ji.styleText[0] : ji.style;
            if (!jn) {
                return null
            }
            var jq = jn.fontSize;
            var jJ = jn.fontWeight;
            var jW = jn.haloSize || 0;
            if (!jr) {}
            if (jn.fontRgba) {
                var j2 = jn.fontRgba[3] / 255;
                var jm = [];
                jm[3] = j2;
                for (var j1 = 0; j1 < 3; j1++) {
                    jm[j1] = jn.fontRgba[j1]
                }
            }
            if (jn.haloRgba) {
                var j2 = jn.haloRgba[3] / 255;
                var jt = [];
                jt[3] = j2;
                for (var j1 = 0; j1 < 3; j1++) {
                    jt[j1] = jn.haloRgba[j1]
                }
            }
            var jQ = jm ? "rgba(" + jm.join(",") + ")" : jn.color;
            var jh = jt ? "rgba(" + jt.join(",") + ")" : jn.strokeColor;
            var jY = ji.styleId || 0;
            if (jW > 4) {
                jW = 4
            }
            var jG = [];
            var jv = [];
            var jC = 0;
            if (jf && !jf[jY]) {
                jf[jY] = {}
            }
            var jp = jq + jW * 2;
            var jH = jp;
            if (ji.containDescendings) {
                jH += 4
            }
            if (jW === 0) {
                jH += 2
            }
            if (ji.textOnIcon) {
                jH = Math.max(jH, ji.iconSize[1])
            }
            if (jY !== T || jH > jF) {
                T = jY;
                if (jJ >= 10 && jJ % 10 === 0) {
                    jw.font = jJ * 10 + " " + jq + "px sans-serif"
                } else {
                    jw.font = jq + "px sans-serif"
                }
                if (jH > jF) {
                    var jD = jH - jF;
                    jF += jD;
                    jx += jD
                }
                if (jW > 0) {
                    jw.lineWidth = jW * 2;
                    jw.strokeStyle = jh
                }
                jw.fillStyle = jQ
            }
            if (ji.type === "line") {
                var jk = jE.split("");
                for (var jZ = 0; jZ < jk.length; jZ++) {
                    var jS = jk[jZ];
                    var jz;
                    var jK;
                    if (jf[jY][jS]) {
                        var jr = jf[jY][jS];
                        jz = jr.displaySize;
                        jK = jr.curWordPosition
                    } else {
                        var je = Math.ceil(jw.measureText(jS).width);
                        if (jy + je > 512) {
                            jy = 0;
                            jx += jH;
                            jF = jH
                        }
                        if (jx > this._drawingCanvasHeight) {
                            return {
                                curX: jy,
                                curY: jx,
                                curLineHeight: jF,
                                styleId: jY
                            }
                        }
                        var jT = jy;
                        if (jW > 0) {
                            je += jW;
                            jT -= Math.round(jW / 2);
                            jw.strokeText(jS, jy, jx)
                        }
                        jw.fillText(jS, jy, jx);
                        var jP = [je, jH];
                        jz = [Math.round(jP[0] / 2), Math.round(jP[1] / 2)];
                        jK = [jT, jx - jH];
                        jf[jY][jS] = {
                            displaySize: jz,
                            curWordPosition: jK,
                            totalHeight: jC
                        };
                        jy += je + 2
                    }
                    jG.push(jz);
                    jv.push(jK)
                }
                jC = Math.round(jG[0][1])
            } else {
                if (jf[jY][jE]) {
                    var jr = jf[jY][jE];
                    jG = jr.textSize;
                    jv = jr.labelImagePosition;
                    jC = jr.totalHeight
                } else {
                    var js = jE.split("\\");
                    if (js.length > 1 && ji.textOnIcon) {
                        var j0 = 0;
                        var jX = 0;
                        var j3 = [];
                        var jA = 8;
                        for (var jZ = 0; jZ < js.length; jZ++) {
                            var jE = js[jZ];
                            var jo = Math.ceil(jw.measureText(jE).width);
                            if (jo > j0) {
                                j0 = jo
                            }
                            j3.push(Math.round(jo / 2));
                            jX += jH
                        }
                        var jl = j0 + 2 * jA;
                        var jV = jX + 2 * jA;
                        if (jy + jl > 512) {
                            jy = 0;
                            jx += jF
                        }
                        jx += jX - jH + 2 * jA;
                        var jO = jy;
                        var jB = jx - jV;
                        var e = Math.round(jl / 2);
                        var ju = this._iconCache[ji.icon].image;
                        this.drawStretchedIcon(jw, ju, [jO, jB], jA, j0, jX);
                        for (var jZ = 0; jZ < js.length; jZ++) {
                            var jE = js[jZ];
                            var jU = jO + (e - j3[jZ]);
                            var jR = jB + 4 + (jZ + 1) * jH;
                            jw.fillText(jE, jU, jR)
                        }
                        jG.push([Math.round(jl / 2), Math.round(jV / 2)]);
                        jv.push([jO, jB]);
                        jy += jl;
                        jF = jV;
                        jC = Math.round(jV / 2)
                    } else {
                        for (var jZ = 0; jZ < js.length; jZ++) {
                            var jE = js[jZ];
                            var jo = Math.ceil(jw.measureText(jE).width);
                            var jl = jo;
                            var jg = 0;
                            if (ji.textOnIcon) {
                                jg = 10;
                                jl += jg * 2;
                                if (ji.styleId === 519) {
                                    jl = ji.iconSize[0];
                                    jg = Math.round((jl - jo) / 2)
                                }
                            }
                            if (jy + jl > 512) {
                                jy = 0;
                                jx += jH;
                                jF = jH
                            }
                            if (jx > this._drawingCanvasHeight) {
                                return {
                                    curX: jy,
                                    curY: jx,
                                    curLineHeight: jF,
                                    styleId: jY
                                }
                            }
                            var jO = jy;
                            var jB = jx - jH;
                            var jN = jy;
                            var jM = jx;
                            if (ji.containDescendings) {
                                jM -= 4
                            }
                            if (ji.textOnIcon) {
                                var jI = false;
                                var ju = this._iconCache[ji.icon].image;
                                var jL = ji.iconSize.concat([]);
                                if (jp > jL[1]) {
                                    jL[1] = jp;
                                    jI = true
                                }
                                if (jo > jL[0]) {
                                    jL[0] = jo;
                                    jI = true
                                }
                                if (ji.styleId === 519) {
                                    jw.drawImage(ju, 0, 0, jL[0], jL[1], jO, jB, jL[0], jL[1])
                                } else {
                                    if (jI) {
                                        this.drawStretchedIcon(jw, ju, [jO, jB], jg, jo, jL[1])
                                    } else {
                                        this.draw3StretchedIcon(jw, ju, [jO, jB], jg, jo, jL[1])
                                    }
                                }
                                jN += jg;
                                if (ji.iconSize[1] > jp) {
                                    jM -= (ji.iconSize[1] - jp) / 2 - 1
                                }
                                jl += 1
                            }
                            if (jW > 0) {
                                jl += jW;
                                jO -= Math.round(jW / 2);
                                jB += Math.round(jW / 2);
                                if (jY === 71028) {
                                    jH -= 2
                                }
                                if (jY === 32) {
                                    jH -= 2
                                }
                                jw.strokeText(jE, jN, jM)
                            }
                            jw.fillText(jE, jN, jM);
                            var jj = [jl, jH];
                            var jz = [Math.round(jj[0] / 2), Math.round(jj[1] / 2)];
                            jG.push(jz);
                            jv.push([jO, jB]);
                            jC += Math.round(jz[1]);
                            jy += jl
                        }
                    }
                    jf[jY][jE] = {
                        textSize: jG,
                        labelImagePosition: jv,
                        totalHeight: jC
                    }
                }
            }
            ji.textSize = jG;
            ji.labelImagePosition = jv;
            ji.totalHeight = jC;
            return {
                curX: jy,
                curY: jx,
                curLineHeight: jF,
                styleId: jY
            }
        },
        drawStretchedIcon: function(e, T, je, jh, ji, i) {
            var jg = je[0];
            var jf = je[1];
            e.drawImage(T, 0, 0, jh, jh, jg, jf, jh, jh);
            e.drawImage(T, jh, 0, 1, jh, jg + jh, jf, ji, jh);
            e.drawImage(T, T.width - jh, 0, jh, jh, jg + ji + jh, jf, jh, jh);
            e.drawImage(T, 0, jh, jh, 1, jg, jf + jh, jh, i);
            e.drawImage(T, jh, jh, 1, 1, jg + jh, jf + jh, ji, i);
            e.drawImage(T, T.width - jh, jh, jh, 1, jg + ji + jh, jf + jh, jh, i);
            e.drawImage(T, 0, T.height - jh, jh, jh, jg, jf + i + jh, jh, jh);
            e.drawImage(T, jh, T.height - jh, 1, jh, jg + jh, jf + i + jh, ji, jh);
            e.drawImage(T, T.width - jh, T.height - jh, jh, jh, jg + ji + jh, jf + i + jh, jh, jh)
        },
        draw3StretchedIcon: function(e, i, T, jg, ji, jh) {
            var jf = T[0];
            var je = T[1];
            e.drawImage(i, 0, 0, jg, i.height, jf, je, jg, i.height);
            e.drawImage(i, jg, 0, 1, i.height, jf + jg, je, ji, i.height);
            e.drawImage(i, i.width - jg, 0, jg, i.height, jf + jg + ji, je, jg, i.height)
        },
        _updateFixedLabelCoords: function(jf, ju) {
            if (ju === 0) {
                return
            }
            var jp = [];
            var jB = [];
            var jC = 0;
            var js = jf.totalHeight;
            var jK = jf.textSize.length;
            var jg = jf.direction;
            if (typeof jg !== "number") {
                jg = 0
            }
            for (var jD = 0; jD < jK; jD++) {
                var jv = jf.labelImagePosition[jD];
                var jt = jf.textSize[jD];
                var jr = jv[0];
                var je = jv[1];
                var jh = jt[0];
                var jm = jt[1];
                var jo = 0;
                var jA = 0;
                if (typeof jf.textMargin === "number") {
                    jA = jf.textMargin
                }
                var jn;
                var e;
                var jj = 0;
                var jq = 0;
                if (!jf.iconPos) {
                    if (!jf.custom) {
                        jg = ic
                    }
                } else {
                    jj = jf.iconPos.width;
                    jq = jf.iconPos.height
                }
                switch (jg) {
                case fW:
                    var T = js / 2 - jm + jo * (jK - 1) / 2;
                    jn = Math.round(-jj / 2 - jh - jA);
                    e = Math.round(T - jC - jo * jD);
                    break;
                case dX:
                    var T = js / 2 - jm + jo * (jK - 1) / 2;
                    jn = Math.round(jj / 2 + jA);
                    e = Math.round(T - jC - jo * jD);
                    break;
                case H:
                    var T = jq / 2 + js - jm + jo * jK;
                    jn = Math.round(-jh / 2);
                    e = Math.round(T - jC - jo * jD);
                    break;
                case gM:
                    var T = -jq / 2 - jo - jm;
                    jn = Math.round(-jh / 2);
                    e = Math.round(T - jC - jo * jD);
                    break;
                case ic:
                    var T = -js / 2 - jo * (jK - 1) / 2;
                    jn = Math.round(-jh / 2);
                    e = Math.round(T - jC - jo * jD);
                    break
                }
                jC += jm;
                var jl = jn + jh;
                var jL = e;
                var jk = jl;
                var jJ = jL + jm;
                var ji = jn;
                var jI = jJ;
                jp.push(jn, e, jl, jL, jk, jJ, jn, e, jk, jJ, ji, jI);
                var jH = jr / 512;
                var jz = (ju - je - jm * 2) / ju;
                var jG = (jr + jh * 2) / 512;
                var jy = jz;
                var jF = jG;
                var jx = (ju - je) / ju;
                var jE = jH;
                var jw = jx;
                jB.push(jH, jz, jG, jy, jF, jx, jH, jz, jF, jx, jE, jw)
            }
            if (!jf.textPos) {
                jf.textPos = {}
            }
            jf.textPos.vertex = jp;
            jf.textPos.texcoord = jB
        },
        _addFixedLabelBounds: function(jk) {
            var jg = 1000;
            var je = 1000;
            var T = -1000;
            var e = -1000;
            if (jk.iconPos) {
                var ji = jk.iconPos["vertex"];
                for (var jj = 0, jf = ji.length; jj < jf; jj += 2) {
                    var jo = ji[jj];
                    var jm = ji[jj + 1];
                    if (jo < jg) {
                        jg = jo
                    }
                    if (jo > T) {
                        T = jo
                    }
                    if (jm < je) {
                        je = jm
                    }
                    if (jm > e) {
                        e = jm
                    }
                }
            }
            if (jk.custom && jk.style.iconSize && !jk.name) {
                var jl = jk.style.iconSize;
                var jn = jk.direction;
                switch (jn) {
                case ic:
                    jg = -Math.round(jl[0] / 2);
                    je = -Math.round(jl[1] / 2);
                    T = Math.round(jl[0] / 2);
                    e = Math.round(jl[1] / 2);
                    break;
                case H:
                    jg = -Math.round(jl[0] / 2);
                    je = 0;
                    T = Math.round(jl[0] / 2);
                    e = jl[1];
                    break
                }
            }
            if (jk.textPos) {
                var jh = jk.textPos["vertex"];
                for (var jj = 0, jf = jh.length; jj < jf; jj += 2) {
                    var jo = jh[jj];
                    var jm = jh[jj + 1];
                    if (jo < jg) {
                        jg = jo
                    }
                    if (jo > T) {
                        T = jo
                    }
                    if (jm < je) {
                        je = jm
                    }
                    if (jm > e) {
                        e = jm
                    }
                }
            }
            jk.bds = [jg, je, T, e]
        },
        _updateLineLabelCoords: function(jv, jl) {
            if (jl === 0) {
                return
            }
            var je = jv.wordsInfo;
            var js = jv.wordCount;
            if (!jv.labelImagePosition) {
                return
            }
            var jn = jv.labelImagePosition.slice(0);
            if (jv.reverse) {
                jn.reverse()
            }
            var jE = 1000;
            var jB = 1000;
            var jC = -1000;
            var jA = -1000;
            for (var jw = 0; jw < js; jw++) {
                var jF = jn[jw];
                var jD = jF[0];
                var jt = jF[1];
                var jr = jv.textSize[jw];
                var jk = jr[0];
                var e = jr[1];
                var jj = jD / 512;
                var jq = (jl - jt - e * 2) / jl;
                var jh = (jD + jk * 2) / 512;
                var jp = jq;
                var jf = jh;
                var jo = (jl - jt) / jl;
                var T = jj;
                var jm = jo;
                je[jw].size = [jk, e];
                je[jw].texcoord = [jj, jq, jh, jp, jf, jo, jj, jq, jf, jo, T, jm];
                var jz = je[jw].offset[0];
                var jy = je[jw].offset[1];
                var jx = jz - jk / 2;
                var ji = jy + e / 2;
                var jg = jy - e / 2;
                var ju = jz + jk / 2;
                if (jx < jE) {
                    jE = jx
                }
                if (ju > jC) {
                    jC = ju
                }
                if (jg < jB) {
                    jB = jg
                }
                if (ji > jA) {
                    jA = ji
                }
            }
            jv.bds = [jE, jB, jC, jA]
        }
    });
    var fs = {
        0: "00000000",
        16: "00010000",
        32: "00100000",
        48: "00110000",
        64: "01000000",
        96: "01100000"
    };
    function dP(T, je, jf) {
        var e = T.bds;
        if (!e) {
            return false
        }
        var i = T.tracer;
        var ji;
        if (i) {
            if (!fs[i]) {
                ji = i.toString(2);
                if (ji.length < 8) {
                    ji = new Array(8 - ji.length + 1).join("0") + ji
                }
                fs[i] = ji
            }
            ji = fs[i];
            var jh = i9.mapZoomStartZoomMapping[je];
            return ji[je - jh] === "1"
        }
        var jg = T.displayRange;
        if (jf >= jg[0] && jf <= jg[1]) {
            return true
        }
        return false
    }
    function ii(i, e) {
        this.map = i.map;
        this.layer = i;
        e = e || [];
        this.allLabels = [];
        this._spotData = [];
        this._strategyInfo = null;
        this.RANK1 = 1000000;
        this.RANK2 = 2000000;
        this.RANK3 = 3000000;
        this.RANK4 = 4000000;
        this.RANK5 = 5000000;
        this._ratio = fD();
        this._useRound = true;
        this._sharpenRender = false;
        if (this._ratio > g0.HIGH_RES_MIN_RATIO) {
            this._useRound = false;
            this._sharpenRender = true
        }
        this._mapIsMoving = false;
        this._onMapIdleCallback = e.onMapIdleCallback;
        this.map.temp.isPermitSpotOver = true;
        this.currentSelectedLabel = null;
        this.map._labelProcessor = this;
        this.iconCache = {};
        this.fixedLabelData = [];
        this.lineLabelData = [];
        this.highlightLabelData = [];
        this._iconLoadTimer = null;
        this._labelTextCanvas = null;
        if (this.map.config.textRenderType === "canvas") {
            this._labelTextCanvas = this.map.tileMgr.getLabelTextCanvas()
        }
        this.bind()
    }
    ev.extend(ii.prototype, {
        bind: function() {
            var T = this.map;
            var i = this;
            T.addEventListener("mapstatusbusy_inner", function(je) {
                i._mapIsMoving = true;
                if (i._ratio > g0.HIGH_RES_MIN_RATIO) {
                    i._sharpenRender = false
                } else {
                    i._useRound = false
                }
            });
            T.addEventListener("mapstatusidle_inner", function(je) {
                if (i._ratio > g0.HIGH_RES_MIN_RATIO) {
                    i._sharpenRender = true
                } else {
                    i._useRound = true
                }
                i._mapIsMoving = false
            });
            T.addEventListener("onspotmouseover", function(jg) {
                if (!this.temp.isPermitSpotOver) {
                    return
                }
                if (jg.spots.length > 0) {
                    var jf = jg.spots[0].userdata.uid;
                    var jh = jg.spots[0].userdata.tilePosStr;
                    var je = i.getLabelByUid(jf, jh);
                    je && je.formatedData && i._toHighlightColor(je.formatedData)
                }
            });
            T.addEventListener("onspotmouseout", function(jg) {
                if (!this.temp.isPermitSpotOver) {
                    return
                }
                if (jg.spots.length > 0) {
                    var jf = jg.spots[0].userdata.uid;
                    var jh = jg.spots[0].userdata.tilePosStr;
                    var je = i.getLabelByUid(jf, jh);
                    je && je.formatedData && i._toDefaultColor(je.formatedData)
                }
            });
            T.addEventListener("spotclick", function(jg) {
                if (jg.spots && jg.spots.length > 0) {
                    if (jg.spots[0].userdata.zoom < 10) {
                        return
                    }
                    var jf = jg.spots[0].userdata.uid;
                    var jh = jg.spots[0].userdata.tilePosStr;
                    if (i.currentSelectedLabel && (i.currentSelectedLabel.uid !== jf || i.currentSelectedLabel.tilePosStr !== jh)) {
                        i._recoverNormalState()
                    }
                    var je = i.getLabelByUid(jf, jh);
                    je && i._changeBaseMapState(je)
                } else {
                    i._recoverNormalState()
                }
            });
            T.on("spot_status_reset", function() {
                i._recoverNormalState()
            });
            T.on("spot_highlight", function(jf) {
                var je = i.getLabelByUid(jf.uid, jf.tilePosStr);
                je && je.formatedData && i._toHighlightColor(je.formatedData)
            });
            T.addEventListener("mousemove", function(je) {
                if (i.curSpotAdded) {
                    return
                }
                if (this.currentOperation !== dL.idle || i._mapIsMoving === true) {
                    return
                }
                i._refreshSpotData();
                this.temp.isPermitSpotOver = true;
                i.curSpotAdded = true
            });
            if (bK()) {
                function e() {
                    i._refreshSpotData()
                }
                T.addEventListener("mapstatusidle_inner", e)
            }
            T.on("style_loaded", function() {
                if (i.map.config.textRenderType === "canvas" && !i._labelTextCanvas) {
                    i._labelTextCanvas = i.map.tileMgr.getLabelTextCanvas()
                }
            })
        },
        getLabelByUid: function(ji, jj) {
            var e = this.map._featureMgr.getResult().tileLabels;
            for (var jh = 0; jh < e.length; jh++) {
                var je = e[jh].fixedLabel;
                for (var jg = 0; jg < je.length; jg++) {
                    if (e[jh].fixedLabel[jg].guid === ji && e[jh].fixedLabel[jg].tilePosStr === jj) {
                        return e[jh].fixedLabel[jg]
                    }
                }
                var jf = e[jh].indoorLabel;
                for (var T = 0; T < jf.length; T++) {
                    if (e[jh].indoorLabel[T].guid === ji && e[jh].indoorLabel[T].tilePosStr === jj) {
                        return e[jh].indoorLabel[T]
                    }
                }
            }
            return null
        },
        getTileByLabelUid: function(ji) {
            var e = this.map._featureMgr.getResult().tileLabels;
            for (var jh = 0; jh < e.length; jh++) {
                var je = e[jh].fixedLabel;
                for (var jg = 0; jg < je.length; jg++) {
                    if (e[jh].fixedLabel[jg].guid === ji) {
                        return e[jh]
                    }
                }
                var jf = e[jh].indoorLabel;
                for (var T = 0; T < jf.length; T++) {
                    if (e[jh].indoorLabel[T].guid === ji) {
                        return e[jh]
                    }
                }
            }
            return null
        },
        _toHighlightColor: function(T) {
            if (T.tempRank && T.tempRank === this.RANK5) {
                return
            }
            var e = this.map._featureMgr.getResult().eleData[4] || [];
            var jf = false;
            for (var je = 0; je < e.length; je++) {
                if (e[je] === T || (e[je].guid === T.guid && e[je].tilePosStr === T.tilePosStr && e[je].zoom === T.zoom)) {
                    jf = true;
                    break
                }
            }
            if (jf) {
                return
            }
            e.push(T);
            this.map._featureMgr.setOverlayData(e, 4);
            this.map.dispatchEvent(new fa("onrefresh"))
        },
        _toDefaultColor: function(T) {
            if (T.tempRank && T.tempRank === this.RANK5) {
                return
            }
            var e = this.map._featureMgr.getResult().eleData[4] || [];
            for (var je = 0; je < e.length; je++) {
                if (T === e[je] || (T.guid === e[je].guid && T.tilePosStr === e[je].tilePosStr && T.zoom === e[je].zoom)) {
                    e.splice(je, 1);
                    break
                }
            }
            this.map._featureMgr.setOverlayData(e, 4);
            this.map.dispatchEvent(new fa("onrefresh"))
        },
        _changeBaseMapState: function(i) {
            var jf = i.guid;
            var jj = i.formatedData.guidExt;
            var jk = {
                guid: jf,
                tilePosStr: i.tilePosStr,
                guidExt: jj
            };
            this._strategyInfo = jk;
            this.currentSelectedLabel = i;
            var je = this.map._featureMgr;
            var e = je.getLabelData();
            e = this.collisionTest(e);
            this.updateLabels(e);
            var jl = this.fixDataFormat(e);
            je.setOverlayData(jl[0], 2);
            je.setOverlayData(jl[1], 3);
            je.setOverlayData(jl[2], 4);
            var T = this.getTileByLabelUid(jf);
            this.currentSelectedLabel.tileInfo = T.tileInfo;
            var ji = this.layer.tileCache.getAllData();
            for (var jh in ji) {
                var jg = ji[jh].data;
                if (!jg.label) {
                    continue
                }
                this.clearCollisionCache(jg.label)
            }
            this.map.dispatchEvent(new fa("onrefresh"))
        },
        _recoverNormalState: function() {
            this._strategyInfo = null;
            var ji = false;
            var jg = this.map._featureMgr.getLabelData();
            if (this.currentSelectedLabel) {
                var T = this.currentSelectedLabel.guid;
                this.clearCollisionCache(this.getTileByLabelUid(T));
                var jf = this.layer.tileCache.getAllData();
                for (var je in jf) {
                    if (Object.prototype.hasOwnProperty.call(jf, je)) {
                        var jh = jf[je].data;
                        if (!jh.label) {
                            continue
                        }
                        this.clearCollisionCache(jh.label)
                    }
                }
                this.currentSelectedLabel.tempRank = null;
                this.currentSelectedLabel = null;
                ji = true
            }
            jg = this.collisionTest(jg);
            this.updateLabels(jg);
            var e = this.fixDataFormat(jg);
            var i = this.map._featureMgr;
            i.setOverlayData(e[0], 2);
            i.setOverlayData(e[1], 3);
            i.setOverlayData([], 4);
            this.map.dispatchEvent(new fa("onrefresh"));
            if (ji) {
                this.curSpotAdded = false;
                this._refreshSpotData()
            }
        },
        loadIconImages: function(jf, jr, jl) {
            var ji = jf.label;
            var jg = jf.tileInfo.style;
            var T = ji.fixedLabel;
            if (jl === "indoor") {
                T = []
            }
            var jo = ji.indoorLabel;
            var js = T.length + jo.length;
            var jk = this;
            var je = 0;
            var jq = 200;
            for (var jh = 0; jh < js; jh++) {
                var jj;
                if (jh < T.length) {
                    jj = T[jh]
                } else {
                    jj = jo[jh - T.length]
                }
                if (!jj.iconPos) {
                    continue
                }
                var jn = jj.iconPos.iconType;
                var jp = jg + "_" + jn;
                je++;
                if (this.iconCache[jp]) {
                    if (this.iconCache[jp].loaded) {
                        jr(jf)
                    }
                    continue
                }
                if (!jl || jl === "indoor") {
                    var e = w.getIconSetPath(this.map.config.style) + jn + ".png"
                } else {
                    var e = jn
                }
                var jm = new Image();
                jm.id = jp;
                jm.iconUrl = e;
                jm.crossOrigin = "anonymous";
                jm.onload = function() {
                    jk.iconCache[this.id].loaded = true;
                    jk._addToIconTexture(this);
                    if (jk._iconLoadTimer === null) {
                        jk._iconLoadTimer = setTimeout(function() {
                            jr();
                            jk._iconLoadTimer = null
                        }, jq)
                    }
                    this.onload = null
                }
                ;
                jm.onerror = function() {
                    if (!jk._iconLoadTimer) {
                        jk._iconLoadTimer = setTimeout(function() {
                            jr();
                            jk._iconLoadTimer = null
                        }, jq)
                    }
                    jk.iconCache[this.id] = null;
                    this.onerror = null;
                    bp.fetchDebug && bp.fetchDebug.sendError({
                        title: this.iconUrl,
                        msg: this.iconUrl,
                        category: bp.fetchDebug.category.RESOURCE,
                        level: bp.fetchDebug.levels.ERROR,
                        url: this.iconUrl
                    })
                }
                ;
                jm.src = e;
                this.iconCache[jp] = {
                    loaded: false,
                    image: jm
                }
            }
            return je
        },
        _addToIconTexture: function(jg) {
            if (!this.map._webglMapScene) {
                return
            }
            var ji = this.map._webglMapScene._painter;
            var e = ji._iconTextureAtlas.addTexture(jg);
            ji._iconTextureAtlasOffset[jg.id] = e;
            var jl = 0 * jg.width / 1024 + e.width;
            var jf = 0 * jg.height / 1024 + e.height;
            var jk = jg.width / 1024 + e.width;
            var je = jf;
            var jj = jk;
            var T = jg.height / 1024 + e.height;
            var jh = jl;
            var i = T;
            ji._iconTextureAtlasCoords[jg.id] = [jl, jf, jk, je, jj, T, jl, jf, jj, T, jh, i]
        },
        loadImgByStr: function(je, jf, jg) {
            if (!je && !jf) {
                jg && jg(null, null);
                return
            }
            if (typeof je === "object" && typeof jf === "object") {
                jg(je, jf);
                return
            }
            var i = 0;
            var T = null;
            var e = null;
            if (je) {
                i++;
                T = new Image();
                T.onload = function() {
                    i--;
                    if (i === 0) {
                        jg && jg(this, e)
                    }
                    this.onload = null
                }
                ;
                T.src = je
            }
            if (jf) {
                i++;
                e = new Image();
                e.onload = function() {
                    i--;
                    if (i === 0) {
                        jg && jg(T, this)
                    }
                    this.onload = null
                }
                ;
                e.src = jf
            }
        },
        collisionTest: function(ju, kk, jP) {
            if (this.map.viewAnimationTime) {
                return []
            }
            if (!ju) {
                return []
            }
            var jF = this.map;
            var jY = jF.getHeading();
            jY = this.calcLoopHeading(jY);
            var ka = jF.height;
            var j6 = this.allLabels;
            j6.length = 0;
            ju.sort(function(j1, i) {
                var kn = j1.tileInfo;
                var j2 = i.tileInfo;
                if (kn.col * kn.row < j2.col * j2.row) {
                    return -1
                } else {
                    return 1
                }
            });
            var jG = jF.getTilt();
            var jw = jF.getZoom();
            var j5;
            if (jP) {
                j5 = jP
            } else {
                j5 = this.getZoomStep()
            }
            for (var kg = 0, kb = ju.length; kg < kb; kg++) {
                var jK = ju[kg];
                var js = jK.tileInfo;
                var jm = js.zoom;
                var j4 = js.loopOffsetX / Math.pow(2, 18 - jm);
                if (!jY && !jG) {
                    if (jK.unnecessaryCollisionTest && jK.unnecessaryCollisionTest[jP]) {
                        continue
                    }
                }
                var jU = jK.fixedLabel || [];
                for (var ke = 0, jM = jU.length; ke < jM; ke++) {
                    var jp = jU[ke];
                    jp.zoom = jm;
                    if (kk === -1 && jp.isDel) {
                        continue
                    }
                    if (!dP(jp, js.useZoom, jw)) {
                        jp.isDel = true;
                        continue
                    }
                    this.calcCollisionBounds(jp, j5, j4, ka);
                    j6.push(jp)
                }
                var jS = jK.indoorLabel || [];
                for (var kc = 0, jh = jS.length; kc < jh; kc++) {
                    var jH = jS[kc];
                    jH.zoom = jm;
                    if (kk === -1 && jH.isDel) {
                        continue
                    }
                    if (!dP(jH, js.useZoom)) {
                        jH.isDel = true;
                        continue
                    }
                    this.calcCollisionBounds(jH, j5, j4, ka);
                    j6.push(jH)
                }
                var jr = jK.lineLabel || [];
                for (var kh = 0, jA = jr.length; kh < jA; kh++) {
                    var je = jr[kh];
                    if (kk === -1 && je.isDel) {
                        continue
                    }
                    if (!dP(je, js.useZoom)) {
                        je.isDel = true;
                        continue
                    }
                    var km = je.pt;
                    var jO = jF.pointToPixelIn(km, {
                        zoom: j5,
                        useRound: this._useRound
                    });
                    var jL = jO.x + j4;
                    var jJ = ka - jO.y;
                    var jR = je.bds;
                    var j9 = jR[0];
                    var j7 = jR[1];
                    var jD = jR[2];
                    var jC = jR[3];
                    var jZ = j9;
                    var jX = j7;
                    var jz = jD;
                    var jy = jC;
                    if ((jY >= 0 && jY < 45) || (jY >= 315 && jY < 360)) {
                        jZ = j9;
                        jX = j7;
                        jz = jD;
                        jy = jC
                    } else {
                        if (jY >= 45 && jY < 135) {
                            jZ = j7;
                            jX = -jD;
                            jz = jC;
                            jy = -j9
                        } else {
                            if (jY >= 135 && jY < 225) {
                                jZ = -jD;
                                jX = -jC;
                                jz = -j9;
                                jy = -j7
                            } else {
                                if (jY >= 225 && jY < 315) {
                                    jZ = -jC;
                                    jX = j9;
                                    jz = -j7;
                                    jy = jD
                                }
                            }
                        }
                    }
                    je._tempBds = [jL + jZ, jJ + jX, jL + jz, jJ + jy];
                    var jt = jF.pixelToPointIn(new eO(je._tempBds[0],jO.y + jX), {
                        zoom: j5
                    });
                    var jg = jF.pixelToPointIn(new eO(je._tempBds[2],jO.y + jy), {
                        zoom: j5
                    });
                    je._mcBds = [jt, jg];
                    j6.push(je)
                }
            }
            var j3 = this._strategyInfo;
            if (j3) {
                var jx = j3.guid;
                var jI = j3.guidExt;
                var jf = false;
                for (var jN = 0, jq = j6.length; jN < jq; jN++) {
                    var j8 = j6[jN];
                    delete j8.tempRank;
                    if (!this.layer.isClickableLabel(j8) || (jI === 1 && !j8.guidExt)) {
                        continue
                    }
                    if (jx === j8.guid && j3.tilePosStr === j8.tilePosStr) {
                        j8.tempRank = this.RANK5;
                        jf = true
                    }
                }
                if (!jf && this.currentSelectedLabel) {
                    this.currentSelectedLabel.tempRank = this.RANK5;
                    var jQ = this.currentSelectedLabel.tileInfo;
                    var T = jQ.zoom;
                    var j0 = jQ.loopOffsetX / Math.pow(2, 18 - T);
                    this.calcCollisionBounds(this.currentSelectedLabel, j5, j0, ka);
                    j6.push(this.currentSelectedLabel)
                }
            } else {
                for (var jB = 0, jo = j6.length; jB < jo; jB++) {
                    var kl = j6[jB];
                    if (kl.type === "line" || !kl.iconPos) {
                        continue
                    }
                    delete kl.tempRank
                }
            }
            j6.sort(function(j2, j1) {
                var kn = j2.tempRank ? j2.tempRank : j2.rank;
                var i = j1.tempRank ? j1.tempRank : j1.rank;
                return i - kn || j2.startZoom - j1.startZoom || j1.pt.lng - j2.pt.lng || j1.pt.lat - j2.pt.lat
            });
            var ji = 0;
            if (jG > 0) {
                ji = 6
            }
            jw = jF.getZoom();
            if (jw >= 8 && jw < 9) {
                jw < 8.5 ? (ji = 6) : (ji = 3)
            }
            if (jF._displayOptions.labelMargin > 0) {
                ji = jF._displayOptions.labelMargin
            }
            var e = 2;
            if (jw < 6 && jw >= 5) {
                e = -1
            }
            for (var jn = 0, jl = j6.length; jn < jl; jn++) {
                var jW = j6[jn];
                var jv = jW._tempBds;
                jW.isDel = false;
                jW._intersectIdx = [];
                for (var kf = jn + 1; kf < jl; kf++) {
                    var jE = j6[kf];
                    var kj = jE._tempBds;
                    if (!(jv[2] + ji + e < kj[0] - ji || jv[0] - ji > kj[2] + ji + e || jv[3] + ji + e < kj[1] - ji || jv[1] - ji > kj[3] + ji + e)) {
                        jW._intersectIdx.push(kf)
                    }
                }
            }
            for (var jk = 0, jj = j6.length; jk < jj; jk++) {
                var ki = j6[jk];
                if (ki.isDel === false) {
                    var jV = ki._intersectIdx;
                    for (var kd = 0, jT = jV.length; kd < jT; kd++) {
                        j6[jV[kd]].isDel = true
                    }
                }
            }
            return ju
        },
        calcCollisionBounds: function(jk, ji, i, jj) {
            var jg = jk.ptFix || jk.pt;
            var je = this.map;
            var jf = je.pointToPixelIn(jg, {
                zoom: ji,
                useRound: this._useRound
            });
            var T = jf.x + i;
            var jm = jj - jf.y;
            var e = jk.bds;
            jk._tempBds = [T + e[0], jm + e[1], T + e[2], jm + e[3]];
            var jh = je.pixelToPointIn(new eO(jk._tempBds[0],jf.y + e[1]), {
                zoom: ji
            });
            var jl = je.pixelToPointIn(new eO(jk._tempBds[2],jf.y + e[3]), {
                zoom: ji
            });
            jk._mcBds = [jh, jl]
        },
        getZoomStep: function() {
            var T = this.map.getZoom();
            var e = Math.floor(T);
            var i = T - e >= 0.5 ? e + 0.5 : e;
            return i
        },
        clearCollisionCache: function(e) {
            if (!e) {
                return
            }
            e.cacheState = null;
            e.unnecessaryCollisionTest = null
        },
        getCachedLabels: function(e) {
            e = e || [];
            var T = this.getZoomStep();
            var jg = false;
            for (var je = 0; je < e.length; je++) {
                var jf = e[je];
                if (!jf.cacheState || !jf.cacheState[T]) {
                    jg = true;
                    break
                }
                if (jf.hasNewData) {
                    jg = true;
                    break
                }
            }
            if (jg) {
                this.calcLabelsCollision(e)
            }
            return e
        },
        calcLabelsCollision: function(T) {
            var jf = this.getZoomStep();
            var jg = {};
            var jn;
            var je;
            var jp;
            var jr;
            var jq;
            var jo;
            T = this.collisionTest(T, undefined, jf);
            aO.addLabelIntoAreaSpots(T);
            for (var jk = 0; jk < T.length; jk++) {
                jn = T[jk];
                je = jn.tileInfo;
                jr = je.col + "," + je.row;
                jg[jr] = 1
            }
            var e = {};
            for (var ji = 0; ji < T.length; ji++) {
                jn = T[ji];
                if (!jn.cacheState) {
                    jn.cacheState = {}
                }
                je = jn.tileInfo;
                jq = je.col;
                jo = je.row;
                jr = jq + "," + jo;
                if (jn.cacheState[jf] === "stable") {
                    e[jr] = 1;
                    if (!jn.hasNewData) {
                        continue
                    }
                }
                for (var jj = 0; jj < jn.fixedLabel.length; jj++) {
                    jp = jn.fixedLabel[jj];
                    if (!jp.cachedIsDel) {
                        jp.cachedIsDel = {}
                    }
                    jp.cachedIsDel[jf] = jp.isDel
                }
                for (var jm = 0; jm < jn.indoorLabel.length; jm++) {
                    jp = jn.indoorLabel[jm];
                    if (!jp.cachedIsDel) {
                        jp.cachedIsDel = {}
                    }
                    jp.cachedIsDel[jf] = jp.isDel
                }
                for (var jl = 0; jl < jn.lineLabel.length; jl++) {
                    jp = jn.lineLabel[jl];
                    if (!jp.cachedIsDel) {
                        jp.cachedIsDel = {}
                    }
                    jp.cachedIsDel[jf] = jp.isDel
                }
                if (jg[(jq - 1) + "," + (jo - 1)] && jg[(jq - 1) + "," + jo] && jg[(jq - 1) + "," + (jo + 1)] && jg[jq + "," + (jo - 1)] && jg[jq + "," + (jo + 1)] && jg[(jq + 1) + "," + (jo - 1)] && jg[(jq + 1) + "," + jo] && jg[(jq + 1) + "," + (jo + 1)]) {
                    jn.cacheState[jf] = "stable";
                    e[jr] = 1
                } else {
                    if (!jn.cacheState[jf]) {
                        jn.cacheState[jf] = "unstable"
                    }
                }
            }
            for (var jh = 0; jh < T.length; jh++) {
                jn = T[jh];
                je = jn.tileInfo;
                jr = je.col + "," + je.row;
                jq = +je.col;
                jo = +je.row;
                if (e[(jq - 1) + "," + (jo - 1)] && e[(jq - 1) + "," + jo] && e[(jq - 1) + "," + (jo + 1)] && e[jq + "," + (jo - 1)] && e[jq + "," + (jo + 1)] && e[(jq + 1) + "," + (jo - 1)] && e[(jq + 1) + "," + jo] && e[(jq + 1) + "," + (jo + 1)]) {
                    if (!jn.unnecessaryCollisionTest) {
                        jn.unnecessaryCollisionTest = {}
                    }
                    jn.unnecessaryCollisionTest[jf] = 1
                }
            }
            T.hasNewData = false
        },
        updateLabels: function(jf) {
            var T = this.map;
            var jl = T.getZoom();
            var jn = T.getHeading();
            jn = this.calcLoopHeading(jn);
            var jm = T.getTilt();
            var jg = this.getZoomStep();
            for (var jk = 0, jh = jf.length; jk < jh; jk++) {
                var jj = jf[jk];
                var je = jj.tileInfo;
                var ji = je.loopOffsetX || 0;
                var e = {
                    zoom: jl,
                    mcOffsetX: ji
                };
                this.updateFixedLabel(jj.fixedLabel, jm, jn, jj, jg, e);
                e = {
                    zoom: jl,
                    mcOffsetX: 0
                };
                this.updateFixedLabel(jj.indoorLabel, jm, jn, jj, jg, e);
                this.updateLineLabel(jj.lineLabel, jm, jn, jj, jg)
            }
        },
        updateFixedLabel: function(jj, jm, i, jp, jf, jk) {
            if (jj.length === 1) {}
            var e = jk.zoom;
            var je = jk.mcOffsetX;
            var ju;
            for (var jq = 0, jh = jj.length; jq < jh; jq++) {
                var jl = jj[jq];
                if (!jl.cachedIsDel) {
                    continue
                }
                if (!jm && !i && jp.cacheState && jp.cacheState[jf]) {
                    jl.isDel = jl.cachedIsDel[jf];
                    if (typeof jl.isDel === "undefined") {
                        jl.isDel = jl.cachedIsDel[jf] = true
                    }
                }
                if (jl.startScale > e) {
                    jl.isDel = true
                }
                if (jl.isDel) {
                    continue
                }
                var js = jl.pt;
                var T = jl.iconPos;
                if (T && T.texcoord) {
                    if (!T.rtVertex) {
                        T.rtVertex = [];
                        ju = T.vertex;
                        var ji = hT(js.lng);
                        var jr = hT(js.lat);
                        T.rtVertex = [ji[0], jr[0], ji[1], jr[1], 0, ju[0], ju[1], 0, 0, T.texcoord[0], T.texcoord[1], ji[0], jr[0], ji[1], jr[1], 0, ju[2], ju[3], 0, 0, T.texcoord[2], T.texcoord[3], ji[0], jr[0], ji[1], jr[1], 0, ju[4], ju[5], 0, 0, T.texcoord[4], T.texcoord[5], ji[0], jr[0], ji[1], jr[1], 0, ju[6], ju[7], 0, 0, T.texcoord[6], T.texcoord[7], ji[0], jr[0], ji[1], jr[1], 0, ju[8], ju[9], 0, 0, T.texcoord[8], T.texcoord[9], ji[0], jr[0], ji[1], jr[1], 0, ju[10], ju[11], 0, 0, T.texcoord[10], T.texcoord[11]]
                    }
                }
                var jt = jl.textPos;
                if (jt) {
                    if (!jt.rtVertex) {
                        jt.rtVertex = [];
                        ju = jt.vertex;
                        var jg = jt.rtVertex;
                        var jo = hT(js.lng);
                        var jx = hT(js.lat);
                        var jw = hT(je);
                        for (var jn = 0, jv = ju.length; jn < jv; jn += 12) {
                            jg.push(jo[0], jx[0], jo[1], jx[1], 0, ju[jn], ju[jn + 1], jw[0], jw[1], jt.texcoord[0], jt.texcoord[1]);
                            jg.push(jo[0], jx[0], jo[1], jx[1], 0, ju[jn + 2], ju[jn + 3], jw[0], jw[1], jt.texcoord[2], jt.texcoord[3]);
                            jg.push(jo[0], jx[0], jo[1], jx[1], 0, ju[jn + 4], ju[jn + 5], jw[0], jw[1], jt.texcoord[4], jt.texcoord[5]);
                            jg.push(jo[0], jx[0], jo[1], jx[1], 0, ju[jn + 6], ju[jn + 7], jw[0], jw[1], jt.texcoord[6], jt.texcoord[7]);
                            jg.push(jo[0], jx[0], jo[1], jx[1], 0, ju[jn + 8], ju[jn + 9], jw[0], jw[1], jt.texcoord[8], jt.texcoord[9]);
                            jg.push(jo[0], jx[0], jo[1], jx[1], 0, ju[jn + 10], ju[jn + 11], jw[0], jw[1], jt.texcoord[10], jt.texcoord[11])
                        }
                    }
                }
            }
        },
        updateLineLabel: function(jj, jM, jC, jx, jy) {
            jj = jj || [];
            var js = this.map;
            var jm = js.getZoomUnits();
            for (var jL = 0, jJ = jj.length; jL < jJ; jL++) {
                var ji = jj[jL];
                if (!ji.cachedIsDel) {
                    continue
                }
                if (!jM && !jC && jx.cacheState && jx.cacheState[jy]) {
                    ji.isDel = ji.cachedIsDel[jy];
                    if (typeof ji.isDel === "undefined") {
                        ji.isDel = ji.cachedIsDel[jy] = true
                    }
                }
                if (ji.isDel) {
                    continue
                }
                if (!ji.styleText || ji.styleText.length === 0) {
                    continue
                }
                var jk = ji.mcInTile;
                var jF = jk.x;
                var jD = jk.y;
                var jw = ji.wordsInfo;
                var ju = ji.labelAngle;
                var jq = false;
                var jE = 0;
                if (jC !== 0) {
                    var jr = jw[0].angle;
                    var jI = this.calcLoopHeading(jr - jC);
                    if (jI > 45 && jI < 315) {
                        if (jI > 45 && jI <= 135) {
                            jE = 270
                        } else {
                            if (jI > 135 && jI <= 225) {
                                jE = 180
                            } else {
                                if (jI > 225 && jI < 315) {
                                    jE = 90
                                }
                            }
                        }
                        if (ju > 225 && ju <= 315 && jE <= 180) {
                            jq = true
                        } else {
                            if ((ju >= 0 && ju <= 45 || ju >= 315 && ju < 360) && jE >= 180) {
                                jq = true
                            }
                        }
                    }
                }
                for (var jK = 0, jn = jw.length; jK < jn; jK++) {
                    var jH = jw[jK];
                    var jp = jH.calcInfo;
                    var jB = jH.offset[0];
                    var jz = jH.offset[1];
                    if (!jH.size) {
                        continue
                    }
                    var e = jH.size[0];
                    var T = jH.size[1];
                    var jo = jH.angle;
                    if (!jp) {
                        jp = {}
                    }
                    if (jC !== jp.mapHeading || jm !== jp.zoomUnits) {
                        jp.mapHeading = jC;
                        jp.zoomUnits = jm;
                        if (jq) {
                            var jt = jw[jn - 1 - jK];
                            jB = jt.offset[0];
                            jz = jt.offset[1];
                            jo = jt.angle
                        }
                        var jf = jF + jB * jm;
                        var je = jD + jz * jm;
                        jp.rotationCenter = {
                            lng: jf,
                            lat: je
                        };
                        jp.calcHeading = jE;
                        jp.angle = jo;
                        jp.offsetX = jB;
                        jp.offsetY = jz;
                        jH.calcInfo = jp
                    }
                    if (!jH.rtVertex) {
                        jH.rtVertex = []
                    }
                    jH.rtVertex.length = 0;
                    var jv = jp.calcHeading + jp.angle;
                    var jg = jp.rotationCenter;
                    jB = jp.offsetX;
                    jz = jp.offsetY;
                    var jh = Math.round(jB - e / 2);
                    var jG = Math.round(jB + e / 2);
                    var jA = Math.round(jz + T / 2);
                    var jl = Math.round(jz - T / 2);
                    jH.rtVertex.push(jF, jD, jH.z, jh, jl, jg.lng, jg.lat, jv, jH.texcoord[0], jH.texcoord[1], jF, jD, jH.z, jG, jl, jg.lng, jg.lat, jv, jH.texcoord[2], jH.texcoord[3], jF, jD, jH.z, jG, jA, jg.lng, jg.lat, jv, jH.texcoord[4], jH.texcoord[5], jF, jD, jH.z, jh, jl, jg.lng, jg.lat, jv, jH.texcoord[6], jH.texcoord[7], jF, jD, jH.z, jG, jA, jg.lng, jg.lat, jv, jH.texcoord[8], jH.texcoord[9], jF, jD, jH.z, jh, jA, jg.lng, jg.lat, jv, jH.texcoord[10], jH.texcoord[11])
                }
            }
        },
        calcLoopHeading: function(e) {
            while (e >= 360) {
                e -= 360
            }
            while (e < 0) {
                e += 360
            }
            return e
        },
        fixDataFormat: function(jm) {
            var je = this.fixedLabelData;
            var e = this.lineLabelData;
            var T = this.highlightLabelData;
            var ju = 0;
            var ji = 0;
            var jr = 0;
            var js;
            if (this.currentSelectedLabel) {
                var jh = this.getLabelByUid(this.currentSelectedLabel.guid, this.currentSelectedLabel.tilePosStr);
                if (!jh || jh.isDel) {
                    je[ju] = this.currentSelectedLabel.formatedData;
                    ju++;
                    T[jr] = this.currentSelectedLabel.formatedData;
                    jr++
                }
            }
            for (var jq = 0; jq < jm.length; jq++) {
                var jk = jm[jq];
                var jj = jk.fixedLabel;
                var jf = jk.indoorLabel;
                var jp = jk.lineLabel;
                var jt = {
                    highlightLabelData: T,
                    highlightLabelDataLen: jr
                };
                js = this.fixFixedLabelDataFormat(jj, jk, je, ju, jt);
                ju = js[0];
                jr = js[1];
                js = this.fixFixedLabelDataFormat(jf, jk, je, ju, jt, true);
                ju = js[0];
                jr = js[1];
                e[ji] = {
                    tileInfo: jk.tileInfo,
                    lineLabels: []
                };
                for (var jo = 0; jo < jp.length; jo++) {
                    if (jp[jo].isDel) {
                        continue
                    }
                    var jl = jp[jo].wordsInfo;
                    if (jl) {
                        for (var jn = 0; jn < jl.length; jn++) {
                            if (!jl[jn].rtVertex) {
                                continue
                            }
                            var jg = jl[jn].formatedData;
                            if (!jg) {
                                jg = {
                                    textureSource: jk.textureSources[jp[jo].processedInZoom],
                                    textureHeight: jk.textureHeights[jp[jo].processedInZoom],
                                    renderData: {
                                        vertex: jl[jn].rtVertex,
                                        textureCoord: jl[jn].texcoord
                                    }
                                };
                                jl[jn].formatedData = jg
                            }
                            e[ji].lineLabels.push(jg)
                        }
                    }
                }
                ji++
            }
            je.length = ju;
            e.length = ji;
            T.length = jr;
            return [e, je, T]
        },
        fixFixedLabelDataFormat: function(ji, jl, jm, jj, T, jk) {
            var jg = T.highlightLabelData;
            var e = T.highlightLabelDataLen;
            for (var i = 0; i < ji.length; i++) {
                if (ji[i].isDel) {
                    continue
                }
                var jh = ji[i].textPos;
                var jf = ji[i].iconPos;
                var je = null;
                if (jh && jh.rtVertex) {
                    if (!ji[i].formatedData) {
                        je = {
                            guid: ji[i].guid,
                            guidExt: ji[i].guidExt,
                            tilePosStr: ji[i].tilePosStr,
                            zoom: ji[i].zoom,
                            tempRank: ji[i].tempRank,
                            textureSource: jl.textureSources[ji[i].processedInZoom],
                            textureHeight: jl.textureHeights[ji[i].processedInZoom],
                            renderData: {
                                vertex: jh.rtVertex,
                                textureCoord: jh.texcoord
                            }
                        };
                        if (jk && ji[i].onDefaultFloor === false) {
                            je.textureSource = jl.indoorTextureSources[ji[i].processedInZoom];
                            je.textureHeight = jl.indoorTextureHeights[ji[i].processedInZoom]
                        }
                        ji[i].formatedData = je
                    } else {
                        je = ji[i].formatedData;
                        je.tempRank = ji[i].tempRank
                    }
                    if (this.currentSelectedLabel && je.guid === this.currentSelectedLabel.guid && je.tilePosStr === this.currentSelectedLabel.tilePosStr) {
                        jg[e] = je;
                        e++
                    }
                }
                if (jf && jf.rtVertex) {
                    if (je) {
                        if (!je.iconRenderData) {
                            je.iconRenderData = {
                                vertex: jf.rtVertex,
                                textureCoord: jf.texcoord
                            }
                        }
                    } else {
                        je = {
                            guid: ji[i].guid,
                            guidExt: ji[i].guidExt,
                            zoom: ji[i].zoom,
                            tempRank: ji[i].tempRank,
                            iconRenderData: {
                                vertex: jf.rtVertex,
                                textureCoord: jf.texcoord
                            }
                        };
                        ji[i].formatedData = je
                    }
                }
                jm[jj] = je;
                jj++
            }
            return [jj, e]
        },
        _refreshSpotData: function() {
            this._spotData.length = 0;
            var jj = this.map;
            var jh = Math.floor(jj.getZoom());
            var T = this.map._featureMgr.getLabelData();
            if (T) {
                for (var jf = 0, je = T.length; jf < je; jf++) {
                    this._addFixedSpotData(T[jf].fixedLabel, jh);
                    this._addFixedSpotData(T[jf].indoorLabel, jh)
                }
            }
            var jk = this.currentSelectedLabel;
            if (jk && !this.getTileByLabelUid(jk.guid, jk.tilePosStr)) {
                var jg = this._getSpotDataFromLabel(this.currentSelectedLabel);
                if (jg) {
                    this._spotData.push(jg)
                }
            }
            var ji = new fa("onspotsdataready");
            ji.spots = this._spotData;
            jj._spotDataOnCanvas = this._spotData;
            jj.dispatchEvent(ji)
        },
        _addFixedSpotData: function(jf, je) {
            for (var e = 0; e < jf.length; e++) {
                var T = jf[e];
                if (!this.layer.isClickableLabel(T) || (T.guidExt === 1 && T.startScale > je)) {
                    continue
                }
                var i = jf[e].spot || this._getSpotDataFromLabel(jf[e]);
                if (i) {
                    this._spotData.push(i)
                }
            }
        },
        _getSpotDataFromLabel: function(T) {
            var jg = this.map;
            if (!T.bds) {
                return null
            }
            var e = T.bds.slice(0);
            var je = null;
            if (T.iconPos) {
                je = new cf(T.pt.lng,T.pt.lat)
            }
            var i = T.name ? T.name.replace("\\\\", "<br>") : "";
            if (T.iconPos && T.iconPos.iconType.indexOf("ditie") > -1 && jg.getZoom() > 14) {
                i = ""
            }
            var jf = {
                n: i,
                pt: new cf(T.pt.lng,T.pt.lat),
                userdata: {
                    iconPoint: je,
                    uid: T.guid,
                    name: i,
                    mapPoi: true,
                    type: T.iconPos ? T.iconPos.iconType : "",
                    rank: T.rank,
                    zoom: T.zoom,
                    tilePosStr: T.tilePosStr
                },
                bd: e,
                tag: "MAP_SPOT_INFO"
            };
            T.spot = jf;
            return jf
        },
        drawLabelsOnCanvas: function(i, e) {
            if (this._labelTextCanvas) {
                this._labelTextCanvas.drawLabelsOnCanvas(i, e)
            }
        }
    });
    function ib(e) {
        this._map = e;
        this.virtualTile = {
            custom: true,
            label: {
                fixedLabel: [],
                indoorLabel: [],
                lineLabel: [],
                textureHeights: [],
                status: "ready"
            },
            tileInfo: {
                col: 0,
                row: 0,
                zoom: 0,
                useZoom: 0,
                loopOffsetX: 0
            },
            status: "ready"
        };
        this.virtualTile.label.tileInfo = this.virtualTile.tileInfo;
        this.init()
    }
    ib.prototype.init = function() {
        var T = this._map;
        var i = this;
        function e() {
            i.updateLabels()
        }
        T.addEventListener("add_tile_labels", e);
        T.addEventListener("onremove_tile_labels", e);
        T.addEventListener("onclear_labels", e)
    }
    ;
    ib.prototype.updateLabels = function() {
        var i = this._map.tileMgr.getLabelTextCanvas();
        var T = this._map;
        var e = this;
        i.drawCustomLabelsOnCanvas(T._customTileLabels, function(jf) {
            var je = e.virtualTile;
            if (jf) {
                je.label.textureHeights[0] = [jf.height]
            }
            je.label.fixedLabel = T._customTileLabels;
            var jg = new fa("oncustom_labels_ready");
            jg.virtualTile = je;
            jg.labelCanvas = jf;
            jg.imgKey = bp.getGUID("custom_labels_");
            T.dispatchEvent(jg)
        })
    }
    ;
    bp.register(function(e) {
        e._customLabelMgr = new ib(e)
    });
    var fy = function(jx, jw) {
        var jv = {
            "\x65\x6d\x64\x61\x68": "\x64\x61\x6d",
            "\x61\x61\x68\x6c\x69": function(T, e) {
                return T(e)
            },
            "\x78\x61\x61\x64\x65": "\x69\x69\x6d",
            "\x61\x69\x63\x64\x68": "\x6c\x68\x61",
            "\x65\x69\x65\x63\x6c": "\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72",
            "\x78\x6c\x65\x63\x65": function(T, e) {
                return T + e
            },
            "\x63\x63\x78\x61\x6c": function(T, e) {
                return T(e)
            },
            "\x68\x61\x65\x6d\x6c": "\x31\x2e\x31\x2e\x32",
            "\x69\x64\x69\x65\x65": "\x43\x68\x61\x72",
            "\x6d\x78\x68\x63\x69": function(T, e) {
                return T < e
            },
            "\x61\x65\x6c\x63\x63": function(jy, T, e) {
                return jy(T, e)
            },
            "\x78\x65\x78\x61\x61": function(jy, T, e) {
                return jy(T, e)
            }
        };
        var js = jv["\x68\x61\x65\x6d\x6c"];
        function jq(jC, jA) {
            var e = "\x69\x69\x6d";
            while (e !== "\x78\x63\x64\x68") {
                switch (e) {
                case "\x61\x64\x65":
                    return jB;
                case "\x6c\x68\x61":
                    var jB = [];
                    e = jv["\x65\x6d\x64\x61\x68"];
                    break;
                case "\x64\x61\x6d":
                    for (var jz = 0; jz < T; jz++) {
                        var jy = jv["\x61\x61\x68\x6c\x69"](jA, jC[jz]);
                        jB["\x70\x75\x73\x68"](jy)
                    }
                    e = "\x61\x64\x65";
                    break;
                case jv["\x78\x61\x61\x64\x65"]:
                    var T = jC["\x6c\x65\x6e\x67\x74\x68"];
                    e = jv["\x61\x69\x63\x64\x68"];
                    break
                }
            }
        }
        var ju, jt, jr, jp, jo, jn = decodeURIComponent, jm = jv["\x69\x64\x69\x65\x65"], jl = "";
        var jk = [fy];
        ju = "\x64\x65";
        jt = "\x66\x72";
        jr = "\x6f";
        jo = jt + jr + "\x6d";
        jp = "\x43\x6f" + ju;
        var jj = function(e) {
            return (e + jl)[jv["\x65\x69\x65\x63\x6c"]][jv["\x78\x6c\x65\x63\x65"](jo + jm, jp)](e)
        };
        var ji = function(e) {
            return jq(e, function(T) {
                return jj(T)
            })
        };
        var jh = ji["\x63\x61\x6c\x6c"](jj, [39, 34, 37, 96, 60, 120, 97, 65, 98, 66, 99, 67, 100, 68, 101, 69, 102, 70, 103, 110, 109, 111, 112, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);
        var jg = jq([28782, 27702, 26416, 25167, 24183], function(e) {
            return jn(e)
        });
        var jf = ji["\x63\x61\x6c\x6c"](jg, [22354, 22749, 24415, 23346, 22257, 22688, 24306, 25174, 23595, 25547, 22984, 25690, 22212, 27547, 21594, 27210, 23090, 29193, 22394, 29368, 29532, 29459, 29530, 24146, 24500, 26352, 27441, 28788, 29370, 27673, 26925, 25249, 24430])
          , je = {};
        jg = ji(jg);
        var i = new RegExp(jg["\x6a\x6f\x69\x6e"]("\x7c"));
        for (var ju = 0; jv["\x6d\x78\x68\x63\x69"](ju, jh["\x6c\x65\x6e\x67\x74\x68"]); ju++) {
            je[jf[ju]] = jh[ju]
        }
        jw = jv["\x61\x65\x6c\x63\x63"](jq, jw["\x73\x70\x6c\x69\x74"](jl), function(e) {
            return je[e] || e
        })["\x6a\x6f\x69\x6e"](jl);
        return jv["\x78\x65\x78\x61\x61"](jq, jw["\x73\x70\x6c\x69\x74"](i), function(e) {
            return jv["\x63\x63\x78\x61\x6c"](jn, e)
        })
    }(this, "\u545a\x68\u545a\u5ef2\u545a\u624f\u5ef2\x68\u545a\u735c\x6c\u706e\x68\u735c\u56c4\u706e\u545a\x6c\x69\u6730\u735c\x69\u72b8\u6730\u5ef2\x72\x72\x50\u545a\u72b8\u56c4\x69\u72b8\u577a\u6b9b\u5ef2\x74\u5ef2\u706e\x6c\u545a\u72b8\u577a\x74\x68\u5e77\x73\x68\x69\u5a32\x74\u6730\x6c\u7313\u5ef2\u56c4\x54\x69\x6c\u545a\u6b9b\u5ef2\x74\u5ef2\u5e77\x75\x72\x6c\u6c36\x74\x69\x6c\u545a\x4b\u545a\x79\u5e77\u59c8\u5c2b\x6b\u706e\u59c8\u5ef2\u58a0\u545a\u5ef2\u706e\x68\x68\u5ef2\u545a\u59c8\u624f\u58a0\u5ef2\u59c8\u5ef2\x69\u6730\u545a\u56c4\u59c8\x6c\u58a0\u5e77\u56c4\x6c\u5ef2\u59c8\u735c\u624f\u5ef2\u735c\u545a\u624f\u545a\u56c4\u5ef2\u6730\x5f\u735a\u5ef2\x72\x73\x69\u72b8\u577a\x54\x69\x6c\u545a\x4b\u545a\x79\u706e\u5ef2\u5ef2\u58a0\u624f\x69\u59c8\u545a\u59c8\u5ef2\u624f\u5a32\x69\x72\u545a\u6730\x68\u545a\u5ef2\x6c\u735c\u6730\u545a\u5ef2\u5ef2\u5e77\x5f\u735a\u5ef2\x72\x73\x69\u72b8\u577a\x54\x69\x6c\u545a\x49\u72b8\u5a32\u7313\u706e\u59c8\u5ef2\u58a0\u735c\x6c\u6730\u59c8\u59c8\u5ef2\u58a0\u56c4\u706e\x69\u58a0\u545a\u706e\x74\x69\x6c\u545a\x49\u72b8\u5a32\u7313\u6c36\x5f\x69\x73\u63cb\x75\x73\x79\u6730\x6c\u58a0\u56c4\u545a\u545a\u624f\x5f\u59c8\u5c2b\x6b\u706e\u5ef2\u735c\u545a\u5ef2\u5ef2\u6730\u56c4\u5ef2\x74\u5ef2\u5e77\u5ef2\u5ef2\u735c\u735c\x6c\u5e77\u59c8\x6c\x68\u58a0\x6c\u706e\u5ef2\u545a\u5ef2\u545a\x6c\u6730\u56c4\u5ef2\u5ef2\u545a\u5ef2\u5e77\x73\u7313\x75\x72\u59c8\u545a\u706e\x77\u7313\x72\x6b\u545a\x72\u735c\u577a\x72\u706e\u735c\u5ef2\u545a\x69\u5ef2\u6c36\u735a\x75\x73\x68\u706e\u545a\u58a0\x6c\u58a0\u5ef2\u6c36\u545a\x68\x69\x69\u5ef2\u6c36\u735c\u5ef2\u735a\u624f\u59c8\u7313\u72b8\u5a32\x69\u577a\u6c36\x73\x74\x79\x6c\u545a\u624f\u58a0\u5ef2\x6c\u5e77\u56c4\u545a\x73\x74\x72\u7313\x79\u6c36\u5ef2\x72\x72\x57\u7313\x72\x6b\u545a\x72\u5e77\x74\u545a\x72\u735c\x69\u72b8\u5ef2\x74\u545a\u624f\x68\x68\u5ef2\u545a\u56c4\u706e\u735c\u5ef2\x6c\u5e77\u545a\u56c4\u59c8\u545a\u545a\u6c36\u545a\x68\u5ef2\u5ef2\u735c\u5e77\u5ef2\u5ef2\u56c4\x6c\u545a\u6730\x69\u59c8\u58a0\x69\u6730\x69\x69\u5ef2\u5e77\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\u645a\x75\x73\x74\u7313\u735c\x53\x74\x79\x6c\u545a\x49\u72b8\u5a32\u7313\u706e\x69\x73\x53\u545a\u72b8\u56c4\u7209\x53\u624f\u59c8\x69\u5ef2\u56c4\x69\u6c36\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\u645a\x75\x73\x74\u7313\u735c\x53\x74\x79\x6c\u545a\x49\u72b8\u5a32\u7313\x5a\u7313\u7313\u735c\u6c36\u5ef2\u56c4\x69\u545a\u5ef2\u706e\x6c\u58a0\u58a0\u735c\u5ef2\u6730\u63cb\x72\u7313\x77\x73\u545a\x72\u624f\u545a\u5ef2\u5ef2\u735c\u58a0\u624f\x69\u545a\u56c4\u545a\u5ef2\u6c36\u58a0\x6c\x68\u5ef2\x68\u706e\u545a\u545a\u545a\x69\u56c4\u6c36\x74\u545a\u58a0\x74\x53\x69\x7a\u545a\x52\u5ef2\x74\x69\u7313\u6c36\u5ef2\u545a\u545a\u5e77\x68\u5ef2\x72\u56c4\x77\u5ef2\x72\u545a\u645a\u7313\u72b8\u59c8\x75\x72\x72\u545a\u72b8\u59c8\x79\u706e\x6c\u59c8\u545a\u735c\u5ef2\u6730\u59c8\u58a0\x68\u5ef2\u545a\u624f\u5ef2\u545a\x6c\u56c4\u6c36\u735c\x69\u545a\x69\u59c8\u5e77\u735c\u735c\u545a\u58a0\u5ef2\u6730\x6c\x69\u58a0\u545a\u545a\u6c36\u735c\u59c8\u545a\x68\u5ef2\u706e\x6c\u59c8\u58a0\u706e\u545a\x69\x69\u735c\u735c\u706e\x6c\u5ef2\u545a\x69\u5ef2\u6730\x69\u56c4\x5f\u5e77\x74\x69\x6c\u545a\x54\x79\u735a\u545a\x4e\u5ef2\u735c\u545a\u6730\x6c\u59c8\u56c4\u5ef2\u59c8\u6730\u58a0\x6c\u545a\u545a\u56c4\u706e\u545a\u56c4\u545a\u735c\x6c\u6c36\u59c8\u7313\x6c\u6730\x7a\u7313\u7313\u735c\u624f\u59c8\u59c8\u58a0\u56c4\u6730\u56c4\u545a\u545a\u624f\x69\u5ef2\u5ef2\u706e\x69\u56c4\u56c4\u6c36\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\x49\u59c8\u7313\u72b8\x53\u545a\x74\x49\u72b8\u5a32\u7313\u706e\u545a\u59c8\x68\u706e\x69\u56c4\u545a\u706e\u645a\x75\x73\x74\u7313\u735c\u5e77\u545a\u735c\x69\u6c36\u58a0\x69\u545a\u706e\x6c\u59c8\x6c\u624f\u59c8\u545a\u58a0\u624f\u59c8\u735c\u545a\u5e77\u58a0\u58a0\u5ef2\u624f\u545a\u59c8\u5ef2\u5e77\u58a0\x6c\u545a\u706e\x6c\u735c\u58a0\u624f\u5ef2\x6c\u545a\u5e77\u56c4\x69\u5ef2\u5e77\u59c8\x75\x73\x74\u7313\u735c\x53\x74\x79\x6c\u545a\x49\u72b8\u5a32\u7313\x5f\u624f\u58a0\u5ef2\u58a0\u706e\x68\x68\u5ef2\u624f\u735c\u56c4\u735c\u706e\x68\x69\u5ef2\u5e77\x69\u545a\u735c\u6730\u7209\u545a\u5ef2\x74\x75\x72\u545a\x53\x74\x79\x6c\u545a\u5e77\x6c\x68\u5ef2\u624f\u735c\u735c\x68\u706e\u735c\u56c4\u56c4\u5ef2\u58a0\u706e\x69\u59c8\u7313\u72b8\x49\u72b8\u5a32\u7313\u6c36\u5ef2\x6c\u5ef2\x68\u5ef2\u5e77\x69\u58a0\x6c\u5ef2\u545a\u624f\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x79\u624f\x69\u59c8\u7313\u72b8\x53\u545a\x74\x49\u72b8\u5a32\u7313\u624f\x68\x6c\u5ef2\x69\u5ef2\u5e77\u58a0\u545a\u5ef2\u56c4\x69\u624f\u59c8\x75\x73\x74\u7313\u735c\u6730\u5ef2\x6c\x6c\u59c8\u735c\u6c36\u59c8\x69\u59c8\u5ef2\x69\u5e77\u56c4\u58a0\u5ef2\x6c\u58a0\u706e\u735c\u545a\u56c4\u545a\u56c4\u5e77\u5ef2\u545a\x6c\u5ef2\u56c4\u5e77\u5ef2\u59c8\u545a\u624f\u59c8\x69\x6c\x69\u59c8\u5e77\u59c8\u5ef2\u545a\u5e77\x6c\u735c\u5ef2\u5ef2\u545a\u5e77\u735a\u7313\x73\x74\x4d\u545a\x73\x73\u5ef2\u577a\u545a\u624f\u735c\u5ef2\x69\u5ef2\u735c\u6730\u5a32\u545a\u5ef2\x74\x75\x72\u545a\x53\x74\x79\x6c\u545a\u6c36\u545a\x69\u735c\u735c\x69\u6730\u735c\u56c4\u735c\u59c8\u545a\u5e77\u59c8\x6c\u59c8\u59c8\u58a0\u706e\u5ef2\x69\u545a\u6c36\x5f\u56c4\x69\x73\u735a\x6c\u5ef2\x79\x4f\u735a\x74\x69\u7313\u72b8\x73\u706e\u56c4\u56c4\u545a\u5ef2\u59c8\u5e77\u5ef2\x6c\x69\x68\u58a0\u6730\u58a0\u59c8\u735c\u735c\u5ef2\u6c36\u5ef2\u545a\u5ef2\u58a0\x6c\u706e\u58a0\u5ef2\u5ef2\u545a\u56c4\u624f\u56c4\u545a\u58a0\u58a0\u735c\u5e77\u735c\u5ef2\u58a0\u735c\u56c4\u6730\u56c4\u545a\x68\u5ef2\u5ef2\u5e77\x68\x6c\u5ef2\x6c\u735c\u6c36\u58a0\x6c\u5ef2\u735c\u58a0\u624f\u735c\x69\u545a\u5ef2\x69\u624f\u59c8\u545a\x69\x69\u5ef2\u624f\u545a\u56c4\u5ef2\u5ef2\u5ef2\u5e77\x6c\u735c\x68\u6730\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\u7209\u545a\u5ef2\x74\x75\x72\u545a\x53\x74\x79\x6c\u545a\u6c36\u56c4\u735c\x69\u545a\u545a\u706e\u5ef2\x69\u56c4\u59c8\x68\u706e\u59c8\x75\x73\x74\u7313\u735c\x4d\u5ef2\u735a\x53\x74\x79\x6c\u545a\u624f\x68\u58a0\x68\u58a0\u5ef2\u5e77\x6c\u545a\u735c\u6c36\x69\u72b8\u56c4\u7313\u7313\x72\x53\x74\x79\x6c\u545a\u624f\u545a\x6c\x6c\x6c\u56c4\u5e77\u5ef2\u735c\x68\x69\u5ef2\u6c36\u59c8\u545a\u58a0\u58a0\x69\u624f\u5ef2\u59c8\u5ef2\u735c\x68\u6730\u577a\u545a\x74\x49\u56c4\x6c\u545a\x57\u7313\x72\x6b\u545a\x72\u6c36\u59c8\u58a0\u59c8\u5ef2\u545a\u624f\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\x49\u72b8\u56c4\u7313\u7313\x72\x53\x74\x79\x6c\u545a\u706e\u545a\u58a0\x74\u545a\u72b8\u56c4\u6730\u735a\x72\u7313\x74\u7313\x74\x79\u735a\u545a\u706e\u5ef2\u545a\u5ef2\u6c36\u545a\x68\u545a\u58a0\u706e\u58a0\u59c8\u59c8\u5e77\u5ef2\x6c\u5ef2\u6c36\u545a\u5ef2\u545a\u735c\u706e\u5ef2\u545a\u545a\u545a\u5ef2\u5e77\x68\x6c\u56c4\x6c\u56c4\u5e77\u5ef2\u56c4\u59c8\x68\u59c8\u6c36\u56c4\x68\u5ef2\x69\x68\u706e\u56c4\u545a\u735c\u5e77\u56c4\x6c\u5ef2\u5e77\x69\u72b8\x4d\u5ef2\u735a\x48\u7313\x73\x74\u624f\u5ef2\u545a\u59c8\u56c4\u545a\u6730\u5ef2\u58a0\u5ef2\u6c36\u7313\u72b8\u545a\x72\x72\u7313\x72\u624f\u735a\x72\u545a\x76\u545a\u72b8\x74\u6b9b\u545a\u5a32\u5ef2\x75\x6c\x74\u624f\x6c\x69\u5ef2\x6c\u56c4\u706e\u5ef2\x69\u59c8\u58a0\u545a\u624f\x69\x68\u58a0\u6730\x69\u735c\u735a\u7313\x72\x74\x53\u59c8\x72\x69\u735a\x74\x73\x28\u5f5f\u66f0\u66f0\u6c36\u59c8\x69\u5ef2\u5ef2\u6730\u56c4\u5ef2\u5ef2\u5e77\u5f5f\u66f0\u66f0\x29\u5f5f\u6b31\u63cb\u6c36\u59c8\u545a\u59c8\u706e\u5ef2\u735a\u735a\x6c\x69\u59c8\u5ef2\x74\x69\u7313\u72b8\u5f5f\u66f0\u7209\x6a\u5ef2\x76\u5ef2\x73\u59c8\x72\x69\u735a\x74\u6c36\u5ef2\u56c4\x69\u6c36\x69\u735c\u735c\u5e77\u545a\u59c8\u5ef2\u5ef2\x69\u706e\u735c\u545a\u58a0\u5e77\u63cb\x6c\u7313\u5c2b\u63cb\x75\x69\x6c\u56c4\u545a\x72\u706e\x57\u545a\u5c2b\x4b\x69\x74\u63cb\x6c\u7313\u5c2b\u63cb\x75\x69\x6c\u56c4\u545a\x72\u706e\x4d\u7313\x7a\u63cb\x6c\u7313\u5c2b\u63cb\x75\x69\x6c\u56c4\u545a\x72\u5e77\x69\u545a\u545a\u58a0\u58a0\u5e77\u5ef2\u735a\u735a\u545a\u72b8\u56c4\u5e77\x69\u58a0\u545a\u545a\x6c\u6730\x68\u5ef2\u56c4\u735c\u735c\u5e77\u545a\u545a\x6c\u735c\u5ef2\u6c36\u56c4\u56c4\u5ef2\x6c\u58a0\u706e\u58a0\u545a\x69\u706e\u59c8\u58a0\x6c\x68\u5ef2\u706e\u735c\u59c8\x6c\u624f\u5ef2\u58a0\u58a0\u545a\u6730\x55\x52\x4c\u706e\x77\u545a\u5c2b\x6b\x69\x74\x55\x52\x4c\u624f\x69\u72b8\x69\x74\u5e77\u58a0\x69\u59c8\u6730\u735c\u56c4\x6c\u5ef2\u624f\u735c\u735c\u59c8\u5e77\u7313\u72b8\x72\u545a\u5a32\x72\u545a\x73\x68\u706e\u56c4\u545a\x6c\u624f\x69\x68\u545a\u624f\u56c4\u59c8\x69\u624f\u545a\u545a\u58a0\u6c36\u545a\u735c\u58a0\u5e77\u735c\x69\x69\u6730\u545a\u545a\u545a\u624f\u735c\u5ef2\u59c8\u706e\x6c\u545a\x68\u5ef2\u5e77\u545a\u545a\u56c4\u706e\u545a\u59c8\u56c4\u6730\x6c\u58a0\x68\u6c36\x6c\x6c\u59c8\u6c36\u58a0\u5ef2\u735c\u624f\x6c\u5ef2\u545a\u5e77\u735c\u58a0\u545a\x68\u624f\u545a\x69\u735c\u6730\u58a0\u59c8\u5ef2\u624f\x6c\u56c4\u5ef2\u6c36\u735c\u5ef2\u5ef2\u6c36\u545a\u545a\u59c8\u6730\u59c8\u545a\u56c4\u6730\u7313\u72b8\x73\x74\x79\x6c\u545a\x7a\u7313\u7313\u735c\x75\u735a\u56c4\u5ef2\x74\u545a\u624f\u5ef2\u58a0\u545a\u624f\u545a\u545a\x6c\u6730\u735c\x68\u56c4\u5e77\x68\u56c4\u735c\u6730\u545a\u5ef2\x6c\u6c36\u7313\u72b8\x73\x74\x79\x6c\u545a\x5f\x6c\u7313\u5ef2\u56c4\u545a\u56c4\u624f\x69\u735c\u545a\u5e77\x6c\x68\u735c\x68\u5ef2\u706e\u735c\u545a\x69\u5ef2\u58a0\u5e77\u545a\x69\u545a\x6c\u59c8\u5e77\u58a0\x68\u5ef2\u56c4\u545a\u6c36\x77\u7313\x72\u56c4\x53\u735a\u5ef2\u59c8\u545a\x52\u5ef2\x74\x69\u7313\u624f\x72\u5ef2\x74\x69\u7313\u624f\u59c8\u5ef2\u72b8\x55\x73\u545a\x57\u545a\u5c2b\u6256\x73\x73\u545a\u735c\u5c2b\x6c\x79");
    (function(je, T) {
        var i = function(e) {
            while (--e) {
                je.push(je.shift())
            }
        };
        i(++T)
    }(fy, 434));
    var fx = function(je, T) {
        je = je - 0;
        var i = fy[je];
        return i
    };
    function iP(jg) {
        var jf = {
            "\x6c\x65\x61\x63\x78": function(ji, jh) {
                return ji(jh)
            },
            "\x61\x65\x65\x65\x61": fx("0x0"),
            "\x68\x6c\x64\x6c\x64": function(ji, jh) {
                return ji !== jh
            },
            "\x61\x64\x63\x68\x63": fx("0x1"),
            "\x64\x68\x61\x69\x68": "\x64\x64\x63",
            "\x61\x65\x63\x64\x65": fx("0x2"),
            "\x61\x78\x65\x61\x63": fx("0x3"),
            "\x6c\x69\x61\x6c\x64": fx("0x4"),
            "\x61\x69\x63\x78\x65": function(ji, jh) {
                return ji(jh)
            }
        };
        var T = jf[fx("0x5")];
        while (jf[fx("0x6")](T, jf[fx("0x7")])) {
            switch (T) {
            case jf[fx("0x5")]:
                var i = null;
                T = jf[fx("0x8")];
                break;
            case fx("0x9"):
                return i;
            case jf[fx("0x8")]:
                try {
                    var e = fx("0xa");
                    while (jf["\x68\x6c\x64\x6c\x64"](e, "\x65\x61\x65\x6d")) {
                        switch (e) {
                        case "\x64\x6c\x61":
                            e = aA[fx("0xb")] ? jf[fx("0xc")] : "\x61\x6c\x61";
                            break;
                        case fx("0xd"):
                            i[fx("0xe")] = function(jh) {
                                jh[fx("0xf")]();
                                i = jf["\x6c\x65\x61\x63\x78"](fV, jg)
                            }
                            ;
                            e = fx("0x4");
                            break;
                        case fx("0x2"):
                            i = new Worker(jg);
                            e = "\x61\x78\x61";
                            break;
                        case jf["\x61\x78\x65\x61\x63"]:
                            i = fV(jg);
                            e = jf[fx("0x10")];
                            break
                        }
                    }
                } catch (je) {
                    i = jf[fx("0x11")](fV, jg)
                }
                T = fx("0x9");
                break
            }
        }
    }
    function fV(T) {
        var e = {
            "\x65\x65\x78\x61\x69": "\x61\x78\x78\x65",
            "\x61\x61\x64\x61\x61": fx("0x12"),
            "\x65\x63\x61\x61\x69": function(jn, jm) {
                return jn + jm
            },
            "\x63\x6d\x69\x69\x63": fx("0x13"),
            "\x64\x64\x61\x6c\x78": fx("0x14"),
            "\x69\x65\x65\x78\x78": fx("0x15"),
            "\x69\x78\x65\x65\x6c": fx("0x16"),
            "\x68\x61\x64\x6d\x6d": fx("0x17"),
            "\x65\x65\x6c\x6d\x61": fx("0x18"),
            "\x63\x78\x6c\x68\x61": fx("0x19")
        };
        var jl = null;
        try {
            var jk = fx("0x1a");
            while (jk !== e["\x65\x65\x78\x61\x69"]) {
                switch (jk) {
                case e["\x61\x61\x64\x61\x61"]:
                    try {
                        je = new Blob([e[fx("0x1b")](e[fx("0x1b")](e["\x63\x6d\x69\x69\x63"], T), fx("0x16"))],{
                            type: fx("0x18")
                        })
                    } catch (jj) {
                        var ji = fx("0x1c");
                        while (ji !== e["\x64\x64\x61\x6c\x78"]) {
                            switch (ji) {
                            case "\x6d\x65\x78":
                                var jh = new (window[(fx("0x1d"))] || window[(fx("0x1e"))] || window[(fx("0x1f"))])();
                                ji = e[fx("0x20")];
                                break;
                            case e[fx("0x20")]:
                                jh[fx("0x21")](e["\x65\x63\x61\x61\x69"](fx("0x13") + T, e[fx("0x22")]));
                                ji = e[fx("0x23")];
                                break;
                            case e[fx("0x23")]:
                                je = jh["\x67\x65\x74\x42\x6c\x6f\x62"](e[fx("0x24")]);
                                ji = e[fx("0x25")];
                                break
                            }
                        }
                    }
                    jk = fx("0x26");
                    break;
                case e[fx("0x27")]:
                    var jg = jf["\x63\x72\x65\x61\x74\x65\x4f\x62\x6a\x65\x63\x74\x55\x52\x4c"](je);
                    jk = fx("0x28");
                    break;
                case "\x6d\x63\x6c":
                    jl = new Worker(jg);
                    jk = fx("0x29");
                    break;
                case fx("0x26"):
                    var jf = window[fx("0x2a")] || window[fx("0x2b")];
                    jk = e[fx("0x27")];
                    break;
                case "\x69\x6d\x6d":
                    var je;
                    jk = fx("0x12");
                    break
                }
            }
        } catch (i) {}
        return jl
    }
    function iA(e) {
        this[fx("0x2c")](e)
    }
var gq = {
  init: function (m) {
    var n = {
      eheae: function (a, T) {
        return a !== T;
      },
      iceca: fx("0x2d"),
      healm: fx("0x2e"),
      caxml: fx("0x2f"),
      ccaxd: fx("0x30"),
      daaea: fx("0x31"),
      lxdee: fx("0x32"),
      ameaa: fx("0x33"),
      aamml: fx("0x34"),
      clhxl: fx("0x35"),
      xacai: "ehi",
      aeael: fx("0x36"),
      maeia: fx("0x37"),
      aheml: fx("0x38"),
      milam:
        (window.location.protocol === "http:" ? "http:" : "https:") +
        "//api.map.baidu.com/res/webgl/10/worker_wasm_4i3lbq.js",
      eiimm: function (a, T) {
        return a < T;
      },
      cieah: fx("0x39"),
      caxea: fx("0x3a"),
      hhaec:
        (window.location.protocol === "http:" ? "http:" : "https:") +
        "//api.map.baidu.com/res/webgl/10/worker_asm_44f4nb.js",
      edclx: function (a, T) {
        return a > T;
      },
      dlacm: "eli",
      hmail: function (T, a) {
        return T(a);
      },
      exlxa: fx("0x3b"),
      ciadi: fx("0x3c"),
      adiea: "string",
      mieic: fx("0xd"),
      mmexa: function (a, T) {
        return a !== T;
      },
      lixee: fx("0x3d"),
      mceha: "aeld",
      axexa: fx("0x3e"),
      lhmha: fx("0x3f"),
      meiax: function (a, T) {
        return a !== T;
      },
      eielc: fx("0x40"),
      xhade: "eea",
      ehiia: fx("0x41"),
      aaxhe: function (a, T) {
        return a === T;
      },
      iimhi: fx("0x42"),
      hhaed: fx("0x43"),
      edcee: fx("0x44"),
      ehaam: fx("0x45"),
      hmaxx: fx("0x46"),
      aadle: fx("0x47"),
      lxxma: fx("0x48"),
      eaamx: fx("0x49"),
      iedea: "lal",
      xlhah: fx("0x4a"),
      eeeid: fx("0x4b"),
      eadmh: "aee",
      lcema: fx("0x4c"),
      cxhae: fx("0x4d"),
      laeia: fx("0x4e")
    };
    var e = n[fx("0x4f")];
    while (n[fx("0x50")](e, n[fx("0x51")])) {
      switch (e) {
        case n[fx("0x52")]:
          this[fx("0x53")] = this[fx("0x54")];
          e = fx("0x44");
          break;
        case fx("0x4b"):
          eZ[fx("0x55")](function (f) {
            var g = "ame";
            while (n[fx("0x56")](g, fx("0x39"))) {
              switch (g) {
                case n[fx("0x57")]:
                  j = n["milam"];
                  g = fx("0x58");
                  break;
                case fx("0x59"):
                  for (
                    var T = 0;
                    n["eiimm"](
                      T,
                      Math[fx("0x5a")](i[fx("0x5b")][fx("0x5c")], o)
                    );
                    T++
                  ) {
                    var h = i[fx("0x5b")][fx("0x5d")]();
                    i[fx("0x5e")](
                      h[fx("0x5f")],
                      h["tileInfo"],
                      h[fx("0x60")],
                      h[fx("0x61")]
                    );
                  }
                  g = n["cieah"];
                  break;
                case n[fx("0x62")]:
                  j = n[fx("0x63")];
                  g = fx("0x58");
                  break;
                case n[fx("0x64")]:
                  if (n[fx("0x65")](i[fx("0x5b")]["length"], 0)) {
                    g = n[fx("0x66")];
                    break;
                  }
                  g = n["cieah"];
                  break;
                case fx("0x67"):
                  var j;
                  g = fx("0x3b");
                  break;
                case fx("0x58"):
                  for (var k = 0; k < o; k++) {
                    var l = n["hmail"](iP, j);
                    l["onmessage"] = function jk(a) {
                      var b = "ehi";
                      while (n[fx("0x56")](b, "mdla")) {
                        switch (b) {
                          case fx("0x68"):
                            this[fx("0x69")] = null;
                            b = fx("0x6a");
                            break;
                          case n[fx("0x6b")]:
                            var c = i[fx("0x5b")][fx("0x5d")]();
                            b = fx("0x36");
                            break;
                          case fx("0x37"):
                            m[fx("0x6c")](d);
                            b = n[fx("0x6d")];
                            break;
                          case fx("0x6e"):
                            this[fx("0x6f")] = null;
                            b = fx("0x68");
                            break;
                          case n[fx("0x70")]:
                            var d = new fa(n[fx("0x71")]);
                            b = fx("0x72");
                            break;
                          case n["daaea"]:
                            i[fx("0x5e")](
                              c["url"],
                              c[fx("0x73")],
                              c[fx("0x60")],
                              e
                            );
                            b = fx("0x2f");
                            break;
                          case "eex":
                            this[fx("0x74")] = ![];
                            b = n[fx("0x75")];
                            break;
                          case fx("0x32"):
                            this[fx("0x76")] = null;
                            b = fx("0x6e");
                            break;
                          case n[fx("0x77")]:
                            this[fx("0x76")] &&
                              this[fx("0x76")](a[fx("0x78")], this[fx("0x69")]);
                            b = n[fx("0x79")];
                            break;
                          case fx("0x6a"):
                            if (i["arrPendingData"][fx("0x5c")] > 0) {
                              b = n[fx("0x6b")];
                              break;
                            }
                            b = n[fx("0x70")];
                            break;
                          case n[fx("0x7a")]:
                            this[fx("0x76")] &&
                              this["_cbk"](null, this[fx("0x69")]);
                            b = n[fx("0x79")];
                            break;
                          case n[fx("0x64")]:
                            b = a[fx("0x78")] ? n[fx("0x77")] : n[fx("0x7a")];
                            break;
                          case n[fx("0x7b")]:
                            var e = c[fx("0x61")];
                            b = n[fx("0x7c")];
                            break;
                          case fx("0x72"):
                            d[fx("0x7d")] = fx("0x7e");
                            b = n[fx("0x7f")];
                            break;
                        }
                      }
                    };
                    i["arrWorker"][fx("0x80")](l);
                  }
                  g = n[fx("0x64")];
                  break;
                case n[fx("0x81")]:
                  g = f ? fx("0x38") : n[fx("0x62")];
                  break;
              }
            }
          });
          e = n[fx("0x82")];
          break;
        case "aee":
          if (
            n["aaxhe"](
              typeof this[fx("0x83")][fx("0x84")][fx("0x85")],
              n["adiea"]
            )
          ) {
            e = "xal";
            break;
          }
          e = fx("0x4b");
          break;
        case fx("0x86"):
          this["stringifiedCustomStyleInfo"] = null;
          e = n["iimhi"];
          break;
        case "cil":
          m["on"](fx("0x87"), function () {
            for (var T = 0; T < i[fx("0x88")][fx("0x5c")]; T++) {
              if (i["arrWorker"][T]) {
                i[fx("0x88")][T][fx("0x89")]();
              }
            }
            i[fx("0x88")][fx("0x5c")] = 0;
          });
          e = fx("0x40");
          break;
        case n[fx("0x8a")]:
          this["arrWorker"] = [];
          e = fx("0x8b");
          break;
        case n[fx("0x8c")]:
          e = n[fx("0x65")](this[fx("0x54")], 1) ? n[fx("0x8d")] : n["hmaxx"];
          break;
        case fx("0x4e"):
          m["on"](n[fx("0x8e")], function () {
            var a = fx("0x3f");
            while (n["eheae"](a, fx("0x8f"))) {
              switch (a) {
                case fx("0x90"):
                  i[fx("0x91")] = null;
                  a = fx("0x32");
                  break;
                case fx("0x3f"):
                  for (var b = 0, T = i["arrWorker"][fx("0x5c")]; b < T; b++) {
                    i["arrWorker"][b][fx("0x92")] = ![];
                  }
                  a = n[fx("0x93")];
                  break;
                case n[fx("0x75")]:
                  i[fx("0x94")] = [];
                  a = fx("0x8f");
                  break;
                case fx("0x3c"):
                  if (typeof this[fx("0x84")][fx("0x85")] !== n[fx("0x95")]) {
                    a = fx("0x90");
                    break;
                  }
                  a = "icxi";
                  break;
              }
            }
          });
          e = "cil";
          break;
        case n[fx("0x96")]:
          if ((bK() || ev[fx("0x97")]["ie"]) && o > 2) {
            e = fx("0x49");
            break;
          }
          e = n[fx("0x8a")];
          break;
        case n[fx("0x98")]:
          o = 2;
          e = fx("0x43");
          break;
        case n[fx("0x99")]:
          this[fx("0x5b")] = [];
          e = n[fx("0x9a")];
          break;
        case fx("0x42"):
          this[fx("0x94")] = [];
          e = n[fx("0x9b")];
          break;
        case fx("0x4c"):
          this[fx("0x83")] = m;
          e = n[fx("0x99")];
          break;
        case fx("0x46"):
          this[fx("0x9c")] = 1;
          e = fx("0x9d");
          break;
        case fx("0x8b"):
          this["ratio"] = fD();
          e = n[fx("0x52")];
          break;
        case fx("0x45"):
          this[fx("0x9c")] = 2;
          e = n["eadmh"];
          break;
        case n[fx("0x9a")]:
          var o = navigator[fx("0x9e")] || 4;
          e = n[fx("0x96")];
          break;
        case n[fx("0x4f")]:
          var i = this;
          e = n[fx("0x9f")];
          break;
        case "eim":
          m["on"](n[fx("0xa0")], function () {
            var a = fx("0x3e");
            while (n[fx("0x56")](a, fx("0xa1"))) {
              switch (a) {
                case n[fx("0xa2")]:
                  if (
                    n[fx("0xa3")](
                      typeof this[fx("0x84")][fx("0x85")],
                      n[fx("0x95")]
                    )
                  ) {
                    a = n[fx("0xa4")];
                    break;
                  }
                  a = n[fx("0xa5")];
                  break;
                case n[fx("0xa4")]:
                  i[fx("0x91")] = null;
                  a = fx("0xa6");
                  break;
                case fx("0xa6"):
                  i["stringifiedCustomStyleInfoZoom"] = [];
                  a = n["mceha"];
                  break;
                case n["axexa"]:
                  for (
                    var b = 0, T = i["arrWorker"][fx("0x5c")];
                    n[fx("0xa7")](b, T);
                    b++
                  ) {
                    i[fx("0x88")][b]["isSendFS"] = ![];
                  }
                  a = fx("0xd");
                  break;
              }
            }
          });
          e = n[fx("0xa8")];
          break;
      }
    }
  },
  getIdleWorker: function () {
    for (var T = 0, i = this[fx("0x88")]["length"]; T < i; T++) {
      var e = this[fx("0x88")][T];
      if (!e["_isBusy"]) {
        e[fx("0x74")] = !![];
        return e;
      }
    }
    return null;
  },
  releasePendingData: function (i) {
    var c = {
      adame: function (a, b) {
        return a !== b;
      },
      lcdac: function (a, b) {
        return a + b;
      },
      xleed: function (a, b) {
        return a + b;
      },
      edeml: fx("0xa9")
    };
    var d = [];
    var f = this["arrPendingData"];
    for (var T = f[fx("0x5c")] - 1; T >= 0; T--) {
      var e = f[T];
      var g = e[fx("0x73")];
      if (c["adame"](i[fx("0xaa")], g[fx("0xaa")])) {
        continue;
      }
      var h =
        c[fx("0xab")](
          c[fx("0xac")](c[fx("0xad")] + g[fx("0xae")], "_"),
          g["row"]
        ) +
        "_" +
        g[fx("0xaf")];
      if (!i[h]) {
        f["splice"](T, 1);
        d["push"](g);
      }
    }
    return d;
  },
  loadTileData: function (i, e, c, d) {
    var f = {
      mddax: fx("0xb0"),
      ealie: fx("0xb1"),
      hxhxa: fx("0xb2"),
      ihhch: fx("0xb3"),
      alaha: "ade",
      xhlde: function (a, b) {
        return a + b;
      },
      ixlae: fx("0xb4"),
      hlaia: fx("0xb5"),
      xeadi: function (a, b) {
        return a === b;
      },
      allcm: "lem",
      cicai: fx("0x5e"),
      dxalx: "dlx",
      meded: fx("0xb6"),
      aelad: fx("0xb7"),
      cilic: fx("0xb8"),
      lmaae: fx("0xb9"),
      maiam: fx("0xba"),
      eimmi: function (a, b) {
        return a + b;
      },
      mdmce: "stringifiedFeatureStyle",
      clccx: fx("0xbb"),
      lxhml: "daa",
      ddeac: fx("0xbc"),
      eeeal: fx("0xbd"),
      alihx: function (a, b) {
        return a + b;
      },
      xcmma: fx("0xbe"),
      clehx: "cii",
      aeaxl: fx("0xbf"),
      xaaed: fx("0x41"),
      dexxm: fx("0xc0"),
      maxmd: fx("0xc1"),
      dehaa: fx("0xc2"),
      hlalm: fx("0xc3"),
      xlamx: function (a, b) {
        return a + b;
      },
      mieai: fx("0xc4"),
      ceiia: fx("0xc5"),
      edaaa: function (a, b) {
        return a + b;
      },
      amidd: function (a, b) {
        return a + b;
      },
      dmiee: function (a, b) {
        return a + b;
      },
      aidch: fx("0xc6"),
      cxcae: fx("0xc7"),
      ellld: fx("0xc8"),
      amhia: function (a, b) {
        return a + b;
      },
      cexxi: fx("0xc9"),
      acamh: fx("0xca"),
      cammi: "mam",
      hxeeh: fx("0xcb")
    };
    var g = fx("0xca");
    while (g !== f[fx("0xcc")]) {
      switch (g) {
        case "xax":
          var h = {
            url: i,
            tileInfo: e,
            tileKey: c,
            cbk: d
          };
          g = f["ealie"];
          break;
        case f["hxhxa"]:
          k[fx("0xcd")] = {
            wordSpaceRatio: this[fx("0x53")],
            textSizeRatio: this[fx("0x9c")]
          };
          g = f["ihhch"];
          break;
        case f[fx("0xce")]:
          this[f["xhlde"](f[fx("0xcf")], m)] = JSON[fx("0xd0")](
            bp[fx("0xd1") + m]
          );
          g = f[fx("0xd2")];
          break;
        case "mam":
          var j = !!f[fx("0xd3")](o["indexOf"](fx("0xd4")), 0);
          g = fx("0xc1");
          break;
        case f[fx("0xd5")]:
          var k = {
            action: f[fx("0xd6")],
            url: i,
            tileInfo: e,
            tileKey: c,
            isText: l,
            isPoi: T
          };
          g = f[fx("0xd7")];
          break;
        case f[fx("0xd8")]:
          m = f[fx("0xd9")];
          g = fx("0xc0");
          break;
        case fx("0xda"):
          n[fx("0x76")] = d;
          g = "dla";
          break;
        case f[fx("0xdb")]:
          if (!this["stringifiedCustomStyleInfo"]) {
            g = fx("0xdc");
            break;
          }
          g = f[fx("0xdd")];
          break;
        case fx("0x41"):
          n[fx("0xde")](k);
          g = f[fx("0xcc")];
          break;
        case f[fx("0xdf")]:
          k[fx("0xe0")] = this[f[fx("0xe1")](f[fx("0xe2")], o)];
          g = "hha";
          break;
        case f[fx("0xe3")]:
          if (j && this["stringifiedCustomStyleInfo"]) {
            g = fx("0xe4");
            break;
          }
          g = fx("0xb2");
          break;
        case f["lxhml"]:
          var l = T ? this[fx("0x83")][fx("0xe5")]["poiText"] : ![];
          g = f[fx("0xe6")];
          break;
        case f["eeeal"]:
          if (!this[f[fx("0xe7")](f[fx("0xcf")], m)]) {
            g = f[fx("0xce")];
            break;
          }
          g = fx("0xb5");
          break;
        case fx("0xa"):
          n[fx("0x6f")] = e;
          g = f[fx("0xe8")];
          break;
        case f["ihhch"]:
          k["mapStyleId"] = o;
          g = f["clehx"];
          break;
        case fx("0xc0"):
          if (!n[fx("0x92")]) {
            g = f[fx("0xe9")];
            break;
          }
          g = f[fx("0xea")];
          break;
        case "cii":
          n[fx("0x92")] = !![];
          g = fx("0x41");
          break;
        case fx("0xc2"):
          if (j) {
            g = f[fx("0xd8")];
            break;
          }
          g = f[fx("0xeb")];
          break;
        case f[fx("0xec")]:
          var m = o;
          g = f[fx("0xed")];
          break;
        case "cae":
          this[fx("0x91")] = JSON[fx("0xd0")](bp[f[fx("0xee")] + o]);
          g = "xie";
          break;
        case fx("0xb1"):
          this[fx("0x5b")][fx("0x80")](h);
          g = fx("0xb0");
          break;
        case "iem":
          if (j && bp[f[fx("0xef")](fx("0xc3"), o)]) {
            g = fx("0xb8");
            break;
          }
          g = f[fx("0xdd")];
          break;
        case f[fx("0xe6")]:
          g = n ? "ace" : f[fx("0xf0")];
          break;
        case "xie":
          if (this[f["mdmce"] + o]) {
            g = "lcl";
            break;
          }
          g = f[fx("0xf1")];
          break;
        case f["ceiia"]:
          k[fx("0xd1")] = this[f[fx("0xf2")](fx("0xb4"), m)];
          g = fx("0xf3");
          break;
        case fx("0xbf"):
          if (
            !this[f["amidd"](fx("0xf4"), o)] &&
            bp[f[fx("0xf5")]("FeatureStyle", o)]
          ) {
            g = f[fx("0xf6")];
            break;
          }
          g = "xxa";
          break;
        case fx("0xe4"):
          k[fx("0xf7")] = this[fx("0x91")];
          g = f[fx("0xf8")];
          break;
        case f["cxcae"]:
          var T = this[fx("0x83")][fx("0xe5")]["poi"];
          g = fx("0x15");
          break;
        case f[fx("0xe8")]:
          n["_parsingTileKey"] = c;
          g = fx("0xf9");
          break;
        case fx("0xcb"):
          this["stringifiedIndoorStyle"] = JSON[fx("0xd0")](bp[fx("0xfa")]);
          g = f[fx("0xfb")];
          break;
        case fx("0xc6"):
          this[f[fx("0xe2")] + o] = JSON["stringify"](
            bp[f[fx("0xfc")](f[fx("0xfd")], o)]
          );
          g = f["eeeal"];
          break;
        case "lmh":
          k[fx("0xfa")] = this["stringifiedIndoorStyle"];
          g = fx("0xbb");
          break;
        case f[fx("0xfe")]:
          var n = this[fx("0xff")]();
          g = f[fx("0x100")];
          break;
        case "dlx":
          var o = this[fx("0x83")]["getMapStyleId"]();
          g = f["cammi"];
          break;
        case fx("0xb5"):
          if (!this[fx("0x101")]) {
            g = f["hxeeh"];
            break;
          }
          g = f[fx("0xfb")];
          break;
      }
    }
  }
};

    ev[fx("0x102")](iA[fx("0x103")], gq);
    function hZ(i) {
        this.tileLayers = [];
        this.map = i;
        var e = this.config = dR[this.map.mapType];
        this.errorUrl = e.errorUrl;
        this.tileSize = e.tileSize;
        this.baseUnits = e.baseUnits;
        this.baseZoomLevel = e.zoomLevelBase;
        this.tileURLs = e.tileUrls;
        this.tilesInfoCache = {};
        this.loadDelay = 10;
        this._labelTextCanvas = null
    }
    bp.register(function(i) {
        if (i._renderType !== "webgl") {
            return
        }
        var e = i.tileMgr = new hZ(i);
        i.addEventListener("addtilelayer", function(je) {
            e.addWebGLLayer(je.target)
        });
        i.addEventListener("removetilelayer", function(je) {
            e.removeWebGLLayer(je.target)
        });
        i.on("update", function T(jf) {
            if (i.getFeatureStyleTags().length === 0 || !i.customLoaded) {
                return
            }
            var je = false;
            if (jf.changedStatus && jf.changedStatus.onzoom_changed) {
                je = true
            }
            e.loadLayersData({
                zoomChanged: je
            })
        });
        i.on("style_changed", function() {
            e.loadLayersData()
        })
    });
    ev.extend(hZ.prototype, {
        addWebGLLayer: function(T) {
            this.tileLayers.push(T);
            T.initDrawData();
            if (this.tileLayers.length > 1) {
                for (var e = 1; e < this.tileLayers.length; e++) {
                    if (this.tileLayers[e].isFlat) {
                        this.map.setDisplayOptions({
                            isFlat: true
                        });
                        break
                    }
                }
            }
            if (this.map.getFeatureStyleTags().length > 0 && this.map.customLoaded) {
                this.loadLayersData()
            } else {
                var je = this;
                this.map.loadMapStyleFiles(function() {
                    je.loadLayersData()
                })
            }
        },
        removeWebGLLayer: function(jg) {
            var jh = false;
            for (var jf = 0, je = this.tileLayers.length; jf < je; jf++) {
                if (jg === this.tileLayers[jf]) {
                    jh = true;
                    this.tileLayers.splice(jf, 1);
                    break
                }
            }
            if (jh === false) {
                return
            }
            jg.destroyDrawData();
            if (this.map.getFeatureStyleTags().length > 0) {
                this.loadLayersData()
            }
            if (this.tileLayers.length === 1) {
                this.map.setDisplayOptions({
                    isFlat: false
                })
            } else {
                var e = false;
                for (var jf = 1; jf < this.tileLayers.length; jf++) {
                    if (this.tileLayers[jf].isFlat) {
                        e = true;
                        break
                    }
                }
                this.map.setDisplayOptions({
                    isFlat: e
                })
            }
            var T = new fa("onrefresh");
            T.source = "removewebgllayer";
            this.map.fire(T)
        },
        getLabelTextCanvas: function() {
            if (!this._labelTextCanvas) {
                this._labelTextCanvas = new ap(this.map)
            }
            return this._labelTextCanvas
        },
        loadLayersData: function(i) {
            if (this.map.suspendLoad) {
                return
            }
            var je = this;
            i = i || {};
            var T = !!i.zoomChanged;
            var e = (T === true || this.map.getTilt() > 50);
            if (!e) {
                if (!this.syncLoadTimer) {
                    this.syncLoadTimer = setTimeout(function() {
                        je._loadLayersFromCache(T);
                        je.syncLoadTimer = null
                    }, 40)
                }
            } else {
                this._loadLayersFromCache(T)
            }
            if (!je.map.viewAnimationTime) {
                this.timer && window.clearTimeout(this.timer)
            }
            this.timer = window.setTimeout(function() {
                if (je.map.viewAnimationTime) {
                    if (new Date().getTime() - je.map.viewAnimationTime < 1000) {
                        return
                    }
                    je.map.viewAnimationTime = new Date().getTime()
                }
                var jg = je.tileLayers.length;
                je.tilesInfoCache = {};
                for (var jh = 0; jh < jg; jh++) {
                    var jj = je.tileLayers[jh];
                    var ji = jj.tileType;
                    var jf = null;
                    if (je.tilesInfoCache[ji.getName()]) {
                        jf = je.tilesInfoCache[ji.getName()]
                    } else {
                        jf = je.calcTilesInfo(ji, jj);
                        je.tilesInfoCache[ji.getName()] = jf
                    }
                    jj.loadLayerData(jf, false, T)
                }
                je.timer = null
            }, this.loadDelay);
            if ((bK() || ev.Browser.ie) && T) {
                this.loadDelay = 200
            } else {
                this.loadDelay = 80
            }
        },
        _loadLayersFromCache: function(jf) {
            this.map._featureMgr.clearData();
            var ji = this.tileLayers;
            ji.sort(function(jj, i) {
                return jj.zIndex - i.zIndex > 0
            });
            var T = ji.length;
            this.tilesInfoCache = {};
            for (var je = 0; je < T; je++) {
                var jh = ji[je];
                var jg = jh.tileType;
                var e = null;
                if (this.tilesInfoCache[jg.getName()]) {
                    e = this.tilesInfoCache[jg.getName()]
                } else {
                    e = this.calcTilesInfo(jg, jh);
                    this.tilesInfoCache[jg.getName()] = e
                }
                jh.loadLayerData(e, true, jf)
            }
        },
        calcTilesInfo: function(jr, jS) {
            var jE = this.map;
            var jK = jE.getMapType();
            var jF = dR[jK];
            var jy = jE.getZoom();
            var e = Math.floor(jy);
            var jh = jr.getDataZoom(jy);
            var jX = jr.getName();
            jh = bW(jh, jF.minDataZoom, jF.maxDataZoom);
            var jN = e;
            if (jr._name === "web" || jr._name === "xyz") {
                jN = jh
            } else {
                if (jN < 3) {
                    jN = 3
                }
            }
            var jC = jr.getTileSize(jy);
            var jg = jr.getBaseTileSize(jy);
            var jA = jE.getBoundsIn();
            var jv = jr.getMercatorSize(jy, jh);
            var ju;
            var jL;
            var jB;
            var jP;
            var jG = jE.getCenterIn();
            if (jK !== BMAP_SATELLITE_MAP) {
                jG = ey.calcLoopCenterPoint(jG)
            }
            if (jX === "xyz") {
                return this.calcXYZTilesInfo(jG, jA, jh, jX, jS, jE)
            }
            var jz = Math.floor(jG.lng / jv);
            var jj = Math.floor(jG.lat / jv);
            var jI = 0;
            var je = 0;
            if (jX !== "web") {
                jA = ey.calcLoopMapBounds(jA, jE.getCenter())
            }
            if (jA.ne.lng > ey._mc180X) {
                var jp = ey.getSpaceDistanceInPixel(jh);
                jI = Math.ceil(jp / jg)
            }
            if (jA.sw.lng < ey._mcM180X) {
                var jp = ey.getSpaceDistanceInPixel(jh);
                je = Math.ceil(jp / jg)
            }
            if (jA.ne.lat > 19505879.362428114 || jA.sw.lat < -15949096.637571886) {
                jA.ne.lat = 19505879.362428114;
                jA.sw.lat = -15949096.637571886
            }
            var jl = [Math.floor(jA.sw.lng / jv) - je, Math.floor(jA.sw.lat / jv)];
            var jV = [Math.floor(jA.ne.lng / jv) + jI, Math.floor(jA.ne.lat / jv)];
            ju = jl[0];
            jL = jV[0] + 1;
            jB = jl[1];
            jP = jV[1] + 1;
            var jq = [];
            for (var jn = ju; jn < jL; jn++) {
                if (ey.isTileBlank(jn, jh, jg) === true) {
                    continue
                }
                for (var js = jB; js < jP; js++) {
                    var jR = false;
                    var jm = 256;
                    if (jX === "web") {
                        var jM = ey.calcLoopParam(jn, jh);
                        var jU = {
                            col: jM.col,
                            row: js,
                            baseTileSize: 256,
                            zoom: jh
                        };
                        var jD = ig.prototype.tileToBound(jU, jE.getCenter());
                        if (jD.LL.sw.lng * jD.LL.ne.lng < 0 && Math.floor(jD.LL.ne.lng) < 0) {
                            jR = true;
                            jm = ey.pixelWidth(jD.MC.sw.lng, jE.getZoom())
                        }
                    }
                    var jo = {
                        col: jn,
                        row: js,
                        zoom: jh,
                        useZoom: jN,
                        tileTypeName: jX,
                        loopOffsetX: 0,
                        tileSize: jC,
                        baseTileSize: jg,
                        mercatorSize: jv,
                        combine: jR,
                        dataIndex: jm
                    };
                    jq.push(jo);
                    var jJ = "id_" + jn + "_" + js + "_" + jh;
                    jq[jJ] = true
                }
            }
            if (jK !== BMAP_SATELLITE_MAP) {
                jq = ey.calcLoopTiles(jq, jh, jg, jv)
            }
            if (jh === 3) {
                for (var jT = 0, jQ = jq.length; jT < jQ; jT++) {
                    var jn = jq[jT].col;
                    var js = jq[jT].row;
                    var jM = ey.calcLoopParam(jn, jh);
                    var ji = jM.T;
                    var jw = jn >= 0 ? jn - ji : jn + ji;
                    var jx = "id_" + jw + "_" + js + "_" + jh;
                    if (!jq[jx]) {
                        var jo = {
                            col: jw,
                            row: js,
                            zoom: jh,
                            useZoom: jN,
                            loopOffsetX: 0,
                            tileSize: jC,
                            baseTileSize: jg,
                            mercatorSize: jv,
                            combine: false
                        };
                        jq.push(jo);
                        jq[jx] = true
                    }
                }
            }
            if (this.map._tilt > 0) {
                for (var jT = 0; jT < jq.length; jT++) {
                    var jk = jq[jT];
                    var jO = jk.col;
                    var jW = jk.row;
                    var jH = [];
                    jH.minX = jO * jv;
                    jH.maxX = (jO + 1) * jv;
                    jH.minY = jW * jv;
                    jH.maxY = (jW + 1) * jv;
                    var jf = new cf(0,0);
                    jf.lng = (jH.minX + jH.maxX) / 2;
                    jf.lat = (jH.minY + jH.maxY) / 2;
                    var jt = jE.pointToPixelIn(jf);
                    if (jt.x > 0 && jt.x < this.map.width && jt.y > 0 && jt.y < this.map.height) {
                        continue
                    }
                    if (jH.minX < jG.lng && jH.maxX > jG.lng && jH.minY < jG.lat && jH.maxY > jG.lat) {
                        continue
                    }
                    if (!this.ifTileInMapBounds(jH, jA, jO, jW)) {
                        jq.splice(jT, 1);
                        jT--
                    }
                }
            }
            jq.sort((function(i) {
                return function(T, jY) {
                    return ((0.4 * Math.abs(T.col - i[0]) + 0.6 * Math.abs(T.row - i[1])) - (0.4 * Math.abs(jY.col - i[0]) + 0.6 * Math.abs(jY.row - i[1])))
                }
            }
            )([jz, jj]));
            jq.zoom = jh;
            jq.tileTypeName = jX;
            return jq
        },
        calcXYZTilesInfo: function(jp, ji, jo, jt, jh, jw) {
            var jk = jw.width;
            var ju = jw.height;
            var jj = Math.floor(jo);
            var jl = null;
            if (jh.transform.target === "EPSG3857") {
                var je = dd.transformBDmcPoint(jp, jh.transform);
                var jf = dd.getRangeExtent(je, jk, ju, jj, jh.transform);
                jl = [jf.minX, jf.minY, jf.maxX, jf.maxY]
            } else {
                if (jh.transform.source === "BD09MC") {
                    var je = [jp.lng, jp.lat];
                    jl = [ji.sw.lng, ji.sw.lat, ji.ne.lng, ji.ne.lat]
                } else {
                    var je = dd.transformBDmcPoint(jp, jh.transform);
                    var jg = dd.transformBDmcPoint(ji.ne, jh.transform);
                    var jn = dd.transformBDmcPoint(ji.sw, jh.transform);
                    jl = dd.getLoopBox(je, [jn[0], jn[1], jg[0], jg[1]])
                }
            }
            if (!je || !jl) {
                return []
            }
            jj = jj + jh.spanLevel;
            var T = dd.getTileRangeForExtentFactory(jl, jj, jh.transform);
            var e = [];
            var jx = dd.getResolutionScale(jj, jh.transform);
            for (var js = T.minX; js <= T.maxX; js++) {
                for (var jq = T.minY; jq <= T.maxY; jq++) {
                    var jr = {
                        col: js,
                        row: jq,
                        zoom: jj,
                        useZoom: jj,
                        tileTypeName: jt,
                        loopOffsetX: 0,
                        tileSize: 256 * jx,
                        transform: jh.transform,
                        combine: false,
                        dataIndex: 0
                    };
                    e.push(jr);
                    var jm = "id_" + js + "_" + jq + "_" + jj;
                    e[jm] = true
                }
            }
            var jv = dd.getTileCoordForCoordAndZ(je, jj);
            e.sort((function(i) {
                return function(jy, jz) {
                    return ((0.4 * Math.abs(jy.col - i[0]) + 0.6 * Math.abs(jy.row - i[1])) - (0.4 * Math.abs(jz.col - i[0]) + 0.6 * Math.abs(jz.row - i[1])))
                }
            }
            )([jv[1], jv[2]]));
            e.zoom = jj;
            e.tileTypeName = jt;
            return e
        },
        getCurrentViewTilesInfo: function(i) {
            var e = this.tilesInfoCache[i.getName()];
            if (!e) {
                return this.calcTilesInfo(i)
            }
            return e
        },
        ifTileInMapBounds: function(e, jg, T, jf) {
            var i = jg.normalizedBottomLeft;
            var jr = jg.normalizedTopRight;
            var jj = jg.normalizedTopLeft;
            var jh = jg.normalizedBottomRight;
            var je = false;
            var jq = new cf(e.minX,e.minY);
            var jn = new cf(e.maxX,e.maxY);
            var ji = new cf(jn.lng,jq.lat);
            var jo = new cf(jq.lng,jn.lat);
            var jl = [jo, jn, ji, jq];
            for (var jp = 0, jk = jl.length; jp < jk; jp++) {
                var jm = jp + 1;
                if (jm === jk) {
                    jm = 0
                }
                var js = jp;
                var jt = ie(jl[jm], jl[js], jj, i);
                if (jt) {
                    je = true;
                    break
                }
                jt = ie(jl[jm], jl[js], jh, jr);
                if (jt) {
                    je = true;
                    break
                }
                jt = ie(jl[jm], jl[js], jr, jj);
                if (jt) {
                    je = true;
                    break
                }
                jt = ie(jl[jm], jl[js], i, jh);
                if (jt) {
                    je = true;
                    break
                }
            }
            return je
        },
        getTileLayer: function(jf) {
            for (var je = 0, e = this.tileLayers.length; je < e; je++) {
                var T = this.tileLayers[je];
                if (T.mapType === jf) {
                    return T
                }
            }
            return null
        },
        getZoomState: function(i) {
            var e = i - this.lastZoom;
            if (e > 0) {
                this.zoomState = 1
            } else {
                if (e < 0) {
                    this.zoomState = -1
                }
            }
            this.lastZoom = i;
            return this.zoomState
        }
    });
    function gK(e) {
        this._map = e;
        this._spotsId = null;
        this._init()
    }
    gK.prototype._init = function() {
        var e = this._map;
        e.addEventListener("onspotsdataready", function(T) {
            var i = T.spots;
            if (this._spotsId) {
                e.removeSpots(this._spotsId)
            }
            this._spotsId = e.addSpots(i)
        })
    }
    ;
    bp.register(function(e) {
        if (!e.config.enableIconClick) {
            return
        }
        e._mapIcon = new gK(e)
    });
    function cL(e) {
        this._indoorData = {};
        this._map = e;
        this.currentUid = null;
        this.currentFloor = null;
        this._indoorControl = null;
        this.enterMethod = null;
        this.showMask = false;
        this._isMobile = bK();
        this._autoEnterZoom = 19;
        if (this._isMobile) {
            this._autoEnterZoom = 17
        }
        this._init(e);
        window._indoorMgr = this
    }
    cL.prototype._init = function(i) {
        var e = this;
        i.on("indoor_status_changed", function(jh) {
            var T = jh.uid;
            var jf = jh.floor;
            if (T === null) {
                T = e.currentUid;
                if (e._indoorData[T]) {
                    jf = e._indoorData[T].defaultFloor
                }
                if (e._indoorControl) {
                    e._indoorControl.hide()
                }
                e.currentUid = null;
                e.currentFloor = null;
                e.enterMethod = null
            } else {
                if (e._indoorData[T]) {
                    var jg = e._indoorData[T];
                    jf = (typeof jf === "number") ? jf : jg.defaultFloor;
                    if (!e._indoorControl) {
                        if (i.config.showControls && i._displayOptions.indoor) {
                            e._indoorControl = new an(i,jg)
                        }
                    } else {
                        e._indoorControl.setInfo(jg);
                        e._indoorControl.show()
                    }
                    e.currentUid = T;
                    e.currentFloor = jf
                }
            }
            if (!e._indoorData || !e._indoorData[T] || e._indoorData[T].currentFloor === jf) {
                this.fire(new fa("onrefresh"));
                return
            }
            var je = new fa("onindoor_data_refresh");
            je.uid = T;
            je.floor = jf;
            je.tileKey = e._indoorData[T].tileKey;
            e._indoorData[T].currentFloor = jf;
            e.currentFloor = jf;
            this.fire(je)
        });
        i.on("spotclick", function(je) {
            var T = null;
            if (je.curAreaSpot && this.areaSpots[je.curAreaSpot]) {
                T = this.areaSpots[je.curAreaSpot].userData.uid
            }
            if (T === e.currentUid) {
                if (je.curAreaSpot) {
                    e.enterMethod = "byClick"
                }
                return
            }
            if (T === null) {
                if (e.currentUid && e.enterMethod === "byClick") {
                    i.showIndoor(null);
                    e.enterMethod = null
                }
            } else {
                e.enterMethod = "byClick";
                if (e.currentUid) {
                    i.showIndoor(e.currentUid, e._indoorData[e.currentUid].defaultFloor)
                }
                i.showIndoor(T, e._indoorData[T].defaultFloor)
            }
        });
        i.on("moveend", function() {
            if (this.getZoom() >= e._autoEnterZoom) {
                e._checkIndoorByMove()
            }
        });
        i.on("zoomend", function() {
            if (this.getZoom() >= e._autoEnterZoom) {
                e._checkIndoorByMove()
            } else {
                if (e.enterMethod !== "byClick" && e.currentUid !== null) {
                    this.showIndoor(null)
                }
            }
        })
    }
    ;
    cL.prototype._checkIndoorByMove = function() {
        var T = this._map;
        var jk = T.getSize();
        var jp = {
            x: jk.width / 2,
            y: jk.height / 2
        };
        var jo = Math.max(jk.width, jk.height);
        var jq = [];
        for (var jl in this._indoorData) {
            var e = this._indoorData[jl].center;
            var je = T.pointToPixelIn(new bp.Point(e[0],e[1]));
            var jh = b2(jp, je);
            jq.push({
                uid: jl,
                distance: jh
            })
        }
        if (jq.length === 0) {
            return
        }
        jq.sort(function(jr, i) {
            return jr.distance - i.distance
        });
        var jg = jq[0];
        var jm = T.getCenterIn();
        var jf = false;
        for (var jj = 0; jj < this._indoorData[jg.uid].contour.length; jj++) {
            if (bC([jm.lng, jm.lat], this._indoorData[jg.uid].contour[jj])) {
                jf = true;
                break
            }
        }
        if (jf === false && jg.uid === "e96b44200baa3b4082288acc") {
            var ji = this._indoorData[jg.uid].boundsMin;
            var jn = this._indoorData[jg.uid].boundsMax;
            if (jm.lng > ji[0] && jm.lat > ji[1] && jm.lng < jn[0] && jm.lat < jn[1]) {
                jf = true
            }
        }
        if (jf) {
            if (this.enterMethod !== "byClick") {
                if (this.currentUid !== null && this.currentUid !== jg.uid) {
                    this._map.showIndoor(this.currentUid, this._indoorData[this.currentUid].defaultFloor)
                }
                if (this.currentUid !== jg.uid) {
                    this._map.showIndoor(jg.uid, this._indoorData[jg.uid].defaultFloor)
                }
                this.enterMethod = "byMove"
            }
        } else {
            if (this.enterMethod !== "byClick") {
                this._map.showIndoor(null)
            }
        }
    }
    ;
    cL.prototype.setData = function(je) {
        if (je === null) {
            return
        }
        for (var T in je) {
            if (T === "tileInfo") {
                continue
            }
            var jf = je[T].tileKey;
            if (this._indoorData[T]) {
                if (!this._indoorData[T][jf]) {
                    this._indoorData[T].tileKeys.push(jf);
                    this._indoorData[T][jf] = true
                }
            } else {
                this._indoorData[T] = je[T];
                this._indoorData[T].tileKeys = [je[T].tileKey];
                this._indoorData[T][jf] = true;
                for (var e = 0; e < this._indoorData[T].contour.length; e++) {
                    this._map.addAreaSpot(this._indoorData[T].contour[e], {
                        id: T + e,
                        userData: {
                            uid: T
                        }
                    })
                }
            }
        }
        if (this._map.getZoom() >= this._autoEnterZoom) {
            this._checkIndoorByMove()
        }
    }
    ;
    cL.prototype.removeData = function(T, jf) {
        if (!this._indoorData[T]) {
            return
        }
        var je = this._indoorData[T];
        for (var e = 0; e < je.tileKeys.length; e++) {
            if (je.tileKeys[e] === jf) {
                je.tileKeys.splice(e, 1);
                break
            }
        }
        delete je[jf];
        if (je.tileKeys.length === 0) {
            delete this._indoorData[T]
        }
    }
    ;
    cL.prototype.getIndoorData = function(e) {
        return this._indoorData[e] || null
    }
    ;
    cL.prototype.getData = function() {
        return this._indoorData
    }
    ;
    bp.register(function(e) {
        e._indoorMgr = new cL(e)
    });
    var aP = (function() {
        var je = {};
        var jn = {};
        var jj = {};
        function jl(jp) {
            if (Object.prototype.toString.call(jp) === "[object Object]") {
                for (var jo in jp) {
                    return false
                }
                return true
            } else {
                return false
            }
        }
        function jk(jv, jw, jz, js, jy) {
            var jo = jo || null;
            js = js || jo;
            var jq;
            if (js) {
                jq = jm(jv, jw, jz, js)
            } else {
                jq = T(jv, jw, jz, jy)
            }
            var ju = jq.drawId;
            var jp = jq.style;
            var jx = jq.styleUpdate;
            var jA = [];
            if (!ju) {
                return jA
            }
            for (var jr = 0; jr < ju.length; jr++) {
                var jt = jx[ju[jr]] || jp[ju[jr]];
                if (jt) {
                    switch (jw) {
                    case "polygon":
                        jt = jf(jt, jv);
                        break;
                    case "line":
                        jt = ji(jt, jv);
                        break;
                    case "pointText":
                        jt = jg(jt, jv);
                        break;
                    case "point":
                        jt = e(jt, jv);
                        break;
                    case "polygon3d":
                        jt = jh(jt, jv);
                        break
                    }
                    if (jt) {
                        jt.did = ju[jr];
                        jA[jA.length] = jt
                    }
                }
            }
            return jA
        }
        function jm(jp, jr, js, jo) {
            var jq = jo[2];
            switch (jr) {
            case "point":
                jq = jq[0];
                break;
            case "pointText":
                jq = jq[1];
                break;
            case "line":
                jq = jq[3];
                break;
            case "polygon":
                jq = jq[4];
                break;
            case "polygon3d":
                jq = jq[5];
                break
            }
            var ju = js - 1;
            if (jr === "line" && js === 12) {
                ju = js
            }
            var jv = jo[1][ju][0];
            var jt = jv[jp];
            if (!jt) {
                if (jr === "point" || jr === "pointText") {
                    jv = jo[1][js][0];
                    jt = jv[jp]
                }
            }
            return {
                drawId: jt,
                style: jq,
                styleUpdate: []
            }
        }
        function T(js, jt, jw, jv) {
            if (!jv) {
                return {
                    drawId: null,
                    style: [],
                    styleUpdate: []
                }
            }
            var ju;
            var jq = jv.baseFs;
            if (jl(jv.zoomRegion)) {
                ju = jv.StyleBody || []
            } else {
                ju = jv.zoomStyleBody[jw] || []
            }
            var jp = jq[2];
            switch (jt) {
            case "point":
                jp = jp[0];
                ju = ju[0] || {};
                break;
            case "pointText":
                jp = jp[1];
                ju = ju[1] || {};
                break;
            case "line":
                jp = jp[3];
                ju = ju[3] || {};
                break;
            case "polygon":
                jp = jp[4];
                ju = ju[4] || {};
                break;
            case "polygon3d":
                jp = jp[5];
                ju = ju[5] || {};
                break
            }
            var jo = jq[1][jw - 1][0];
            var jr = jo[js];
            return {
                drawId: jr,
                style: jp,
                styleUpdate: ju
            }
        }
        function jg(jp, jo) {
            if (!jp || jp.length === 0) {
                return null
            }
            return {
                sid: jo,
                fontRgba: i(jp[0]),
                haloRgba: i(jp[1]),
                backRgba: i(jp[2]),
                fontSize: jp[3],
                haloSize: jp[4],
                fontWeight: jp[5],
                fontStyle: jp[6],
                density: jp[7]
            }
        }
        function e(jp, jo) {
            return {
                sid: jo,
                rank: jp[0],
                ucflag: jp[1],
                icon: jp[2],
                iconType: jp[3],
                nineGG: jp[4],
                density: jp[5],
                zoom: jp[6]
            }
        }
        function ji(jp, jo) {
            return {
                sid: jo,
                borderRgba: i(jp[0]),
                fillRgba: i(jp[1]),
                borderWidth: jp[2],
                fillWidth: jp[3],
                borderCap: jp[4],
                fillCap: jp[5],
                haveBorderLine: jp[6],
                haveBorderTexture: jp[7],
                haveFillTexture: jp[8],
                isUseBorderRgba: jp[9],
                isUseFillRgba: jp[10],
                borderTexture: jp[11],
                fillTexture: jp[12],
                borderTextureType: jp[13],
                fillTextureType: jp[14],
                isRealWidth: jp[15],
                haveArrow: jp[16],
                needRound: jp[17],
                realBorderWidth: jp[18]
            }
        }
        function jf(jp, jo) {
            return {
                sid: jo,
                fillRgba: i(jp[0]),
                borderRgba: i(jp[1]),
                borderWidth: jp[2],
                borderTexture: jp[3],
                borderTextureType: jp[4],
                waterStyle: jp[5],
                haloStyle: jp[6],
                textureStyle: jp[7],
                thickRgba: i(jp[8])
            }
        }
        function jh(jp, jo) {
            return {
                sid: jo,
                filter: jp[0],
                ratio: jp[1],
                haveBorder: jp[2],
                borderWidth: jp[3],
                borderRgba: i(jp[4]),
                fillTop: i(jp[5]),
                fillSide: i(jp[6]),
                polyTexture: jp[7]
            }
        }
        function i(jt) {
            var js = jt;
            if (jj[js]) {
                return jj[js]
            }
            jt = jt >>> 0;
            var jr = (jt) & 255;
            var jq = (jt >> 8) & 255;
            var jo = (jt >> 16) & 255;
            var jp = (jt >> 24) & 255;
            jj[js] = [jr, jq, jo, jp];
            return jj[js]
        }
        return {
            getStyleFromCache: function(jv, jq, jt, ju, jp, js, jo) {
                jv = jv || "default";
                var jr = jv + "-" + jq + "-" + jt + "-" + ju;
                if (js) {
                    jr += "-indoor"
                }
                if (jp) {
                    if (!jn[jr]) {
                        jn[jr] = jk(jq, jt, ju, jp)
                    }
                    return jn[jr]
                }
                if (!je[jr]) {
                    je[jr] = jk(jq, jt, ju, jp, jo)
                }
                return je[jr]
            }
        }
    }
    )();
    bp.register(function(i) {
        var e = new hp(i)
    });
    function hp(e) {
        e.container.appendChild(this.render());
        this.bind(e)
    }
    hp.prototype.render = function() {
        var i = document.createElement("div");
        i.className = "click-ripple-container";
        var e = document.createElement("div");
        e.className = "click-ripple";
        i.appendChild(e);
        this._div = i;
        this._ripple = e;
        return i
    }
    ;
    hp.prototype.bind = function(i) {
        var e = this;
        i.addEventListener("spotclick", function(T) {
            if (!T.spots || T.spots.length === 0) {
                return
            }
            e._div.style.left = T.pixel.x + "px";
            e._div.style.top = T.pixel.y + "px";
            ev.ac(e._ripple, "ripple-playing")
        });
        ev.on(e._ripple, "transitionend", function() {
            ev.rc(e._ripple, "ripple-playing")
        })
    }
    ;
    function bJ(e) {
        cM.call(this);
        if (!e) {
            return
        }
        this._opts = {};
        this._map = e;
        this._maxLat = 84.6;
        this._minLat = -80.6;
        this._maxLatMC = ig.convertLL2MC(new b9(this._maxLat,0)).lat;
        this._minLatMC = ig.convertLL2MC(new b9(this._minLat,0)).lat
    }
    bJ.inherits(cM, "ToolbarItem");
    ev.extend(bJ.prototype, {
        open: function() {
            if (this._isOpen == true) {
                return true
            }
            if (this._map._toolInUse) {
                return false
            }
            this._map._toolInUse = true;
            this._isOpen = true;
            return true
        },
        close: function() {
            if (!this._isOpen) {
                return
            }
            this._map._toolInUse = false;
            this._isOpen = false
        },
        _checkStr: function(e) {
            if (!e) {
                return ""
            }
            return e.replace(/</g, "&lt;").replace(/>/g, "&gt;")
        }
    });
    function b0(T, i) {
        bJ.call(this, T);
        i = i || {};
        this._opts = ev.extend(ev.extend(this._opts || {}, {
            autoClear: false,
            tips: "测距",
            followText: "单击确定起点，双击结束绘制",
            unit: "metric",
            showResult: true,
            lineColor: "blue",
            lineStroke: 2,
            opacity: 1,
            lineStyle: "solid",
            cursor: w.distCursor,
            styleCodes: {
                lnCode: 0,
                spCode: 0,
                slCode: 0,
                tlCode: 0
            },
            enableMassClear: true
        }), i);
        if (this._opts.showResult === false) {
            if (typeof i.tips === "undefined") {
                this._opts.tips = "绘制折线"
            }
            if (!i.cursor) {
                this._opts.cursor = "crosshair"
            }
        }
        if (this._opts.lineStroke <= 0) {
            this._opts.lineStroke = 2
        }
        if (this._opts.opacity > 1) {
            this._opts.opacity = 1
        } else {
            if (this._opts.opacity < 0) {
                this._opts.opacity = 0
            }
        }
        if (this._opts.lineStyle !== "solid" && this._opts.lineStyle !== "dashed") {
            this._opts.lineStyle = "solid"
        }
        this._checked = false;
        this._drawing = null;
        this.followTitle = null;
        this._totalDis = {};
        this._points = [];
        this._paths = [];
        this._dots = [];
        this._segDistance = [];
        this._overlays = [];
        this._units = {
            metric: {
                name: "metric",
                conv: 1,
                incon: 1000,
                u1: "米",
                u2: "公里"
            },
            us: {
                name: "us",
                conv: 3.2808,
                incon: 5279.856,
                u1: "英尺",
                u2: "英里"
            }
        };
        if (!this._units[this._opts.unit]) {
            this._opts.unit = "metric"
        }
        this._dLineColor = "#ff6319";
        this._dLineStroke = 3;
        this._dOpacity = 0.8;
        this._dLineStyle = "solid";
        this._dCursor = w.distCursor;
        if (this._opts.showResult) {
            this._opts.followText = "单击确定起点"
        }
        this._followTextM = "单击确定地点，双击结束";
        this._sectionMarkerTip = "单击可删除此点，拖拽可调整位置";
        this._movingTimerId = null;
        if (this._opts.showResult) {
            this.text = "测距"
        } else {
            this.text = "绘线"
        }
        this._isOpen = false;
        var e = this;
        gn.load("tools", function() {
            e._draw()
        })
    }
    b0.inherits(bJ, "PolylineTItem");
    ev.extend(b0.prototype, {
        setLineColor: function(e) {
            this._opts.lineColor = e
        },
        setLineStroke: function(e) {
            if (Math.round(e) > 0) {
                this._opts.lineStroke = Math.round(e)
            }
        },
        setOpacity: function(e) {
            if (e >= 0 && e <= 1) {
                this._opts.opacity = e
            }
        },
        setLineStyle: function(e) {
            if (e === "solid" || e === "dashed") {
                this._opts.lineStyle = e
            }
        },
        clear: function() {
            for (var T = 0, e = this._overlays.length; T < e; T++) {
                if (this._overlays[T]) {
                    this._map.removeOverlay(this._overlays[T])
                }
            }
            this._overlays.length = 0;
            for (var T = 0, e = this._dots.length; T < e; T++) {
                if (this._dots[T] && this._dots[T].parentNode) {
                    this._dots[T].parentNode.removeChild(this._dots[T])
                }
            }
            this._dots.length = 0
        },
        setCursor: function(e) {
            if (this._opts.showResult === true) {
                return
            }
            this._opts.cursor = e
        },
        getCursor: function() {
            if (this._opts.showResult === true) {
                return this._dCursor
            }
            var e = this._opts.cursor.match(/^url\((.+)\)(,.*)?/);
            if (e !== null) {
                return e[1]
            } else {
                return this._opts.cursor
            }
        },
        showResult: function(e) {
            this._opts.showResult = !!e
        }
    });
    function bu() {
        var jf = 3;
        var jm = 256;
        var je = Math.pow(2, 18 - jf) * jm;
        var jn = 2;
        var jl = (jn + 1) * je;
        var T = ig.convertLL2MC(new cf(180,0));
        var jj = T.lng;
        var jh = jl - jj;
        var jk = -3;
        var e = jk * je;
        var jg = ig.convertLL2MC(new cf(-180,0));
        var ji = jg.lng;
        var i = ji - e;
        this._validPixels = jj / Math.pow(2, 18 - jf);
        this._mc180X = jj;
        this._mcM180X = ji;
        this._loopOffset = jh + i;
        this._mcTSpan = jj - ji;
        this._spaceDistance = jh;
        this._mSpaceDistance = i
    }
    bu.prototype = {
        calcLoopParam: function(je, i, jl) {
            jl = jl || 256;
            var ji = 0;
            var jf = 3;
            var jh = 6;
            var jg = jh * Math.pow(2, (i - jf)) * 256 / jl;
            var jk = jg / 2 - 1;
            var jj = -jg / 2;
            while (je > jk) {
                je -= jg;
                ji -= this._loopOffset
            }
            while (je < jj) {
                je += jg;
                ji += this._loopOffset
            }
            var e = ji;
            ji = Math.round(ji / Math.pow(2, 18 - i));
            return {
                offsetX: ji,
                geoOffsetX: e,
                col: je,
                T: jg,
                maxCol: jk,
                minCol: jj
            }
        },
        calcLoopCenterPoint: function(i) {
            var e = i.lng;
            while (e > this._mc180X) {
                e -= this._mcTSpan
            }
            while (e < this._mcM180X) {
                e += this._mcTSpan
            }
            i.lng = e;
            return i
        },
        calcLoopMapBounds: function(T, je) {
            var i = je || T.getCenter();
            var e = T.sw.lng;
            var jf = T.ne.lng;
            while (i.lng > this._mc180X) {
                i.lng -= this._mcTSpan;
                e -= this._mcTSpan;
                jf -= this._mcTSpan
            }
            while (i.lng < this._mcM180X) {
                i.lng += this._mcTSpan;
                e += this._mcTSpan;
                jf += this._mcTSpan
            }
            T.sw.lng = e;
            T.ne.lng = jf;
            if (T.pointBottomLeft) {
                T.pointBottomLeft = this.calcLoopCenterPoint(T.pointBottomLeft);
                T.pointTopLeft = this.calcLoopCenterPoint(T.pointTopLeft);
                T.pointTopRight = this.calcLoopCenterPoint(T.pointTopRight);
                T.pointBottomRight = this.calcLoopCenterPoint(T.pointBottomRight)
            }
            return T
        },
        calcLoopTiles: function(jm, e, jq, jj) {
            jq = jq || 256;
            var jf = jj || Math.pow(2, 18 - e) * jq;
            var jl = Math.floor(this._mc180X / jf);
            var jh = Math.floor(this._mcM180X / jf);
            var jn = Math.floor(this._loopOffset / jf);
            var jo = [];
            for (var ji = 0; ji < jm.length; ji++) {
                var jp = jm[ji];
                var je = jp[0];
                var jr = jp[1];
                if (je >= jl) {
                    var jk = je + jn;
                    if (this.isTileBlank(jk, e, jq) === true) {
                        continue
                    }
                    var T = "id_" + jk + "_" + jr + "_" + e;
                    if (!jm[T]) {
                        jm[T] = true;
                        jo.push([jk, jr, e, 0])
                    }
                } else {
                    if (je <= jh) {
                        var jk = je - jn;
                        if (this.isTileBlank(jk, e, jq) === true) {
                            continue
                        }
                        var T = "id_" + jk + "_" + jr + "_" + e;
                        if (!jm[T]) {
                            jm[T] = true;
                            jo.push([jk, jr, e, 0])
                        }
                    }
                }
            }
            for (var ji = 0, jg = jo.length; ji < jg; ji++) {
                jm.push(jo[ji])
            }
            for (var ji = jm.length - 1; ji >= 0; ji--) {
                var je = jm[ji][0];
                if (this.isTileBlank(je, e, jq)) {
                    jm.splice(ji, 1)
                }
            }
            return jm
        },
        isTileBlank: function(T, jf, e) {
            var jg = Math.pow(2, jf - 3);
            var i = Math.round(this._validPixels * jg);
            var je = 6 * jg * 256 / e;
            while (T > je / 2 - 1) {
                T -= je
            }
            while (T < -(je / 2)) {
                T += je
            }
            if (T > 0 && T * e > i) {
                return true
            }
            if (T < 0 && Math.abs((T + 1) * e) > i) {
                return true
            }
            return false
        },
        isAddWidth: function(e, i) {
            return e < this._mcM180X || i > this._mc180X
        },
        pixelWidth: function(e, i) {
            if (e < 0) {
                e = -e
            }
            return Math.abs(e - this._mc180X) / (Math.pow(2, 18 - i))
        },
        getSpaceDistanceInPixel: function(i) {
            var e = Math.round((this._spaceDistance + this._mSpaceDistance) / Math.pow(2, 18 - i));
            return e
        }
    };
    var ey = new bu();
    var fU = (function() {
        function jk(jp) {
            var jo = jp ? jp : {};
            if (jo.reference) {
                this.reference = jo.reference
            } else {
                this.reference = null
            }
            return this
        }
        jk.prototype.readFeatureFromObject = function(jp, js) {
            var jo = null;
            if (jp.type === "Feature") {
                jo = jp
            } else {
                jo = {
                    type: "Feature",
                    geometry: jp,
                    properties: null,
                }
            }
            js = js || {};
            js.reference = (js.reference === undefined ? this.reference : js.reference);
            if (js.isPoints) {
                js.onlyGeometry = true
            }
            var jt = i(jo.geometry, js, jo.properties);
            var jr = e(jf(jo), js);
            if (!jt) {
                return null
            }
            if (js && js.onlyGeometry && !js.isPoints) {
                return {
                    geometry: jt,
                    type: jo.geometry.type,
                    bBox: jr
                }
            }
            if (jt instanceof Array) {
                for (var jq = 0; jq < jt.length; jq++) {
                    if (js.isPoints) {
                        jt[jq] = {
                            points: jt[jq],
                            properties: jo.properties
                        }
                    } else {
                        jt[jq].properties = jo.properties
                    }
                }
            } else {
                if (js.isPoints) {
                    jt = {
                        points: jt,
                        properties: jo.properties
                    }
                } else {
                    jt.properties = jo.properties
                }
            }
            return jt
        }
        ;
        jk.prototype.readFeaturesFromObject = function(jq, jy, jo) {
            var jv = jq;
            var jp = null;
            if (jv.type === "FeatureCollection") {
                var js = jq;
                jp = [];
                var ju = js.features;
                for (var jt = 0, jw = ju.length; jt < jw; ++jt) {
                    var jx = this.readFeatureFromObject(ju[jt], jy);
                    if (jx instanceof Array) {
                        for (var jr = 0; jr < jx.length; jr++) {
                            jo && jo(jx[jr]);
                            jp.push(jx[jr])
                        }
                    } else {
                        jo && jo(jx);
                        jp.push(jx)
                    }
                }
            } else {
                var jx = this.readFeatureFromObject(jq, jy);
                if (jx instanceof Array) {
                    for (var jt = 0; jt < jx.length; jt++) {
                        jo && jo(jx[jt]);
                        jp.push(jx[jt])
                    }
                } else {
                    jo && jo(jx);
                    jp = [jx]
                }
            }
            return jp
        }
        ;
        function i(jo, jq, jp) {
            if (!jo) {
                return null
            }
            var jr;
            switch (jo.type) {
            case fg.POINT:
                jr = jh(jo, jq, jp);
                break;
            case fg.LINE_STRING:
                jr = T(jo, jq, jp);
                break;
            case fg.POLYGON:
                jr = ji(jo, jq, jp);
                break;
            case fg.MULTI_POINT:
                jr = jj(jo, jq, jp);
                break;
            case fg.MULTI_LINE_STRING:
                jr = jl(jo, jq, jp);
                break;
            case fg.MULTI_POLYGON:
                jr = jm(jo, jq, jp);
                break;
            default:
                throw new Error("geojson类型错误: " + jo.type)
            }
            return jr
        }
        function jh(jp, js, jq) {
            var jt = jp.coordinates;
            if (js.reference && js.reference !== "BD09LL") {
                jt = gcoord.transform(jt, gcoord[js.reference || "EPSG4326"], gcoord.BD09LL)
            }
            if (js && js.onlyGeometry) {
                return new cf(jt[0],jt[1])
            }
            var jr = js;
            if (js.markerStyle) {
                jr = js.markerStyle;
                if (js.markerStyle instanceof Function) {
                    jr = js.markerStyle(jq) || {}
                }
            }
            var jo = new r(new cf(jt[0],jt[1]),jr);
            return jo
        }
        function jn(js, jp) {
            var jr = [];
            for (var jo = 0; jo < js.length; jo++) {
                var jq = js[jo];
                if (jp.reference && jp.reference !== "BD09LL") {
                    jq = gcoord.transform(jq, gcoord[jp.reference || "EPSG4326"], gcoord.BD09LL)
                }
                jr.push(new cf(jq[0],jq[1]))
            }
            return jr
        }
        function T(jp, js, jq) {
            var jt = jp.coordinates;
            if (js && js.onlyGeometry) {
                return jn(jt, js)
            }
            var jr = js;
            if (js.polylineStyle) {
                jr = js.polylineStyle;
                if (js.polylineStyle instanceof Function) {
                    jr = js.polylineStyle(jq) || {}
                }
            }
            var jo = new bd(jn(jt, js),jr);
            return jo
        }
        function ji(jo, js, jq) {
            var jt = jo.coordinates;
            if (js && js.onlyGeometry) {
                return jn(jt[0], js)
            }
            var jr = js;
            if (js.polygonStyle) {
                jr = js.polygonStyle;
                if (js.polygonStyle instanceof Function) {
                    jr = js.polygonStyle(jq) || {}
                }
            }
            var jp = new hR(jn(jt[0], js),jr);
            return jp
        }
        function jj(jq, jw, jt) {
            var ju = jq.coordinates;
            var jo = [];
            for (var js = 0; js < ju.length; js++) {
                var jv = ju[js];
                if (jw.reference && jw.reference !== "BD09LL") {
                    jv = gcoord.transform(jv, gcoord[jw.reference || "EPSG4326"], gcoord.BD09LL)
                }
                if (jw && jw.onlyGeometry) {
                    jo.push(new cf(jv[0],jv[1]))
                } else {
                    var jp = jw;
                    if (jw.markerStyle) {
                        jp = jw.markerStyle;
                        if (jw.markerStyle instanceof Function) {
                            jp = jw.markerStyle(jt) || {}
                        }
                    }
                    var jr = new r(new cf(jv[0],jv[1]),jp);
                    jo.push(jr)
                }
            }
            return jo
        }
        function jl(jp, jt, jr) {
            var jv = jp.coordinates;
            var ju = [];
            for (var jq = 0; jq < jv.length; jq++) {
                if (jt && jt.onlyGeometry) {
                    ju.push(jn(jv[jq], jt))
                } else {
                    var js = jt;
                    if (jt.polylineStyle) {
                        js = jt.polylineStyle;
                        if (jt.polylineStyle instanceof Function) {
                            js = jt.polylineStyle(jr) || {}
                        }
                    }
                    var jo = new bd(jn(jv[jq], jt),js);
                    ju.push(jo)
                }
            }
            return ju
        }
        function jm(jr, jy, jv) {
            var jx = jr.coordinates;
            var jo = [];
            for (var ju = 0; ju < jx.length; ju++) {
                var jz = [];
                for (var js = 0, jq = jx[ju]; js < jq.length; js++) {
                    var jt = jn(jq[js], jy);
                    if (jy && jy.onlyGeometry) {
                        if (jq.length === 1) {
                            jo.push(jt)
                        } else {
                            jz.push(jt)
                        }
                    } else {
                        if (jq.length === 1) {
                            var jp = jy;
                            if (jy.polygonStyle) {
                                jp = jy.polygonStyle;
                                if (jy.polygonStyle instanceof Function) {
                                    jp = jy.polygonStyle(jv) || {}
                                }
                            }
                            var jw = new hR(jt,jp);
                            jo.push(jw)
                        } else {
                            jz.push(jt)
                        }
                    }
                }
                if (jq.length !== 1) {
                    if (jy && jy.onlyGeometry) {
                        jo.push(jz)
                    } else {
                        var jp = jy;
                        if (jy.polygonStyle) {
                            jp = jy.polygonStyle;
                            if (jy.polygonStyle instanceof Function) {
                                jp = jy.polygonStyle(jv) || {}
                            }
                        }
                        var jw = new hR(jz,jp);
                        jo.push(jw)
                    }
                }
            }
            return jo
        }
        function je(jo) {}
        function e(js, jp) {
            var jr = [];
            for (var jo = 0; jo < js.length; jo += 2) {
                var jq = [js[jo], js[jo + 1]];
                if (jp.reference) {
                    jq = gcoord.transform(jq, gcoord[jp.reference || "EPSG4326"], gcoord.BD09LL)
                }
                jr.push(jq[0]);
                jr.push(jq[1])
            }
            return jr
        }
        function jf(jp) {
            var js = [Infinity, Infinity, -Infinity, -Infinity];
            jg(jp, function(jt) {
                if (js[0] > jt[0]) {
                    js[0] = jt[0]
                }
                if (js[1] > jt[1]) {
                    js[1] = jt[1]
                }
                if (js[2] < jt[0]) {
                    js[2] = jt[0]
                }
                if (js[3] < jt[1]) {
                    js[3] = jt[1]
                }
            });
            if (this.reference) {
                var jr = [];
                for (var jq = 0; jq < js.length; jq += 2) {
                    var jo = gcoord.transform([js[jq], js[jq + 1]], gcoord[this.reference || "EPSG4326"], gcoord.BD09LL);
                    jr.push(jo[0]);
                    jr.push(jo[1])
                }
                js = jr
            }
            return js
        }
        function jg(jx, jC) {
            var jt, jq, jp, jw, jo, jz, jB, jA, js, jv, jr = jx.type === "FeatureCollection", ju = jx.type === "Feature", jy = jr ? jx.features.length : 1;
            for (jt = 0; jt < jy; jt++) {
                js = (jr ? jx.features[jt].geometry : (ju ? jx.geometry : jx));
                jv = js.type === "GeometryCollection";
                jB = jv ? js.geometries.length : 1;
                for (jw = 0; jw < jB; jw++) {
                    jz = jv ? js.geometries[jw] : js;
                    jA = jz.coordinates;
                    if (jz.type === "Point") {
                        jC(jA)
                    } else {
                        if (jz.type === "LineString" || jz.type === "MultiPoint") {
                            for (jq = 0; jq < jA.length; jq++) {
                                jC(jA[jq])
                            }
                        } else {
                            if (jz.type === "Polygon" || jz.type === "MultiLineString") {
                                for (jq = 0; jq < jA.length; jq++) {
                                    for (jp = 0; jp < jA[jq].length; jp++) {
                                        jC(jA[jq][jp])
                                    }
                                }
                            } else {
                                if (jz.type === "MultiPolygon") {
                                    for (jq = 0; jq < jA.length; jq++) {
                                        for (jp = 0; jp < jA[jq].length; jp++) {
                                            for (jo = 0; jo < jA[jq][jp].length; jo++) {
                                                jC(jA[jq][jp][jo])
                                            }
                                        }
                                    }
                                } else {
                                    throw new Error("类型错误")
                                }
                            }
                        }
                    }
                }
            }
        }
        return jk
    }
    )();
    const cE = {
        point: {
            icon: {
                format: "string",
                defaultValue: ""
            },
            iconSize: {
                format: "array",
                defaultValue: [32, 32]
            },
            uid: {
                format: "string",
                defaultValue: "custom-vector-0"
            },
            name: {
                format: "string",
                defaultValue: ""
            },
            fontSize: {
                format: "number",
                defaultValue: 22
            },
            color: {
                format: "string",
                defaultValue: "#0d20c9"
            },
            haloSize: {
                format: "number",
                defaultValue: 2
            },
            strokeColor: {
                format: "string",
                defaultValue: "#fff"
            },
            textOnIcon: {
                format: "string",
                defaultValue: false
            },
            textOnIconSize: {
                format: "array",
                defaultValue: [32, 32]
            },
            textOnIconUrl: {
                format: "string",
                defaultValue: ""
            },
            textMargin: {
                format: "number",
                defaultValue: 0
            },
            direction: {
                format: "number",
                defaultValue: 0
            },
            rank: {
                format: "number",
                defaultValue: 50000
            },
            visibility: {
                format: "boolean",
                defaultValue: true
            }
        },
        polyline: {
            strokeLineJoin: {
                format: "string",
                defaultValue: "miter"
            },
            strokeLineCap: {
                format: "string",
                defaultValue: "round"
            },
            strokeColor: {
                format: "string",
                defaultValue: "#142655"
            },
            strokeWeight: {
                format: "number",
                defaultValue: 2
            },
            strokeOpacity: {
                format: "number",
                defaultValue: 1
            },
            strokeStyle: {
                format: "string",
                defaultValue: "solid"
            },
            dashArray: {
                format: "object",
                defaultValue: [8, 4]
            },
            visibility: {
                format: "boolean",
                defaultValue: true
            }
        },
        polygon: {
            fillColor: {
                format: "string",
                defaultValue: "#142655"
            },
            fillOpacity: {
                format: "number",
                defaultValue: 1
            },
            strokeWeight: {
                format: "number",
                defaultValue: 0
            },
            strokeLineJoin: {
                format: "string",
                defaultValue: "miter"
            },
            strokeLineCap: {
                format: "string",
                defaultValue: "round"
            },
            strokeColor: {
                format: "string",
                defaultValue: "#dec41b"
            },
            strokeOpacity: {
                format: "number",
                defaultValue: 1
            },
            strokeStyle: {
                format: "string",
                defaultValue: "solid"
            },
            dashArray: {
                format: "object",
                defaultValue: [8, 4]
            },
            visibility: {
                format: "boolean",
                defaultValue: true
            }
        }
    };
    const ca = (function(i) {
        var e = {};
        for (var je in i) {
            e[je] = {};
            for (var T in i[je]) {
                e[je][T] = i[je][T].defaultValue
            }
        }
        return e
    }
    )(cE);
    const fg = {
        POINT: "Point",
        LINE_STRING: "LineString",
        POLYGON: "Polygon",
        MULTI_POINT: "MultiPoint",
        MULTI_LINE_STRING: "MultiLineString",
        MULTI_POLYGON: "MultiPolygon",
        CIRCLE: "Circle",
    };
    var iH = (function() {
        var i = true;
        var jf = 256;
        var e = true;
        var jh = iT("ditu", "normalTraffic");
        var je = jh.udt;
        var ji = "//its.map.baidu.com/traffic/";
        var jg = [[2, "79,210,125,1", 3, 2, 0, [], 0, 0], [2, "79,210,125,1", 3, 2, 0, [], 0, 0], [2, "79,210,125,1", 4, 2, 0, [], 0, 0], [2, "79,210,125,1", 5, 2, 0, [], 0, 0], [2, "79,210,125,1", 6, 2, 0, [], 0, 0], [2, "255,208,69,1", 3, 2, 0, [], 0, 0], [2, "255,208,69,1", 3, 2, 0, [], 0, 0], [2, "255,208,69,1", 4, 2, 0, [], 0, 0], [2, "255,208,69,1", 5, 2, 0, [], 0, 0], [2, "255,208,69,1", 6, 2, 0, [], 0, 0], [2, "232,14,14,1", 3, 2, 0, [], 0, 0], [2, "232,14,14,1", 3, 2, 0, [], 0, 0], [2, "232,14,14,1", 4, 2, 0, [], 0, 0], [2, "232,14,14,1", 5, 2, 0, [], 0, 0], [2, "232,14,14,1", 6, 2, 0, [], 0, 0], [2, "181,0,0,1", 3, 2, 0, [], 0, 0], [2, "181,0,0,1", 3, 2, 0, [], 0, 0], [2, "181,0,0,1", 4, 2, 0, [], 0, 0], [2, "181,0,0,1", 5, 2, 0, [], 0, 0], [2, "181,0,0,1", 6, 2, 0, [], 0, 0], [2, "255,255,255,1", 4, 0, 0, [], 0, 0], [2, "255,255,255,1", 5.5, 0, 0, [], 0, 0], [2, "255,255,255,1", 7, 0, 0, [], 0, 0], [2, "255,255,255,1", 8.5, 0, 0, [], 0, 0], [2, "255,255,255,1", 10, 0, 0, [], 0, 0]];
        var T = new gN({
            transparentPng: true,
            dataType: 2,
            cacheSize: 256,
            clipTile: true,
            isFlat: true
        });
        T.zIndex = 2;
        T.getTilesUrl = function(jl, jm) {
            if (!jl || jm < 7) {
                return null
            }
            var jk = jl.x;
            var jn = jl.y;
            var jj = ji + "TrafficTileService?level=" + jm + "&x=" + jk + "&y=" + jn + "&time=" + (+new Date());
            if (this.map.getRenderType() === "webgl") {
                jj = ji + "?qt=vtraffic&z=" + jm + "&x=" + jk + "&y=" + jn + "&udt=" + je
            }
            return jj
        }
        ;
        T.setColors = function(jj) {
            for (var jm = 0; jm < jg.length; jm++) {
                var jl = Math.floor(jm / 5);
                var jk = jj[jl];
                if (jk) {
                    if (Object.prototype.toString.call(jk) === "[object String]") {
                        jk = gR.parseCSSColor(jk)
                    }
                    jg[jm][1] = [jk[0], jk[1], jk[2], jk[3] / 255].join(",")
                }
            }
        }
        ;
        T.setEdge = function(jj) {
            e = !!jj
        }
        ;
        T.processData = function(jm) {
            var jq = jm.content;
            var jo = 10;
            if (typeof jm.precision === "number") {
                jo = jm.precision * 10
            }
            var jx = {
                road: [[], []]
            };
            if (!jq) {
                return jx
            }
            var jv = jq.tf;
            if (!jv) {
                return jx
            }
            for (var jn = 0; jn < jv.length; jn++) {
                var jw = jv[jn][1];
                var ju = [];
                var js = 0;
                var jr = 0;
                var jt = jg[jv[jn][3]];
                for (var jl = 0, jj = jw.length; jl < jj / 2; jl++) {
                    js += jw[jl * 2] / jo;
                    jr += jw[jl * 2 + 1] / jo;
                    ju.push(js, 256 - jr)
                }
                var jk = jt[1].split(",");
                jk[3] = jk[3] * 255;
                var jp = jt[2] / 2;
                if (e) {
                    jx.road[0].push([ju, 1, 2, [255, 255, 255, 255], jp + 2])
                }
                jx.road[1].push([ju, 1, 2, jk, jp])
            }
            return jx
        }
        ;
        return T
    }
    )();
    function io() {}
    io.prototype = iH;
    function dz(e) {
        d9.call(this);
        e = e || {};
        this._opts = {};
        this._opts.districts = e.name || "";
        this._opts.kind = e.kind || 0;
        this._config = {};
        this._config.strokeColor = e.strokeColor || "#00f";
        this._config.strokeOpacity = typeof e.strokeOpacity === "number" ? e.strokeOpacity : 1;
        bW(this._config.strokeOpacity, 0, 1);
        this._config.fillColor = e.fillColor || "#ff0";
        this._config.fillOpacity = typeof e.fillOpacity === "number" ? e.fillOpacity : 0.6;
        bW(this._config.fillOpacity, 0, 1);
        this._config.strokeWeight = e.strokeWeight || 1;
        this._config.viewport = e.viewport || false;
        this.disOverlays = [];
        this.eventAndCallback = {};
        var i = this;
        gn.load("layer", function() {
            i._asyncSearch()
        })
    }
    dz.inherits(cM, "DistrictLayer");
    ev.extend(dz.prototype, {
        initialize: function(e) {
            this._map = e;
            this.addDistrict()
        },
        removeDistrict: function(i, e) {
            this._map = i;
            this.deleteDistrict(e)
        },
        toString: function() {
            return "DistrictLayer"
        }
    });
    function aE(e, i) {
        i = i || {};
        this.layerName = e || "unknown";
        this.reference = i.reference;
        this.level = i.level || -99;
        this.visible = (i.visible === undefined ? true : !!i.visible);
        this.minZoom = i.minZoom || 3;
        this.maxZoom = i.maxZoom || 21;
        this.markerStyle = i.markerStyle || {};
        this.polylineStyle = i.polylineStyle || {};
        this.polygonStyle = i.polygonStyle || {};
        this.overlayData = [];
        this._onMap = true;
        this.setData(i.dataSource)
    }
    aE.inherits(ev.BaseClass, "GeoJSONLayer");
    aE.prototype.init = function(jg) {
        if (this.map) {
            return
        }
        this.map = jg;
        var je = this;
        this._onZoomEvent = function() {
            if (je.map.getZoom() >= je.minZoom && je.map.getZoom() <= je.maxZoom) {
                if (!je._onMap) {
                    je.addDataToMap();
                    je._onMap = true
                }
            } else {
                if (je._onMap) {
                    je.removeDataFromMap();
                    je._onMap = false
                }
            }
        }
        ;
        this.map.on("zoomend", this._onZoomEvent);
        var je = this;
        var e = false;
        this._layerMouseEvent = function(jj) {
            if (!je.map || !je._listeners || !je.visible || !je._onMap) {
                return
            }
            if (!je._listeners.onmousemove || Object.keys(je._listeners.onmousemove).length === 0) {
                return
            }
            var ji = je.pickOverlays(jj);
            var i;
            if (ji && ji.length > 0) {
                i = new fa("onmousemove");
                i.features = ji;
                je.map.platform.style.cursor = je.map.config.overlayMoveCursor;
                e = true
            } else {
                if (!e || !je._listeners.onmouseout || Object.keys(je._listeners.onmouseout).length === 0) {
                    return
                }
                je.map.platform.style.cursor = je.map.config.defaultCursor;
                i = new fa("onmouseout");
                i.features = null;
                e = false
            }
            if (i) {
                i.point = jj.point;
                i.pixel = jj.pixel;
                i.latLng = jj.latlng;
                je.dispatchEvent(i)
            }
        }
        ;
        this._layerClickEvent = function(jj) {
            if (!je.map || !je._listeners || !je.visible) {
                return
            }
            if ((!je._listeners.onclick && !je._listeners.dblclick) || (Object.keys(je._listeners.onclick).length === 0 && Object.keys(je._listeners.dblclick).length === 0)) {
                return
            }
            var ji = je.pickOverlays(jj);
            var i = new fa(jj.type);
            i.point = jj.point;
            i.pixel = jj.pixel;
            i.latLng = jj.latlng;
            i.features = ji;
            je.dispatchEvent(i)
        }
        ;
        jg.addEventListener("onmousemove", this._layerMouseEvent);
        jg.addEventListener("onmouseout", this._layerMouseEvent);
        var jf = ["onclick"];
        for (var T = 0; T < jf.length; T++) {
            var jh = jf[T];
            jg.addEventListener(jh, this._layerClickEvent)
        }
        this.addDataToMap()
    }
    ;
    aE.prototype.remove = function() {
        if (this.map) {
            this.removeDataFromMap();
            this.map.removeEventListener("onmousemove", this._layerMouseEvent);
            this.map.removeEventListener("onmouseout", this._layerMouseEvent);
            this.map.removeEventListener("onclick", this._layerClickEvent);
            this.map.removeEventListener("onzoomend", this._onZoomEvent)
        }
        this.map = null
    }
    ;
    aE.prototype.destroy = function() {
        if (this.map) {
            this.clearData();
            this.map.removeEventListener("onmousemove", this._layerMouseEvent);
            this.map.removeEventListener("onmouseout", this._layerMouseEvent);
            this.map.removeEventListener("onclick", this._layerClickEvent);
            this.map.removeEventListener("onzoomend", this._onZoomEvent)
        }
        this.map = null
    }
    ;
    aE.prototype.setData = function(e) {
        if (!e) {
            return
        }
        if (this.dataSource && this.overlayData.length > 0) {
            this.clearData()
        }
        this.dataSource = e;
        if (!this.gParse) {
            this.gParse = new fU({
                reference: this.reference
            })
        }
        this.overlayData = this.gParse.readFeaturesFromObject(e, {
            markerStyle: this.markerStyle,
            polylineStyle: this.polylineStyle,
            polygonStyle: this.polygonStyle
        }, this._register.bind(this))
    }
    ;
    aE.prototype._register = function(e) {
        e.layerName = this.layerName;
        e.setZIndex(this.level)
    }
    ;
    aE.prototype.resetStyle = function() {
        for (var e = 0; e < this.overlayData.length; e++) {
            if (this.overlayData[e]instanceof r) {
                var i = this.markerStyle;
                if (this.markerStyle instanceof Function) {
                    i = this.markerStyle(this.overlayData[e].properties) || {}
                }
            }
            if (this.overlayData[e]instanceof bd) {
                var i = this.polylineStyle;
                if (this.polylineStyle instanceof Function) {
                    i = this.polylineStyle(this.overlayData[e].properties) || {}
                }
            }
            if (this.overlayData[e]instanceof hR) {
                var i = this.polygonStyle;
                if (this.polygonStyle instanceof Function) {
                    i = this.polygonStyle(this.overlayData[e].properties) || {}
                }
            }
            if (i) {
                this.overlayData[e].setOptions(i)
            }
        }
    }
    ;
    aE.prototype.getData = function() {
        return this.overlayData
    }
    ;
    aE.prototype.addDataToMap = function() {
        if (this.visible && this.map && this.map.getZoom() >= this.minZoom && this.map.getZoom() <= this.maxZoom) {
            for (var e = 0; e < this.overlayData.length; e++) {
                this.map.addOverlay(this.overlayData[e])
            }
        }
    }
    ;
    aE.prototype.removeDataFromMap = function() {
        if (this.map && this.overlayData.length > 0) {
            for (var e = 0; e < this.overlayData.length; e++) {
                this.map.removeOverlay(this.overlayData[e])
            }
        }
    }
    ;
    aE.prototype.clearData = function() {
        this.dataSource = null;
        if (this.map && this.overlayData.length > 0) {
            this.removeDataFromMap()
        }
        this.overlayData = []
    }
    ;
    aE.prototype.pickOverlays = function(ji) {
        var jh = [];
        if (!this.visible || !this._onMap) {
            return null
        }
        for (var jf = 0; jf < this.overlayData.length; jf++) {
            var jg = this.overlayData[jf];
            var je;
            if (!jg.isVisible()) {
                continue
            }
            if (jg.toString() === "Marker") {
                je = jg._getInPnBox(ji.pixel);
                if (je) {
                    jh.push(jg)
                }
                continue
            }
            if (jg.toString() !== "Polyline") {
                je = jg._getInPnpoly(ji.point)
            } else {
                je = jg._getProximity(ji.point)
            }
            var T = je.dist;
            if (T >= 0 && T < jg._config.mouseOverTolerance) {
                jh.push(jg)
            }
        }
        return jh.length > 0 ? jh : null
    }
    ;
    aE.prototype.setLevel = function(e) {
        if (e > -999 && e < 9999) {
            this.level = e;
            for (var T = 0; T < this.overlayData.length; T++) {
                this.overlayData[T].setZIndex(this.level)
            }
            if (this.map) {
                this.map.fire(new BMapGL.Event("onupdate","line"))
            }
        }
    }
    ;
    aE.prototype.getLevel = function() {
        return this.level
    }
    ;
    aE.prototype.setVisible = function(i) {
        var e = !!i;
        if (this.visible !== e) {
            this.visible = e;
            if (e) {
                this.addDataToMap()
            } else {
                this.removeDataFromMap()
            }
        }
    }
    ;
    aE.prototype.getVisible = function() {
        return this.visible
    }
    ;
    aE.prototype.toString = function() {
        return "GeoJSONLayer"
    }
    ;
    function i3(i) {
        var i = i || {};
        var jf = i.transform || {
            source: "EPSG3857",
            target: "BD09MC"
        };
        if (!jf.source) {
            jf.target = "EPSG3857"
        }
        if (!jf.target) {
            jf.target = "BD09MC"
        }
        const je = i.tileUrlTemplate || "";
        const ji = i.xTemplate || function(jq, js, jr) {
            return jq
        }
        ;
        const jn = i.yTemplate || (i.tms ? function(jq, js, jr) {
            return Math.pow(2, jr) - js - 1
        }
        : function(jq, js, jr) {
            return js
        }
        );
        const jh = i.zTemplate || function(jq, js, jr) {
            return jr
        }
        ;
        const jm = i.bTemplate || function(jq, jt, js) {
            const jr = dd.getTileRangeExtent([js, jq, jt]);
            return jr.minX + "," + jr.minY + "," + jr.maxX + "," + jr.maxY
        }
        ;
        var jo = i.extent || [];
        const jg = i.extentCRSIsWGS84 || false;
        var T = i.minZoom || 0;
        var jk = i.maxZoom || 23;
        var jl = i.spanLevel || 0;
        var jj = true;
        var jp = new gN({
            transform: jf,
            transparentPng: jj,
            dataType: i.dataType || 1,
            spanLevel: jl,
            tileTypeName: "xyz",
            cacheSize: 256,
            customLayer: true,
            clipTile: false,
            boundary: i.boundary || false,
            useThumbData: i.useThumbData || false
        });
        jp.zIndex = 2;
        (jo.length === 4) && jg && (jo = dd.fromEPSG4326(jo));
        jp.getTilesUrl = function(jr, jx, jv) {
            if (!jr || jx < 0 || jx < (T + jl) || jx > (jk + jl)) {
                jp.tileCache.clear();
                return null
            }
            if (jf.source !== "BD09MC") {
                jr.x = dd.getTilesLoop(jx, jr.x)
            }
            if (jo.length === 4) {
                var jw = dd.getTileRangeExtent([jx, jr.x, jr.y]);
                var ju = e([jw.minX, jw.minY, jw.maxX, jw.maxY]);
                if (!ju) {
                    return null
                }
            }
            var js = "";
            if (je) {
                js = je;
                var jt = /[^\{}]*\{(.*)\}[^\}]*/;
                js.match(jt);
                var jq = [];
                if (RegExp.$1) {
                    jq = RegExp.$1.split(",")
                }
                js = js.replace(/\{(.*)\}/, jq[(jr.x + jr.y) % jq.length]);
                js = js.replace(/\[x\]/gi, ji(jr.x, jr.y, jx));
                js = js.replace(/\[y\]/gi, jn(jr.x, jr.y, jx));
                js = js.replace(/\[z\]/gi, jh(jr.x, jr.y, jx));
                js = js.replace(/\[b\]/gi, jm(jr.x, jr.y, jx))
            } else {
                return null
            }
            return js
        }
        ;
        function e(jq) {
            if (jo && jo instanceof Array && jo.length === 4) {
                if ((jo[0] <= jq[2] && jo[1] <= jq[3]) && (jo[2] >= jq[0] && jo[3] >= jq[1])) {
                    return true
                } else {
                    return false
                }
            }
            return true
        }
        return jp
    }
    function c5(i) {
        this.src = cI();
        this.tileMaskUvCache = new at(64,{
            clearCallback: function(jg) {}
        });
        var jf = 6;
        if (i.pixelMap) {
            this.opacity = typeof i.pixelMap.opacity === "number" ? i.pixelMap.opacity : 1;
            bW(this.opacity, 0, 1);
            if (this.opacity < 1) {
                i.useThumbData = false
            }
            var je = i.pixelMap || {};
            this.colors = je.colors || ["#F9F871", "#FFC75F", "#FF9671", "#FF6F91", "#D65DB1", "#845EC2"];
            this.positions = je.positions || [0, 0.2, 0.4, 0.6, 0.8, 1];
            this.domain = je.domain || [0, 255];
            this.clamp = je.clamp || this.domain;
            this.noData = (je.noData !== undefined) ? je.noData : -99999;
            this.fomularC = je.fomularC || "float generateValue(vec4 pixel){return pixel.r * 255.;}";
            this.fomularJS = je.fomularJS || function(jg) {
                return jg.r
            }
            ;
            this.maskPng = je.maskPng || null;
            if (this.maskPng) {
                this.loadMaskPng(this.maskPng)
            }
            this.maskData = je.maskData || -1;
            this.maskCoord = je.maskCoord || null;
            this.fHashcode = l({
                str: this.fomularC
            });
            var e = this.canPixelMap();
            if (e) {
                this.isPixelMap = true;
                this.setPixelMap()
            }
            jf = i.pixelMap.cacheSize || jf
        }
        var T = new i3(i);
        T.ontology = this;
        this.layer = T;
        this.cacheSize = jf;
        this.tileCache = new at(this.cacheSize,{
            clearCallback: function(jg) {}
        });
        this.tileImageDataCache = new at(this.cacheSize,{
            clearCallback: function(jg) {}
        })
    }
    c5.inherits(ev.BaseClass, "PixelLayer");
    ev.extend(c5.prototype, {
        canPixelMap: function() {
            if (this.colors && this.positions) {
                return true
            }
            return false
        },
        setPixelMap: function() {
            if (!this.isPixelMap || !this.canPixelMap()) {
                return
            }
            var i = this.colors;
            var e = this.positions;
            this.pHashcode = l({
                colors: i,
                positions: e
            });
            this.pixelColorMap = gR.generateColorRamp(i, e)
        },
        setDomain: function(e) {
            if (e instanceof Array && e.length === 2) {
                this.domain = e;
                this.doOnceDraw()
            }
        },
        setClamp: function(e) {
            if (e instanceof Array && e.length === 2) {
                this.clamp = e;
                this.doOnceDraw()
            }
        },
        setNoData: function(e) {
            this.noData = e;
            this.doOnceDraw()
        },
        setPositions: function(e) {
            this.positions = e;
            this.setPixelMap();
            this.doOnceDraw()
        },
        setColors: function(e) {
            this.colors = e;
            this.setPixelMap();
            this.doOnceDraw()
        },
        setFomular: function(e, i) {
            if (e && i) {
                this.fomularJS = e;
                this.fomularC = i;
                this.fHashcode = l({
                    str: this.fomularC
                });
                this.doOnceDraw()
            }
        },
        setOpacity: function(e) {
            this.opacity = e;
            this.doOnceDraw()
        },
        setIsPixelMap: function(e) {
            this.isPixelMap = e;
            this.doOnceDraw()
        },
        setMaskPng: function(e) {
            this.maskPng = e;
            this.loadMaskPng(this.maskPng);
            this.doOnceDraw()
        },
        setMaskData: function(e) {
            this.maskData = e;
            this.doOnceDraw()
        },
        setMaskCoord: function(e) {
            this.maskCoord = e || null;
            this.calMaskBox();
            this.doOnceDraw()
        },
        doOnceDraw: function() {
            if (this.layer.map) {
                var e = new fa("onupdate");
                this.layer.map.dispatchEvent(e)
            }
        },
        _getInLayer: function(jm) {
            if (!this.map) {
                return null
            }
            var jl = Math.floor(this.map.getZoom());
            var je = dd.transformBDmcPoint(jm);
            var ji = dd.getTileCoordForXYAndZ_(je[0], je[1], jl, false);
            var T = ji.join("-");
            var e = this.tileCache.getData(T);
            if (e) {
                return e
            }
            var jf = this.layer.zIndex;
            var jh = this.map._featureMgr.result.bkData;
            var jj = jh[jf][2];
            var jn = null;
            for (var jg = 0; jg < jj.length; jg++) {
                var ji = jj[jg];
                var jk = ji.tileInfo.zoom + "-" + ji.tileInfo.col + "-" + ji.tileInfo.row;
                if (T === jk) {
                    jn = ji;
                    break
                }
            }
            this.tileCache.setData(T, jn);
            return jn
        },
        _initEvent: function(jf) {
            this.map = jf;
            var T = this;
            this._layerMouseEvent = function(jj) {
                if (!T.map) {
                    return
                }
                var jh;
                var i = jj.point;
                var ji = T._getInLayer(i);
                if (ji) {
                    T.prox = ji;
                    jh = new fa("onmousemove");
                    T.map.platform.style.cursor = T.map.config.overlayMoveCursor
                } else {
                    T.map.platform.style.cursor = T.map.config.defaultCursor;
                    T.prox = null
                }
                if (jh) {
                    jh.point = jj.point;
                    jh.pixel = jj.pixel;
                    jh.latLng = jj.latlng;
                    T.dispatchEvent(jh)
                }
            }
            ;
            this._layerClickEvent = function(jj) {
                if (!T.map) {
                    return
                }
                var jh;
                var i = jj.point;
                var ji = T.getImagePixel(i);
                if (ji) {
                    jh = new fa(jj.type);
                    jh.point = i;
                    jh.pixel = jj.pixel;
                    jh.latLng = jj.latlng;
                    jh.color = ji;
                    jh.value = T.getValue(jh.color);
                    T.dispatchEvent(jh)
                }
            }
            ;
            jf.addEventListener("onmousemove", this._layerMouseEvent);
            var je = ["onclick", "dblclick"];
            for (var e = 0; e < je.length; e++) {
                var jg = je[e];
                jf.addEventListener(jg, this._layerClickEvent)
            }
            jf.addEventListener("removetilelayer", function(i) {
                if (i.target && i.target.ontology) {
                    if (i.target.ontology.src === T.src) {
                        T.prox = null;
                        T.tileCache.clear();
                        T.tileImageDataCache.clear();
                        T.tileMaskUvCache.clear();
                        jf.removeEventListener("onmousemove", T._layerMouseEvent);
                        jf.removeEventListener("onclick", T._layerClickEvent);
                        jf.removeEventListener("ondblclick", T._layerClickEvent)
                    }
                }
            })
        },
        getImagePixel: function(jj) {
            if (!this.map) {
                return null
            }
            var je = dd.transformBDmcPoint(jj);
            var ji = this._getInLayer(jj);
            if (!ji) {
                return null
            }
            if (!this.getImageMaskPixel(je)) {
                return null
            }
            var jg = [ji.tileInfo.zoom, ji.tileInfo.col, ji.tileInfo.row];
            var jh = dd.getTileRangeExtent(jg);
            var e = this.getImageObject(ji.textureSource, jg.join("-"));
            var T = Math.floor((je[0] - jh.minX) / (jh.maxX - jh.minX) * e.width);
            var i = Math.floor((-je[1] + jh.maxY) / (jh.maxY - jh.minY) * e.height);
            var jf = Math.floor((i * e.width + T) * 4);
            return [e.data.data[jf], e.data.data[jf + 1], e.data.data[jf + 2], e.data.data[jf + 3], ]
        },
        getImageObject: function(jf, je) {
            var jg = this.tileImageDataCache.getData(je);
            if (jg) {
                return jg
            }
            var i = document.createElement("canvas");
            i.width = jf.width;
            i.height = jf.height;
            var T = i.getContext("2d");
            T.drawImage(jf, 0, 0, jf.width, jf.height);
            var e = {
                width: jf.width,
                height: jf.height,
                data: T.getImageData(0, 0, jf.width, jf.height)
            };
            this.tileImageDataCache.setData(je, e);
            T = null;
            i = null;
            return e
        },
        getValue: function(i) {
            if (this.isPixelMap && i && this.fomularJS) {
                if (!(i instanceof Array)) {
                    i = this.getImagePixel(i.point)
                }
                var e = this.fomularJS({
                    r: i[0],
                    g: i[1],
                    b: i[2],
                    a: i[3]
                });
                if (e >= this.clamp[0] && e <= this.clamp[1]) {
                    return e
                }
            }
            return null
        },
        setMaskImageObject: function(T) {
            var e = document.createElement("canvas");
            e.width = T.width;
            e.height = T.height;
            var i = e.getContext("2d");
            i.drawImage(T, 0, 0, T.width, T.height);
            this.imageMaskObject = {
                width: T.width,
                height: T.height,
                data: i.getImageData(0, 0, T.width, T.height)
            };
            i = null;
            e = null
        },
        getImageMaskPixel: function(e) {
            if (!this.imageMaskObject || !this.maskBox) {
                return true
            }
            var je = [e];
            var jj = this.maskBox;
            var jg = jj[1][0] - jj[0][0];
            var jf = jj[1][1] - jj[0][1];
            var T = Math.floor((je[0][0] - jj[0][0]) / jg * this.imageMaskObject.width);
            var i = Math.floor((-je[0][1] + jj[1][1]) / jf * this.imageMaskObject.height);
            var ji = Math.floor((i * this.imageMaskObject.width + T) * 4);
            if (T > this.imageMaskObject.width || T < 0) {
                return null
            }
            if (i > this.imageMaskObject.height || i < 0) {
                return null
            }
            var jh = this.imageMaskObject.data.data;
            if (ji + 3 > jh.length) {
                return false
            }
            if (jh[ji + 3] > 0) {
                if (this.maskData > -1 && this.maskData !== jh[ji]) {
                    return false
                }
                return true
            }
            return false
        },
        calMaskBox: function() {
            var T = this.maskCoord || [];
            if (this.hasMaskPng && T && T.length === 2) {
                var e = [];
                for (var je = 0; je < T.length; je++) {
                    e[je] = dd.transformBDmcPoint(ig.convertLL2MC(T[je]))
                }
                this.maskBox = e;
                this.tileMaskUvCache.clear()
            } else {
                this.maskBox = null
            }
        },
        buildFillMaskVertex: function(jk, ji, jh) {
            var jj = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
            if (!this.maskBox) {
                return jj
            }
            var jm = [jk, ji, jh].join("-");
            var e = this.tileMaskUvCache.getData(jm);
            if (e) {
                return e
            }
            if (this.hasMaskPng) {
                var jp = this.maskBox || [];
                var jg = [jh, jk, ji];
                var jl = dd.getTileRangeExtent(jg);
                var jf = jp[1][0] - jp[0][0];
                var T = jp[1][1] - jp[0][1];
                var jo = (jl.minX - jp[0][0]) / jf;
                var jn = (jl.minY - jp[0][1]) / T;
                var je = (jl.maxX - jp[0][0]) / jf;
                var i = (jl.maxY - jp[0][1]) / T;
                jj = [jo, jn, je, jn, je, i, jo, jn, je, i, jo, i]
            }
            this.tileMaskUvCache.setData(jm, jj);
            return jj
        },
        loadMaskPng: function(T) {
            var e = this;
            function i(jf, je) {
                if (je) {
                    e.hasMaskPng = true;
                    e.setMaskImageObject(jf);
                    e.calMaskBox();
                    e.doOnceDraw()
                } else {
                    e.hasMaskPng = false
                }
                e.maskTextureSource = je ? jf : null
            }
            this.imageLoad(T, i)
        },
        imageLoad: function(i, jf) {
            if (!i) {
                jf && jf(null, false)
            }
            var e = new Image();
            e.crossOrigin = "anonymous";
            e.onload = function je() {
                jf && jf(this, true)
            }
            ;
            e.onerror = function T() {
                jf && jf(null, false)
            }
            ;
            e.src = i
        },
        toString: function() {
            return "PixelLayer"
        }
    });
    var O = function(e) {
        var e = e || {};
        this.inputCRS = e.inputCRS || "EPSG3857";
        this.outCRS = e.outCRS || "EPSG3857";
        this.minZoom = e.minZoom || 3;
        this.maxZoom = e.maxZoom || 19;
        this.retry = e.retry || false;
        this.retryTime = e.retryTime || 600;
        this.useThumbData = e.useThumbData || true;
        this.lastZoom = 3;
        this.cacheSize = e.cacheSize || 128;
        this.tileType = hg.getInstance("web");
        this._mapCenter = {};
        this._featureMgr = [[], [], []];
        this._gridRefs = {
            row: {},
            col: {}
        };
        this.tileCache = new at(this.cacheSize,{
            clearCallback: function(i) {}
        })
    };
    O.inherits(cM, "BaiduLayer");
    ev.extend(O.prototype, {
        fetch: function(i, je, jf) {
            var je = Math.ceil(je) || 3;
            var i = i || [];
            if (i.length !== 4 || je > 19) {
                jf(null);
                return
            }
            var e = this.getZoomState(je);
            var T = this.calCoord(i, je, e);
            this.curViewTilesInfo = this.calTilesOrders(T.sw, T.ne, je);
            this.clearData();
            this.clearRefs();
            this.loadLayerData(this.curViewTilesInfo, e, true, jf)
        },
        calCoord: function(T, je, i) {
            if (T.length !== 4) {
                return
            }
            var e = gcoord.transform([T[0], T[1]], gcoord[this.inputCRS], gcoord.BD09MC);
            var jf = gcoord.transform([T[2], T[3]], gcoord[this.inputCRS], gcoord.BD09MC);
            if (jf[1] > 19505879.362428114 || e[1] < -15949096.637571886) {
                jf[1] = 19505879.362428114;
                e[1] = -15949096.637571886
            }
            this._mapCenter[je] = new cf((e[0] + jf[0]) / 2,(e[1] + jf[1]) / 2);
            return {
                sw: e,
                ne: jf
            }
        },
        calTilesOrders: function(jj, jp, jl) {
            var jm = this.tileType.getMercatorSize(jl, jl);
            var jh = [Math.floor(jj[0] / jm), Math.floor(jj[1] / jm)];
            var i = [Math.floor(jp[0] / jm), Math.floor(jp[1] / jm)];
            var ji = jh[0] - 1;
            var jg = i[0] + 2;
            var jf = jh[1] - 1;
            var jo = i[1] + 2;
            var jk = [];
            for (var je = ji; je < jg; je++) {
                for (var jn = jf; jn < jo; jn++) {
                    var T = {
                        col: je,
                        row: jn,
                        zoom: jl,
                        useZoom: jl,
                        tileTypeName: "web",
                        loopOffsetX: 0,
                        tileSize: 256,
                        baseTileSize: 256,
                        mercatorSize: jm,
                        combine: false,
                        dataIndex: 256
                    };
                    jk.push(T);
                    var e = "id_" + je + "_" + jn + "_" + jl;
                    jk[e] = true
                }
            }
            jk.sort((function(jq) {
                return function(jr, js) {
                    return ((0.4 * Math.abs(jr.col - jq[0]) + 0.6 * Math.abs(jr.row - jq[1])) - (0.4 * Math.abs(js.col - jq[0]) + 0.6 * Math.abs(js.row - jq[1])))
                }
            }
            )([(ji + jg) / 2, (jf + jo) / 2]));
            jk.zoom = jl;
            jk.tileTypeName = "web";
            return jk
        },
        getZoomState: function(i) {
            var e = i - this.lastZoom;
            if (e > 0) {
                this.zoomState = 1
            } else {
                if (e < 0) {
                    this.zoomState = -1
                }
            }
            this.lastZoom = i;
            return this.zoomState || 0
        },
        loadLayerData: function(jl, je, jf, jk) {
            this.thumbCache = {};
            if (jf) {
                for (var ji = 0, jg = jl.length; ji < jg; ji++) {
                    var T = jl[ji];
                    var jh = this.getTileKey(T);
                    var e = this.tileCache.getData(jh);
                    if (e && e.status === "ready") {
                        e.key = jh;
                        this.setData(e, 2)
                    } else {
                        if (this.useThumbData) {
                            je === 1 && this.setThumbData(T.col, T.row, T.zoom, T.useZoom, je)
                        }
                    }
                }
                this.calOutData(jk)
            }
            for (var ji = 0, jg = jl.length; ji < jg; ji++) {
                var T = jl[ji];
                var jh = this.getTileKey(T);
                var e = this.tileCache.getData(jh);
                if (!e) {
                    this.tileCache.setData(jh, {});
                    var jj = this;
                    this.loadRasterTileData(T, function(i, jm) {
                        jj.rasterTileDataCbk(i, jm, jk)
                    })
                }
            }
        },
        loadRasterTileData: function(i, e) {
            var T = new Image();
            var jf = i.col;
            var ji = i.row;
            var jg = i.zoom;
            var je = this.getTilesUrl(new eO(jf,ji), jg);
            if (!je) {
                return
            }
            var jh = this.getTileKey(i);
            T = this.loadTileImage(je, i, jh, e);
            T.tileInfo = i
        },
        loadTileImage: function(ji, e, T, jg) {
            var je = new Image();
            je.crossOrigin = "anonymous";
            var jh = this;
            var jf;
            function jj() {
                if (jh.retry) {
                    jf && clearInterval(jf);
                    jf = null
                }
            }
            if (this.retry) {
                var i = 1;
                jf = setInterval(function() {
                    if (i > 3) {
                        jj();
                        return
                    }
                    var jk = jh.getTilesUrl(new eO(e.col,e.row), e.zoom, i);
                    je.src = jk;
                    i++
                }, this.retryTime)
            }
            je.onload = function() {
                jj();
                jg && jg(this, T)
            }
            ;
            je.onerror = function() {
                jj();
                jg && jg(null, T)
            }
            ;
            je.src = ji;
            return je
        },
        rasterTileDataCbk: function(jf, je, ji) {
            if (!jf || typeof jf === "string") {
                this.tileCache.removeData(je);
                return
            }
            var i = jf.tileInfo;
            var T = i.col;
            var jk = i.row;
            var jj = i.zoom;
            var e = this.tileCache.getData(je);
            if (!e) {
                return
            }
            e.textureSource = jf;
            e.dataType = f3;
            e.tileInfo = i;
            e.status = "ready";
            this.tileCache.setData(je, e);
            var jg = "id_" + T + "_" + jk + "_" + jj;
            var jh = false;
            if (this.curViewTilesInfo[jg]) {
                e.png8 = this.png8 || false;
                e.key = je;
                this.setData(e, 2);
                jh = true
            }
            if (jh) {
                this.calOutData(ji, e)
            }
        },
        getTilesUrl: function(jf, jm, i) {
            var jh = i || 0;
            var T = jf.x;
            var jn = jf.y;
            var jj = iT("ditu", "normal");
            var ji = jj.udt;
            var jl = dR.B_NORMAL_MAP.tileUrls;
            var jg = Math.abs(T + jn + jh) % jl.length;
            var jk = jl[jg];
            if (T < 0) {
                T = "M" + (-T)
            }
            if (jn < 0) {
                jn = "M" + (-jn)
            }
            var je = "x=" + T + "&y=" + jn + "&z=" + Math.floor(jm);
            je += "&styles=pl&scaler=2&udt=" + ji + "&from=jsapi3_0";
            var e = jk + "?qt=vtile&" + je;
            return e
        },
        calOutData: function(jk, T) {
            if (!T) {
                for (var jh = 0; jh < this._featureMgr.length; jh++) {
                    var e = this._featureMgr[jh];
                    for (var jf = 0; jf < e.length; jf++) {
                        var je = e[jf].tileInfo;
                        if (jh === 2) {
                            var ji = e[jf].extent;
                            if (ji) {
                                this.addRefs(ji, je.col, je.row)
                            } else {
                                var jj = this.calBoxCoord(je);
                                if (!jj) {
                                    continue
                                }
                                e[jf].extent = this.findRefs(jj, je.col, je.row)
                            }
                        }
                    }
                }
                jk({
                    size: this.curViewTilesInfo.length,
                    zoom: this.lastZoom,
                    data: this._featureMgr
                })
            } else {
                var jg = this.calBoxCoord(T.tileInfo);
                if (!jg) {
                    return
                }
                T.extent = this.findRefs(jg, T.tileInfo.col, T.tileInfo.row);
                jk({
                    zoom: this.lastZoom,
                    size: this.curViewTilesInfo.length,
                    data: [[], [], [T]]
                })
            }
        },
        calOutData_back: function(jm, je) {
            if (!je) {
                var jg;
                var jn;
                var jk;
                for (var ji = 0; ji < this._featureMgr.length; ji++) {
                    var T = this._featureMgr[ji];
                    for (var jh = 0; jh < T.length; jh++) {
                        var jf = T[jh].tileInfo;
                        if (ji === 2) {
                            if (jh === 0) {
                                var jj = this.calBoxCoord(jf);
                                T[0].extent = jj;
                                jg = T[0];
                                jn = jj[2] - jj[0];
                                jk = jj[3] - jj[1]
                            } else {
                                if (jg && jn && jk) {
                                    var e = (jf.row - jg.tileInfo.row) * jk;
                                    var jl = (jf.col - jg.tileInfo.col) * jn;
                                    var jj = jg.extent;
                                    T[jh].extent = [jj[0] + jl, jj[1] + e, jj[2] + jl, jj[3] + e]
                                }
                            }
                        } else {
                            var jj = this.calBoxCoord(jf);
                            T[jh].extent = jj
                        }
                    }
                }
                jm({
                    size: this.curViewTilesInfo.length,
                    zoom: this.lastZoom,
                    data: this._featureMgr
                })
            } else {
                if (this._featureMgr[2].length === 1) {
                    var jj = this.calBoxCoord(je.tileInfo);
                    je.extent = jj;
                    this.featureCell = je;
                    this.cellW = jj[2] - jj[0];
                    this.cellH = jj[3] - jj[1]
                } else {
                    var e = (je.tileInfo.row - this.featureCell.tileInfo.row) * this.cellH;
                    var jl = (je.tileInfo.col - this.featureCell.tileInfo.col) * this.cellW;
                    var jj = this.featureCell.extent;
                    je.extent = [jj[0] + jl, jj[1] + e, jj[2] + jl, jj[3] + e]
                }
                jm({
                    zoom: this.lastZoom,
                    size: this.curViewTilesInfo.length,
                    data: [[], [], [je]]
                })
            }
        },
        calBoxCoord: function(e) {
            var i = ig.prototype.tileToBound(e, this._mapCenter[e.zoom]).LL;
            var T = gcoord.transform([i.sw.lng, i.sw.lat], gcoord.BD09LL, gcoord[this.outCRS]);
            var je = gcoord.transform([i.ne.lng, i.ne.lat], gcoord.BD09LL, gcoord[this.outCRS]);
            return [T[0], T[1], je[0], je[1]]
        },
        clearData: function() {
            this._featureMgr = [[], [], []]
        },
        addRefs: function(i, e, T) {
            this._gridRefs.row[T] = i[1];
            this._gridRefs.row[T + 1] = i[3];
            this._gridRefs.col[e] = i[0];
            this._gridRefs.col[e + 1] = i[2]
        },
        findRefs: function(i, e, je) {
            var T = [];
            this._gridRefs.row[je] && (T[1] = this._gridRefs.row[je]);
            this._gridRefs.row[je + 1] && (T[3] = this._gridRefs.row[je + 1]);
            this._gridRefs.col[e] && (T[0] = this._gridRefs.col[e]);
            this._gridRefs.col[e + 1] && (T[2] = this._gridRefs.col[e + 1]);
            !this._gridRefs.row[je] && (this._gridRefs.row[je] = i[1]) && (T[1] = i[1]);
            !this._gridRefs.row[je + 1] && (this._gridRefs.row[je + 1] = i[3]) && (T[3] = i[3]);
            !this._gridRefs.col[e] && (this._gridRefs.col[e] = i[0]) && (T[0] = i[0]);
            !this._gridRefs.col[e + 1] && (this._gridRefs.col[e + 1] = i[2]) && (T[2] = i[2]);
            return T
        },
        clearRefs: function() {
            this._gridRefs = {
                row: {},
                col: {}
            }
        },
        destroy: function() {
            this.tileCache.clear();
            this.clearData();
            this.clearRefs();
            this._mapCenter = {}
        },
        setData: function(jf, T) {
            var e = this._featureMgr[T];
            for (var je = 0; je < e.length; je++) {
                if (e[je].key && e[je].key === jf.key) {
                    e[je] = jf;
                    return
                }
            }
            e.push(jf)
        },
        getTileKey: function(e, je) {
            je = je || {};
            var i = typeof je.useZoom === "number" ? je.useZoom : e.useZoom;
            var T = "default";
            return "web_" + T + "_" + e.col + "_" + e.row + "_" + e.zoom + "_" + i
        },
        setThumbData: function(i, jf, je, e, T) {
            if (T === 1) {
                if (this._findParentZoomTile(i, jf, je, e, 8) === false) {
                    this._findChildZoomTile(i, jf, je, e, 3)
                }
            } else {
                if (T === -1) {
                    if (this._findChildZoomTile(i, jf, je, e, 3) === false) {
                        this._findParentZoomTile(i, jf, je, e, 8)
                    }
                }
            }
            this.sortThumbData()
        },
        _findParentZoomTile: function(jh, jq, jp, jf, jk) {
            var jg = "web";
            var T = 3;
            var e = jh;
            var jn = jq;
            var jl = jp;
            var jm = jf;
            for (var jj = 1; jj <= jk; jj++) {
                var je = this.tileType.getParentTile(e, jn, jl, jm, T);
                if (je === null) {
                    continue
                }
                var jo = this.getTileKey(je);
                var ji = this.tileCache.getData(jo);
                if (ji && ji.status === "ready") {
                    if (this.thumbCache[jo]) {
                        continue
                    }
                    ji.key = jo;
                    this.setData(ji, 0);
                    this.thumbCache[jo] = true;
                    return true
                }
                e = je.col;
                jn = je.row;
                jl = je.zoom;
                jm = je.useZoom
            }
            return false
        },
        _findChildZoomTile: function(ji, jk, e, jf, jt) {
            var jr = "web";
            var jn = 21;
            var jh = ji;
            var jj = jk;
            var jl = e;
            var je = jf;
            var jg = true;
            for (var jq = 1; jq <= jt; jq++) {
                var jo = false;
                var T = this.tileType.getChildTiles(jh, jj, jl, je, jn, jq);
                if (!T) {
                    continue
                }
                for (var jp = 0; jp < T.length; jp++) {
                    var jm = this.getTileKey(T[jp]);
                    var js = this.tileCache.getData(jm);
                    if (js && js.status === "ready") {
                        if (!this.thumbCache[jm]) {
                            js.key = jm;
                            this.setData(js, 1);
                            this.thumbCache[jm] = true
                        }
                        jo = true
                    } else {
                        jg = false
                    }
                }
                if (jo) {
                    break
                }
            }
            return jg
        },
        sortThumbData: function() {
            var e = this._featureMgr;
            if (!e) {
                return
            }
            if (e[0] && e[0].length > 0) {
                e[0].sort(function(T, i) {
                    return T.tileInfo.useZoom - i.tileInfo.useZoom
                })
            }
        }
    });
    bp.register(function(i) {
        if (i.config && i.config.isOverviewMap) {
            return
        }
        if (i.isLoaded()) {
            E(i)
        } else {
            i.addEventListener("load", function() {
                E(this)
            })
        }
        i.cityName = "中国";
        i.cCode = "1";
        var e = {};
        e.enableRequest = true;
        e.request = function() {
            if (e.enableRequest) {
                e.enableRequest = false;
                setTimeout(function() {
                    e._request()
                }, 500)
            }
        }
        ;
        e._request = function() {
            var je = i.getBoundsIn();
            var jg = i.getZoom();
            var T = je.getSouthWest();
            var jf = je.getNorthEast();
            iZ.request(function(jk) {
                if (jk.current_city["code"] >= 9000 && jk.current_city["code"] <= 9378) {
                    jk.current_city["name"] = "台湾省"
                }
                if (jk.current_city["code"] >= 20000 && jk.current_city["code"] <= 20499) {
                    jk.current_city["name"] = "新加坡"
                }
                if (jk.current_city["code"] >= 20500 && jk.current_city["code"] <= 25999) {
                    jk.current_city["name"] = "泰国"
                }
                if (jk.current_city["code"] >= 26000 && jk.current_city["code"] <= 29999) {
                    jk.current_city["name"] = "日本"
                }
                if (jk.current_city["code"] >= 30000 && jk.current_city["code"] <= 30999) {
                    jk.current_city["name"] = "韩国"
                }
                if (jk.current_city["code"] >= 31000 && jk.current_city["code"] <= 37000) {
                    jk.current_city["name"] = "亚太"
                }
                if (jk.current_city["code"] >= 46609 && jk.current_city["code"] <= 52505) {
                    jk.current_city["name"] = "欧洲"
                }
                if (jk.current_city["code"] >= 39509 && jk.current_city["code"] <= 53500) {
                    jk.current_city["name"] = "南美洲"
                }
                if (jk.current_city["code"] >= 54000 && jk.current_city["code"] <= 70000) {
                    jk.current_city["name"] = "北美洲"
                }
                if (jk.current_city["code"] === 54003 && jk.current_city["code"] >= 60731 && jk.current_city["code"] <= 61123) {
                    jk.current_city["name"] = "美国"
                }
                if (jk.current_city["code"] === 54015 || jk.current_city["code"] >= 57970 && jk.current_city["code"] <= 60223) {
                    jk.current_city["name"] = "加拿大"
                }
                if (jk.current_city["code"] === 54025 || jk.current_city["code"] >= 54338 && jk.current_city["code"] <= 57374) {
                    jk.current_city["name"] = "墨西哥"
                }
                e.enableRequest = true;
                if (jk && jk.current_city) {
                    var jj = jk.current_city["name"];
                    var ji = jk.current_city["code"];
                    if (ji !== i.cCode) {
                        var jh = new fa("oncitychange");
                        jh.name = jj;
                        jh.code = ji;
                        i.dispatchEvent(jh)
                    }
                    i.cityName = jj;
                    i.cCode = ji;
                    if (!bK()) {
                        cG(i)
                    }
                }
            }, {
                qt: "cen",
                b: T.lng + "," + T.lat + ";" + jf.lng + "," + jf.lat,
                l: jg
            }, "", "", true)
        }
        ;
        i.addEventListener("load", function(T) {
            e.request()
        });
        i.addEventListener("moveend", function(T) {
            e.request()
        });
        i.addEventListener("zoomend", function(T) {
            e.request()
        });
        e.request()
    });
    function E(i) {
        if (i.temp.copyadded) {
            return
        }
        i.temp.copyadded = true;
        if (!i.cpyCtrl) {
            var je = new h8(2,2);
            i.config.cpyCtrlOffset = je;
            if (bK()) {
                je.width = 72;
                je.height = 0
            }
            var T = new fv({
                offset: je,
                printable: true
            });
            i.cpyCtrl = T
        }
        if (!bK()) {
            cG(i);
            i.addEventListener("maptypechange", function() {
                cG(i)
            })
        }
        i.addControl(T);
        var e = new bs();
        e._opts = {
            printable: true
        };
        i.logoCtrl = e;
        i.addControl(e);
        i.addEventListener("resize", function() {
            if (this.getSize().width >= 300 && i.getSize().height >= 100) {
                e.show();
                T.setOffset(i.config.cpyCtrlOffset)
            } else {
                e.hide();
                T.setOffset(new h8(4,2))
            }
        });
        if (i.getSize().width >= 300 && i.getSize().height >= 100) {
            e.show()
        } else {
            e.hide();
            T.setOffset(new h8(4,2))
        }
        i.addEventListener("oncopyrightoffsetchange", function(jf) {
            i.logoCtrl.setOffset(jf.target.logo);
            i.cpyCtrl.setOffset(jf.target.cpy)
        });
        i.dispatchEvent(new fa("oncopyrightaddend"))
    }
    function cG(jt) {
        if (!jt.cpyCtrl) {
            var jB = new h8(2,2);
            if (bK()) {
                jB.width = 72;
                jB.height = 0
            }
            var jw = new fv({
                offset: jB,
                printable: true
            });
            jt.cpyCtrl = jw
        }
        var jK = jt.cityName || "中国";
        var ju = jt.getMapType();
        var jv = ["常州市", "南昌市", "乌鲁木齐市", "无锡市", "福州市", "泉州市", "珠海市", "贵阳市"];
        var jn = ["北京市", "上海市", "广州市", "深圳市", "宁波市", "石家庄市", "沈阳市", "长春市", "青岛市", "温州市", "台州市", "金华市", "佛山市", "中山市", "昆明市", "南宁市", "苏州市", "西安市", "济南市", "郑州市", "合肥市", "呼和浩特市", "杭州市", "成都市", "武汉市", "长沙市", "天津市", "南京市", "重庆市", "大连市", "东莞市", "厦门市"];
        var jp = ["香港特别行政区"];
        var jj = ["台湾省"];
        var jC = ["日本"];
        var jI = ["韩国"];
        var jx = ["泰国"];
        var jA = ["亚太"];
        var jk = ["新加坡"];
        var jJ = ["欧洲"];
        var je = ["南美洲"];
        var jF = ["北美洲"];
        var T = ["美国"];
        var jz = ["墨西哥"];
        var jh = ["加拿大"];
        for (var jG in jv) {
            if (jv[jG] === jK) {
                var jq = true;
                break
            }
        }
        for (var jG in jn) {
            if (jn[jG] === jK) {
                var jf = true;
                break
            }
        }
        for (var jG in jp) {
            if (jp[jG] === jK) {
                var jM = true;
                break
            }
        }
        if (jj[0] === jK) {
            var jE = true
        }
        if (jk[0] === jK) {
            var i = true
        }
        if (jC[0] === jK) {
            var jm = true
        }
        if (jI[0] === jK) {
            var js = true
        }
        if (jx[0] === jK) {
            var jr = true
        }
        if (jA[0] === jK) {
            var ji = true
        }
        if (jJ[0] === jK) {
            var jo = true
        }
        if (je[0] === jK) {
            var jl = true
        }
        if (jF[0] === jK) {
            var e = true
        }
        if (T[0] === jK) {
            var jH = true
        }
        if (jh[0] === jK) {
            var jD = true
        }
        if (jz[0] === jK) {
            var jg = true
        }
        var jL = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "];
        var jy = "rgba(255, 255, 255, 0.701961)";
        if (jt.getZoom() <= 9) {
            jL = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
        } else {
            if (jE) {
                jL = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
            } else {
                if (jm || js) {
                    jL = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
                } else {
                    if (i || jr) {
                        jL = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
                    } else {
                        if (ji) {
                            jL = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
                        } else {
                            if (jo) {
                                jL = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
                            } else {
                                if (jl) {
                                    jL = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
                                } else {
                                    if (e) {
                                        jL = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if (jt.getZoom() <= 9) {
            jL.push("百度智图");
            jL.push(' &amp; <a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>');
            jL.push(' &amp; <a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>');
            if (ju === BMAP_SATELLITE_MAP || ju === BMAP_HYBRID_MAP) {
                jL.push(' &amp; <a target="_blank" href="http://www.eso.org/public/">ESO</a>');
                jy = "rgba(0,0,0,.7)"
            }
        } else {
            if (jm || js) {
                jL.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>')
            } else {
                if (i || jr) {
                    jL.push('<a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>')
                } else {
                    if (ji) {
                        jL.push('<a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>');
                        jL.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
                    } else {
                        if (jo) {
                            jL.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>');
                            jL.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
                        } else {
                            if (jl) {
                                jL.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>');
                                jL.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
                            } else {
                                if (jH || jg || jD) {
                                    jL.push('<a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>');
                                    jL.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
                                } else {
                                    if (e) {
                                        jL.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>');
                                        jL.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
                                    } else {
                                        jL.push("百度智图");
                                        if (jq) {
                                            jL.push(' &amp; <a target="_blank" href="http://www.palmcity.cn/palmcity/">PalmCity</a>')
                                        }
                                        if (jM) {
                                            jL.push(' &amp; <a target="_blank" href="http://www.mapking.com/HongKong/eng/home/MapKing_Webmap.html">MapKing</a>')
                                        }
                                        if (jE) {
                                            jL.push(' &amp; <a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>');
                                            jL.push(' &amp; <a target="_blank" href="http://www.localking.com.tw/about/localking.aspx">樂客LocalKing</a>')
                                        }
                                        if (ju === BMAP_SATELLITE_MAP || ju === BMAP_HYBRID_MAP) {
                                            jy = "rgba(0,0,0,.7)"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        jL.unshift('<span style="background: ' + jy + ';padding: 0px 1px;line-height: 16px;display: inline;height: 16px;">');
        jL.push("</span>");
        jL = jL.join("");
		if(bmapcfg.left_marker==false){
			jL="";
		}
        jt.cpyCtrl.addCopyright({
            id: 1,
            content: jL
        })
    }
    window.BMAP_STATUS_SUCCESS = 0;
    window.BMAP_STATUS_CITY_LIST = 1;
    window.BMAP_STATUS_UNKNOWN_LOCATION = 2;
    window.BMAP_STATUS_UNKNOWN_ROUTE = 3;
    window.BMAP_STATUS_INVALID_KEY = 4;
    window.BMAP_STATUS_INVALID_REQUEST = 5;
    window.BMAP_STATUS_PERMISSION_DENIED = 6;
    window.BMAP_STATUS_SERVICE_UNAVAILABLE = 7;
    window.BMAP_STATUS_TIMEOUT = 8;
    window.BMAP_ROUTE_TYPE_WALKING = 2;
    window.BMAP_ROUTE_TYPE_DRIVING = 3;
    window.BMAP_ROUTE_TYPE_RIDING = 6;
    window.BMAP_ROUTE_STATUS_NORMAL = 0;
    window.BMAP_ROUTE_STATUS_EMPTY = 1;
    window.BMAP_ROUTE_STATUS_ADDRESS = 2;
    var cT = "cur";
    var U = "cen";
    var D = "s";
    var da = "con";
    var c2 = "bd";
    var cw = "nb";
    var gk = "bt";
    var aF = "nav";
    var ho = "walk";
    var fi = "gc";
    var dw = "rgc";
    var F = "dec";
    var hB = "iploc";
    var f6 = "bse";
    var fE = "nse";
    var cQ = "bl";
    var dV = "bsl";
    var ff = "bda";
    var dS = "sa";
    var a0 = "nba";
    var ht = "drag";
    var h9 = "ext";
    var iI = "exts";
    var iL = "hip";
    var gP = "ride";
    var iX = "drct";
    var eU = 2;
    var a6 = 4;
    var fp = 7;
    var hu = 11;
    var bT = 12;
    var eq = 14;
    var ct = 15;
    var dJ = 18;
    var au = 20;
    var aZ = 21;
    var C = 19;
    var a = 23;
    var hN = 26;
    var av = 28;
    var fF = 31;
    var eD = 35;
    var hC = 44;
    var a4 = 45;
    var aq = 46;
    var iG = 47;
    var fJ = -1;
    var a2 = 0;
    var bo = 1;
    var id = 2;
    var dm = 3;
    window.BMAP_POI_TYPE_NORMAL = 0;
    var ci = 1;
    var hw = 2;
    BMapGL.I = ev.I;
    var by = {};
    by.removeHtml = function(e) {
        e = e.replace(/<\/?[^>]*>/g, "");
        e = e.replace(/[ | ]* /g, " ");
        return e
    }
    ;
    by.parseGeoExtReg1 = function(e) {
        return e.replace(/([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0|[1-9]\d*),([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0|[1-9]\d*)(,)/g, "$1,$2;")
    }
    ;
    by.parseGeoExtReg2 = function(i, e) {
        var T = new RegExp("(((-?\\d+)(\\.\\d+)?),((-?\\d+)(\\.\\d+)?);)(((-?\\d+)(\\.\\d+)?),((-?\\d+)(\\.\\d+)?);){" + e + "}","ig");
        return i.replace(T, "$1")
    }
    ;
    var dg = 0;
    var cS = 1;
    var N = 2;
    by.unique = function(T) {
        var jg = false;
        var jf = [];
        var jh = {};
        for (var je = 0, e = T.length; je < e; je++) {
            if (!jh[T[je]]) {
                jh[T[je]] = true;
                jf.push(T[je])
            }
        }
        return jf
    }
    ;
    by.getBestLevel = function(T, i) {
        if (i) {
            var e = Math.min(i.width / 1100, i.height / 660);
            T = Math.round(T + (Math.log(e) / Math.log(2)))
        }
        if (T < 1) {
            T = 1
        }
        if (T > 21) {
            T = 21
        }
        return T
    }
    ;
    by.parseGeo = function(jh, jk) {
        if (typeof jh != "string" || !jh) {
            return
        }
        var jm = jh.split("|");
        var e;
        var jf;
        var T;
        if (jm.length == 1) {
            e = bO(jh)
        } else {
            e = bO(jm[2]);
            jf = bO(jm[0]);
            T = bO(jm[1]);
            if (!jk) {
                return e
            }
        }
        var ji = {
            type: e.geoType
        };
        if (jk) {
            switch (ji.type) {
            case N:
                var jj = new cf(e.geo[0][0],e.geo[0][1]);
                var jl = ig.convertMC2LL(jj);
                ji.point = jl;
                ji.points = [jl];
                break;
            case cS:
                ji.points = [];
                var jn = e.geo[0];
                for (var jg = 0, je = jn.length - 1; jg < je; jg += 2) {
                    var jo = new cf(jn[jg],jn[jg + 1]);
                    jo = ig.convertMC2LL(jo);
                    ji.points.push(jo)
                }
                jf = new cf(jf.geo[0][0],jf.geo[0][1]);
                T = new cf(T.geo[0][0],T.geo[0][1]);
                jf = ig.convertMC2LL(jf);
                T = ig.convertMC2LL(T);
                ji.bounds = new hf(jf,T);
                break;
            default:
                break
            }
        }
        return ji
    }
    ;
    by.parseGeoExt = function(jx, jo) {
        if (!jo) {
            jo = 0
        } else {
            if (jo < 0.25) {
                jo = 0
            } else {
                if (jo > 0.25 && jo < 1) {
                    jo = 1
                } else {
                    if (jo > 32) {
                        jo = 32
                    }
                }
            }
        }
        var jj = jx.split("|");
        if (jj.length == 1) {
            var je = bO(jj[0]);
            return {
                type: je.type,
                bound: "",
                points: je.geo.join(",")
            }
        } else {
            if (jj.length > 1) {
                var jp = jx.split(";.=");
                var jl = [];
                var jf = [];
                var jq = 0;
                var ju = jp.length;
                for (var jr = 0; jr < ju; jr++) {
                    var jw = jp[jr];
                    if (ju > 1) {
                        if (jr == 0) {
                            jw = jw + ";"
                        }
                        if (jr > 0 && jr < ju - 1) {
                            jw = ".=" + jw + ";"
                        }
                        if (jr == ju - 1) {
                            jw = ".=" + jw
                        }
                    }
                    var jg = jw.split("|");
                    var jt = bO(jg[0]);
                    var js = bO(jg[1]);
                    jl.push(jt.geo.join(","));
                    jl.push(js.geo.join(","));
                    var je = bO(jg[2]);
                    jq = je.type;
                    var jv = je.geo.join(",");
                    jv = by.parseGeoExtReg1(jv);
                    if (jo > 0) {
                        jv = by.parseGeoExtReg2(jv, jo)
                    }
                    jf.push(jv)
                }
                if (ju <= 1) {
                    jf = jf.join(";")
                }
                if (ju == 2) {
                    var T = jf[0] + ";" + jf[1];
                    var jh = T.split(";");
                    var e = [];
                    for (var jr = 0; jr < jh.length; jr++) {
                        var jk = jh[jr].split(",")[0];
                        var ji = jh[jr].split(",")[1];
                        var jm = new cf(jk,ji);
                        var jn = ig.convertMC2LL(jm);
                        e.push(jn)
                    }
                    jf = e
                }
                return {
                    type: jq,
                    bound: jl.join(";"),
                    points: jf
                }
            }
        }
    }
    ;
    by.getPoiPoint = function(e) {
        var T = [];
        var i = null;
        if (e.toString() == "Point") {
            i = e
        } else {
            if (typeof e == "string") {
                T = ev.trim(e).split(",");
                if (T.length < 2) {
                    return
                }
                T[0] = parseFloat(ev.trim(T[0]));
                T[1] = parseFloat(ev.trim(T[1]))
            } else {
                T = e.slice(0);
                if (T.length < 2) {
                    return
                }
            }
            i = new BMap.Point(T[0],T[1])
        }
        return i
    }
    ;
    by.parseGeoStr = function(T) {
        var i = T.split(",");
        var e = new cf(i[0],i[1]);
        return ig.convertMC2LL(e)
    }
    ;
    by.level = {
        country: 4,
        province: 11,
        city: 12,
        area: 13
    };
    var gv = ["=", ".", "-", "*"];
    var cN = 1 << 23;
    function bO(jk) {
        var jj = hb(jk.charAt(0));
        var T = jk.substr(1);
        var jm = 0;
        var e = T.length;
        var jn = [];
        var jh = [];
        var ji = [];
        while (jm < e) {
            if (T.charAt(jm) == gv[0]) {
                if ((e - jm) < 13) {
                    return 0
                }
                ji = dI(T.substr(jm, 13), jn);
                if (ji < 0) {
                    return 0
                }
                jm += 13
            } else {
                if (T.charAt(jm) == ";") {
                    jh.push(jn.slice(0));
                    jn.length = 0;
                    ++jm
                } else {
                    if ((e - jm) < 8) {
                        return 0
                    }
                    ji = bZ(T.substr(jm, 8), jn);
                    if (ji < 0) {
                        return 0
                    }
                    jm += 8
                }
            }
        }
        for (var jg = 0, je = jh.length; jg < je; jg++) {
            for (var jf = 0, jl = jh[jg].length; jf < jl; jf++) {
                jh[jg][jf] /= 100
            }
        }
        return {
            geoType: jj,
            geo: jh
        }
    }
    function hb(i) {
        var e = -1;
        if (i == gv[1]) {
            e = N
        } else {
            if (i == gv[2]) {
                e = cS
            } else {
                if (i == gv[3]) {
                    e = dg
                }
            }
        }
        return e
    }
    function dI(jf, T) {
        var e = 0;
        var jh = 0;
        var jg = 0;
        for (var je = 0; je < 6; je++) {
            jg = c9(jf.substr(1 + je, 1));
            if (jg < 0) {
                return -1 - je
            }
            e += jg << (6 * je);
            jg = c9(jf.substr(7 + je, 1));
            if (jg < 0) {
                return -7 - je
            }
            jh += jg << (6 * je)
        }
        T.push(e);
        T.push(jh);
        return 0
    }
    function bZ(jg, je) {
        var T = je.length;
        if (T < 2) {
            return -1
        }
        var e = 0;
        var ji = 0;
        var jh = 0;
        for (var jf = 0; jf < 4; jf++) {
            jh = c9(jg.substr(jf, 1));
            if (jh < 0) {
                return -1 - jf
            }
            e += jh << (6 * jf);
            jh = c9(jg.substr(4 + jf, 1));
            if (jh < 0) {
                return -5 - jf
            }
            ji += jh << (6 * jf)
        }
        if (e > cN) {
            e = cN - e
        }
        if (ji > cN) {
            ji = cN - ji
        }
        je.push(je[T - 2] + e);
        je.push(je[T - 1] + ji);
        return 0
    }
    function c9(i) {
        var e = i.charCodeAt(0);
        if (i >= "A" && i <= "Z") {
            return e - "A".charCodeAt(0)
        } else {
            if (i >= "a" && i <= "z") {
                return (26 + e - "a".charCodeAt(0))
            } else {
                if (i >= "0" && i <= "9") {
                    return (52 + e - "0".charCodeAt(0))
                } else {
                    if (i == "+") {
                        return 62
                    } else {
                        if (i == "/") {
                            return 63
                        }
                    }
                }
            }
        }
        return -1
    }
    by.pathToPoints = function(jg) {
        var je = [];
        if (typeof jg !== "string") {
            return je
        } else {
            var jf = jg.split(";");
            for (var T = 0; T < jf.length; T++) {
                var e = jf[T].split(",");
                je.push(new cf(e[0],e[1]))
            }
        }
        return je
    }
    ;
    window.BMAP_POI_TYPE_NORMAL = 0;
    window.BMAP_POI_TYPE_BUSSTOP = 1;
    window.BMAP_POI_TYPE_BUSLINE = 2;
    window.BMAP_POI_TYPE_SUBSTOP = 3;
    window.BMAP_POI_TYPE_SUBLINE = 4;
    var L = 0;
    var gU = 1;
    var e6 = {};
    window.APIPack = e6;
    function az(i, e) {
        cM.call(this);
        this._loc = {};
        this.setLocation(i);
        e = e || {};
        e.renderOptions = e.renderOptions || {};
        this._opts = {
            renderOptions: {
                panel: e.renderOptions.panel || null,
                map: e.renderOptions.map || null,
                autoViewport: e.renderOptions.autoViewport || true,
                selectFirstResult: e.renderOptions.selectFirstResult,
                highlightMode: e.renderOptions.highlightMode,
                enableDragging: e.renderOptions.enableDragging || false
            },
            onSearchComplete: e.onSearchComplete || function() {}
            ,
            onMarkersSet: e.onMarkersSet || function() {}
            ,
            onInfoHtmlSet: e.onInfoHtmlSet || function() {}
            ,
            onResultsHtmlSet: e.onResultsHtmlSet || function() {}
            ,
            onGetBusListComplete: e.onGetBusListComplete || function() {}
            ,
            onGetBusLineComplete: e.onGetBusLineComplete || function() {}
            ,
            onBusListHtmlSet: e.onBusListHtmlSet || function() {}
            ,
            onBusLineHtmlSet: e.onBusLineHtmlSet || function() {}
            ,
            onPolylinesSet: e.onPolylinesSet || function() {}
            ,
            reqFrom: e.reqFrom || ""
        };
        if (typeof e != "undefined" && typeof e.renderOptions != "undefined" && typeof e.renderOptions["autoViewport"] != "undefined") {
            this._opts.renderOptions.autoViewport = e.renderOptions["autoViewport"]
        } else {
            this._opts.renderOptions.autoViewport = true
        }
        this._opts.renderOptions.panel = ev.G(this._opts.renderOptions.panel)
    }
    az.inherits(cM, "BaseSearch");
    ev.extend(az.prototype, {
        getResults: function() {
            if (!this._isMultiKey) {
                return this._results
            } else {
                return this._arrResults
            }
        },
        enableAutoViewport: function() {
            this._opts.renderOptions.autoViewport = true
        },
        disableAutoViewport: function() {
            this._opts.renderOptions.autoViewport = false
        },
        setLocation: function(e) {
            if (!e) {
                return
            }
            this._loc.src = e
        },
        setSearchCompleteCallback: function(e) {
            this._opts.onSearchComplete = e || function() {}
        },
        setMarkersSetCallback: function(e) {
            this._opts.onMarkersSet = e || function() {}
        },
        setPolylinesSetCallback: function(e) {
            this._opts.onPolylinesSet = e || function() {}
        },
        setInfoHtmlSetCallback: function(e) {
            this._opts.onInfoHtmlSet = e || function() {}
        },
        setResultsHtmlSetCallback: function(e) {
            this._opts.onResultsHtmlSet = e || function() {}
        },
        getStatus: function() {
            return this._status
        }
    });
    var ch = function(T, i) {
        az.call(this, T, i);
        i = i || {};
        i.renderOptions = i.renderOptions || {};
        this.setPageCapacity(i.pageCapacity);
        if (typeof i.renderOptions["selectFirstResult"] != "undefined" && !i.renderOptions["selectFirstResult"]) {
            this.disableFirstResultSelection()
        } else {
            this.enableFirstResultSelection()
        }
        this._overlays = [];
        this._arrPois = [];
        this._curIndex = -1;
        this._queryList = [];
        var e = this;
        gn.load("localSearch", function() {
            e._check()
        }, true)
    };
    ch.inherits(az, "LocalSearch");
    ch.DEFAULT_PAGE_CAPACITY = 10;
    ch.MIN_PAGE_CAPACITY = 1;
    ch.MAX_PAGE_CAPACITY = 100;
    ch.DEFAULT_RADIUS = 2000;
    ch.MAX_RADIUS = 100000;
    ev.extend(ch.prototype, {
        search: function(e, i) {
            this._queryList.push({
                method: "search",
                arguments: [e, i]
            })
        },
        searchInBounds: function(e, T, i) {
            this._queryList.push({
                method: "searchInBounds",
                arguments: [e, T, i]
            })
        },
        searchNearby: function(T, i, e, je) {
            this._queryList.push({
                method: "searchNearby",
                arguments: [T, i, e, je]
            })
        },
        clearResults: function() {
            delete this._json;
            delete this._status;
            delete this._results;
            delete this._ud;
            this._curIndex = -1;
            this._setStatus();
            if (this._opts.renderOptions.panel) {
                this._opts.renderOptions.panel.innerHTML = ""
            }
        },
        gotoPage: function() {},
        enableFirstResultSelection: function() {
            this._opts.renderOptions.selectFirstResult = true
        },
        disableFirstResultSelection: function() {
            this._opts.renderOptions.selectFirstResult = false
        },
        setPageCapacity: function(e) {
            if (typeof e == "number" && !isNaN(e)) {
                this._opts.pageCapacity = e < 1 ? ch.DEFAULT_PAGE_CAPACITY : (e > ch.MAX_PAGE_CAPACITY ? ch.DEFAULT_PAGE_CAPACITY : e)
            } else {
                this._opts.pageCapacity = ch.DEFAULT_PAGE_CAPACITY
            }
        },
        getPageCapacity: function() {
            return this._opts.pageCapacity
        },
        toString: function() {
            return "LocalSearch"
        }
    });
    function a7(i) {
        this._opts = {};
        ev.extend(this._opts, i);
        this._queryList = [];
        var e = this;
        gn.load("otherSearch", function() {
            e._asyncSearch()
        })
    }
    a7.inherits(cM, "Geocoder");
    ev.extend(a7.prototype, {
        getPoint: function(e, T, i) {
            this._queryList.push({
                method: "getPoint",
                arguments: [e, T, i]
            })
        },
        getLocation: function(e, T, i) {
            this._queryList.push({
                method: "getLocation",
                arguments: [e, T, i]
            })
        },
        toString: function() {
            return "Geocoder"
        }
    });
    function cB(e) {
        e = e || {};
        this.config = {
            timeout: e.timeout || 1000 * 10,
            maximumAge: e.maximumAge || 0,
            enableHighAccuracy: e.enableHighAccuracy || true,
            SDKLocation: e.SDKLocation || false
        };
        this._pendingCalls = [];
        var i = this;
        gn.load("otherSearch", function() {
            var T = i._pendingCalls.length;
            for (var je = 0; je < T; je++) {
                var jf = i._pendingCalls[je];
                i[jf.method].apply(i, jf.arguments)
            }
        })
    }
    ev.extend(cB.prototype, {
        getCurrentPosition: function(e, i) {
            this._pendingCalls.push({
                method: "getCurrentPosition",
                arguments: arguments
            })
        },
        getStatus: function() {
            return BMAP_STATUS_UNKNOWN_LOCATION
        },
        enableSDKLocation: function() {
            if (bK()) {
                this.config.SDKLocation = true
            }
        },
        disableSDKLocation: function() {
            this.config.SDKLocation = false
        }
    });
    function eQ() {
        this._queryList = [];
        var e = this;
        gn.load("otherSearch", function() {
            e._asyncSearch()
        })
    }
    eQ.inherits(cM, "Boundary");
    ev.extend(eQ.prototype, {
        get: function(i, e) {
            this._queryList.push({
                method: "get",
                arguments: [i, e]
            })
        },
        toString: function() {
            return "Boundary"
        },
        parsebdStr: function(i, e) {}
    });
    function eJ(i) {
        i = i || {};
        i.renderOptions = i.renderOptions || {};
        this._opts = {
            renderOptions: {
                map: i.renderOptions.map || null
            }
        };
        this._queryList = [];
        var e = this;
        gn.load("otherSearch", function() {
            e._asyncSearch()
        })
    }
    eJ.inherits(cM, "LocalCity");
    ev.extend(eJ.prototype, {
        get: function(e) {
            this._queryList.push({
                method: "get",
                arguments: [e]
            })
        },
        toString: function() {
            return "LocalCity"
        }
    });
    function gz(e, T) {
        cM.call(this);
        this.markersList = [];
        this.destList = [];
        this.pointsList = [];
        this._opts = T;
        this.json = e;
        this.map = this._opts.renderOptions.map || null;
        this.sType = this._opts.sType;
        this.infoWindow = null;
        this.curPointIndex = 0;
        this.startName = "";
        this.endIndex = 1;
        this.endName = "";
        this.resCity = [0, 0, 0, 0, 0, 0, 0];
        this.locPois = [];
        this.curPageIndex = [1, 1, 1, 1, 1, 1, 1];
        this.totalPage = [1, 1, 1, 1, 1, 1, 1];
        this.resCount = [0, 0, 0, 0, 0, 0, 0];
        this.resType = [0, 0, 0, 0, 0, 0, 0];
        this.qInfo = [{
            n: "",
            c: 0,
            u: 0,
            x: 0,
            y: 0,
            t: -1
        }, {
            n: "",
            c: 0,
            u: 0,
            x: 0,
            y: 0,
            t: -1
        }, {
            n: "",
            c: 0,
            u: 0,
            x: 0,
            y: 0,
            t: -1
        }, {
            n: "",
            c: 0,
            u: 0,
            x: 0,
            y: 0,
            t: -1
        }, {
            n: "",
            c: 0,
            u: 0,
            x: 0,
            y: 0,
            t: -1
        }, {
            n: "",
            c: 0,
            u: 0,
            x: 0,
            y: 0,
            t: -1
        }, {
            n: "",
            c: 0,
            u: 0,
            x: 0,
            y: 0,
            t: -1
        }];
        this.curSelectedIndex = -1;
        this.tpList = [];
        this.tpListInMap = [];
        var i = this;
        gn.load("route", function() {})
    }
    gz.inherits(cM, "RouteAddr");
    function d6(T, i) {
        az.call(this, T, i);
        this.QUERY_TYPE_BUSLIST = cQ;
        this.RETURN_TYPE_BUSLIST = ct;
        this.QUERY_TYPE_BUSLINE = dV;
        this.RETURN_TYPE_BUSLINE = dJ;
        this._queryList = [];
        var e = this;
        gn.load("buslineSearch", function() {
            e._asyncSearch()
        })
    }
    var e5 = w.staticHost + "/wolfman/static/common/images/";
    d6._iconOpen = w.apiIMG + "/iw_plus.gif";
    d6._iconClose = w.apiIMG + "/iw_minus.gif";
    d6._stopUrl = e5 + "new/bus-stop-1x_ddd4723.png";
    d6.inherits(az, "BusLineSearch");
    ev.extend(d6.prototype, {
        getBusList: function(e) {
            this._queryList.push({
                method: "getBusList",
                arguments: [e]
            })
        },
        getBusLine: function(e) {
            this._queryList.push({
                method: "getBusLine",
                arguments: [e]
            })
        },
        setGetBusListCompleteCallback: function(e) {
            this._opts.onGetBusListComplete = e || function() {}
        },
        setGetBusLineCompleteCallback: function(e) {
            this._opts.onGetBusLineComplete = e || function() {}
        },
        setBusListHtmlSetCallback: function(e) {
            this._opts.onBusListHtmlSet = e || function() {}
        },
        setBusLineHtmlSetCallback: function(e) {
            this._opts.onBusLineHtmlSet = e || function() {}
        },
        setPolylinesSetCallback: function(e) {
            this._opts.onPolylinesSet = e || function() {}
        }
    });
    function ia(i) {
        az.call(this, i);
        i = i || {};
        this._options = {
            input: i.input || null,
            baseDom: i.baseDom || null,
            types: i.types || [],
            onSearchComplete: i.onSearchComplete || function() {}
        };
        this._loc.src = i.location || "全国";
        this._word = "";
        this._show = false;
        this._suggestion = null;
        this._inputValue = "";
        this._initialize();
        var e = this;
        gn.load("autocomplete", function() {
            e._asyncSearch()
        }, true)
    }
    ia.inherits(az, "Autocomplete");
    ev.extend(ia.prototype, {
        _initialize: function() {},
        show: function() {
            this._show = true
        },
        hide: function() {
            this._show = false
        },
        setTypes: function(e) {
            this._options.types = e
        },
        setLocation: function(e) {
            this._loc.src = e
        },
        search: function(e) {
            this._word = e
        },
        setInputValue: function(e) {
            this._inputValue = e
        },
        setSearchCompleteCallback: function(e) {
            this._options.onSearchComplete = e
        }
    });
    var iO = function(i, e) {
        az.call(this, i, e)
    };
    ev.inherit(iO, az, "BaseRoute");
    ev.extend(iO.prototype, {
        clearResults: function() {}
    });
    window.BMAP_TRANSIT_POLICY_RECOMMEND = 0;
    window.BMAP_TRANSIT_POLICY_LEAST_TIME = 4;
    window.BMAP_TRANSIT_POLICY_LEAST_TRANSFER = 1;
    window.BMAP_TRANSIT_POLICY_LEAST_WALKING = 2;
    window.BMAP_TRANSIT_POLICY_AVOID_SUBWAYS = 3;
    window.BMAP_TRANSIT_POLICY_FIRST_SUBWAYS = 5;
    window.BMAP_LINE_TYPE_BUS = 0;
    window.BMAP_LINE_TYPE_SUBWAY = 1;
    window.BMAP_LINE_TYPE_FERRY = 2;
    window.BMAP_LINE_TYPE_TRAIN = 3;
    window.BMAP_LINE_TYPE_AIRPLANE = 4;
    window.BMAP_LINE_TYPE_COACH = 5;
    var hx = 3;
    var dH = 4;
    var ab = 1;
    var hv = 2;
    var aN = 5;
    var cv = 6;
    window.BMAP_TRANSIT_TYPE_IN_CITY = 0;
    window.BMAP_TRANSIT_TYPE_CROSS_CITY = 1;
    window.BMAP_TRANSIT_PLAN_TYPE_ROUTE = 0;
    window.BMAP_TRANSIT_PLAN_TYPE_LINE = 1;
    window.BMAP_TRANSIT_TYPE_POLICY_TRAIN = 0;
    window.BMAP_TRANSIT_TYPE_POLICY_AIRPLANE = 1;
    window.BMAP_TRANSIT_TYPE_POLICY_COACH = 2;
    window.BMAP_INTERCITY_POLICY_LEAST_TIME = 0;
    window.BMAP_INTERCITY_POLICY_EARLY_START = 1;
    window.BMAP_INTERCITY_POLICY_CHEAP_PRICE = 2;
    function ek(T, i) {
        iO.call(this, T, i);
        i = i || {};
        this.setPolicy(i.policy);
        this.setIntercityPolicy(i.intercityPolicy);
        this.setTransitTypePolicy(i.transitTypePolicy);
        this.setPageCapacity(i.pageCapacity);
        this.QUERY_TYPE = gk;
        this.RETURN_TYPE = eq;
        this.ROUTE_TYPE = gU;
        this._overlays = [];
        this._curIndex = -1;
        this._opts._enableTraffic = i.enableTraffic || false;
        this._queryList = [];
        var e = this;
        gn.load("route", function() {
            e._asyncSearch()
        }, true)
    }
    ek.MAX_PAGE_CAPACITY = 100;
    ek.LINE_TYPE_MAPPING = [0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 1];
    ek.LINE_TYPE_MAPPING_CROSS_CITY = [0, 3, 4, 0, 0, 0, 5];
    ev.inherit(ek, iO, "TransitRoute");
    ev.extend(ek.prototype, {
        setPolicy: function(e) {
            if (e >= BMAP_TRANSIT_POLICY_RECOMMEND && e <= BMAP_TRANSIT_POLICY_FIRST_SUBWAYS) {
                this._opts.policy = e
            } else {
                this._opts.policy = BMAP_TRANSIT_POLICY_RECOMMEND
            }
        },
        setIntercityPolicy: function(e) {
            if (e >= BMAP_INTERCITY_POLICY_LEAST_TIME && e <= BMAP_INTERCITY_POLICY_CHEAP_PRICE) {
                this._opts.intercityPolicy = e
            } else {
                this._opts.intercityPolicy = BMAP_INTERCITY_POLICY_LEAST_TIME
            }
        },
        setTransitTypePolicy: function(e) {
            if (e >= BMAP_TRANSIT_TYPE_POLICY_TRAIN && e <= BMAP_TRANSIT_TYPE_POLICY_COACH) {
                this._opts.transitTypePolicy = e
            } else {
                this._opts.transitTypePolicy = BMAP_TRANSIT_TYPE_POLICY_TRAIN
            }
        },
        _internalSearch: function(i, e) {
            this._queryList.push({
                method: "_internalSearch",
                arguments: [i, e]
            })
        },
        search: function(i, e) {
            this._queryList.push({
                method: "search",
                arguments: [i, e]
            })
        },
        setPageCapacity: function(e) {
            if (typeof e === "string") {
                e = parseInt(e, 10);
                if (isNaN(e)) {
                    this._opts.pageCapacity = ek.MAX_PAGE_CAPACITY;
                    return
                }
            }
            if (typeof e !== "number") {
                this._opts.pageCapacity = ek.MAX_PAGE_CAPACITY;
                return
            }
            if (e >= 1 && e <= ek.MAX_PAGE_CAPACITY) {
                this._opts.pageCapacity = Math.round(e)
            } else {
                this._opts.pageCapacity = ek.MAX_PAGE_CAPACITY
            }
        },
        toString: function() {
            return "TransitRoute"
        },
        _shortTitle: function(e) {
            return e.replace(/\(.*\)/, "")
        }
    });
    window.BMAP_HIGHLIGHT_STEP = 1;
    window.BMAP_HIGHLIGHT_ROUTE = 2;
    var ck = function(e, je) {
        iO.call(this, e, je);
        this._overlays = [];
        this._curIndex = -1;
        this._queryList = [];
        var T = this;
        var i = this._opts.renderOptions;
        if (i.highlightMode !== BMAP_HIGHLIGHT_STEP && i.highlightMode !== BMAP_HIGHLIGHT_ROUTE) {
            i.highlightMode = BMAP_HIGHLIGHT_STEP
        }
        this._enableDragging = this._opts.renderOptions.enableDragging ? true : false;
        gn.load("route", function() {
            T._asyncSearch()
        }, true);
        if (this.init_d) {
            this.init_d()
        }
    };
    ck.ROAD_TYPE = ["", "环岛", "无属性道路", "主路", "高速连接路", "交叉点内路段", "连接道路", "停车场内部道路", "服务区内部道路", "桥", "步行街", "辅路", "匝道", "全封闭道路", "未定义交通区域", "POI连接路", "隧道", "步行道", "公交专用道", "提前右转道"];
    ev.inherit(ck, iO, "DWRoute");
    ev.extend(ck.prototype, {
        search: function(T, e, i) {
            this._queryList.push({
                method: "search",
                arguments: [T, e, i]
            })
        }
    });
    window.BMAP_DRIVING_POLICY_DEFAULT = 0;
    window.BMAP_DRIVING_POLICY_AVOID_HIGHWAYS = 3;
    window.BMAP_DRIVING_POLICY_FIRST_HIGHWAYS = 4;
    window.BMAP_DRIVING_POLICY_AVOID_CONGESTION = 5;
    window.BMAP_TRAFFICE_STATUS_NONE = 0;
    window.BMAP_TRAFFICE_STATUS_NORMAL = 1;
    window.BMAP_TRAFFICE_STATUS_SLOW = 2;
    window.BMAP_TRAFFICE_STATUS_JAM = 3;
    function b8(e, i) {
        ck.call(this, e, i);
        i = i || {};
        this._opts._enableTraffic = i.enableTraffic || false;
        this.setPolicy(i.policy);
        this.QUERY_TYPE = aF;
        this.RETURN_TYPE = au;
        this.ROUTE_TYPE = BMAP_ROUTE_TYPE_DRIVING
    }
    ev.inherit(b8, ck, "DrivingRoute");
    b8.prototype.setPolicy = function(e) {
        if (e >= BMAP_DRIVING_POLICY_DEFAULT && e <= BMAP_DRIVING_POLICY_AVOID_CONGESTION) {
            this._opts.policy = e
        } else {
            this._opts.policy = BMAP_DRIVING_POLICY_DEFAULT
        }
    }
    ;
    function eV(e, i) {
        ck.call(this, e, i);
        this.QUERY_TYPE = ho;
        this.RETURN_TYPE = fF;
        this.ROUTE_TYPE = BMAP_ROUTE_TYPE_WALKING;
        this._enableDragging = false
    }
    ev.inherit(eV, ck, "WalkingRoute");
    function cJ(e, i) {
        ck.call(this, e, i);
        this.QUERY_TYPE = gP;
        this.ROUTE_TYPE = BMAP_ROUTE_TYPE_RIDING;
        this._enableDragging = false
    }
    ev.inherit(cJ, ck, "RidingRoute");
    window.BMAP_MODE_DRIVING = "driving";
    window.BMAP_MODE_TRANSIT = "transit";
    window.BMAP_MODE_WALKING = "walking";
    window.BMAP_MODE_NAVIGATION = "navigation";
    var aT = {
        web: "//api.map.baidu.com/direction?",
        android: "bdapp://map/direction?",
        ios: "baidumap://map/direction?"
    };
    function hS(e) {
        this.opts = e || {}
    }
    ev.extend(hS.prototype, {
        routeCall: function(je, e, T) {
            var i = this;
            gn.load("route", function() {
                i._asyncSearch(je, e, T)
            })
        }
    });
    function dG() {
        return Pano.getStreetViewCoverageLayer(bp)
    }
    function em() {
        Pano.PanoramaService.call(this)
    }
    ev.inherit(em, Pano.PanoramaService, "PanoramaService");
    ev.extend(em.prototype, {
        getPanoramaById: function(T, i) {
            var e = this;
            this.getPanoById(T, function(je) {
                i && i(e._makeData(je))
            })
        },
        getPanoramaByLocation: function(e, T) {
            e = ig.convertLL2MC(e);
            var i = this;
            this.getPanoByLocation(e, 50, function(je) {
                T && T(i._makeData(je))
            })
        },
        _makeData: function(T) {
            if (!T) {
                return null
            }
            var i = {};
            var e = T.content[0];
            i.description = e.Rname || e.Info || "";
            i.id = e.ID;
            i.pointX = e.X / 100;
            i.pointY = e.Y / 100;
            i.position = ig.convertMC2LL(new cf(i.pointX,i.pointY));
            return i
        }
    });
    function eM() {
        if (window.PANORAMA_URL) {
            return Pano.getPanoControl(bp, {
                imgPath: w.imgPath,
                tileBaseUrl: w.panoTilePath,
            })
        }
        return Pano.getPanoControl(bp)
    }
    function J(T, e) {
        if (!e) {
            return
        }
        this.content = T;
        if (e.position && !Array.isArray(e.position)) {
            e.position = ig.convertLL2MC(e.position);
            this.position = e.position;
            this.hideDistance = !!e.hideDistance
        } else {
            this.hideDistance = true
        }
        var i = this._createDom();
        Pano.PanoOverlay.call(this, e.position, {
            dom: i,
            altitude: e.altitude,
        })
    }
    ev.inherit(J, Pano.PanoOverlay, "PanoramaLabel");
    ev.extend(J.prototype, {
        init: function(e) {
            var i = this;
            this._pano = e;
            this.updatedDistance();
            Pano.PanoOverlay.prototype.init.call(this, e);
            this._pano.on("dataload", function(T) {
                i.updatedDistance()
            })
        },
        _createDom: function() {
            var je = this.content;
            var jh = document.createElement("div");
            var i = jh.style;
            i.position = "absolute";
            i.backgroundColor = "rgba(29, 29, 29, 0.8)";
            i.padding = "7px 0";
            i.height = "19px";
            i.font = "16px arial";
            i.color = "white";
            i.whiteSpace = "nowrap";
            i.borderRadius = "4px";
            var e = document.createElement("div");
            e.style["float"] = "left";
            e.style["lineHeight"] = "19px";
            jh.appendChild(e);
            var T = document.createElement("span");
            T.style.margin = "0 14px";
            T.innerText = je;
            e.appendChild(T);
            if (!this.hideDistance) {
                var jg = document.createElement("span");
                jg.style.color = "color:rgba(255,255,255,0.3)";
                jg.innerText = "|";
                e.appendChild(jg);
                var jf = document.createElement("span");
                jf.style.margin = "0 8px";
                jf.style.color = "#60c7fa";
                jf.style.fontSize = "12px";
                jf.innerText = "0米";
                e.appendChild(jf);
                this._distanceDom = jf
            }
            this._dom = jh;
            this._titleDom = T;
            return jh
        },
        updatedDistance: function() {
            if (this.hideDistance) {
                return
            }
            var T = 0;
            if (this._pano) {
                var i = this._pano.position;
                var e = this.position;
                if (i && !i.equals(e)) {
                    T = ig.getDistanceByMC(i, e)
                }
            }
            if (T > 100) {
                T = T / 1000;
                T = T < 100 ? T.toFixed(2) : T.toFixed(0);
                T += "公里"
            } else {
                T = T < 100 ? T.toFixed(2) : T.toFixed(0);
                T += "米"
            }
            this._distanceDom.innerText = T
        },
    });
    function c(i) {
        if (typeof i === "string" && /^(?!#)(\w)*/.test(i)) {
            i = "#" + i
        }
        var je = {};
        if (window.PANORAMA_URL) {
            je.imgPath = w.imgPath;
            je.tileBaseUrls = [w.panoTilePath]
        }
        var e = Pano.init(i, je);
        var T = e.setPosition;
        e.setPosition = function(jg) {
            var jh = ig.convertLL2MC(jg);
            T.call(e, jh)
        }
        ;
        var jf = e.addEventListener;
        e.addEventListener = function(jg, jh) {
            if (jg === "position_changed") {
                jf.call(e, jg, function(ji) {
                    var jj = ig.convertMC2LL(ji);
                    jh(jj)
                })
            } else {
                jf.call(e, jg, jh)
            }
        }
        ;
        return e
    }
    bp.Map = g0;
    bp.MapType = dR;
    bp.Point = cf;
    bp.Pixel = eO;
    bp.Size = h8;
    bp.Bounds = hf;
    bp.PrivateRegionDataModel = cr;
    bp.TileLayer = gN;
    bp.Copyright = h;
    bp.Projection = bp.Project = ig;
    bp.XYZProjection = bp.XYZProject = dd;
    bp.Convertor = fk;
    bp.RenderTypeUtils = cK;
    bp.Overlay = aI;
    bp.Label = g8;
    bp.Marker = r;
    bp.Icon = iy;
    bp.Polyline = bd;
    bp.BezierCurve = cn;
    bp.PolylineMultipart = dT;
    bp.Polygon = hR;
    bp.MapMask = i2;
    bp.Prism = bj;
    bp.Marker3D = dK;
    bp.GroundOverlay = fq;
    bp.InfoWindow = dC;
    bp.SimpleInfoWindow = hi;
    bp.Circle = aL;
    bp.Control = f5;
    bp.NavigationControl = iK;
    bp.NavigationControl3D = ex;
    bp.CopyrightControl = fv;
    bp.ScaleControl = jd;
    bp.CityListControl = bk;
    bp.MapTypeControl = u;
    bp.ZoomControl = ij;
    bp.LocationControl = fN;
    bp.LogoControl = bs;
    bp.DistanceTool = b0;
    bp.ContextMenu = gE;
    bp.MenuItem = hd;
    bp.OperationMask = ae;
    bp.Animation = e3;
    bp.ViewAnimation = n;
    bp.Transitions = fY;
    bp.Event = fa;
    bp.trafficLayer = iH;
    bp.TrafficLayer = io;
    bp.GeoJSONLayer = aE;
    bp.XYZLayer = i3;
    bp.PixelLayer = c5;
    bp.GeoJSONParse = fU;
    bp.BaiduLayer = O;
    bp.Geolocation = cB;
    bp.Geocoder = a7;
    bp.Boundary = eQ;
    bp.DistrictLayer = dz;
    bp.LocalCity = eJ;
    bp.LocalSearch = ch;
    bp.Autocomplete = ia;
    bp.BusLineSearch = d6;
    bp.WalkingRoute = eV;
    bp.RidingRoute = cJ;
    bp.DrivingRoute = b8;
    bp.TransitRoute = ek;
    bp.RouteSearch = hS;
    bp.PanoramaCoverageLayer = dG;
    bp.PanoramaControl = eM;
    bp.PanoramaService = em;
    bp.PanoramaLabel = J;
    bp.Panorama = c;
    function gw(e, i) {
        for (var T in i) {
            e[T] = i[T]
        }
    }
    bp.fetchDebug && bp.fetchDebug.init();
    bp.verify();
    bp.apiLoad();
    bp.frequency();
    bp.getSeckeyCid();
    window._layer = 1;
    ev.extend(dz.prototype, {
        _asyncSearch: function() {
            for (var T = 0, e = this._queryList.length; T < e; T++) {
                var je = this._queryList[T];
                this[je.method].apply(this, je.arguments)
            }
            delete this._queryList
        },
        addDistrict: function() {
            if (this._opts.districts) {
                var e = this._opts.districts;
                if (typeof e === "string") {
                    this.getDistrictData(e)
                } else {
                    if (Object.prototype.toString.call(e) === "[object Array]") {
                        var i = this.parseArrayParams(e);
                        this.getDistrictData(i)
                    }
                }
            }
        },
        parseArrayParams: function(e) {
            var jf = "";
            for (var je = 0; je < e.length; je++) {
                if (e[je]instanceof Array) {
                    jf += "(";
                    for (var T = 0; T < e.length; T++) {
                        jf += e[T]
                    }
                    jf += ")"
                } else {
                    jf += "(" + e[je] + ")"
                }
            }
            return jf
        },
        getDistrictData: function(e) {
            var i = this;
            iZ.request(function(je) {
                var T = i._parseGeoData(je);
                i._drawToMap(i, T)
            }, {
                qt: iI,
                adnames: e,
                level: i._opts.kind
            })
        },
        _drawToMap: function(jn, jj) {
            var jm = jj.boundaries.length;
            if (jm === 0) {
                alert("未能获取当前输入行政区域");
                return
            }
            var jo = this._config.fillColor;
            var jg = this._config.fillOpacity;
            var T = this._config.strokeColor;
            var e = this._config.strokeOpacity;
            var jk = this._config.strokeWeight;
            if (typeof jo === "string") {
                var je = jo;
                var jp = [];
                for (var ji = 0; ji < jm; ji++) {
                    var jl = new BMapGL.Polygon(jj.boundaries[ji],{
                        strokeWeight: jk,
                        strokeColor: T,
                        strokeOpacity: e,
                        fillColor: je,
                        fillOpacity: jg
                    });
                    jl.style = {
                        strokeWeight: jk,
                        strokecolor: T,
                        strokeOpacity: e,
                        fillColor: je,
                        fillOpacity: jg
                    };
                    this.disOverlays.push(jl);
                    this.addEventListenerIn();
                    jn._map.addOverlay(jl);
                    jp = jp.concat(jl.getPath())
                }
                if (this._config.viewport) {
                    jn._map.setViewport(jp)
                }
            } else {
                if (Object.prototype.toString.call(jo) === "[object Array]") {
                    var jp = [];
                    var jh = jo.length;
                    if (jh < jm) {
                        for (var ji = 0, jf = 0; ji < jm - jh; ji++) {
                            if (jf < jh - 1) {
                                jo.push(jo[jf++])
                            } else {
                                jo.push(jo[0])
                            }
                        }
                    }
                    for (var ji = 0; ji < jm; ji++) {
                        var je = jo[ji];
                        var jl = new BMapGL.Polygon(jj.boundaries[ji],{
                            strokeWeight: jk,
                            strokeColor: T,
                            strokeOpacity: e,
                            fillColor: je,
                            fillOpacity: jg
                        });
                        jl.style = {
                            strokeWeight: jk,
                            strokecolor: T,
                            strokeOpacity: e,
                            fillColor: je,
                            fillOpacity: jg
                        };
                        this.disOverlays.push(jl);
                        this.addEventListenerIn();
                        jn._map.addOverlay(jl);
                        jp = jp.concat(jl.getPath())
                    }
                    if (this._config.viewport) {
                        jn._map.setViewport(jp)
                    }
                }
            }
        },
        _parseGeoData: function(jn) {
            var jq = {};
            jq.boundaries = [];
            if (jn && jn.content && jn.content["geo"]) {
                for (var jv = 0; jv < jn.content["geo"].length; jv++) {
                    var je = by.parseGeo(jn.content["geo"][jv], false);
                    if (je.geo && je.geo.length && je.geo.length > 0) {
                        var jt = je.geo.length;
                        for (iv = 0; iv < jt; iv++) {
                            var T = je.geo[iv];
                            if (T && T.length && T.length > 0) {
                                var jl = T.length - 1;
                                var js = [];
                                var jk = false;
                                var jr = 0;
                                var jp = 0;
                                for (var ju = 0; ju < jl; ju += 2) {
                                    var ji = T[ju];
                                    var jg = T[ju + 1];
                                    var jo = new cf(ji,jg);
                                    jo = ig.convertMC2LL(jo);
                                    if (ju < jl - 3) {
                                        var i = T[ju + 2];
                                        var e = T[ju + 3];
                                        var jm = new cf(i,e);
                                        jm = ig.convertMC2LL(jm)
                                    }
                                    js.push(jo.lng + ", " + jo.lat)
                                }
                                if (jk === true) {
                                    if (jr > jp) {
                                        var jw = jr;
                                        jr = jp;
                                        jp = jw
                                    }
                                    var jj = js;
                                    var jh = js.splice(jr + 1);
                                    var jf = jh.splice(jp - jr);
                                    jj = jj.concat(jf);
                                    jq.boundaries.push(jj.join(";"));
                                    jq.boundaries.push(jh.join(";"));
                                    jk = false;
                                    continue
                                }
                                if (js.length !== 0) {
                                    jq.boundaries.push(js.join(";"))
                                }
                            }
                        }
                    }
                }
            }
            return jq
        },
        deleteDistrict: function(je) {
            var T = je.disOverlays;
            for (var e = 0; e < T.length; e++) {
                this._map.removeOverlay(T[e])
            }
        },
        addEventListener: function(e, i) {
            this.eventAndCallback[e] = i
        },
        addEventListenerIn: function() {
            var je = this;
            var jg = Object.keys(je.eventAndCallback);
            if (jg.length > 0) {
                for (var T = 0; T < jg.length; T++) {
                    var jf = je.eventAndCallback[jg[T]];
                    for (var e = 0; e < je.disOverlays.length; e++) {
                        je.disOverlays[e].addEventListener(jg[T], jf)
                    }
                }
            }
        },
        searchBoundary: function(i, jf) {
            i = i || {};
            var e = i.name || "";
            var T = i.kind || 0;
            var je = this;
            iZ.request(function(jh) {
                var jg = je._parseGeoData(jh);
                jf && jf(jg)
            }, {
                qt: iI,
                adnames: e,
                level: T
            })
        }
    });
    window._layer = 2;
}
)(BMapGL, "BMapGL");
